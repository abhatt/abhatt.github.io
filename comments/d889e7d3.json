[{"content": "<![CDATA[<p>Aula #69: I always found L-notation unintuitive to read, but in any case, from the current perspective it&#8217;s &#8220;just&#8221; a notation for picking out various functions in the exponential greater metropolitan area.  It doesn&#8217;t have anything to say about the existence or nonexistence of a sharp dichotomy between &#8220;polynomial-like&#8221; and &#8220;exponential-like&#8221; for all &#8220;natural&#8221; functions, which is what the notion of exponentiality level tries to capture.</p>\n]]>", "author": "Scott", "published": "2015-11-06 15:59:47+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<blockquote><p>Let\u2019s take a particular simple case: consider undirected graphs whose vertex set is omega, no multiple edges, and every vertex has a finite (but possibly unbounded) degree. Can you give a definition for an encoding (mapping the edge set to an infinite bit sequence) in which it\u2019s guaranteed that there exists a permutation of the vertices of any such graph that gives the lexicographically smallest encoding?</p></blockquote>\n<p>I can&#8217;t.</p>\n<p>On the other hand, i think you could show that, using a typical encoding that assigns one bit per edge (i.e. the upper or lower half of the adjacency matrix) the lexicographically smallest isomorphism for a graph would have its least significant k(k-1)/2 bits set to 1 where k is the size of the largest clique in the graph.</p>\n<p>If that&#8217;s the case, an infinite graph would probably start with an unbounded number of 1s:<br />\n&#8230;11111111111</p>\n]]>", "author": "Job", "published": "2015-11-06 16:47:05+00:00", "title": "By: Job"}, {"content": "<![CDATA[<p>Scott, could you briefly explain why you call it the &#8220;result of the decade&#8221;? Is it because of the consequences (I am not aware of any major ones, other than the ones related to the problem itself)? Or because of it being such a popular problem that is &#8220;hot&#8221; and yet is hard to solve?</p>\n]]>", "author": "Abdallah", "published": "2015-11-06 22:43:47+00:00", "title": "By: Abdallah"}, {"content": "<![CDATA[<p>Abdallah #72: No, it&#8217;s not because of the consequences for anything else.  It&#8217;s just because graph isomorphism is one of the most fundamental problems in theoretical computer science, and it&#8217;s not every day (or every decade) that something that basic gets moved from nearly exponential time to nearly polynomial time, in terms of the provable upper bound.</p>\n]]>", "author": "Scott", "published": "2015-11-07 00:04:58+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Basic complexity theory question whose relevance will become apparent in a moment: Say we have a class of functions S.  What are the conditions on S for DTIME(S) to be low for itself?  What about DSPACE(S)?  BPTIME(S)?  BQTIME(S)?</p>\n<p>Now the part that explains why these questions are relevant:</p>\n<p>So I tried to look up this transseries stuff and came to the conclusion that I&#8217;m not going to understand this without a lot more effort.  But, the noteworthy thing is that exponentiality of a composition is the sum of the exponentialities, as it should be.  In particular, things of exponentiality 0 are closed under composition.  Composition f o g of transseries isn&#8217;t defined in all cases, but I think it is whenever g goes to infinity, which are the only cases we care about here.</p>\n<p>Anyway the closure under composition is the important thing I figure, because it means &#8212; or at least I think it means? &#8212; that if you considered the complexity class DTIME(all functions of exponentiality 0) it would be low for itself?</p>\n<p>The reason I bring all this up is because of <a href=\"http://www.scottaaronson.com/blog/?p=2070#comment-282988\" rel=\"nofollow\">this</a> earlier comment by you, where you suggest that this should be an important property of a complexity class to be considered &#8220;physically reasonable&#8221;.  You list there P, BPP, and BQP; L and PSPACE; and NC.  P, BPP, and BQP are all polynomial time on slightly different classes of computers (and not weird asymmetric ones like a nondeterministic Turing machine).  L and PSPACE are space-based.  NC I don&#8217;t know enough about and am going to ignore for now.</p>\n<p>So like I said before, I realize I&#8217;m not actually entirely sure what the criterion is for a DTIME-defined (or BPTIME, or BQTIME) class to be low for itself &#8212; I would have thought it&#8217;s just being closed under composition, but I realize I don&#8217;t actually know.  (And as for space, that&#8217;s even less clear to me.)</p>\n<p>But my point is, if that is the condition, then all your &#8220;physically reasonable&#8221; classes defined in terms of polynomial time, you could replace that with exponentiality-0 time and still have a physically reasonable complexity class.  Or with quasipolynomial time!  Since the composition of e^((log n)^k) and e^((log n)^m) is e^((log k)^km).  This seems to generate a bunch of physically reasonable complexity classes by your earlier criterion.</p>\n<p>But I&#8217;m worried that I don&#8217;t have the complexity theory right and closure under composition isn&#8217;t actually what we need?  Hence the initial question.</p>\n<p>(Though I suppose descriptive complexity theory may give us a reason to prefer the more usual complexity classes&#8230;)</p>\n]]>", "author": "Sniffnoy", "published": "2015-11-07 07:14:44+00:00", "title": "By: Sniffnoy"}, {"content": "<![CDATA[<p>Sniffnoy #74: I agree that the exponentiality-0 functions are closed under composition, and that that fact implies that DTIME(exponentiality 0) (like P and DTIME(n<sup>polylog n</sup>)) is self-low.  Notoriously, the same isn&#8217;t true for exponential functions, so that EXP<sup>EXP</sup> is a much larger class than EXP.</p>\n]]>", "author": "Scott", "published": "2015-11-07 14:55:15+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>OK, so that does give a way to generate lots of such classes; I assume the same holds for BPTIME and BQTIME?  Notably QP is generalized by DTIME(f(poly(f^-1(n))) for various f (so long as you pick f such that the result includes P).</p>\n<p>Space seems to require composition and addition.  (I guess time technically requires composition and multiplication, but you don&#8217;t ususally care about time below polynomial&#8230;)  So you not only get L and PSPACE but also QPSPACE and etc.</p>\n<p>And then these should be combinable, so SC should work, right?  (Or really if I&#8217;ve got this right you can get a slightly weaker condition on time which I&#8217;m not going to bother to write out here.)  It seems these are easier to generate than your earlier comment suggested.</p>\n<p>(Yes I realize this should be easy, I got confused about L vs EXPSPACE earlier for some reason and as a result got confused about the whole thing, I&#8217;m pretty sure I&#8217;ve unconfused myself now.)</p>\n]]>", "author": "Sniffnoy", "published": "2015-11-07 20:42:43+00:00", "title": "By: Sniffnoy"}, {"content": "<![CDATA[<p>The atmosphere around Wiles&#8217; FLT lectures is described here:</p>\n<p><a href=\"http://www.dms.umontreal.ca/~andrew/PDF/FLTatlast.pdf\" rel=\"nofollow\">http://www.dms.umontreal.ca/~andrew/PDF/FLTatlast.pdf</a></p>\n<p>    For the Cambridge conference, Wiles had<br />\n    announced his lectures, a series of<br />\n    three given on successive days, with the<br />\n    highly unspecific title &#8220;Modular Forms,<br />\n    Elliptic Curves, and Galois<br />\n    Representations.&#8221;  Prior to his<br />\n    lectures, he refused to give a hint as<br />\n    to what they might contain.  Even<br />\n    though, by the third talk, many in the<br />\n    audience had guessed he might have<br />\n    cracked Fermat&#8217;s Last Theorem, few<br />\n    dreamt that he could have proved so much<br />\n    more, and there was an audible gasp as<br />\n    he wrote the final result on the<br />\n    blackboard.</p>\n<p>(Wiles had actually proven something more general than FLT, from which FLT fell out as a consequence).  That&#8217;s much different than if he had announced an FLT proof ahead of the conference.  I guess there&#8217;s at other times been an interval between announcing a result, and having a paper or preprint ready to circulate.  Still this seems a bit surprising.</p>\n]]>", "author": "asdf", "published": "2015-11-08 08:38:07+00:00", "title": "By: asdf"}, {"content": "<![CDATA[<p>An announcement of three talks (to be held on campus) by L. Babai in the next several weeks can now be found on the website of the University of Chicago&#8217;s Mathematics Department, where Babai also holds a faculty position. </p>\n<p><a href=\"https://math.uchicago.edu/\" rel=\"nofollow\">https://math.uchicago.edu/</a></p>\n<p>The abstracts for the talks are available. The first one is found here <a href=\"https://calendar.google.com/calendar/event?eid=czNzOXNtZ2tydG00OG5obDJlZ3I3c21uY2cgYzU3c2hpY2k0NW0xN3FsMGdodmw1NmVrMzhAZw&#038;ctz=America/Chicago\" rel=\"nofollow\">https://calendar.google.com/calendar/event?eid=czNzOXNtZ2tydG00OG5obDJlZ3I3c21uY2cgYzU3c2hpY2k0NW0xN3FsMGdodmw1NmVrMzhAZw&#038;ctz=America/Chicago</a></p>\n]]>", "author": "Eric Gamazon", "published": "2015-11-08 17:46:46+00:00", "title": "By: Eric Gamazon"}, {"content": "<![CDATA[<p>[&#8230;] Trevisan already has made a post on this result, and Scott Aaronson likewise. Luca further promises to be in Chicago next Tuesday when L&aacute;szl&oacute; gives his talk on [&#8230;]</p>\n]]>", "author": "A Big Result On Graph Isomorphism | Gdel's Lost Letter and P=NP", "published": "2015-11-10 00:46:33+00:00", "title": "By: A Big Result On Graph Isomorphism | G\u00f6del's Lost Letter and P=NP"}]