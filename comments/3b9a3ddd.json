[{"content": "<![CDATA[<p>Scott #38:<br />\nYou&#8217;re describing an arithmetically generic oracle, which indeed is often simply called a &#8220;generic oracle&#8221;. As for your questions,</p>\n<p> &#8211; <b>(i)</b> (Is it clear that any collapse or separation that holds relative to one generic oracle, must also hold relative to all the others?): <b>Yes, pretty much</b>.<br />\nIf someone proves a separation or collapse result (let&#8217;s call it &#8220;PNP&#8221;) relative to one generic oracle, then it&#8217;s almost guaranteed that they do so by proving that PNP holds for all oracles that belong to certain open dense sets U_1,U_2,&#8230;<br />\nIf those sets happen to be arithmetically definable then PNP has been proved for all arithmetically generic oracles. Great.</p>\n<p>Even if they don&#8217;t, PNP has been proved for all &#8220;F-generic&#8221; oracles where F={U_1,U_2,&#8230;} and hence in particular for all <em>sufficiently generic</em> oracles. (As long as F is countable such oracles exist and are plentiful &#8212; that&#8217;s the &#8220;Baire category theorem&#8221;.)</p>\n<p> &#8211; <b>(ii)</b> (Is P\u2260NP relative to a generic oracle?): <b>Yes</b>, so I&#8217;ve read, and I&#8217;m thinking the reason is that a generic oracle G may contain hidden &#8220;gems&#8221; (1s in a sea of 0s) that are easy to verify but hard to find. So the proof should be similar to, and actually easier than, the proof that P\u2260NP relative to a random oracle. Also I read somewhere that PH is infinite in both the random and generic cases, which I&#8217;m hoping comes from elaboration of the same idea.</p>\n<p> &#8211; <b>(iii)</b> (What\u2019s an example of something that\u2019s different for generic oracles than for random oracles?): <b>I don&#8217;t know about separation/collapse results of that kind, but&#8230;</b> a random oracle can be used to compute a function violating the Recursion Theorem (a fixed-point free function), and a generic oracle cannot.</p>\n]]>", "author": "Bjrn Kjos-Hanssen", "published": "2017-09-03 08:49:43+00:00", "title": "By: Bj\u00f8rn Kjos-Hanssen"}, {"content": "<![CDATA[<p>Bj\u00f8rn #39: Thanks again!!</p>\n<p>One more question: are these generic oracles, considered as sets of integers, <i>exactly</i> the objects that Cohen forced into models of ZF in order to make CH and AC false?  If not, then what are the main ways the latter differed?</p>\n]]>", "author": "Scott", "published": "2017-09-03 11:27:23+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>@Shmi</p>\n<p>>> you just can\u2019t CREATE them</p>\n<p>I am not exactly sure what you mean with &#8220;create&#8221; but if you think about a spacetime with an (initial) hypersurface free of CTCs, with a region containing CTS later, then Amos Ori provides an example in the paper you cited. There are other examples as well &#8230;</p>\n<p>>> or visit them</p>\n<p>An observer jumping into a rotating black hole can in principle visit the CTC around the ring singularity &#8211; assuming that the extended Kerr metric is stable e.g. against quantum effects (a big if).<br />\nThis is just one example, there is enough literature with examples which you may or may not find more convincing &#8230;</p>\n]]>", "author": "wolfgang", "published": "2017-09-03 13:44:53+00:00", "title": "By: wolfgang"}, {"content": "<![CDATA[<p>Scott #40: the same except there F was the set of all open dense sets (of infinite binary sequences) that belong to a given countable model M of ZF, making G more generic than complexity theorists need. And then the extension M[G] was the place where CH failed.</p>\n<p>But sometimes we need a different &#8216;notion of forcing&#8217; and actually random oracles can be viewed as generic oracles for a different notion of forcing.</p>\n]]>", "author": "Bjrn Kjos-Hanssen", "published": "2017-09-03 16:30:14+00:00", "title": "By: Bj\u00f8rn Kjos-Hanssen"}, {"content": "<![CDATA[<p>Scott #38:</p>\n<blockquote><p>is P\u2260NP relative to a generic oracle?</p></blockquote>\n<p>Yes, Cook mentions this in his introduction of PvsNP as one of the Millennium Prize Problems (so I&#8217;m kinda surprised that you didn&#8217;t know that already).</p>\n<p>Scott #40:<br />\nUh, what? I don&#8217;t know how &#8220;Cohen forced objects into models of ZF&#8221; is supposed to be related to anything he actually did; as far as I understand, that&#8217;s not at all what forcing means.</p>\n]]>", "author": "Aula", "published": "2017-09-03 16:43:42+00:00", "title": "By: Aula"}, {"content": "<![CDATA[<p>Aula #43: Well, given that I only just now learned the <i>definition</i> of a generic oracle, I guess I was looking for a couple sentences&#8217; intuition for why they separate P and NP, or other pairs of complexity classes that are easy to separate (e.g.) with random oracles.  Do you understand that?  Would you like to explain it?</p>\n<p>Fine, maybe Cohen isn&#8217;t exactly &#8220;forcing&#8221; objects into models of ZF, but my understanding was that he was &#8220;forcing&#8221; certain statements to be true by ensuring that a countable infinity of conditions all hold, closely analogous to (but more complicated than) what we do when we construct oracles that put NEXP in P/poly or whatever.  Am I wrong?</p>\n]]>", "author": "Scott", "published": "2017-09-03 17:15:22+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Scott #38: see also <a href=\"https://mathoverflow.net/a/176498/5340\" rel=\"nofollow\">https://mathoverflow.net/a/176498/5340</a> which tells about the same as #30.  That tells only about constructing generic functions, not about using them as an oracle for any computation.</p>\n]]>", "author": "jonas", "published": "2017-09-03 19:38:36+00:00", "title": "By: jonas"}, {"content": "<![CDATA[<p>I tried checking <a href=\"http://haspvsnpbeensolved.com/\" rel=\"nofollow\">http://haspvsnpbeensolved.com/</a> in <a href=\"http://haspvsnpbeensolved.com/\" rel=\"nofollow\">http://haspvsnpbeensolved.com/</a> and got a response that it DOES point to a solution to the P vs. NP problem. (-;</p>\n]]>", "author": "Hanan Cohen", "published": "2017-09-03 20:39:57+00:00", "title": "By: Hanan Cohen"}, {"content": "<![CDATA[<p>Nice checking algorithm, though I can&#8217;t figure out the hidden message in it. Have you changed your mind and now believe that P!=NP is undecidable, or don&#8217;t you mind that it might eventually reject a valid proof?</p>\n]]>", "author": "Serge", "published": "2017-09-04 21:49:52+00:00", "title": "By: Serge"}, {"content": "<![CDATA[<p>Scott #44:</p>\n<blockquote><p>Well, given that I only just now learned the definition of a generic oracle, I guess I was looking for a couple sentences\u2019 intuition for why they separate P and NP, or other pairs of complexity classes that are easy to separate (e.g.) with random oracles.</p></blockquote>\n<p>If you want that kind of intuition, then I think you should be asking something like &#8220;what do generic oracles have in common with these other types of oracles?&#8221; (I have no idea.) Instead you asked if generic oracles are <i>exactly</i> (emphasis yours) like something that has no obvious reason to have anything whatsoever to do with them.</p>\n<blockquote><p>Fine, maybe Cohen isn\u2019t exactly \u201cforcing\u201d objects into models of ZF, but my understanding was that he was \u201cforcing\u201d certain statements to be true by ensuring that a countable infinity of conditions all hold, closely analogous to (but more complicated than) what we do when we construct oracles that put NEXP in P/poly or whatever. Am I wrong?</p></blockquote>\n<p>I don&#8217;t know if you are wrong about the &#8220;closely analogous&#8221; part, because I know nothing about how you would construct an oracle so that complexity classes relative to that oracle have some desired properties. Other than that, I think the answer is &#8220;it depends.&#8221; For one thing, you mentioned earlier &#8220;subsets of integers&#8221; which is probably true in some technical sense (since after all we are dealing with a countable model of ZFC) but most likely merely misleading if you want to understand how forcing works.</p>\n]]>", "author": "Aula", "published": "2017-09-04 22:00:40+00:00", "title": "By: Aula"}, {"content": "<![CDATA[<p>If I&#8217;m reading <a href=\"http://people.cs.uchicago.edu/~fortnow/papers/gensep.pdf\" rel=\"nofollow\">http://people.cs.uchicago.edu/~fortnow/papers/gensep.pdf</a> correctly it does seem that Lance Fortnow at least when thinking about generic oracles is thinking about them as closely analogous to forcing.</p>\n]]>", "author": "Joshua Zelinsky", "published": "2017-09-06 12:57:00+00:00", "title": "By: Joshua Zelinsky"}, {"content": "<![CDATA[<p>Well I guess this is related to possible quantum supremacy:</p>\n<p><a href=\"https://hardware.slashdot.org/story/17/09/06/1426201/researchers-find-new-way-to-build-quantum-computers\" rel=\"nofollow\">https://hardware.slashdot.org/story/17/09/06/1426201/researchers-find-new-way-to-build-quantum-computers</a></p>\n<p>No idea if it&#8217;s important.</p>\n]]>", "author": "asdf", "published": "2017-09-06 21:04:38+00:00", "title": "By: asdf"}, {"content": "<![CDATA[<p>If we view an oracle as a real number (i.e. infinite string of 1&#8217;s and 0&#8217;s) in the unit interval, there are continuum many of them.  So is saying &#8220;X is true relative to a generic oracle&#8221; the same as saying &#8220;the set of oracles for which X is false has measure 0 on the interval&#8221;?</p>\n]]>", "author": "asdf", "published": "2017-09-07 01:20:11+00:00", "title": "By: asdf"}, {"content": "<![CDATA[<p>asdf #51: No, that&#8217;s a <i>random</i> oracle (at least with the usual notion of &#8220;measure&#8221;).  <i>Generic</i> oracle means something different and more complicated, which is exactly why we&#8217;ve been having this discussion.</p>\n]]>", "author": "Scott", "published": "2017-09-07 10:39:47+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Lots of interesting news lately.<br />\nFlip-flop qubits :<br />\n<a href=\"https://www.sciencedaily.com/releases/2017/09/170906103507.htm\" rel=\"nofollow\">https://www.sciencedaily.com/releases/2017/09/170906103507.htm</a></p>\n]]>", "author": "fred", "published": "2017-09-07 12:32:30+00:00", "title": "By: fred"}]