[{"content": "<![CDATA[<p>Scott #5:</p>\n<p>Broken here too.  It appears to be behind some Google thing.</p>\n]]>", "author": "Sniffnoy", "published": "2018-09-15 21:56:49+00:00", "title": "By: Sniffnoy"}, {"content": "<![CDATA[<p>Peter #12: Computability theory has long been a source of <i>inspiration</i> for real-world software developers: LISP was born as an instantiation of lambda calculus; programming books like Structure and Interpretation of Computer Programs are shot through with computability, etc.  Having said that, it\u2019s surely quite rare that higher computability is <i>directly</i> relevant to real-world programming, beyond the level of inspiration.  After all, as you pointed out, complexity theory is \u201ccloser to earth,\u201d but even it is rarely used in that way, outside of crypto and maybe one or two other domains.  If there <i>are</i> programmers who use higher computability theory on a day-to-day basis, then they\u2019re surely the same ones who also go on and on about type theory and categories and formal verification and all those other things that I\u2019ve never really grokked.  So probably the real answer to your question is that you should ask one of them!</p>\n]]>", "author": "Scott", "published": "2018-09-15 22:30:31+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Sniffnoy #13: OK, I\u2019ll look into it after my plane lands in Austin.</p>\n]]>", "author": "Scott", "published": "2018-09-15 22:31:59+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>(gasp) When I pasted in the image, it retained a URL involving my private email account!  That seems really, really stupid of WordPress&#8212;especially since it creates a problem that&#8217;s invisible to the blog&#8217;s owner, giving a false impression that everything&#8217;s OK.  By default, why doesn&#8217;t it put a local copy of any pasted image into your WordPress directory?  In any case, should be fixed now.</p>\n]]>", "author": "Scott", "published": "2018-09-15 23:10:31+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Congratulations, Scott! Your prize is well earned and I&#8217;m glad to see that the prize committee took an inclusive view regarding the scope of physics research. It&#8217;s better to focus on quality than on disciplinary boundaries.</p>\n]]>", "author": "Stephen Jordan", "published": "2018-09-16 15:33:21+00:00", "title": "By: Stephen Jordan"}, {"content": "<![CDATA[<p>[&#8230;] Aaronson recently won the Tomassoni-Chisesi Prize in Physics (yeah Scott!). In his post (here) about it he makes a passing [&#8230;]</p>\n]]>", "author": "What is a Physicist? A Mathematician? A Computer Scientist? | Theresa Welchy", "published": "2018-09-17 04:28:13+00:00", "title": "By: What is a Physicist? A Mathematician? A Computer Scientist? | Theresa Welchy"}, {"content": "<![CDATA[<p>Congratulations, Scott!<br />\nHappy you weren&#8217;t arrested!</p>\n<p><iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/10AkYK43Eh4?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></p>\n]]>", "author": "congratulations@scott.com", "published": "2018-09-19 02:46:01+00:00", "title": "By: congratulations@scott.com"}, {"content": "<![CDATA[<p>#12 and #14</p>\n<p>What about functional programming Scott, where programming is treated as &#8216;the evaluation of mathematical functions&#8217;?  Seems like a pretty practical application of computability?</p>\n<p>I&#8217;ve come up with a new definition of cognition.  And I have a way to relate this definition to mathematics and computer science.  Here&#8217;s my definition:</p>\n<p>&#8216;Cognition is the integration of two different modes of modeling , where abstract (high-level) and concrete (low-level) models are combined in order to generate procedural knowledge for achieving goals&#8217;</p>\n<p>So I think at the fundamental root of a mind in the most general sense (Cognition), there&#8217;s 3 different modes of thought &#8211; abstract models (let us call this &#8216;Far&#8217; mode), concrete models (let us call this &#8216;Near&#8217; mode), and practical &#8216;how-to&#8217; algorithms (let us call this &#8216;Procedural&#8217; mode).</p>\n<p>Near, Far and Procedural.</p>\n<p>And then my &#8216;Interpretation&#8217; for connecting (mapping) math to cog-sci is that any given domain of mathematics can be decomposed into these 3 categories, by &#8216;re-interpreting&#8217; the given  domain as &#8216;modes of cognition&#8217;.  These modes of cognition are &#8216;levels of modeling abstraction&#8217;.</p>\n<p>Now lets look at Computability based on the&#8217; Geddes Interpretation&#8217; \ud83d\ude00</p>\n<p>As I suggested in previous post, there seems to be a ladder of abstraction, where I can indeed split the field of computational logic into 3 levels.  This is  speculative (because frankly,  I really doubt that *anyone* really groks what all this type theory/categories/verification business is about yet), but the ordering below seems intuitively very plausible:</p>\n<p>Near Mode &#8211;         Modal Logic<br />\nProcedural Mode &#8211; Functional Programming (and Type Theory?)<br />\nFar Mode   &#8211;          Formal Language Theory</p>\n<p>So the idea is that the practical &#8216;how to&#8217; stuff of functional programming (procedural mode) is somehow generated by  integrating or *balancing* two dual theoretical models (near and far modes), which I&#8217;m guessing to be modal logic+formal language theory.</p>\n<p>A neat way of looking at this is that there&#8217;s an ultimate aesthetic meta-principle of the &#8216;Golden Mean&#8217;, where all cognition is about trying to balance two opposites (a generalization of the mathematical notion of &#8216;duality&#8217; perhaps?)</p>\n<p>Then I can think of the 3 sub-fields above as a &#8216;see-saw&#8217; with &#8216;Formal Language Theory&#8217; at one end, and the opposite or dual ( &#8216;Modal Logic&#8217; ) at the other end.  And then &#8216;Functional Programming&#8217; can be interpreted as the balancing of the two ends (&#8216;the golden mean&#8217;).</p>\n<p>See recent Scott Alexander story &#8216;In The Balance&#8217;, which is actually a good metaphor for what I&#8217;m proposing:</p>\n<p><a href=\"http://slatestarcodex.com/2018/09/12/in-the-balance/\" rel=\"nofollow\">http://slatestarcodex.com/2018/09/12/in-the-balance/</a></p>\n<p>So I&#8217;m making the big bold claim that all cognition is Near modes, Far modes and the &#8216;golden mean&#8217; (balance) between them (Procedural Modes)!</p>\n<p>If I&#8217;m right, then functional programming (and type theory) are somehow reducible to modal logic, as well as formal grammars.</p>\n<p>A bit of quick research using Goggle does indeed unearth some previous attempts to create &#8216;Modal Type Theories&#8217;.</p>\n]]>", "author": "mjgeddes", "published": "2018-09-19 04:56:09+00:00", "title": "By: mjgeddes"}, {"content": "<![CDATA[<p>the actual article</p>\n<p><a href=\"https://www.nature.com/articles/s41467-018-05739-8\" rel=\"nofollow\">https://www.nature.com/articles/s41467-018-05739-8</a></p>\n]]>", "author": "fred", "published": "2018-09-19 15:45:36+00:00", "title": "By: fred"}, {"content": "<![CDATA[<p>fred #21: I had a long discussion with Renato (as well as John Preskill) about this work a couple months ago, when we all lectured at UC Boulder.  To make a long story short: I find this &#8220;new paradox&#8221; interesting, but would <i>absolutely</i> not describe it using the language Renato does (&#8220;quantum theory can&#8217;t consistently describe the use of itself&#8221;).  In some sense, the new paradox just amounts to the &#8220;<a href=\"https://en.wikipedia.org/wiki/Wigner%27s_friend\" rel=\"nofollow\">Wigner&#8217;s-friend</a>ification&#8221; of <a href=\"https://en.wikipedia.org/wiki/Hardy%27s_paradox\" rel=\"nofollow\">Hardy&#8217;s paradox</a>.  That is, it&#8217;s precisely what you get by munging together those two previous paradoxes, and promoting the qubits or particles in Hardy&#8217;s paradox to two Wigner&#8217;s-friend-like conscious brains that happen to be in an entangled superposition state.</p>\n<p>In my interpretation, the paradox then gets all its mileage by reasoning about what one Wigner&#8217;s friend is certain that another Wigner&#8217;s friend is certain of, etc., but with these certainties applying to a world where the Wigner&#8217;s friends are not measured in strange bases (e.g., |Thought<sub>1</sub>&rang;+|Thought<sub>2</sub>&rang;, |Thought<sub>1</sub>&rang;-|Thought<sub>2</sub>&rang;)&#8212;even though, in order to produce the paradox, the Wigner&#8217;s friends <i>do</i> have to be measured in strange bases.  But I don&#8217;t regard that as legitimate (&#8220;unperformed measurements have no results&#8221;)!  So for me, anyway, the argument falls apart, <i>not</i> because of any of the assumptions that Frauchinger and Renner explicitly enumerate, but because of a background assumption that they barely even mention.</p>\n]]>", "author": "Scott", "published": "2018-09-19 18:18:27+00:00", "title": "By: Scott"}]