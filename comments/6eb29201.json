[{"content": "<![CDATA[<p>Nick #17: Good questions!  How about if I just answer them in this comment section?</p>\n<p>1) Informally, PDQP is the class of problems solvable in polynomial time by a quantum computer, <i>if</i> we assume the completely unphysical ability to make &#8220;non-collapsing measurements&#8221; (measurements that still leave the state there to be measured again), in addition to ordinary collapsing measurements.  For a formal definition, see <a href=\"http://arxiv.org/abs/1412.6507\" rel=\"nofollow\">this paper</a> by Bouland, Fitzsimons, Lee, and myself.  The interesting thing about PDQP is that it contains Statistical Zero Knowledge (and thus, graph isomorphism and various other problems that we don&#8217;t know how to solve with a quantum computer), but relative to an oracle, it <i>doesn&#8217;t</i> contain NP-complete problems.  It thus gives one of the only known examples of a complexity class that generalizes BQP, but only &#8220;slightly&#8221; so.</p>\n<p>2) DQP, which I <a href=\"http://www.scottaaronson.com/papers/qchvpra.pdf\" rel=\"nofollow\">defined in 2005</a>, is the class of problems solvable in polynomial time by a quantum computer, if you assume the unphysical ability to see the entire history of a hidden variable, in any hidden-variable theory that satisfies a couple reasonable axioms.  (See my paper for the formal definition.)  The relation between DQP and PDQP is a subtle question&#8212;indeed, just while writing this comment, I realized there were basic questions about how they relate that I wanted to think about more!&#8212;so let me defer those questions to a later comment, and maybe talk them over with my coauthors.</p>\n<p>3) There&#8217;s not really any &#8220;problem&#8221; with DQP, except just that it&#8217;s really hard to prove some of the statements about DQP that we think are true and would like to prove!  As one example, the best upper bound on DQP that I was able to prove was EXP; by contrast, we were able to show that PDQP is contained in BPP<sup>PP</sup>, which is a much better bound.  As a second example, as I discussed in <a href=\"http://www.scottaaronson.com/blog/?p=2072\" rel=\"nofollow\">this post</a> (and as we discuss in detail in the new paper), I had claimed to give an oracle relative to which NP is not in DQP&#8212;but while I still think it&#8217;s possible to do that, there was an error in my proof.  In the new paper, we manage to give a correct proof that there&#8217;s an oracle relative to which NP is not in PDQP.</p>\n<p>4) The second printing of QCSD onwards discusses the error in my claimed proof from 2005 that there&#8217;s an oracle relative to which NP is not in DQP, and everything it says about the subject is (I believe!) now correct.  The book doesn&#8217;t talk about PDQP, but that&#8217;s only because, at the time it came out (2013), Adam Bouland and Mitchell Lee hadn&#8217;t yet defined PDQP, or started doing the research that led to our newer paper!  It&#8217;s a shame that research can&#8217;t just stay put to prevent books from getting out of date. <img src=\"http://www.scottaaronson.com/blog/wp-includes/images/smilies/simple-smile.png\" alt=\":-)\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />  Anyway, if there&#8217;s a second edition of QCSD, maybe I&#8217;ll add something about PDQP, which is another wrinkle in the story.</p>\n]]>", "author": "Scott", "published": "2015-04-22 14:43:26+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>(addendum)  As far as we can currently tell, the classes DQP and PDQP might be incomparable&#8212;we don&#8217;t know how to show to containment of either one in the other.  This is a great question, which we hadn&#8217;t noticed before!</p>\n]]>", "author": "Scott", "published": "2015-04-22 21:40:18+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Fun paper! </p>\n<p>Any chance you could explain why classifying the quantum gates is so out of reach? Out of curiosity, might it be easier to just classify the corresponding Lie algebras? (To spell the last comment out: As I understand it, a family of gates should give a subgroup G_n of GL(V^{\\otimes n}) for each n. A good warm up would be the describe the possible Lie algebras \\mathfrak{g}_n, this is basically orthogonal to the sort of discrete computations you are doing in this paper.)</p>\n<p>Not that I&#8217;m saying I know how to do it! Just that it sounds like a fun problem, and it isn&#8217;t obvious to me that it is intractable.</p>\n]]>", "author": "<a href=\"http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Speyer:David.html\">David Speyer</a>", "published": "2015-04-22 23:56:44+00:00", "title": "By: David Speyer"}, {"content": "<![CDATA[<p>David #21: Thanks!</p>\n<p>I should say that I completely agree that classifying quantum gates is a wonderful project for people to work on now!  Small special cases have already been pretty complicated, which was the basis for our (very possibly wrong) speculation that the full problem &#8220;seems out of reach at present.&#8221;  But regardless of how hard the full problem turns out to be, it&#8217;s very clear that you can make definite, useful progress.  (Indeed, we suggest four possible warmup cases in the open problems section, which can also be combined with each other to get &#8220;even easier&#8221; special cases.)</p>\n<p>Classifying the possible Lie algebras seems very closely related to classifying local Hamiltonians, which was one of the special cases we listed (maybe it&#8217;s even the same thing in different language?).  One could of course start by classifying the 1- and 2-qubit Hamiltonians.  Here a natural conjecture would be that there&#8217;s a very sharp dichotomy, and that once you have pretty much <i>any</i> nontrivial 2-qubit interaction Hamiltonian, you can use it to do universal quantum computing (possibly in an encoded subspace, and possibly using special initial states).  I should mention that two students in my group have been working on the <i>commuting</i> special case of this problem, which they&#8217;ve already found complicated (though they can now handle everything except a few measure-0 subsets of commuting 2-qubit Hamiltonians).</p>\n<p>This is probably a good place to mention that, when it comes to classifying quantum gates, there are many decisions you need to make about just how fine-grained a classification you want.  For example, do you care about which unitaries can be <i>exactly</i> generated, or only which ones can be approximated to arbitrary precision?  Do you assume that G<sup>-1</sup> is available whenever G is available?  (Unlike in the discrete case, this could actually matter if we care about exact generation, or even Solovay-Kitaev-style efficient approximation.)  Do you allow arbitrary initial states?  Intermediate measurements?  (Note: if you allow both, then the stabilizer quantum circuits&#8212;i.e., the most interesting non-universal class that we know about&#8212;won&#8217;t be part of your classification, since it can be boosted up to universality with those resources.)</p>\n<p>Of course, since we don&#8217;t currently have a classification under <i>any</i> of these assumptions, an obvious place to start would be whichever ones make the proof easiest.  Anyway, if you&#8217;d like to try your hand at this, don&#8217;t let me stop you!</p>\n]]>", "author": "Scott", "published": "2015-04-23 00:33:04+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Scott #20: I&#8217;m confused, I thought part of the point of PDQP was that it was contained in DQP?</p>\n<p>Regarding my own comment #16: Having now actually tried it, I have to conclude that while you <i>can</i> factor the map from the &#8220;loose lattice&#8221; to Post&#8217;s Lattice Lite through Post&#8217;s Lattice, you probably <i>shouldn&#8217;t</i>.  Not having 0s and 1s available means the rules for generating aren&#8217;t very compatible, and as a result you can&#8217;t do it based on generating sets &#8212; you actually have to consider all the functions in the class.  Presumably doable if you&#8217;re determined to, for whatever reason, but painful and probably not useful.  (Also, I wrote that comment while extremely tired, sorry if there are parts that are not very clear.)</p>\n<p>Scott #18: Hey, if you think that&#8217;s significant! \ud83d\ude00  Uh, real name please if you&#8217;re going to do that.  I mean it&#8217;s not exactly a secret, and I&#8217;m pretty sure I linked to my <a>personal home page</a> back on the blog-book thread&#8230;</p>\n]]>", "author": "Sniffnoy", "published": "2015-04-23 01:05:54+00:00", "title": "By: Sniffnoy"}, {"content": "<![CDATA[<p>Yes, I think Hamiltonian&#8217;s is the same as Lie algebras. I must admit, I was thinking about closed subgroups, which is the same as approximation to arbitrary accuracy. Presumably, classifying all gates exactly would be absurd in the same way that classifying all subgroups of $SU(2)$, with no topological condition, is absurd. I see you made the same choice in your beam splitter paper. </p>\n<p>I&#8217;m reading Bouland-Aaronson (1310.6718) now to get an idea of the issues involved. Is that a good place to start?</p>\n<p>Disclaimer: I very often get exited about a project for a few days, then give up and move on. But I&#8217;m excited for the moment!</p>\n]]>", "author": "<a href=\"http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Speyer:David.html\">David Speyer</a>", "published": "2015-04-23 01:44:12+00:00", "title": "By: David Speyer"}, {"content": "<![CDATA[<p>David #24: Yes, my paper with Adam Bouland seems like an excellent place to start.  Adam and Lucy Zhang have some further stuff that they&#8217;re currently working on, and would probably be happy to discuss via email.</p>\n<p>There are actually some pretty interesting recent results (typically involving algebraic number theory) about <i>exact</i> synthesis of unitary transformations; see for example <a href=\"http://arxiv.org/abs/1206.5236\" rel=\"nofollow\">here</a>.  A major reason for the interest is that, for the special quantum gate sets for which you can use algebraic number theory to understand which unitaries can and can&#8217;t be represented exactly, you can use more algebraic number theory to get procedures for approximating <i>arbitrary</i> unitaries that blow the parameters of the Solovay-Kitaev Theorem out of the water.  (Specifically, you can get within an additive constant of the information-theoretic limit of log(1/&epsilon;) gates, as compared to the Solovay-Kitaev bound, which was log<sup>3.97</sup>(1/&epsilon;)&#8212;a huge difference in practice.)  See <a href=\"http://arxiv.org/abs/1403.2975\" rel=\"nofollow\">here</a> for example.</p>\n<p>So I wouldn&#8217;t say that the exact classification problem is &#8220;absurd&#8221;&#8212;I would merely say that it seems way more complicated even than the approximate classification problem, making the latter a very obvious place to start!</p>\n]]>", "author": "Scott", "published": "2015-04-23 06:19:27+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Sniffnoy #23:</p>\n<ul>I\u2019m confused, I thought part of the point of PDQP was that it was contained in DQP?</ul>\n<p>No, the point is that it&#8217;s a variation on DQP that captures many of the same intuitions&#8212;e.g., both classes contain SZK and BQP and probably fail to contain NP for very similar reasons&#8212;while also being easier to reason about.  If it were also contained in DQP, that would be a further nice property, but now that I&#8217;ve (belatedly!) explicitly considered that question, I don&#8217;t see how to prove it.</p>\n]]>", "author": "Scott", "published": "2015-04-23 10:35:47+00:00", "title": "By: Scott"}, {"content": "<![CDATA[<p>Scott, Due to the paper about classification I &#8220;revisited&#8221; stabilizer circuits and encountered some technical problem. May be you could comment that? There is a paper hep-th/9905212 based on earlier Blichfeldt book with classification of finite subgroups of SU(4), but I do not recognize finite subgroup corresponding stabilizer circuits on two qubits here. Either I missing something, or the classification is not complete. Did you read the work?</p>\n]]>", "author": "Alex V", "published": "2015-04-23 11:09:30+00:00", "title": "By: Alex V"}, {"content": "<![CDATA[<p>Scott #19, 20: Thanks, that helps.</p>\n<p>Based on the very hazy terms in which I understand quantum computing, it would surprise me if those two classes were incomparable. QM is an &#8220;island in theory-space&#8221;, right? So BQP should be hard to extend in an interesting way. But here we have two purportedly distinct, natural, not-too-powerful extensions? How many such extensions could there possibly be?</p>\n]]>", "author": "Nick", "published": "2015-04-23 21:26:19+00:00", "title": "By: Nick"}]