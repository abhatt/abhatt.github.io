<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2019-08-21T14:22:39Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/08/21/assistant-professor-tenure-track-and-professor-positions-in-computer-science-at-institute-of-science-and-technology-austria-apply-by-october-31-2019/</id>
    <link href="https://cstheory-jobs.org/2019/08/21/assistant-professor-tenure-track-and-professor-positions-in-computer-science-at-institute-of-science-and-technology-austria-apply-by-october-31-2019/" rel="alternate" type="text/html"/>
    <title>Assistant professor (tenure-track) and professor positions in computer science at Institute of Science and Technology Austria (apply by October 31, 2019)</title>
    <summary>We invite applications in all areas of computer science for several open positions. Female researchers are strongly encouraged to apply. Website: https://ist.ac.at/en/jobs/faculty/ Email: professors@ist.ac.at</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We invite applications in all areas of computer science for several open positions. Female researchers are strongly encouraged to apply.</p>
<p>Website: <a href="https://ist.ac.at/en/jobs/faculty/">https://ist.ac.at/en/jobs/faculty/</a><br/>
Email: <a href="mailto:professors@ist.ac.at" rel="noopener" target="_blank"> professors@ist.ac.at</a></p></div>
    </content>
    <updated>2019-08-21T11:55:31Z</updated>
    <published>2019-08-21T11:55:31Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-08-21T14:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=17855</id>
    <link href="https://gilkalai.wordpress.com/2019/08/21/the-argument-against-quantum-computers-a-cern-colloquium-and-a-new-paper/" rel="alternate" type="text/html"/>
    <title>The Argument against Quantum Computers – a CERN Colloquium and a New Paper</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Let me announce my CERN colloquium this Thursday, August 22, 2019, 16:30-17:30 entitled “The argument against quantum computers.” If you are at CERN or the neighborhood, please please come to the lecture. (Tea and coffee will be served at 16:00. … <a href="https://gilkalai.wordpress.com/2019/08/21/the-argument-against-quantum-computers-a-cern-colloquium-and-a-new-paper/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Let me announce <a href="https://indico.cern.ch/event/839574/?fbclid=IwAR0JHF8kcQ_tQKJrbJcNYTu9lQvMjOEvcSk6Jsh_Tq4uH4EbjeaDz7qv30k">my CERN colloquium</a> this Thursday, August 22, 2019, 16:30-17:30 entitled “The argument against quantum computers.” If you are at CERN or the neighborhood, please please come to the lecture. (Tea and coffee will be served at 16:00. ) If you are further away, there is a <a href="https://webcast.web.cern.ch/event/i839574">live broadcast</a>.</p>
<p>A few weeks ago I uploaded to the arXive a new paper with the same title “<a href="https://arxiv.org/abs/1908.02499">The argument against quantum computers</a>“. The paper will appear in the volume: Quantum, Probability, Logic: Itamar Pitowsky’s Work and Influence, Springer, Nature (2019), edited by Meir Hemmo and Orly Shenker. A short abstract for the lecture and the paper is:</p>
<blockquote><p><em><strong><span style="color: #008080;">We give a computational complexity argument against the feasibility of quantum computers. We identify a very low complexity class of probability distributions described by noisy intermediate-scale quantum computers, and explain why it will allow neither good-quality quantum error-correction nor a demonstration of “quantum supremacy.”  Some general principles governing the behavior of noisy quantum systems are derived.</span></strong></em></p></blockquote>
<p>The new paper and lecture have the same title as my 2018 <a href="https://www.quantamagazine.org/gil-kalais-argument-against-quantum-computers-20180207/">interview</a> with Katia Moskvitch at Quanta Magazine (see also <a href="https://gilkalai.wordpress.com/2018/02/08/my-argument-against-quantum-computers-an-interview-with-katia-moskvitch-on-quanta-magazine/">this post</a>).  Note that Christopher Monroe has recently <a href="https://www.quantamagazine.org/gil-kalais-argument-against-quantum-computers-20180207/#comment-4559220424">contributed a very interesting comment</a> to the Quanta article. My paper is dedicated to the memory of Itamar Pitowsky, and for more on Itamar see the post <a href="https://gilkalai.wordpress.com/2010/02/15/itamar-pitowski-probability-in-physics-where-does-it-come-from/" rel="bookmark">Itamar Pitowsky: Probability in Physics, Where does it Come From?</a> See also this <a href="https://gilkalai.wordpress.com/2019/08/09/two-important-quantum-announcements/">previous post</a> for two other quantum events in Jerusalem: a seminar in the first semester and a winter school on <a href="http://ias.huji.ac.il/SchoolCSE4">The Mathematics of Quantum Computation </a> on December 15 – December 19, 2019.</p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/sasb.png"><img alt="" class="alignnone size-full wp-image-17856" height="481" src="https://gilkalai.files.wordpress.com/2019/08/sasb.png?w=640&amp;h=481" width="640"/></a></p>
<p><strong><span style="color: #ff0000;">A slide from a lecture by Scott Aaronson where he explains why soap bubble computers cannot solve the NP-complete Steiner-tree problem. Noisy intermediate scale quantum (NISQ) circuits are <em>computationally </em>much more primitive than Scott’s soap bubble computers and this will prevent them from achieving neither “quantum supremacy” nor good quality quantum error correcting codes.  </span></strong><span style="color: #ff0000;">(<a href="https://www.scottaaronson.com/blog/?p=4199">source</a> for the picture)</span></p>
<p> </p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/entn.png"><img alt="" class="alignnone size-full wp-image-17860" height="360" src="https://gilkalai.files.wordpress.com/2019/08/entn.png?w=640&amp;h=360" width="640"/></a></p>
<p><strong><span style="color: #ff0000;">Low-entropy quantum states give probability distributions described by low degree polynomials, and very low-entropy quantum states give chaotic behavior. Higher entropy enables classical information. </span></strong></p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/cern.png"><img alt="" class="alignnone size-full wp-image-17862" height="371" src="https://gilkalai.files.wordpress.com/2019/08/cern.png?w=640&amp;h=371" width="640"/></a></p>
<p> </p>
<p> </p></div>
    </content>
    <updated>2019-08-21T01:26:28Z</updated>
    <published>2019-08-21T01:26:28Z</published>
    <category term="Computer Science and Optimization"/>
    <category term="Physics"/>
    <category term="Quantum"/>
    <category term="CERN"/>
    <category term="Quantum computers"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2019-08-21T14:20:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07452</id>
    <link href="http://arxiv.org/abs/1908.07452" rel="alternate" type="text/html"/>
    <title>Continuous Toolpath Planning in Additive Manufacturing</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gupta:Prashant.html">Prashant Gupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Krishnamoorthy:Bala.html">Bala Krishnamoorthy</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07452">PDF</a><br/><b>Abstract: </b>We develop a framework that creates a new polygonal mesh representation of
the 3D domain of a layer-by-layer 3D printing job on which we identify single,
continuous tool paths covering each connected piece of the domain in every
layer. We present a tool path algorithm that traverses each such continuous
tool path with no crossovers. The key construction at the heart of our
framework is a novel Euler transformation that we introduced recently in a
separate manuscript. Our Euler transformation converts a 2-dimensional cell
complex K into a new 2-complex K^ such that every vertex in the 1-skeleton G^
of K^ has degree 4. Hence G^ is Eulerian, and an Eulerian tour can be followed
to print all edges in a continuous fashion without stops. We start with a mesh
K of the union of polygons obtained by projecting all layers to the plane.
First we compute its Euler transformation K^. In the slicing step, we clip K^
at each layer i using its polygon to obtain K^_i. We then patch K^_i by adding
edges such that any odd-degree nodes created by slicing are transformed to have
even degrees again. We print extra support edges in place of any segments left
out to ensure there are no edges without support in the next layer above. These
support edges maintain the Euler nature of K^_i. Finally, we describe a
tree-based search algorithm that builds the continuous tool path by traversing
"concentric" cycles in the Euler complex. Our algorithm produces a tool path
that avoids material collisions and crossovers, and can be printed in a
continuous fashion irrespective of complex geometry or topology of the domain
(e.g., holes).
</p></div>
    </summary>
    <updated>2019-08-21T01:28:26Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07447</id>
    <link href="http://arxiv.org/abs/1908.07447" rel="alternate" type="text/html"/>
    <title>Finding Hamiltonian and Longest (s, t)-paths of C-shaped Supergrid Graphs in Linear Time</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hung:Ruo=Wei.html">Ruo-Wei Hung</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Keshavarz=Kohjerdi:Fatemeh.html">Fatemeh Keshavarz-Kohjerdi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07447">PDF</a><br/><b>Abstract: </b>A supergrid graph is a finite vertex-induced subgraph of the infinite graph
whose vertex set consists of all points of the plane with integer coordinates
and in which two vertices are adjacent if the difference of their x or y
coordinates is not larger than 1. The Hamiltonian path (cycle) problem is to
determine whether a graph contains a simple path (cycle) in which each vertex
of the graph appears exactly once. This problem is NP-complete for general
graphs and it is also NP-complete for general supergrid graphs. Despite the
many applications of the problem, it is still open for many classes, including
solid supergrid graphs and supergrid graphs with some holes. A graph is called
Hamiltonian connected if it contains a Hamiltonian path between any two
distinct vertices. In this paper, first we will study the Hamiltonian cycle
property of C-shaped supergrid graphs, which are a special case of rectangular
supergrid graphs with a rectangular hole. Next, we will show that C-shaped
supergrid graphs are Hamiltonian connected except few conditions. Finally, we
will compute a longest path between two distinct vertices in these graphs. The
Hamiltonian connectivity of C-shaped supergrid graphs can be applied to compute
the optimal stitching trace of computer embroidery machines, and construct the
minimum printing trace of 3D printers with a C-like component being printed.
</p></div>
    </summary>
    <updated>2019-08-21T01:22:07Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07363</id>
    <link href="http://arxiv.org/abs/1908.07363" rel="alternate" type="text/html"/>
    <title>Node Overlap Removal Algorithms: A Comparative Study</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Fati Chen, Laurent Piccinini, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Poncelet:Pascal.html">Pascal Poncelet</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sallaberry:Arnaud.html">Arnaud Sallaberry</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07363">PDF</a><br/><b>Abstract: </b>Many algorithms have been designed to remove node overlapping, and many
quality criteria and associated metrics have been proposed to evaluate those
algorithms. Unfortunately, a complete comparison of the algorithms based on
some metrics that evaluate the quality has never been provided and it is thus
difficult for a visualization designer to select the algorithm that best suits
his needs. In this paper, we review 21 metrics available in the literature,
classify them according to the quality criteria they try to capture, and select
a representative one for each class. Based on the selected metrics, we compare
8 node overlap removal algorithms. Our experiment involves 854 synthetic and
real-world graphs.
</p></div>
    </summary>
    <updated>2019-08-21T01:33:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07342</id>
    <link href="http://arxiv.org/abs/1908.07342" rel="alternate" type="text/html"/>
    <title>New efficient flat-back 3D gadgets in origami extrusions compatible with the conventional pyramid-supported 3D gadgets</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Doi:Mamoru.html">Mamoru Doi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07342">PDF</a><br/><b>Abstract: </b>An origami extrusion is a folding of a 3D object in the middle of a flat
piece of paper, using 3D gadgets which create faces with solid angles. Our main
concern is to make origami extrusions of polyhedrons using 3D gadgets with
simple outgoing pleats, where a simple pleat is a pair of a mountain fold and a
valley fold which are parallel to each other. In this paper we present a new
type of 3D gadgets with simple outgoing pleats in origami extrusions and their
construction. Our 3D gadgets are downward compatible with the conventional
pyramid-supported gadgets developed by Calros Natan as a generalization of the
cube gadget, in the sense that in most cases we can replace the conventional
gadgets with the new ones with the same outgoing pleats while the converse is
not always possible. We can also change angles of the outgoing pleats under
certain conditions. Unlike the conventional pyramid-supported 3D gadgets, the
new ones have flat back sides above the ambient paper, and thus we can make
flat-foldable origami extrusions. Furthermore, since our new 3D gadgets are
less interfering with adjacent gadgets than the conventional ones, we can use
wider pleats at one time to make the extrusion higher. For example, we prove
that the maximal height of the prism of any convex polygon (resp. any triangle)
that can be extruded with our new gadgets is more than 4/3 times (resp.
$\sqrt{2}$ times) of that with the conventional ones. We also present explicit
constructions of division/repetition and negative versions of the new 3D
gadgets.
</p></div>
    </summary>
    <updated>2019-08-21T01:36:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07318</id>
    <link href="http://arxiv.org/abs/1908.07318" rel="alternate" type="text/html"/>
    <title>An algorithm for destroying claws and diamonds</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tsur:Dekel.html">Dekel Tsur</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07318">PDF</a><br/><b>Abstract: </b>In the {Claw,Diamond}-Free Edge Deletion problem the input is a graph $G$ and
an integer $k$, and the goal is to decide whether there is a set of edges of
size at most $k$ such that removing the edges of the set from $G$ results a
graph that does not contain an induced claw or diamond. In this paper we give
an algorithm for this problem whose running time is $O^*(3.562^k)$.
</p></div>
    </summary>
    <updated>2019-08-21T01:27:49Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07315</id>
    <link href="http://arxiv.org/abs/1908.07315" rel="alternate" type="text/html"/>
    <title>Evacuation of equilateral triangles by mobile agents of limited communication range</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Iman Bagheri, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Narayanan:Lata.html">Lata Narayanan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Opatrny:Jaroslav.html">Jaroslav Opatrny</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07315">PDF</a><br/><b>Abstract: </b>We consider the problem of evacuating $k \geq 2$ mobile agents from a
unit-sided equilateral triangle through an exit located at an unknown location
on the perimeter of the triangle. The agents are initially located at the
centroid of the triangle and they can communicate with other agents at distance
at most $r$ with $0\leq r \leq 1$. An agent can move at speed at most one, and
finds the exit only when it reaches the point where the exit is located. The
agents can collaborate in the search for the exit. The goal of the {\em
evacuation problem} is to minimize the evacuation time, defined as the
worst-case time for {\em all} the agents to reach the exit. We propose and
analyze several algorithms for the problem of evacuation by $k \geq 2$ agents;
our results indicate that the best strategy to be used varies depending on the
values of $r$ and $k$. For two agents, we give three algorithms, each of which
achieves the best performance for different sub-ranges of $r$ in the range $0
\leq r \leq 1$. Finally, we show that for any $r$, evacuation of $k=6
+2\lceil(\frac{1}{r}-1)\rceil$ agents can be done in time $1+\sqrt{3}/3$, which
is optimal in terms of time, and asymptotically optimal in terms of the number
of agents.
</p></div>
    </summary>
    <updated>2019-08-21T01:26:01Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07291</id>
    <link href="http://arxiv.org/abs/1908.07291" rel="alternate" type="text/html"/>
    <title>Computing Stable Demers Cartograms</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nickel:Soeren.html">Soeren Nickel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sondag:Max.html">Max Sondag</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Meulemans:Wouter.html">Wouter Meulemans</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chimani:Markus.html">Markus Chimani</a>, Stephen Kobourov, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Peltonen:Jaakko.html">Jaakko Peltonen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/N=ouml=llenburg:Martin.html">Martin Nöllenburg</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07291">PDF</a><br/><b>Abstract: </b>Cartograms are popular for visualizing numerical data for map regions.
Maintaining correct adjacencies is a primary quality criterion for cartograms.
When there are multiple data values per region (over time or different
datasets) shown as animated or juxtaposed cartograms, preserving the viewer's
mental-map in terms of stability between cartograms is another important
criterion. We present a method to compute stable Demers cartograms, where each
region is shown as a square and similar data yield similar cartograms. We
enforce orthogonal separation constraints with linear programming, and measure
quality in terms of keeping adjacent regions close (cartogram quality) and
using similar positions for a region between the different data values
(stability). Our method guarantees ability to connect most lost adjacencies
with minimal leaders. Experiments show our method yields good quality and
stability.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07282</id>
    <link href="http://arxiv.org/abs/1908.07282" rel="alternate" type="text/html"/>
    <title>Verification of Flat FIFO Systems</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Finkel:Alain.html">Alain Finkel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Praveen:M=.html">M. Praveen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07282">PDF</a><br/><b>Abstract: </b>The decidability and complexity of reachability problems and model-checking
for flat counter systems have been explored in detail. However, only few
results are known for flat FIFO systems, only in some particular cases (a
single loop or a single bounded expression). We prove, by establishing
reductions between properties, and by reducing SAT to a subset of these
properties that many verification problems like reachability, non-termination,
unboundedness are Np-complete for flat FIFO systems, generalizing similar
existing results for flat counter systems. We construct a trace-flattable
counter system that is bisimilar to a given flat FIFO system, which allows to
model-check the original flat FIFO system. Our results lay the theoretical
foundations and open the way to build a verification tool for (general) FIFO
systems based on analysis of flat subsystems. 2012 ACM Subject Classification
Theory of computation $\rightarrow$ Parallel computing models 1 Introduction
FIFO systems Asynchronous distributed processes communicating through First In
First Out (FIFO) channels are used since the seventies as models for protocols
[40], distributed and concurrent programming and more recently for web service
choreography interface [14]. Since FIFO systems simulate counter machines, most
reachability properties are undecidable for FIFO systems: for example, the
basic task of checking if the number of messages buffered in a channel can grow
unboundedly is undecidable [13]. There aren't many interesting and useful FIFO
subclasses with a decidable reachability problem. Considering FIFO systems with
a unique FIFO channel is not a useful restriction since they may simulate
Turing machines [13]. A few examples of decidable subclasses are half-duplex
systems [15] (but they are restricted to two machines since the natural
extension to three machines leads to undecidability), existentially bounded
deadlock free FIFO systems [31] (but it is undecidable to check if a system is
existentially bounded, even for deadlock free FIFO systems), synchronisable
FIFO systems (the property of synchronisability is undecidable [28] and
moreover, it is not clear which properties of synchronisable systems are
decidable), flat FIFO systems [8, 9] and lossy FIFO systems [2] (but one loses
the perfect FIFO mechanism).
</p></div>
    </summary>
    <updated>2019-08-21T01:21:25Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07239</id>
    <link href="http://arxiv.org/abs/1908.07239" rel="alternate" type="text/html"/>
    <title>Two-variable logic revisited</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Yanger Ma, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tan:Tony.html">Tony Tan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07239">PDF</a><br/><b>Abstract: </b>In this paper we present another proof for the well-known small model
property of two-variable logic. As far as we know, existing proofs of this
property rely heavily on model theoretic concepts. In contrast, ours is
combinatorial in nature and uses only a very simple counting argument, which we
find intuitive and elegant. We also consider matching lower bounds.
</p></div>
    </summary>
    <updated>2019-08-21T01:22:19Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07215</id>
    <link href="http://arxiv.org/abs/1908.07215" rel="alternate" type="text/html"/>
    <title>Decoding Downset codes over a finite grid</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Srinivasan:Srikanth.html">Srikanth Srinivasan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tripathi:Utkarsh.html">Utkarsh Tripathi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Venkitesh:S=.html">S. Venkitesh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07215">PDF</a><br/><b>Abstract: </b>In a recent paper, Kim and Kopparty (Theory of Computing, 2017) gave a
deterministic algorithm for the unique decoding problem for polynomials of
bounded total degree over a general grid. We show that their algorithm can be
adapted to solve the unique decoding problem for the general family of Downset
codes. Here, a downset code is specified by a family D of monomials closed
under taking factors: the corresponding code is the space of evaluations of all
polynomials that can be written as linear combinations of monomials from D.
</p></div>
    </summary>
    <updated>2019-08-21T01:21:12Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07154</id>
    <link href="http://arxiv.org/abs/1908.07154" rel="alternate" type="text/html"/>
    <title>Discrete and Fast Fourier Transform Made Clear</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zeman:Peter.html">Peter Zeman</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07154">PDF</a><br/><b>Abstract: </b>Fast Fourier transform was included in the Top 10 Algorithms of 20th Century
by Computing in Science &amp; Engineering. In this paper, we provide a new simple
derivation of both the discrete Fourier transform and fast Fourier transform by
means of elementary linear algebra. We start the exposition by introducing the
convolution product of vectors, represented by a circulant matrix, and derive
the discrete Fourier transform as the change of basis matrix that diagonalizes
the circulant matrix. We also generalize our approach to derive the Fourier
transform on any finite abelian group, where the case of Fourier transform on
the Boolean cube is especially important for many applications in theoretical
computer science.
</p></div>
    </summary>
    <updated>2019-08-21T01:27:44Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07153</id>
    <link href="http://arxiv.org/abs/1908.07153" rel="alternate" type="text/html"/>
    <title>Studying Wythoff and Zometool Constructions using Maple</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Benoit Charbonneau, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Whitehead:Spencer.html">Spencer Whitehead</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07153">PDF</a><br/><b>Abstract: </b>We describe a Maple package that serves at least four purposes. First, one
can use it to compute whether or not a given polyhedral structure is Zometool
constructible. Second, one can use it to manipulate Zometool objects, for
example to determine how to best build a given structure. Third, the package
allows for an easy computation of the polytopes obtained by the kaleiodoscopic
construction called the Wythoff construction. This feature provides a source of
multiple examples. Fourth, the package allows the projection on Coxeter planes
</p></div>
    </summary>
    <updated>2019-08-21T01:28:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07152</id>
    <link href="http://arxiv.org/abs/1908.07152" rel="alternate" type="text/html"/>
    <title>Unfolding Polyhedra</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Joseph O'Rourke <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07152">PDF</a><br/><b>Abstract: </b>Starting with the unsolved "D\"urer's problem" of edge-unfolding a convex
polyhedron to a net, we specialize and generalize (a) the types of cuts
permitted, and (b) the polyhedra shapes, to highlight both advances established
and which problems remain open.
</p></div>
    </summary>
    <updated>2019-08-21T01:28:40Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07097</id>
    <link href="http://arxiv.org/abs/1908.07097" rel="alternate" type="text/html"/>
    <title>An Omega(n^2) Lower Bound for Random Universal Sets for Planar Graphs</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Alexander Choi, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chrobak:Marek.html">Marek Chrobak</a>, Kevin Costello <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07097">PDF</a><br/><b>Abstract: </b>A set $U\subseteq \reals^2$ is $n$-universal if all $n$-vertex planar graphs
have a planar straight-line embedding into $U$. We prove that if $Q \subseteq
\reals^2$ consists of points chosen randomly and uniformly from the unit square
then $Q$ must have cardinality $\Omega(n^2)$ in order to be $n$-universal with
high probability. This shows that the probabilistic method, at least in its
basic form, cannot be used to establish an $o(n^2)$ upper bound on universal
sets.
</p></div>
    </summary>
    <updated>2019-08-21T01:31:21Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.07076</id>
    <link href="http://arxiv.org/abs/1908.07076" rel="alternate" type="text/html"/>
    <title>Improved Job sequencing Bounds from Decision Diagrams</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>J. N. Hooker <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.07076">PDF</a><br/><b>Abstract: </b>We introduce a general method for relaxing decision diagrams that allows one
to bound job sequencing problems by solving a Lagrangian dual problem on a
relaxed diagram. We also provide guidelines for identifying problems for which
this approach can result in useful bounds. These same guidelines can be applied
to bounding deterministic dynamic programming problems in general, since
decision diagrams rely on DP formulations. Computational tests show that
\mbox{Lagrangian} relaxation on a decision diagram can yield very tight bounds
for certain classes of hard job sequencing problems. For example, it proves for
the first time that the best known solutions for Biskup-Feldman instances are
within a small fraction of 1% of the optimal value, and sometimes optimal.
</p></div>
    </summary>
    <updated>2019-08-21T01:23:21Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06964</id>
    <link href="http://arxiv.org/abs/1908.06964" rel="alternate" type="text/html"/>
    <title>PPT: New Low Complexity Deterministic Primality Tests Leveraging Explicit and Implicit Non-Residues. A Set of Three Companion Manuscripts</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Phatak:Dhananjay.html">Dhananjay Phatak</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sherman:Alan_T=.html">Alan T. Sherman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Houston:Steven_D=.html">Steven D. Houston</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Henry:Andrew.html">Andrew Henry</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06964">PDF</a><br/><b>Abstract: </b>In this set of three companion manuscripts/articles, we unveil our new
results on primality testing and reveal new primality testing algorithms
enabled by those results. The results have been classified (and referred to) as
lemmas/corollaries/claims whenever we have complete analytic proof(s);
otherwise the results are introduced as conjectures.
</p>
<p>In Part/Article 1, we start with the Baseline Primality Conjecture~(PBPC)
which enables deterministic primality detection with a low complexity = O((log
N)^2) ; when an explicit value of a Quadratic Non Residue (QNR) modulo-N is
available (which happens to be the case for an overwhelming majority = 11/12 =
91.67% of all odd integers). We then demonstrate Primality Lemma PL-1, which
reveals close connections between the state-of-the-art Miller-Rabin method and
the renowned Euler-Criterion. This Lemma, together with the Baseline Primality
Conjecture enables a synergistic fusion of Miller-Rabin iterations and our
method(s), resulting in hybrid algorithms that are substantially better than
their components. Next, we illustrate how the requirement of an explicit value
of a QNR can be circumvented by using relations of the form: Polynomial(x) mod
N = 0 ; whose solutions implicitly specify Non Residues modulo-N. We then
develop a method to derive low-degree canonical polynomials that together
guarantee implicit Non Residues modulo-N ; which along with the Generalized
Primality Conjectures enable algorithms that achieve a worst case deterministic
polynomial complexity = O( (log N)^3 polylog(log N)) ; unconditionally ; for
any/all values of N.
</p>
<p>In Part/Article 2 , we present substantial experimental data that corroborate
all the conjectures. No counter example has been found.
</p>
<p>Finally in Part/Article 3, we present analytic proof(s) of the Baseline
Primality Conjecture that we have been able to complete for some special cases.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06798</id>
    <link href="http://arxiv.org/abs/1908.06798" rel="alternate" type="text/html"/>
    <title>A New Fast Weighted All-pairs Shortest Path Search Algorithm Based on Pruning by Shortest Path Trees</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yamane:Yasuo.html">Yasuo Yamane</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kobayashi:Kenichi.html">Kenichi Kobayashi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06798">PDF</a><br/><b>Abstract: </b>Recently we submitted a paper, whose title is A New Fast Unweighted All-pairs
Shortest Path Search Algorithm Based on Pruning by Shortest Path Trees, to
arXiv. This is related to unweighted graphs. This paper also presents a new
fast all-pairs shortest path algorithm for weighted graph based on the same
idea. In Dijkstra algorithm which is said to be fast in weighted graphs, the
average number of accesses to adjacent vertices (expressed by {\alpha}) is
about equal to the average degree of the graph. On the other hand, our
algorithm utilizes the shortest path trees of adjacent vertices of each source
vertex in the same manner as the algorithm for unweighted graphs, and reduce
{\alpha} drastically in comparison with Dijkstra algorithm. Roughly speaking
{\alpha} is reduced to the value close to 1, because the average degree of a
tree is about 2, and one is used to come in and the other is used to go out,
although that does not hold true when the depth of the short path trees is
small. In case of weighted graphs, a problem which does not occur in unweighted
graphs occurs. It is waiting for the generation of the shortest path tree of an
adjacent vertex. Therefore, it is possible that a deadlock occurs. We prove our
algorithm is deadlock-free. We compared our algorithm with Dijkstra and Peng
algorithms. On Dijkstra algorithm ours outperforms it on speed and {\alpha}
except that Dijkstra algorithm slightly outperforms ours or they are almost the
same on CPU time in sparse scale-free graphs. The result on Peng algorithm is
as follows: In speed and {\alpha}, ours outperforms Peng algorithm in
hypercube-shaped and dense scale-free graphs, but conversely Peng algorithm
outperforms ours in sparse scale-free graphs.
</p></div>
    </summary>
    <updated>2019-08-21T00:01:39Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06779</id>
    <link href="http://arxiv.org/abs/1908.06779" rel="alternate" type="text/html"/>
    <title>The Weighted Mean Curvature Derivative of a Space-Filling Diagram</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Arseniy Akopyan, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Edelsbrunner:Herbert.html">Herbert Edelsbrunner</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06779">PDF</a><br/><b>Abstract: </b>Representing an atom by a solid sphere in $3$-dimensional Euclidean space, we
get the space-filling diagram of a molecule by taking the union. Molecular
dynamics simulates its motion subject to bonds and other forces, including the
solvation free energy. The morphometric approach [HRC13,RHK06] writes the
latter as a linear combination of weighted versions of the volume, area, mean
curvature, and Gaussian curvature of the space-filling diagram. We give a
formula for the derivative of the weighted mean curvature. Together with the
derivatives of the weighted volume in [EdKo03], the weighted area in [BEKL04],
and the weighted Gaussian curvature [AkEd19], this yields the derivative of the
morphometric expression of the solvation free energy.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06777</id>
    <link href="http://arxiv.org/abs/1908.06777" rel="alternate" type="text/html"/>
    <title>The Weighted Gaussian Curvature Derivative of a Space-Filling Diagram</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Arseniy Akopyan, Herbert Edelsbrunner <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06777">PDF</a><br/><b>Abstract: </b>The morphometric approach [HRC13,RHK06] writes the solvation free energy as a
linear combination of weighted versions of the volume, area, mean curvature,
and Gaussian curvature of the space-filling diagram. We give a formula for the
derivative of the weighted Gaussian curvature. Together with the derivatives of
the weighted volume in [EdKo03], the weighted area in [BEKL04], and the
weighted mean curvature in [AkEd19], this yields the derivative of the
morphometric expression of solvation free energy.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06504</id>
    <link href="http://arxiv.org/abs/1908.06504" rel="alternate" type="text/html"/>
    <title>Graphs with large total angular resolution</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aichholzer:Oswin.html">Oswin Aichholzer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Korman:Matias.html">Matias Korman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Okamoto:Yoshio.html">Yoshio Okamoto</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Parada:Irene.html">Irene Parada</a>, Daniel Perz, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Renssen:Andr=eacute=_van.html">André van Renssen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vogtenhuber:Birgit.html">Birgit Vogtenhuber</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06504">PDF</a><br/><b>Abstract: </b>The total angular resolution of a straight-line drawing is the minimum angle
between two edges of the drawing. It combines two properties contributing to
the readability of a drawing: the angular resolution, which is the minimum
angle between incident edges, and the crossing resolution, which is the minimum
angle between crossing edges. We consider the total angular resolution of a
graph, which is the maximum total angular resolution of a straight-line drawing
of this graph. We prove that, up to a finite number of well specified
exceptions of constant size, the number of edges of a graph with $n$ vertices
and a total angular resolution greater than $60^{\circ}$ is bounded by $2n-6$.
This bound is tight. In addition, we show that deciding whether a graph has
total angular resolution at least $60^{\circ}$ is NP-hard.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06461</id>
    <link href="http://arxiv.org/abs/1908.06461" rel="alternate" type="text/html"/>
    <title>On the 2-colored crossing number</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aichholzer:Oswin.html">Oswin Aichholzer</a>, Ruy Fabila-Monroy, Adrian Fuchs, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hidalgo=Toscano:Carlos.html">Carlos Hidalgo-Toscano</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Parada:Irene.html">Irene Parada</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vogtenhuber:Birgit.html">Birgit Vogtenhuber</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zaragoza:Francisco.html">Francisco Zaragoza</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06461">PDF</a><br/><b>Abstract: </b>Let $D$ be a straight-line drawing of a graph. The rectilinear 2-colored
crossing number of $D$ is the minimum number of crossings between edges of the
same color, taken over all possible 2-colorings of the edges of $D$. First, we
show lower and upper bounds on the rectilinear 2-colored crossing number for
the complete graph $K_n$. To obtain this result, we prove that asymptotic
bounds can be derived from optimal and near-optimal instances with few
vertices. We obtain such instances using a combination of heuristics and
integer programming. Second, for any fixed drawing of $K_n$, we improve the
bound on the ratio between its rectilinear 2-colored crossing number and its
rectilinear crossing number.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06460</id>
    <link href="http://arxiv.org/abs/1908.06460" rel="alternate" type="text/html"/>
    <title>A New k-Shortest Path Search Approach based on Graph Reduction</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yamane:Yasuo.html">Yasuo Yamane</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kitajima:Hironobu.html">Hironobu Kitajima</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06460">PDF</a><br/><b>Abstract: </b>We present a new approach called GR (Graph Reduction) algorithm for searching
loop-less k-shortest paths (1st to k-th shortest paths) in a graph based on
graph reduction. Let a source vertex and a target vertex of k-shortest paths be
v_s and v_t respectively. First our approach computes shortest paths to every
vertex from v_s and v_t respectively, and reduce a graph to a subgraph that
contains all vertices and edges of loop-less k-shortest paths using the already
computed shortest paths, and apply an existing k-shortest path search algorithm
to the reduced graph. A graph can be reduced quickly after computing the
shortest paths using them, therefore a very efficient search can be achieved.
In an experiment using a hypercube graph which has 16384 vertices where k=128,
the number of vertices is reduced to about 1/22, and a variant of Dijkstra
algorithm for k-shortest path search were speeded up by about 365 times. We
implemented a fast k-shortest path variant of bidirectional Dijkstra algorithm
(k-biDij) which is the state-of-the-art algorithm and the fastest as long as we
know, GR outperforms k-biDij in dense scale-free graphs. However, k-biDij
outperforms GR in hypercube-shaped and sparse scale-free graphs, but even then
GR can also speed up it by 12.3 and 2.0 times respectively by precomputing
all-pairs shortest paths. We also show the graph reduction can be done in time
complexity O(m + n log n). We also introduce our improvements to k-biDij
simply.
</p></div>
    </summary>
    <updated>2019-08-21T00:01:29Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06390</id>
    <link href="http://arxiv.org/abs/1908.06390" rel="alternate" type="text/html"/>
    <title>On sets of $n$ points in general position that determine lines that can be pierced by $n$ points</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Keller:Chaya.html">Chaya Keller</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pinchasi:Rom.html">Rom Pinchasi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06390">PDF</a><br/><b>Abstract: </b>Let $P$ be a set of $n$ points in general position in the plane. Let $R$ be a
set of $n$ points disjoint from $P$ such that for every $x,y \in P$ the line
through $x$ and $y$ contains a point in $R$ outside of the segment delimited by
$x$ and $y$. We show that $P \cup R$ must be contained in a cubic curve.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06318</id>
    <link href="http://arxiv.org/abs/1908.06318" rel="alternate" type="text/html"/>
    <title>Comparison-Based Indexing From First Principles</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hetland:Magnus_Lie.html">Magnus Lie Hetland</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06318">PDF</a><br/><b>Abstract: </b>Basic assumptions about comparison-based indexing are laid down and a general
design space is derived from these. An index structure spanning this design
space (the sprawl) is described, along with an associated family of
partitioning predicates, or regions (the ambits), as well as algorithms for
search and, to some extent, construction. The sprawl of ambits forms a
unification and generalization of current indexing methods, and a jumping-off
point for future designs.
</p></div>
    </summary>
    <updated>2019-08-21T00:01:50Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06280</id>
    <link href="http://arxiv.org/abs/1908.06280" rel="alternate" type="text/html"/>
    <title>No-Reference Light Field Image Quality Assessment Based on Spatial-Angular Measurement</title>
    <feedworld_mtime>1566345600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shi:Likun.html">Likun Shi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhou:Wei.html">Wei Zhou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Zhibo.html">Zhibo Chen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06280">PDF</a><br/><b>Abstract: </b>Light field image quality assessment (LFI-QA) is a significant and
challenging research problem. It helps to better guide light field acquisition,
processing and applications. However, only a few objective models have been
proposed and none of them completely consider intrinsic factors affecting the
LFI quality. In this paper, we propose a No-Reference Light Field image Quality
Assessment (NR-LFQA) scheme, where the main idea is to quantify the LFI quality
degradation through evaluating the spatial quality and angular consistency. We
first measure the spatial quality deterioration by capturing the naturalness
distribution of the light field cyclopean image array, which is formed when
human observes the LFI. Then, as a transformed representation of LFI, the
Epipolar Plane Image (EPI) contains the slopes of lines and involves the
angular information. Therefore, EPI is utilized to extract the global and local
features from LFI to measure angular consistency degradation. Specifically, the
distribution of gradient direction map of EPI is proposed to measure the global
angular consistency distortion in the LFI. We further propose the weighted
local binary pattern to capture the characteristics of local angular
consistency degradation. Extensive experimental results on four publicly
available LFI quality datasets demonstrate that the proposed method outperforms
state-of-the-art 2D, 3D, multi-view, and LFI quality assessment algorithms.
</p></div>
    </summary>
    <updated>2019-08-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16180</id>
    <link href="https://rjlipton.wordpress.com/2019/08/20/our-trip-to-monte-carlo/" rel="alternate" type="text/html"/>
    <title>Our Trip To Monte Carlo</title>
    <summary>Why does randomness help? Kathryn Farley is my dear wife. She and I are currently on a cruise through the Mediterranean. Our trip started in Barcelona and is stopping daily at various cities as we journey to Rome. “Tough duty,” but we are trying to enjoy it. Today I wish to talk about our visit […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Why does randomness help?</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.files.wordpress.com/2019/08/kathrynmontecarlo2.png"><img alt="" class="alignright wp-image-16183" height="180" src="https://rjlipton.files.wordpress.com/2019/08/kathrynmontecarlo2.png?w=141&amp;h=180" width="141"/></a></p>
<p>
Kathryn Farley is my dear wife. She and I are currently on a cruise through the Mediterranean. Our trip started in Barcelona and is stopping daily at various cities as we journey to Rome. “Tough duty,” but we are trying to enjoy it. </p>
<p>
Today I wish to talk about our visit to Monte Carlo. </p>
<p>
Our ship, the <a href="https://en.wikipedia.org/wiki/MV_Seabourn_Encore">Encore</a>, just docked there Sunday. The day was warm and clear, and we spent some time exploring the city. We did manage to avoid losing any money at the famous casino. Our secret was simple: do not play, do not gamble, do not lose.</p>
<p>
Over lunch I started to explain to Kathryn why Monte Carlo is an important city for complexity theorists. I felt a bit like we were at a theory shrine.</p>
<p>
</p><p/><h2> Why Randomness Helps </h2><p/>
<p/><p>
Indeed. I realized that it is not so simple to explain why randomness helps. Kathryn has a Ph.D in theatre. She is smart, is a member of Mensa, but is not a complexity theorist. How do I explain that randomness is powerful? Indeed.</p>
<p/><p><br/>
<a href="https://rjlipton.files.wordpress.com/2019/08/randkinmontecarlo2.png"><img alt="" class="aligncenter size-medium wp-image-16186" height="251" src="https://rjlipton.files.wordpress.com/2019/08/randkinmontecarlo2.png?w=300&amp;h=251" width="300"/></a></p>
<p/><p><br/>
I started to explain, but my examples were lame. I think she got the main idea, but I also think that I did not do a great job. Russell Impagliazzo has a nice <a href="https://simons.berkeley.edu/sites/default/files/docs/6119/doesrandomnesshelp.pdf">explanation</a> on the role of randomness—I wish Russell had been there to help explain randomness to Kathryn. </p>
<p>
After lunch I started to think more about the role of randomness. I looked at our friends over at Wikipedia and discovered they had a pretty good <a href="https://en.wikipedia.org/wiki/Applications_of_randomness">page</a>. Some reasons are:</p>
<p>
<img alt="{\bullet }" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet }"/> <i>Games</i></p>
<p>
Randomness was first investigated in the context of gambling. Dice, playing cards, roulette wheels, all have been studied by those interested in gambling. Clearly, betting on the roll of dice, deal of cards, or spin of the wheel, only makes sense when these actions are unpredictable. Random. </p>
<p>
<img alt="{\bullet }" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet }"/> <i>Political</i></p>
<p>
Randomness is often used to create “fairness”. For example, in the US and UK, juror selection is done by a lottery. </p>
<p>
<img alt="{\bullet }" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet }"/> <i>Science</i></p>
<p>
Monte Carlo methods in physics and computer science require random numbers.</p>
<p>
<img alt="{\bullet }" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet }"/> <i>Cryptography</i></p>
<p>
Random keys for encryption algorithms should be unpredictable. Random. Otherwise, they can be guessed by others. The password “password” is usually not allowed.</p>
<p>
<img alt="{\bullet }" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet }"/> <i>Arts</i></p>
<p>
Kathryn is interested in the arts: in plays and in painting and other fine arts. Some theories of art claim that all art is random. One thinks of artists like Jackson Pollock with his famous drip paintings. He was a major player in the abstract expressionist movement.</p>
<p>
<a href="https://rjlipton.files.wordpress.com/2019/08/jpollock.png"><img alt="" class="aligncenter size-full wp-image-16188" src="https://rjlipton.files.wordpress.com/2019/08/jpollock.png?w=600"/></a></p>
<p/><h2> Pseudo or True? </h2><p/>
<p/><p>
Ken has been paying intensive devotions at the same shrine. As he wrote in the previous <a href="https://rjlipton.wordpress.com/2019/08/15/predicting-chess-and-horses/">post</a>, he has been conducting millions of randomized tests of his new chess model. </p>
<p>
Why random? What he needs to do is show that his model will not tend to “cry wolf” by giving a too-high <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z}"/>-score to a set of games in a tournament by an honest player. He wants to show that his model is equally tempered no matter the rating of the player. So he runs trials at different rating levels ranging from Elo 1000 for novice players to Elo 2800 which is championship level. To show that the <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z}"/>-scores given by his model conform to a normal bell curve, he needs to do 10,000s or 100,000s of tests at each level. </p>
<p>
The problem is there just don’t exist enough games. Most large tournaments give only the games played on their “top boards” which use special auto-recording equipment, and the losers on those boards in one round may play on lower boards in the next round. Thus out of about 60,000 player-tournament pairs Ken can track each year, most are only partial samples. So what Ken does is generate “synthetic players” by randomly taking subsets of (say) 9 games—from his data set of 1,000 or so games for each level—and randomly choosing white or black for each game. This is a common <a href="https://en.wikipedia.org/wiki/Resampling_(statistics)#Subsampling">resampling</a> technique, and it uses Monte Carlo.</p>
<p>
Ken uses pseudo-random generators (PRGs). He starts a C++ library PRG on a seed <img alt="{s}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{s}"/> based on the current time. The fact that the choices are deterministic once <img alt="{s}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{s}"/> is given might allow him to reproduce an entire run exactly (after a model tweak) by preserving the <img alt="{s}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{s}"/> it used. This is a paradox: we might want our “random” bits to be deterministic. Monte Carlo with predestined loaded dice.</p>
<p>
From time to time on this blog we have mused about what a world <a href="https://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/">without</a> randomness or with <a href="https://rjlipton.wordpress.com/2018/04/01/the-entropy-of-baseball/">reduced</a> entropy would be like. We were struck a few weeks ago when the noted physics blogger Sabine Hossenfelder wrote about “<a href="http://backreaction.blogspot.com/2019/07/the-forgotten-solution-superdeterminism.html">superdeterminism</a>.” That post provoked a few hundred comments in her blog, as did her <a href="http://backreaction.blogspot.com/2019/08/the-problem-with-quantum-measurements.html">post</a> last week on the quantum measurement problem—including long exchanges with Peter Shor. Ken and I don’t know which side to take, but I can say that the side of a ship is a great place to think about possible real effects of these differences.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
What is your take on randomness? Do you employ it? How “true” do you need it to be? </p>
<p/></font></font></div>
    </content>
    <updated>2019-08-20T16:24:54Z</updated>
    <published>2019-08-20T16:24:54Z</published>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="People"/>
    <category term="art"/>
    <category term="cruise"/>
    <category term="Kathryn Farley"/>
    <category term="Monte Carlo"/>
    <category term="Peter Shor"/>
    <category term="Physics"/>
    <category term="quantum"/>
    <category term="randomized algorithms"/>
    <category term="randomness"/>
    <category term="Sabine Hossenfelder"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-08-21T14:20:51Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/08/20/algorithms-postdoc-at-university-of-california-berkeley-apply-by-october-1-2019/</id>
    <link href="https://cstheory-jobs.org/2019/08/20/algorithms-postdoc-at-university-of-california-berkeley-apply-by-october-1-2019/" rel="alternate" type="text/html"/>
    <title>Algorithms Postdoc at University of California Berkeley (apply by October 1, 2019)</title>
    <summary>Multiple Postdoctoral positions available to work on Fine-grained Complexity, Approximation Algorithms and Additive Combinatorics. Please email directly to Barna with resume and contact information of three references. The start date is flexible. Website: https://barnasaha.net/ Email: barnas@berkeley.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Multiple Postdoctoral positions available to work on Fine-grained Complexity, Approximation Algorithms and Additive Combinatorics. Please email directly to Barna with resume and contact information of three references. The start date is flexible.</p>
<p>Website: <a href="https://barnasaha.net/">https://barnasaha.net/</a><br/>
Email: barnas@berkeley.edu</p></div>
    </content>
    <updated>2019-08-20T04:00:50Z</updated>
    <published>2019-08-20T04:00:50Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-08-21T14:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06828</id>
    <link href="http://arxiv.org/abs/1908.06828" rel="alternate" type="text/html"/>
    <title>A Game of Cops and Robbers on Graphs with Periodic Edge-Connectivity</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Erlebach:Thomas.html">Thomas Erlebach</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Spooner:Jakob_T=.html">Jakob T. Spooner</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06828">PDF</a><br/><b>Abstract: </b>This paper considers a game in which a single cop and a single robber take
turns moving along the edges of a given graph $G$. If there exists a strategy
for the cop which enables it to be positioned at the same vertex as the robber
eventually, then $G$ is called cop-win, and robber-win otherwise. We study this
classical combinatorial game in a novel context, broadening the class of
potential game arenas to include the edge-periodic graphs. These are graphs
with an infinite lifetime comprised of discrete time steps such that each edge
$e$ is assigned a bit pattern of length $l_e$, with a 1 in the $i$-th position
of the pattern indicating the presence of edge $e$ in the $i$-th step of each
consecutive block of $l_e$ steps. Utilising the already-developed framework of
reachability games, we extend existing techniques to obtain, amongst other
results, an $O(\textsf{LCM}(L)\cdot n^3)$ upper bound on the time required to
decide if a given $n$-vertex edge-periodic graph $G^\tau$ is cop or robber win
as well as compute a strategy for the winning player (here, $L$ is the set of
all edge pattern lengths $l_e$, and $\textsf{LCM}(L)$ denotes the least common
multiple of the set $L$). Separately, turning our attention to edge-periodic
cycle graphs, we give proof of a $2\cdot l \cdot \textsf{LCM}(L)$ upper bound
on the length required by any edge-periodic cycle to ensure that it is robber
win, where $l = 1$ if $\textsf{LCM}(L) \geq 2\cdot \max L $, and $l=2$
otherwise. Furthermore, we provide lower bound constructions in the form of
cop-win edge-periodic cycles: one with length $1.5 \cdot \textsf{LCM}(L)$ in
the $l=1$ case and one with length $3\cdot \textsf{LCM}(L)$ in the $l=2$ case.
</p></div>
    </summary>
    <updated>2019-08-20T23:59:08Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06821</id>
    <link href="http://arxiv.org/abs/1908.06821" rel="alternate" type="text/html"/>
    <title>An Efficient Algorithm to Test Potentially Bipartiteness of Graphical Degree Sequences</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Kai.html">Kai Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06821">PDF</a><br/><b>Abstract: </b>As a partial answer to a question of Rao, a deterministic and customizable
efficient algorithm is presented to test whether an arbitrary graphical degree
sequence has a bipartite realization. The algorithm can be configured to run in
polynomial time, at the expense of possibly producing an erroneous output on
some "yes" instances but with very low error rate.
</p></div>
    </summary>
    <updated>2019-08-20T23:44:57Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06818</id>
    <link href="http://arxiv.org/abs/1908.06818" rel="alternate" type="text/html"/>
    <title>Unexpected Effects of Online K-means Clustering</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moshkovitz:Michal.html">Michal Moshkovitz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06818">PDF</a><br/><b>Abstract: </b>In this paper we study k-means clustering in the online setting. In the
offline setting the main parameters are number of centers, k, and size of the
dataset, n. Performance guarantees are given as a function of these parameters.
In the online setting new factors come into place: the ordering of the dataset
and whether n is known in advance or not. One of the main results of this paper
is the discovery that these new factors have dramatic effects on the quality of
the clustering algorithms. For example, for constant k: (1) $\Omega(n)$ centers
are needed if the order is arbitrary, (2) if the order is random and n is
unknown in advance, the number of centers reduces to $\Theta(logn)$, and (3) if
n is known, then the number of centers reduces to a constant. For different
values of the new factors, we show upper and lower bounds that are exactly the
same up to a constant, thus achieving optimal bounds.
</p></div>
    </summary>
    <updated>2019-08-20T23:27:18Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06806</id>
    <link href="http://arxiv.org/abs/1908.06806" rel="alternate" type="text/html"/>
    <title>A New Fast Unweighted All-pairs Shortest Path Search Algorithm Based on Pruning by Shortest Path Trees</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yamane:Yasuo.html">Yasuo Yamane</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kobayashi:Kenichi.html">Kenichi Kobayashi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06806">PDF</a><br/><b>Abstract: </b>We present a new fast all-pairs shortest path algorithm for unweighted
graphs. In breadth-first search which is said to representative and fast in
unweighted graphs, the average number of accesses to adjacent vertices
(expressed by {\alpha}) is about equal to the average degree of the graph. On
the other hand, our algorithm utilizes the shortest path trees of adjacent
vertices of each source vertex, and reduce {\alpha} drastically. Roughly
speaking {\alpha} is reduced to the value close to 1, because the average
degree of a tree is about 2, and one is used to come in and the other is used
to go out, although that does not hold true when the depth of the shortest path
trees is small. We compared our algorithm with breadth-first search algorithm,
and our results showed that ours outperforms breadth-first search on speed and
{\alpha}.
</p></div>
    </summary>
    <updated>2019-08-20T23:37:47Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06751</id>
    <link href="http://arxiv.org/abs/1908.06751" rel="alternate" type="text/html"/>
    <title>Freezing, Bounded-Change and Convergent Cellular Automata</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Ollinger:Nicolas.html">Nicolas Ollinger</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Theyssier:Guillaume.html">Guillaume Theyssier</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06751">PDF</a><br/><b>Abstract: </b>This paper studies three classes of cellular automata from a computational
point of view: freezing cellular automata where the state of a cell can only
decrease according to some order on states, cellular automata where each cell
only makes a bounded number of state changes in any orbit, and finally cellular
automata where each orbit converges to some fixed point. Many examples studied
in the literature fit into these definitions, in particular the works on
cristal growth started by S. Ulam in the 60s. The central question addressed
here is how the computational power and computational hardness of basic
properties is affected by the constraints of convergence, bounded number of
change, or local decreasing of states in each cell. By studying various
benchmark problems (short-term prediction, long term reachability, limits) and
considering various complexity measures and scales (LOGSPACE vs. PTIME,
communication complexity, Turing computability and arithmetical hierarchy) we
give a rich and nuanced answer: the overall computational complexity of such
cellular automata depends on the class considered (among the three above), the
dimension , and the precise problem studied. In particular, we show that all
settings can achieve universality in the sense of Blondel-Delvenne-Kurka,
although short term predictability varies from NLOGSPACE to P-complete.
Besides, the computability of limit configurations starting from computable
initial configurations separates bounded-change from convergent cellular
automata in dimension 1, but also dimension 1 versus higher dimensions for
freezing cellular automata. Another surprising dimension-sensitive result
obtained is that nilpotency becomes decidable in dimension 1 for all the three
classes, while it stays undecidable even for freezing cellular automata in
higher dimension.
</p></div>
    </summary>
    <updated>2019-08-20T23:21:15Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06727</id>
    <link href="http://arxiv.org/abs/1908.06727" rel="alternate" type="text/html"/>
    <title>On bin packing with clustering and bin packing with delays</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Epstein:Leah.html">Leah Epstein</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06727">PDF</a><br/><b>Abstract: </b>We continue the study of two recently introduced bin packing type problems,
called bin packing with clustering, and online bin packing with delays. A bin
packing input consists of items of sizes not larger than 1, and the goal is to
partition or pack them into bins, where the total size of items of every valid
bin cannot exceed 1.
</p>
<p>In bin packing with clustering, items also have colors associated with them.
A globally optimal solution can combine items of different colors in bins,
while a clustered solution can only pack monochromatic bins. The goal is to
compare a globally optimal solution to an optimal clustered solution, under
certain constraints on the coloring provided with the input. We show close
bounds on the worst-case ratio between these two costs, called "the price of
clustering", improving and simplifying previous results. Specifically, we show
that the price of clustering does not exceed 1.93667, improving over the
previous upper bound of 1.951, and that it is at least 1.93558, improving over
the previous lower bound of 1.93344.
</p>
<p>In online bin packing with delays, items are presented over time. Items may
wait to be packed, and an algorithm can create a new bin at any time, packing a
subset of already existing unpacked items into it, under the condition that the
bin is valid. A created bin cannot be used again in the future, and all items
have to be packed into bins eventually. The objective is to minimize the number
of used bins plus the sum of waiting costs of all items, called delays. We
build on previous work and modify a simple phase-based algorithm. We combine
the modification with a careful analysis to improve the previously known
competitive ratio from 3.951 to below 3.1551.
</p></div>
    </summary>
    <updated>2019-08-20T23:41:36Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06720</id>
    <link href="http://arxiv.org/abs/1908.06720" rel="alternate" type="text/html"/>
    <title>Quantum algorithms for Second-Order Cone Programming and Support Vector Machines</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kerenidis:Iordanis.html">Iordanis Kerenidis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Prakash:Anupam.html">Anupam Prakash</a>, Dániel Szilágyi <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06720">PDF</a><br/><b>Abstract: </b>Second order cone programs (SOCPs) are a class of structured convex
optimization problems that generalize linear programs. We present a quantum
algorithm for second order cone programs (SOCPs) based on a quantum variant of
the interior point method. Our algorithm outputs a classical solution to the
SOCP with objective value $\epsilon$ close to the optimal in time
$\widetilde{O} \left( n\sqrt{r} \frac{\zeta \kappa}{\delta^2} \log
\left(1/\epsilon\right) \right)$ where $r$ is the rank and $n$ the dimension of
the SOCP, $\delta$ bounds the distance from strict feasibility for the
intermediate solutions, $\zeta$ is a parameter bounded by $\sqrt{n}$, and
$\kappa$ is an upper bound on the condition number of matrices arising in the
classical interior point method for SOCPs. We present applications to the
support vector machine (SVM) problem in machine learning that reduces to SOCPs.
We provide experimental evidence that the quantum algorithm achieves an
asymptotic speedup over classical SVM algorithms with a running time
$\widetilde{O}(n^{2.557})$ for random SVM instances. The best known classical
algorithms for such instances have complexity $\Omega (n^{3})$.
</p></div>
    </summary>
    <updated>2019-08-20T23:56:47Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06688</id>
    <link href="http://arxiv.org/abs/1908.06688" rel="alternate" type="text/html"/>
    <title>Balanced Schnyder woods for planar triangulations: an experimental study with applications to graph drawing and graph separators</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aleardi:Luca_Castelli.html">Luca Castelli Aleardi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06688">PDF</a><br/><b>Abstract: </b>In this work we consider balanced Schnyder woods for planar graphs, which are
Schnyder woods where the number of incoming edges of each color at each vertex
is balanced as much as possible. We provide a simple linear-time heuristic
leading to obtain well balanced Schnyder woods in practice. As test
applications we consider two important algorithmic problems: the computation of
Schnyder drawings and of small cycle separators. While not being able to
provide theoretical guarantees, our experimental results (on a wide collection
of planar graphs) suggest that the use of balanced Schnyder woods leads to an
improvement of the quality of the layout of Schnyder drawings, and provides an
efficient tool for computing short and balanced cycle separators.
</p></div>
    </summary>
    <updated>2019-08-20T23:31:14Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06664</id>
    <link href="http://arxiv.org/abs/1908.06664" rel="alternate" type="text/html"/>
    <title>Safe sets in digraphs</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bai:Yandong.html">Yandong Bai</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bang=Jensen:J=oslash=rgen.html">Jørgen Bang-Jensen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fujita:Shinya.html">Shinya Fujita</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yeo:Anders.html">Anders Yeo</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06664">PDF</a><br/><b>Abstract: </b>A non-empty subset $S$ of the vertices of a digraph $D$ is called a {\it safe
set} if \begin{itemize}
</p>
<p>\item[(i)] for every strongly connected component $M$ of $D-S$, there exists
a strongly connected component $N$ of $D[S]$ such that there exists an arc from
$M$ to $N$; and \item[(ii)] for every strongly connected component $M$ of $D-S$
and every strongly connected component $N$ of $D[S]$, we have $|M|\leq |N|$
whenever there exists an arc from $M$ to $N$. \end{itemize} In the case of
acyclic digraphs a set $X$ of vertices is a safe set precisely when $X$ is an
{\it in-dominating set}, that is, every vertex not in $X$ has at least one arc
to $X$. We prove that, even for acyclic digraphs which are traceable (have a
hamiltonian path) it is NP-hard to find a minimum cardinality in-dominating
set. Then we show that the problem is also NP-hard for tournaments and give,
for every positive constant $c$, a polynomial algorithm for finding a minimum
cardinality safe set in a tournament on $n$ vertices in which no strong
component has size more than $c\log{}(n)$. Under the so called Exponential Time
Hypothesis (ETH) this is close to best possible in the following sense: If ETH
holds, then, for every $\epsilon&gt;0$ there is no polynomial time algorithm for
finding a minimum cardinality safe set for the class of tournaments in which
the largest strong component has size at most $\log^{1+\epsilon}(n)$.
</p>
<p>We also discuss bounds on the cardinality of safe sets in tournaments.
</p></div>
    </summary>
    <updated>2019-08-20T23:24:11Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06657</id>
    <link href="http://arxiv.org/abs/1908.06657" rel="alternate" type="text/html"/>
    <title>Quantum Expectation-Maximization for Gaussian Mixture Models</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kerenidis:Iordanis.html">Iordanis Kerenidis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Luongo:Alessandro.html">Alessandro Luongo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Prakash:Anupam.html">Anupam Prakash</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06657">PDF</a><br/><b>Abstract: </b>The Expectation-Maximization (EM) algorithm is a fundamental tool in
unsupervised machine learning. It is often used as an efficient way to solve
Maximum Likelihood (ML) estimation problems, especially for models with latent
variables. It is also the algorithm of choice to fit mixture models: generative
models that represent unlabelled points originating from $k$ different
processes, as samples from $k$ multivariate distributions. In this work we
define and use a quantum version of EM to fit a Gaussian Mixture Model. Given
quantum access to a dataset of $n$ vectors of dimension $d$, our algorithm has
convergence and precision guarantees similar to the classical algorithm, but
the runtime is only polylogarithmic in the number of elements in the training
set, and is polynomial in other parameters - as the dimension of the feature
space, and the number of components in the mixture. We generalize further the
algorithm in two directions. First, we show how to fit any mixture model of
probability distributions in the exponential family. Then, we show how to use
this algorithm to compute the Maximum a Posteriori (MAP) estimate of a mixture
model: the Bayesian approach to likelihood estimation problems. We discuss the
performance of the algorithm on datasets that are expected to be classified
successfully by those algorithms, arguing that on those cases we can give
strong guarantees on the runtime.
</p></div>
    </summary>
    <updated>2019-08-20T23:37:17Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.06649</id>
    <link href="http://arxiv.org/abs/1908.06649" rel="alternate" type="text/html"/>
    <title>A Computational Model for Tensor Core Units</title>
    <feedworld_mtime>1566259200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Silvestri:Francesco.html">Francesco Silvestri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vella:Flavio.html">Flavio Vella</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.06649">PDF</a><br/><b>Abstract: </b>To respond to the need of efficient training and inference of deep neural
networks, a pletora of domain-specific hardware architectures have been
introduced, such as Google Tensor Processing Units and NVIDIA Tensor Cores. A
common feature of these architectures is a hardware circuit for efficiently
computing a dense matrix multiplication of a given small size. In order to
broad the class of algorithms that exploit these systems, we propose a
computational model, named TCU model, that captures the ability to natively
multiply small matrices. We then use the TCU model for designing fast
algorithms for linear algebra problems, including dense and sparse matrix
multiplication, FFT, integer multiplication, and polynomial evaluation. We
finally highlight a relation between the TCU model and the external memory
model.
</p></div>
    </summary>
    <updated>2019-08-20T23:31:21Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-20T01:30:00Z</updated>
    </source>
  </entry>
</feed>
