<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-02-17T07:21:55Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.06083</id>
    <link href="http://arxiv.org/abs/2002.06083" rel="alternate" type="text/html"/>
    <title>Deciding the existence of quasi weak near unanimity terms in finite algebras</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kazda:Alexandr.html">Alexandr Kazda</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.06083">PDF</a><br/><b>Abstract: </b>We show that for a fixed positive integer k one can efficiently decide if a
finite algebra A admits a k-ary weak near unanimity operation by looking at the
local behavior of the terms of A. We also observe that the problem of deciding
if a given finite algebra has a quasi Taylor operation is solvable in
polynomial time by looking, essentially, for local quasi Siggers operations.
</p></div>
    </summary>
    <updated>2020-02-17T02:21:40Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.06078</id>
    <link href="http://arxiv.org/abs/2002.06078" rel="alternate" type="text/html"/>
    <title>On the complexity of finding large odd induced subgraphs and odd colorings</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Belmonte:R=eacute=my.html">Rémy Belmonte</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sau:Ignasi.html">Ignasi Sau</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.06078">PDF</a><br/><b>Abstract: </b>We study the complexity of the problems of finding, given a graph $G$, a
largest induced subgraph of $G$ with all degrees odd (called an odd subgraph),
and the smallest number of odd subgraphs that partition $V(G)$. We call these
parameters ${\sf mos}(G)$ and $\chi_{{\sf odd}}(G)$, respectively. We prove
that deciding whether $\chi_{{\sf odd}}(G) \leq q$ is polynomial-time solvable
if $q \leq 2$, and NP-complete otherwise. We provide algorithms in time
$2^{O({\sf rw})} \cdot n^{O(1)}$ and $2^{O(q \cdot {\sf rw})} \cdot n^{O(1)}$
to compute ${\sf mos}(G)$ and to decide whether $\chi_{{\sf odd}}(G) \leq q$ on
$n$-vertex graphs of rank-width at most ${\sf rw}$, respectively, and we prove
that the dependency on rank-width is asymptotically optimal under the ETH.
Finally, we give some tight bounds for these parameters on restricted graph
classes or in relation to other parameters.
</p></div>
    </summary>
    <updated>2020-02-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.06037</id>
    <link href="http://arxiv.org/abs/2002.06037" rel="alternate" type="text/html"/>
    <title>A Simple 1-1/e Approximation for Oblivious Bipartite Matching</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tang:Zhihao_Gavin.html">Zhihao Gavin Tang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wu:Xiaowei.html">Xiaowei Wu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Yuhao.html">Yuhao Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.06037">PDF</a><br/><b>Abstract: </b>We study the oblivious matching problem, which aims at finding a maximum
matching on a graph with unknown edge set. Any algorithm for the problem
specifies an ordering of the vertex pairs. The matching is then produced by
probing the pairs following the ordering, and including a pair if both of them
are unmatched and there exists an edge between them. The unweighted (Chan et
al. (SICOMP 2018)) and the vertex-weighted (Chan et al. (TALG 2018)) versions
of the problem are well studied.
</p>
<p>In this paper, we consider the edge-weighted oblivious matching problem on
bipartite graphs, which generalizes the stochastic bipartite matching problem.
Very recently, Gamlath et al. (SODA 2019) studied the stochastic bipartite
matching problem, and proposed an (1-1/e)-approximate algorithm. We give a very
simple algorithm adapted from the Ranking algorithm by Karp et al. (STOC 1990),
and show that it achieves the same (1-1/e) approximation ratio for the
oblivious matching problem on bipartite graph.
</p></div>
    </summary>
    <updated>2020-02-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.06005</id>
    <link href="http://arxiv.org/abs/2002.06005" rel="alternate" type="text/html"/>
    <title>A Breezing Proof of the KMW Bound</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Corinna Coupette, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lenzen:Christoph.html">Christoph Lenzen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.06005">PDF</a><br/><b>Abstract: </b>In their seminal paper from 2004, Kuhn, Moscibroda, and Wattenhofer (KMW)
proved a hardness result for several fundamental graph problems in the LOCAL
model: For any (randomized) algorithm, there are input graphs with $n$ nodes
and maximum degree $\Delta$ on which $\Omega(\min\{\sqrt{\log n/\log \log
n},\log \Delta/\log \log \Delta\})$ (expected) communication rounds are
required to obtain polylogarithmic approximations to a minimum vertex cover,
minimum dominating set, or maximum matching, respectively. Via reduction, this
hardness extends to symmetry breaking tasks like finding maximal independent
sets or maximal matchings. Today, more than $15$ years later, there is still no
proof of this result that is easy on the reader. Setting out to change this, in
this work, we provide a fully self-contained and \emph{simple} proof of the KMW
lower bound. The key argument is algorithmic, and it relies on an invariant
that can be readily verified from the generation rules of the lower bound
graphs.
</p></div>
    </summary>
    <updated>2020-02-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05910</id>
    <link href="http://arxiv.org/abs/2002.05910" rel="alternate" type="text/html"/>
    <title>Kinetic Geodesic Voronoi Diagrams in a Simple Polygon</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Korman:Matias.html">Matias Korman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Renssen:Andr=eacute=_van.html">André van Renssen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Roeloffzen:Marcel.html">Marcel Roeloffzen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Staals:Frank.html">Frank Staals</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05910">PDF</a><br/><b>Abstract: </b>We study the geodesic Voronoi diagram of a set $S$ of $n$ linearly moving
sites inside a static simple polygon $P$ with $m$ vertices. We identify all
events where the structure of the Voronoi diagram changes, bound the number of
such events, and then develop a kinetic data structure (KDS) that maintains the
geodesic Voronoi diagram as the sites move. To this end, we first analyze how
often a single bisector, defined by two sites, or a single Voronoi center,
defined by three sites, can change. For both these structures we prove that the
number of such changes is at most $O(m^3)$, and that this is tight in the worst
case. Moreover, we develop compact, responsive, local, and efficient kinetic
data structures for both structures. Our data structures use linear space and
process a worst-case optimal number of events. Our bisector KDS handles each
event in $O(\log m)$ time, and our Voronoi center handles each event in
$O(\log^2 m)$ time. Both structures can be extended to efficiently support
updating the movement of the sites as well. Using these data structures as
building blocks we obtain a compact KDS for maintaining the full geodesic
Voronoi diagram.
</p></div>
    </summary>
    <updated>2020-02-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05854</id>
    <link href="http://arxiv.org/abs/2002.05854" rel="alternate" type="text/html"/>
    <title>On the Edge Crossings of the Greedy Spanner</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eppstein:David.html">David Eppstein</a>, Hadi Khodabandeh <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05854">PDF</a><br/><b>Abstract: </b>$t$-spanners are used to approximate the pairwise distances between a set of
points in a metric space. They have only a few edges compared to the total
number of pairs and they provide a $t$-approximation on the distance of any two
arbitrary points. There are many ways to construct such graphs and one of the
most efficient ones, in terms of weight and the number of edges of the
resulting graph, is the greedy spanner. In this paper, we study the edge
crossings of the greedy spanner for points in the Euclidean plane. We prove a
constant upper bound for the number of intersections with larger edges that
only depends on the stretch factor of the spanner, $t$, and we show there can
be more than a bounded number of intersections with smaller edges. Our results
imply that greedy spanners for points in the plane have separators of size
$\mathcal{O}(\sqrt n)$, that their planarizations have linear size, and that a
separator hierarchy for these graphs can be constructed from their
planarizations in linear time.
</p></div>
    </summary>
    <updated>2020-02-17T02:48:36Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05808</id>
    <link href="http://arxiv.org/abs/2002.05808" rel="alternate" type="text/html"/>
    <title>Online Algorithms for Multi-shop Ski Rental with Machine Learned Predictions</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Shufan.html">Shufan Wang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Li:Jian.html">Jian Li</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Shiqiang.html">Shiqiang Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05808">PDF</a><br/><b>Abstract: </b>We study the problem of augmenting online algorithms with machine learned
(ML) predictions. In particular, we consider the \emph{multi-shop ski rental}
(MSSR) problem, which is a generalization of the classical ski rental problem.
In MSSR, each shop has different prices for buying and renting a pair of skis,
and a skier has to make decisions on when and where to buy. We obtain both
deterministic and randomized online algorithms with provably improved
performance when either a single or multiple ML predictions are used to make
decisions. These online algorithms have no knowledge about the quality or the
prediction error type of the ML predictions. The performance of these online
algorithms are robust to the poor performance of the predictors, but improve
with better predictions. We numerically evaluate the performance of our
proposed online algorithms in practice.
</p></div>
    </summary>
    <updated>2020-02-17T02:22:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05580</id>
    <link href="http://arxiv.org/abs/2002.05580" rel="alternate" type="text/html"/>
    <title>Drawing Graphs as Spanners</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aichholzer:Oswin.html">Oswin Aichholzer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Borrazzo:Manuel.html">Manuel Borrazzo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bose:Prosenjit.html">Prosenjit Bose</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cardinal:Jean.html">Jean Cardinal</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Frati:Fabrizio.html">Fabrizio Frati</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Morin:Pat.html">Pat Morin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vogtenhuber:Birgit.html">Birgit Vogtenhuber</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05580">PDF</a><br/><b>Abstract: </b>We study the problem of embedding graphs in the plane as good geometric
spanners. That is, for a graph $G$, the goal is to construct a straight-line
drawing $\Gamma$ of $G$ in the plane such that, for any two vertices $u$ and
$v$ of $G$, the ratio between the minimum length of any path from $u$ to $v$
and the Euclidean distance between $u$ and $v$ is small. The maximum such
ratio, over all pairs of vertices of $G$, is the spanning ratio of $\Gamma$.
</p>
<p>First, we show that deciding whether a graph admits a straight-line drawing
with spanning ratio $1$, a proper straight-line drawing with spanning ratio
$1$, and a planar straight-line drawing with spanning ratio $1$ are
NP-complete, $\exists \mathbb R$-complete, and linear-time solvable problems,
respectively, where a drawing is proper if no two vertices overlap and no edge
overlaps a vertex.
</p>
<p>Second, we show that moving from spanning ratio $1$ to spanning ratio
$1+\epsilon$ allows us to draw every graph. Namely, we prove that, for every
$\epsilon&gt;0$, every (planar) graph admits a proper (resp. planar) straight-line
drawing with spanning ratio smaller than $1+\epsilon$.
</p>
<p>Third, our drawings with spanning ratio smaller than $1+\epsilon$ have large
edge-length ratio, that is, the ratio between the length of the longest edge
and the length of the shortest edge is exponential. We show that this is
sometimes unavoidable. More generally, we identify having bounded toughness as
the criterion that distinguishes graphs that admit straight-line drawings with
constant spanning ratio and polynomial edge-length ratio from graphs that
require exponential edge-length ratio in any straight-line drawing with
constant spanning ratio.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05252</id>
    <link href="http://arxiv.org/abs/2002.05252" rel="alternate" type="text/html"/>
    <title>Computing Shapley Values for Mean Width in 3-D</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tan:Shuhao.html">Shuhao Tan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05252">PDF</a><br/><b>Abstract: </b>The Shapley value is a common tool in game theory to evaluate the importance
of a player in a cooperative setting. In a geometric context, it provides a way
to measure the contribution of a geometric object in a set towards some
function on the set. Recently, Cabello and Chan (SoCG 2019) presented
algorithms for computing Shapley values for a number of functions for point
sets in the plane. More formally, a coalition game consists of a set of players
$N$ and a characteristic function $v: 2^N \to \mathbb{R}$ with $v(\emptyset) =
0$. Let $\pi$ be a uniformly random permutation of $N$, and $P_N(\pi, i)$ be
the set of players in $N$ that appear before player $i$ in the permutation
$\pi$. The Shapley value of the game is defined to be $\phi(i) =
\mathbb{E}_\pi[v(P_N(\pi, i) \cup \{i\}) - v(P_N(\pi, i))]$. More intuitively,
the Shapley value represents the impact of player $i$'s appearance over all
insertion orders. We present an algorithm to compute Shapley values in 3-D,
where we treat points as players and use the mean width of the convex hull as
the characteristic function. Our algorithm runs in $O(n^3\log^2{n})$ time and
$O(n)$ space. Our approach is based on a new data structure for a variant of
the dynamic convolution problem $(u, v, p)$, where we want to answer $u\cdot v$
dynamically. Our data structure supports updating $u$ at position $p$,
incrementing and decrementing $p$ and rotating $v$ by $1$. We present a data
structure that supports $n$ operations in $O(n\log^2{n})$ time and $O(n)$
space. Moreover, the same approach can be used to compute the Shapley values
for the mean volume of the convex hull projection onto a uniformly random $(d -
2)$-subspace in $O(n^d\log^2{n})$ time and $O(n)$ space for a point set in
$d$-dimensional space ($d \geq 3$).
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05158</id>
    <link href="http://arxiv.org/abs/2002.05158" rel="alternate" type="text/html"/>
    <title>Graph Similarity Using PageRank and Persistent Homology</title>
    <feedworld_mtime>1581897600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hajij:Mustafa.html">Mustafa Hajij</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Munch:Elizabeth.html">Elizabeth Munch</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rosen:Paul.html">Paul Rosen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05158">PDF</a><br/><b>Abstract: </b>The PageRank of a graph is a scalar function defined on the node set of the
graph which encodes nodes centrality information of the graph. In this work, we
utilize the PageRank function on the lower-star filtration of the graph as
input to persistent homology to study the problem of graph similarity. By
representing each graph as a persistence diagram, we can then compare outputs
using the bottleneck distance. We show the effectiveness of our method by
utilizing it on two shape mesh datasets.
</p></div>
    </summary>
    <updated>2020-02-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16691</id>
    <link href="https://rjlipton.wordpress.com/2020/02/16/a-beetle-math-puzzle/" rel="alternate" type="text/html"/>
    <title>A Beetle Math Puzzle</title>
    <summary>Lessons from a puzzle about prime numbers [ Wikipedia ] Doron Zeilberger is a famous combinatorial mathematician based at Rutgers. He is noted for actively using computers in research. His computers even get co-authorship credit under the name “Shalosh B. Ekhad,” which is Hebrew for 3B1—a computer that came from building 3, corridor B, room […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Lessons from a puzzle about prime numbers</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2020/02/16/a-beetle-math-puzzle/unknown-134/" rel="attachment wp-att-16694"><img alt="" class="alignright size-full wp-image-16694" src="https://rjlipton.files.wordpress.com/2020/02/unknown-1.jpeg?w=600"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">[ Wikipedia ]</font></td>
</tr>
</tbody>
</table>
<p>
Doron Zeilberger is a famous combinatorial mathematician based at Rutgers. He is noted for actively using computers in research. His computers even get co-authorship credit under the name “Shalosh B. Ekhad,” which is Hebrew for 3B1—a computer that came from building 3, corridor B, room 1 of AT&amp;T Bell Labs.</p>
<p>
Today I thought we would talk about a recent joint <a href="https://arxiv.org/abs/1801.05097">paper</a> of Zeilberger on Covering Systems.</p>
<p>
This paper has one co-author who is human, Anthony Zaleski, also of Rutgers. It starts with a puzzle about beetles on a circular track. The puzzle does not need a computer to solve—though a computerized visualization would make it more enjoyable. It makes several interesting points, points that are distinctly human, and I hope you might enjoy it. </p>
<p>
</p><p/><h2> The Puzzle </h2><p/>
<p/><p>
They ascribe the <a href="https://www.pourlascience.fr/sd/mathematiques/cinq-enigmes-mathematiques-pour-la-rentree-9796.php">puzzle</a> to Jean-Paul Delahaye, who modified Peter Winkler’s writeup of a folk puzzle that Winkler stated about ants. </p>
<blockquote><p><b> </b> <em> One places nine beetles on a circular track, where the nine arc distances, measured in meters, between two consecutive beetles are the first nine prime numbers, <img alt="{2,3,5,7,11,13,17,19,23}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%2C3%2C5%2C7%2C11%2C13%2C17%2C19%2C23%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{2,3,5,7,11,13,17,19,23}"/>. The order is arbitrary, and each number appears exactly once as a distance.</em></p><em>
</em><p><em>
At the starting time, each beetle decides randomly whether she would go, traveling at a speed of 1 meter per minute, clockwise or counter-clockwise. When two beetles bump into each other, they immediately do a “U-turn”, i.e. reverse direction. We assume that the size of the beetles is negligible. At the end of <img alt="{50}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B50%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{50}"/> minutes, after many collisions, one notices the distances between the new positions of the beetles. </em>
</p></blockquote>
<p/><p>
Note that there are two levels of probability: the initial order of the vector of distances and the initial direction of each beetle. Yet after <img alt="{50}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B50%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{50}"/> minutes there is a high probability of the distances being exactly the same: the first nine prime numbers. Is this a miracle? What is the probability?</p>
<p>
</p><p/><h2> The Lessons </h2><p/>
<p/><p>
The point is we have deliberately stated the puzzle to make it harder. The way we stated it is misleading and the following lessons are hints to help solve the puzzle.</p>
<ul>
<li>
That the arc lengths are prime numbers is unimportant. The puzzle works whether or not the distances between the beetles are prime numbers. <p/>
</li><li>
The probability is <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> that the beetles are at the given positions. There is no chance that they will not arrive at the antipode points. None.
</li></ul>
<p>
</p><p/><h2> The Solution </h2><p/>
<p/><p>
The first observation is that the circular track’s length is 	</p>
<p align="center"><img alt="\displaystyle  2+3+5+7+11+13+17+19+23=100. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++2%2B3%2B5%2B7%2B11%2B13%2B17%2B19%2B23%3D100.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  2+3+5+7+11+13+17+19+23=100. "/></p>
<p><a href="https://rjlipton.wordpress.com/2020/02/16/a-beetle-math-puzzle/antipode/" rel="attachment wp-att-16698"><img alt="" class="aligncenter size-full wp-image-16698" src="https://rjlipton.files.wordpress.com/2020/02/antipode.png?w=600"/></a></p>
<p>The second is that the probability is <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> that the distances are the same after <img alt="{50}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B50%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{50}"/> minutes. Imagine that each beetle carries a flag. Instead of reversing direction when they collide, let the beetles exchange their flags and continue moving as before. Now the flags always are moving in the same direction at the same speed. This means that after <img alt="{50}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B50%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{50}"/> minutes the flags are at the antipode position. But the beetles are located at the same places as flags, and so the distances are the same as before. Note, the beetles are each located at the position of some unique flag, but which flag can change many times.</p>
<p>
The only constraint is that the distance traveled in <img alt="{50}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B50%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{50}"/> minutes divides the length of the circular track. The fact that the distances are primes is never used.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Zaleski and Zeilberger say:</p>
<blockquote><p><b> </b> <em> We point out that very often primes are red herrings. This is definitely the case for covering system, and who knows, perhaps also for the Riemann Hypothesis. </em>
</p></blockquote>
<p/><p>
I assume this is a bit tongue in cheek, but their point is valid. Do we miss solutions to problems when we use information that is not really important? How do we decide which information is key and which is redundant? This why I like this puzzle. </p>
<p/></font></font></div>
    </content>
    <updated>2020-02-16T18:35:51Z</updated>
    <published>2020-02-16T18:35:51Z</published>
    <category term="Ideas"/>
    <category term="People"/>
    <category term="Proofs"/>
    <category term="Results"/>
    <category term="beetle"/>
    <category term="primes"/>
    <category term="puzzle"/>
    <category term="solution"/>
    <category term="trick"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-02-17T07:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-1276607874189152226</id>
    <link href="https://blog.computationalcomplexity.org/feeds/1276607874189152226/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/02/pre-publish-and-perish.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/1276607874189152226" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/1276607874189152226" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/02/pre-publish-and-perish.html" rel="alternate" type="text/html"/>
    <title>Pre-(Publish and Perish)</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><i>Guest post by Evangelos Georgiadis</i><br/>
<div>
<br/></div>
Quite a few posts have recently focused on papers,publications and venues;
"optimal" venues for papers under different objective functions,e.g.
minimizing carbon footprint while maximizing community building, networking
as well as information sharing, see <a href="https://cacm.acm.org/magazines/2020/1/241717-publish-and-perish/fulltext">Moshe Vardi</a>.<br/>
<br/>
Here we would like to take a closer look at one of the key assumptions 
-- the paper.
In order to generate a paper, one needs to come up with a result, something
novel, fresh or interesting to say.
The question that has baffled this author is what represents a conducive
or perhaps even optimal setting for generating papers.
Since papers come in different flavors ranging from "<a href="https://blog.computationalcomplexity.org/2009/11/innovation.html">solid technical papers to risky innovative ones</a>" the 
settings
may vary; but ultimately, what would be interesting to investigate (or
for that matter crowdsource) is whether there is a common denominator
in terms of setting or environment, a necessary but not sufficient 
condition (so to speak).
<br/>
<br/>
Here are some accounts of others which may be helpful as reference points.
<br/>
<br/>
Knuth's papers entitled "<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.455.1434&amp;rep=rep1&amp;type=pdf">Semantics of context free grammar</a>" along with
"The analysis of algorithms" represent two instances that suggest research
institutes might not provide an optimal environment for idea generation.
<br/>
<br/>
As Knuth points out in "<a href="https://www-cs-faculty.stanford.edu/~knuth/cl.html">Selected Papers on Computer Languages</a>" (Chapter 18, p. 431):<br/>
<blockquote class="tr_bq">
Perhaps new ideas emerge most often from hectic, disorganized 
activity,
      when a great many sources of stimulation are present at once -- 
when numerous
     deadlines need to be met, and when other miscellaneous activities 
like child-rearing
     are also mixed into the agenda.</blockquote>
Knuth goes on to say, that it was challenging to do creative work in 
office and that finding
a few hideaways provided some form of solution -- aka sitting under 
'that' oak tree
near Lake Lagunita.
That said, the inspirational setting for getting into the zone for the 
aforementioned two papers
were provided by (Californian) beaches. Hold that observation. Is this 
not something we
have come across somewhere else ?
Fields medalist Stephen Smale in  "<a href="http://math.berkeley.edu/~smale/biblio/chaos.ps">Chaos: Finding a Horseshoe on the Beaches of Rio</a>" suggests that some of his best work happened at his "beach office". 
Whether beaches do provide
for a good setting remains to be shown; perhaps for very innovative 
ideas, oceanic freedom is necessary.
That said, the author recalls (hopefully accurately enough) an account 
by the young  James H Simons,
who attended a conference in Japan in the early days.
Instead of choosing a spacious accommodation (which he was able to 
afford), he restricted himself to the typically confined room type --
not only confined by space, but also pressured by time, young Simons was 
able to generate an interesting result for that conference.
(This probably demonstrates that technical results don't necessarily 
require 'oceanic freedom'.)<br/>
<br/>
Some meaningful probabilistic advice comes from  the fat-tails department,
in "The Black Swan" by Nassim Taleb (on page 209) :
"Go to parties! If you're a scientist, you will chance upon a remark 
that might spark a new research. "
<br/>
<br/>
Murray Gell-Mann provides an interesting collective account in his 
Google Tech Talk entitled "On Getting Creative Ideas."
He <a href="https://youtu.be/3fSB6ut-cT0?t=118">recollects</a> a workshop he attended in 1969 in Aspen that focused on 
the experience
of getting creative ideas, not just among mathematicians and theoretical 
physicists but also poets and
artists. This account seems to 
neglect the actual setting that might
nurture creative thought process, but provides interesting references to 
people such as
  Hermann von Helmholtz, who happened to have thought about this topic 
and partitioned the process
in terms of "saturation, incubation and illumination".
<br/>
<br/>
For those interested in an account that focuses on the Eureka moments of 
exclusively
mathematicians/theoretical physicists see Jacques Hadamard's book "<a href="https://www.amazon.com/Mathematicians-Mind-Jacques-Hadamard/dp/0691029318">The Mathematician's Mind</a>". 
Hadamard
iterated on Helmholtz's 3 stage process and it's worth taking a look at 
what he came up.
<br/>
<br/>
At last, what are good venues or workshops for generating papers ? Or 
let's rephrase that a bit,
what type of atmosphere at venues fosters creativity -- what food for 
thought to provide
participants and how to distribute that food for thought over a given day ?
Ryan R Williams proposed (as practiced by 34th Bellairs Winter Workshop 
on Computational Geometry)
  "... easy problems, informal atmosphere focusing exclusively
       on thinking about problems in a cycle of down-time where
       one meets in two intense sessions and have free time otherwise."
(This type of setting seems to resonate with the 3 stages of 
"saturation, incubation and illumination".)
<br/>
<br/>
That said, most workshops including the Simons workshops don't seem to 
follow such a recipe.
They are more geared towards the follow-up step, namely, communicating 
what people have found,
rather than collaborating with them to tackle open problems.
Perhaps some re-evaluation might be required in how workshops are run.</div>
    </content>
    <updated>2020-02-16T16:02:00Z</updated>
    <published>2020-02-16T16:02:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-02-16T23:25:33Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/012</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/012" rel="alternate" type="text/html"/>
    <title>TR20-012 |  (Semi)Algebraic Proofs over $\{\pm 1\}$ Variables | 

	Dmitry Sokolov</title>
    <summary>One of the major open problems in proof complexity is to prove lower bounds on $AC_0[p]$-Frege proof
systems. As a step toward this goal Impagliazzo, Mouli and Pitassi in a recent paper suggested to prove
lower bounds on the size for Polynomial Calculus over the $\{\pm 1\}$ basis. In this paper we show a
technique for proving such lower bounds and moreover we also give lower bounds on the size for
Sum-of-Squares over the $\{\pm 1\}$ basis.

We show lower bounds on random $\Delta$-CNF formulas and formulas composed with a gadget. As a byproduct,
we establish a separation between Polynomial Calculus and Sum-of-Squares over the $\{\pm 1\}$ basis by
proving a lower bound on the Pigeonhole Principle.</summary>
    <updated>2020-02-16T06:22:49Z</updated>
    <published>2020-02-16T06:22:49Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-17T07:20:29Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/011</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/011" rel="alternate" type="text/html"/>
    <title>TR20-011 |  Super Strong ETH is true for strong PPSZ | 

	Navid Talebanfard, 

	Dominik Scheder</title>
    <summary>We construct $k$-CNFs with $m$ variables on which the strong version of PPSZ $k$-SAT algorithm, which uses bounded width resolution, has success probability at most $2^{-(1 - (1 + \epsilon)2/k)m}$ for every $\epsilon &gt; 0$. Previously such a bound was known only for the weak PPSZ algorithm which exhaustively searches through small subformulas of the CNF to see if any of them forces the value of a given variable, and for strong PPSZ the best known previous upper bound was $2^{-(1 - O(\log(k)/k))m}$ (Pudlák et al., ICALP 2017).</summary>
    <updated>2020-02-16T06:21:24Z</updated>
    <published>2020-02-16T06:21:24Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-17T07:20:29Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05710</id>
    <link href="http://arxiv.org/abs/2002.05710" rel="alternate" type="text/html"/>
    <title>Work-efficient Batch-incremental Minimum Spanning Trees with Applications to the Sliding Window Model</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Anderson:Daniel.html">Daniel Anderson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Blelloch:Guy_E=.html">Guy E. Blelloch</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tangwongsan:Kanat.html">Kanat Tangwongsan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05710">PDF</a><br/><b>Abstract: </b>Algorithms for dynamically maintaining minimum spanning trees (MSTs) have
received much attention in both the parallel and sequential settings. While
previous work has given optimal algorithms for dense graphs, all existing
parallel batch-dynamic algorithms perform polynomial work per update in the
worst case for sparse graphs. In this paper, we present the first
work-efficient parallel batch-dynamic algorithm for incremental MST, which can
insert $\ell$ edges in $O(\ell \log(1+n/\ell))$ work in expectation and
$O(\text{polylog}(n))$ span w.h.p. The key ingredient of our algorithm is an
algorithm for constructing a compressed path tree of an edge-weighted tree,
which is a smaller tree that contains all pairwise heaviest edges between a
given set of marked vertices. Using our batch-incremental MST algorithm, we
demonstrate a range of applications that become efficiently solvable in
parallel in the sliding-window model, such as graph connectivity, approximate
MSTs, testing bipartiteness, $k$-certificates, cycle-freeness, and maintaining
sparsifiers.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05680</id>
    <link href="http://arxiv.org/abs/2002.05680" rel="alternate" type="text/html"/>
    <title>An almost optimal bound on the number of intersections of two simple polygons</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ackerman:Eyal.html">Eyal Ackerman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Keszegh:Bal=aacute=zs.html">Balázs Keszegh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rote:G=uuml=nter.html">Günter Rote</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05680">PDF</a><br/><b>Abstract: </b>What is the maximum number of intersections of the boundaries of a simple
$m$-gon and a simple $n$-gon, assuming general position? This is a basic
question in combinatorial geometry, and the answer is easy if at least one of
$m$ and $n$ is even: If both $m$ and $n$ are even, then every pair of sides may
cross and so the answer is $mn$. If exactly one polygon, say the $n$-gon, has
an odd number of sides, it can intersect each side of the $m$-gon at most $n-1$
times; hence there are at most $mn-m$ intersections. It is not hard to
construct examples that meet these bounds. If both $m$ and $n$ are odd, the
best known construction has $mn-(m+n)+3$ intersections, and it is conjectured
that this is the maximum. However, the best known upper bound is only $mn-(m +
\lceil \frac{n}{6} \rceil)$, for $m \ge n$. We prove a new upper bound of
$mn-(m+n)+C$ for some constant $C$, which is optimal apart from the value of
$C$.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05632</id>
    <link href="http://arxiv.org/abs/2002.05632" rel="alternate" type="text/html"/>
    <title>Learning Halfspaces with Massart Noise Under Structured Distributions</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Diakonikolas:Ilias.html">Ilias Diakonikolas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kontonis:Vasilis.html">Vasilis Kontonis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tzamos:Christos.html">Christos Tzamos</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zarifis:Nikos.html">Nikos Zarifis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05632">PDF</a><br/><b>Abstract: </b>We study the problem of learning halfspaces with Massart noise in the
distribution-specific PAC model. We give the first computationally efficient
algorithm for this problem with respect to a broad family of distributions,
including log-concave distributions. This resolves an open question posed in a
number of prior works. Our approach is extremely simple: We identify a smooth
{\em non-convex} surrogate loss with the property that any approximate
stationary point of this loss defines a halfspace that is close to the target
halfspace. Given this structural result, we can use SGD to solve the underlying
learning problem.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05599</id>
    <link href="http://arxiv.org/abs/2002.05599" rel="alternate" type="text/html"/>
    <title>Engineering Faster Sorters for Small Sets of Items</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bingmann:Timo.html">Timo Bingmann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marianczuk:Jasper.html">Jasper Marianczuk</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sanders:Peter.html">Peter Sanders</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05599">PDF</a><br/><b>Abstract: </b>Sorting a set of items is a task that can be useful by itself or as a
building block for more complex operations. That is why a lot of effort has
been put into finding sorting algorithms that sort large sets as fast as
possible. But the more sophisticated the algorithms become, the less efficient
they are for small sets of items due to large constant factors. We aim to
determine if there is a faster way than insertion sort to sort small sets of
items to provide a more efficient base case sorter. We looked at sorting
networks, at how they can improve the speed of sorting few elements, and how to
implement them in an efficient manner by using conditional moves. Since sorting
networks need to be implemented explicitly for each set size, providing
networks for larger sizes becomes less efficient due to increased code sizes.
To also enable the sorting of slightly larger base cases, we adapted sample
sort to Register Sample Sort, to break down those larger sets into sizes that
can in turn be sorted by sorting networks. From our experiments we found that
when sorting only small sets, the sorting networks outperform insertion sort by
a factor of at least 1.76 for any array size between six and sixteen, and by a
factor of 2.72 on average across all machines and array sizes. When integrating
sorting networks as a base case sorter into Quicksort, we achieved far less
performance improvements, which is probably due to the networks having a larger
code size and cluttering the L1 instruction cache. But for x86 machines with a
larger L1 instruction cache of 64 KiB or more, we obtained speedups of 12.7%
when using sorting networks as a base case sorter in std::sort. In conclusion,
the desired improvement in speed could only be achieved under special
circumstances, but the results clearly show the potential of using conditional
moves in the field of sorting algorithms.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05576</id>
    <link href="http://arxiv.org/abs/2002.05576" rel="alternate" type="text/html"/>
    <title>Fast Convergence for Langevin Diffusion with Matrix Manifold Structure</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moitra:Ankur.html">Ankur Moitra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Risteski:Andrej.html">Andrej Risteski</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05576">PDF</a><br/><b>Abstract: </b>In this paper, we study the problem of sampling from distributions of the
form p(x) \propto e^{-\beta f(x)} for some function f whose values and
gradients we can query. This mode of access to f is natural in the scenarios in
which such problems arise, for instance sampling from posteriors in parametric
Bayesian models. Classical results show that a natural random walk, Langevin
diffusion, mixes rapidly when f is convex. Unfortunately, even in simple
examples, the applications listed above will entail working with functions f
that are nonconvex -- for which sampling from p may in general require an
exponential number of queries.
</p>
<p>In this paper, we study one aspect of nonconvexity relevant for modern
machine learning applications: existence of invariances (symmetries) in the
function f, as a result of which the distribution p will have manifolds of
points with equal probability. We give a recipe for proving mixing time bounds
of Langevin dynamics in order to sample from manifolds of local optima of the
function f in settings where the distribution is well-concentrated around them.
We specialize our arguments to classic matrix factorization-like Bayesian
inference problems where we get noisy measurements A(XX^T), X \in R^{d \times
k} of a low-rank matrix, i.e. f(X) = \|A(XX^T) - b\|^2_2, X \in R^{d \times k},
and \beta the inverse of the variance of the noise. Such functions f are
invariant under orthogonal transformations, and include problems like matrix
factorization, sensing, completion. Beyond sampling, Langevin dynamics is a
popular toy model for studying stochastic gradient descent. Along these lines,
we believe that our work is an important first step towards understanding how
SGD behaves when there is a high degree of symmetry in the space of parameters
the produce the same output.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05538</id>
    <link href="http://arxiv.org/abs/2002.05538" rel="alternate" type="text/html"/>
    <title>Algorithmic Complexity of Isolate Secure Domination in Graphs</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kumar:Jakkepalli_Pavan.html">Jakkepalli Pavan Kumar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Reddy:P=_Venkata_Subba.html">P. Venkata Subba Reddy</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05538">PDF</a><br/><b>Abstract: </b>A dominating set $S$ is an Isolate Dominating Set (IDS) if the induced
subgraph $G[S]$ has at least one isolated vertex. In this paper, we initiate
the study of new domination parameter called, isolate secure domination. An
isolate dominating set $S\subseteq V$ is an isolate secure dominating set
(ISDS), if for each vertex $u \in V \setminus S$, there exists a neighboring
vertex $v$ of $u$ in $S$ such that $(S \setminus \{v\}) \cup \{u\}$ is an IDS
of $G$. The minimum cardinality of an ISDS of $G$ is called as an isolate
secure domination number, and is denoted by $\gamma_{0s}(G)$. Given a graph $
G=(V,E)$ and a positive integer $ k,$ the ISDM problem is to check whether $ G
$ has an isolate secure dominating set of size at most $ k.$ We prove that ISDM
is NP-complete even when restricted to bipartite graphs and split graphs. We
also show that ISDM can be solved in linear time for graphs of bounded
tree-width.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05488</id>
    <link href="http://arxiv.org/abs/2002.05488" rel="alternate" type="text/html"/>
    <title>Geometric Systems of Unbiased Representatives</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Banik:Aritra.html">Aritra Banik</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhattacharya:Bhaswar_B=.html">Bhaswar B. Bhattacharya</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhore:Sujoy.html">Sujoy Bhore</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mart=iacute=nez=Sandoval:Leonardo.html">Leonardo Martínez-Sandoval</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05488">PDF</a><br/><b>Abstract: </b>Let $P$ be a set of points in $\mathbb{R}^d$, $B$ a bicoloring of $P$ and
$\Oo$ a family of geometric objects (that is, intervals, boxes, balls, etc). An
object from $\Oo$ is called balanced with respect to $B$ if it contains the
same number of points from each color of $B$. For a collection $\B$ of
bicolorings of $P$, a geometric system of unbiased representatives (G-SUR) is a
subset $\Oo'\subseteq\Oo$ such that for any bicoloring $B$ of $\B$ there is an
object in $\Oo'$ that is balanced with respect to $B$.
</p>
<p>We study the problem of finding G-SURs. We obtain general bounds on the size
of G-SURs consisting of intervals, size-restricted intervals, axis-parallel
boxes and Euclidean balls. We show that the G-SUR problem is NP-hard even in
the simple case of points on a line and interval ranges. Furthermore, we study
a related problem on determining the size of the largest and smallest balanced
intervals for points on the real line with a random distribution and coloring.
</p>
<p>Our results are a natural extension to a geometric context of the work
initiated by Balachandran et al. on arbitrary systems of unbiased
representatives.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05477</id>
    <link href="http://arxiv.org/abs/2002.05477" rel="alternate" type="text/html"/>
    <title>Approximability of Monotone Submodular Function Maximization under Cardinality and Matroid Constraints in the Streaming Model</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Huang:Chien=Chung.html">Chien-Chung Huang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kakimura:Naonori.html">Naonori Kakimura</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mauras:Simon.html">Simon Mauras</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yoshida:Yuichi.html">Yuichi Yoshida</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05477">PDF</a><br/><b>Abstract: </b>Maximizing a monotone submodular function under various constraints is a
classical and intensively studied problem. However, in the single-pass
streaming model, where the elements arrive one by one and an algorithm can
store only a small fraction of input elements, there is much gap in our
knowledge, even though several approximation algorithms have been proposed in
the literature.
</p>
<p>In this work, we present the first lower bound on the approximation ratios
for cardinality and matroid constraints that beat $1-\frac{1}{e}$ in the
single-pass streaming model. Let $n$ be the number of elements in the stream.
Then, we prove that any (randomized) streaming algorithm for a cardinality
constraint with approximation ratio $\frac{2}{2+\sqrt{2}}+\varepsilon$ requires
$\Omega\left(\frac{n}{K^2}\right)$ space for any $\varepsilon&gt;0$, where $K$ is
the size limit of the output set. We also prove that any (randomized) streaming
algorithm for a (partition) matroid constraint with approximation ratio
$\frac{K}{2K-1}+\varepsilon$ requires $\Omega\left(\frac{n}{K}\right)$ space
for any $\varepsilon&gt;0$, where $K$ is the rank of the given matroid.
</p>
<p>In addition, we give streaming algorithms when we only have a weak oracle
with which we can only evaluate function values on feasible sets. Specifically,
we show weak-oracle streaming algorithms for cardinality and matroid
constraints with approximation ratios $\frac{K}{2K-1}$ and $\frac{1}{2}$,
respectively, whose space complexity is exponential in $K$ but is independent
of $n$. The former one exactly matches the known inapproximability result for a
cardinality constraint in the weak oracle model.
</p>
<p>The latter one almost matches our lower bound of $\frac{K}{2K-1}$ for a
matroid constraint, which almost settles the approximation ratio for a matroid
constraint that can be obtained by a streaming algorithm whose space complexity
is independent of $n$.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05414</id>
    <link href="http://arxiv.org/abs/2002.05414" rel="alternate" type="text/html"/>
    <title>A quasi-polynomial algorithm for well-spaced hyperbolic TSP</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kisfaludi=Bak:S=aacute=ndor.html">Sándor Kisfaludi-Bak</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05414">PDF</a><br/><b>Abstract: </b>We study the traveling salesman problem in the hyperbolic plane of Gaussian
curvature $-1$. Let $\alpha$ denote the minimum distance between any two input
points. Using a new separator theorem and a new rerouting argument, we give an
$n^{O(\log^2 n)\max(1,1/\alpha)}$ algorithm for Hyperbolic TSP. This is
quasi-polynomial time if $\alpha$ is at least some absolute constant, and it
grows to $n^{O(\sqrt{n})}$ as $\alpha$ decreases to $\log^2 n/\sqrt{n}$. (For
even smaller values of $\alpha$, we can use a planarity-based algorithm of
Hwang et al. (1993), which gives a running time of $n^{O(\sqrt{n})}$.)
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05376</id>
    <link href="http://arxiv.org/abs/2002.05376" rel="alternate" type="text/html"/>
    <title>Distributed Graph Realizations</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Augustine:John.html">John Augustine</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Choudhary:Keerti.html">Keerti Choudhary</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cohen:Avi.html">Avi Cohen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Peleg:David.html">David Peleg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sivasubramaniam:Sumathi.html">Sumathi Sivasubramaniam</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sourav:Suman.html">Suman Sourav</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05376">PDF</a><br/><b>Abstract: </b>We study graph realization problems from a distributed perspective and we
study it in the node capacitated clique (NCC) model of distributed computing,
recently introduced for representing peer-to-peer networks. We focus on two
central variants, degree-sequence realization and minimum
threshold-connectivity realization both of which result in overlay network
realizations. Overlay network realizations can be either explicit or implicit.
Explicit realizations require both endpoints of any edge in the realized graph
to be aware of the edge. In implicit realizations, on the other hand, at least
one endpoint of each edge of the realized graph needs to be aware of the edge.
The main realization algorithms we present are the following.
</p>
<p>1. An $\tilde{O}(\min\{\sqrt{m},\Delta\})$ time algorithm for implicit
realization of a degree sequence. Here, $\Delta = \max_v d(v)$ is the maximum
degree and $m = (1/2) \sum_v d(v)$ is the number of edges in the final
realization. An $\tilde{O}(\Delta)$ time algorithm for an explicit realization
of a degree sequence. We first compute an implicit realization and then
transform it into an explicit one in $\tilde{O}(\Delta)$ additional rounds.
</p>
<p>2. An $\tilde{O}(\Delta)$ time algorithm for the threshold connectivity
problem that obtains an explicit solution and an improved $\tilde{O}(1)$
algorithm for implicit realization when all nodes know each other's IDs. These
algorithms are 2-approximations w.r.t. the number of edges.
</p>
<p>We complement our upper bounds with lower bounds to show that the above
algorithms are tight up to factors of $\log n$. Additionally, we provide
algorithms for realizing trees and an $\tilde{O}(1)$ round algorithm for
approximate degree sequence realization.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05321</id>
    <link href="http://arxiv.org/abs/2002.05321" rel="alternate" type="text/html"/>
    <title>Assortment Optimization with Repeated Exposures and Product-dependent Patience Cost</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tang:Shaojie.html">Shaojie Tang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05321">PDF</a><br/><b>Abstract: </b>In this paper, we study the assortment optimization problem faced by many
online retailers such as Amazon. We develop a \emph{cascade multinomial logit
model}, based on the classic multinomial logit model, to capture the consumers'
purchasing behavior across multiple stages. Different from existing studies,
our model allows for repeated exposures of a product, i.e., the same product
can be displayed multiple times across different stages. In addition, each
consumer has a \emph{patience budget} that is sampled from a known distribution
and each product is associated with a \emph{patience cost}, which captures the
cognitive efforts spent on browsing that product. Given an assortment of
products, a consumer sequentially browses them stage by stage. After browsing
all products in one stage, if the utility of a product exceeds the utility of
the outside option, the consumer proceeds to purchase the product and leave the
platform. Otherwise, if the patience cost of all products browsed up to that
point is no larger than her patience budget, she continues to view the next
stage. We propose an approximation solution to this problem.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05297</id>
    <link href="http://arxiv.org/abs/2002.05297" rel="alternate" type="text/html"/>
    <title>Solution manifold and Its Statistical Applications</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Yen=Chi.html">Yen-Chi Chen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05297">PDF</a><br/><b>Abstract: </b>A solution manifold is the collection of points in a $d$-dimensional space
satisfying a system of $s$ equations with $s&lt;d$. Solution manifolds occur in
several statistical problems including hypothesis testing, curved-exponential
families, constrained mixture models, partial identifications, and
nonparametric set estimation. We analyze solution manifolds both theoretically
and algorithmically. In terms of theory, we derive five useful results: the
smoothness theorem, the stability theorem (which implies the consistency of a
plug-in estimator), the convergence of a gradient flow, the local center
manifold theorem and the convergence of the gradient descent algorithm. To
numerically approximate a solution manifold, we propose a Monte Carlo gradient
descent algorithm. In the case of likelihood inference, we design a manifold
constraint maximization procedure to find the maximum likelihood estimator on
the manifold. We also develop a method to approximate a posterior distribution
defined on a solution manifold.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05276</id>
    <link href="http://arxiv.org/abs/2002.05276" rel="alternate" type="text/html"/>
    <title>Improved Classical and Quantum Algorithms for Subset-Sum</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bonnetain:Xavier.html">Xavier Bonnetain</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bricout:R=eacute=mi.html">Rémi Bricout</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schrottenloher:Andr=eacute=.html">André Schrottenloher</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shen:Yixin.html">Yixin Shen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05276">PDF</a><br/><b>Abstract: </b>We present new classical and quantum algorithms for solving random subset-sum
instances. First, we improve over the Becker-Coron-Joux algorithm (EUROCRYPT
2011) from $\tilde{\mathcal{O}}(2^{0.291 n})$ downto
$\tilde{\mathcal{O}}(2^{0.283 n})$, using more general representations with
values in $\{-1,0,1,2\}$.
</p>
<p>Next, we improve the state of the art of quantum algorithms for this problem
in several directions. By combining the Howgrave-Graham-Joux algorithm
(EUROCRYPT 2010) and quantum search, we devise an algorithm with asymptotic
cost $\tilde{\mathcal{O}}(2^{0.236 n})$, lower than the cost of the quantum
walk based on the same classical algorithm proposed by Bernstein, Jeffery,
Lange and Meurer (PQCRYPTO 2013). This algorithm has the advantage of using
\emph{classical} memory with quantum random access, while the previously known
algorithms used the quantum walk framework, and required \emph{quantum} memory
with quantum random access.
</p>
<p>We also propose new quantum walks for subset-sum, performing better than the
previous best time complexity of $\tilde{\mathcal{O}}(2^{0.226 n})$ given by
Helm and May (TQC 2018). We combine our new techniques to reach a time
$\tilde{\mathcal{O}}(2^{0.216 n})$. This time is dependent on a heuristic on
quantum walk updates, formalized by Helm and May, that is also required by the
previous algorithms. We show how to partially overcome this heuristic, and we
obtain an algorithm with quantum time $\tilde{\mathcal{O}}(2^{0.218 n})$
requiring only the standard classical subset-sum heuristics.
</p></div>
    </summary>
    <updated>2020-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.05239</id>
    <link href="http://arxiv.org/abs/2002.05239" rel="alternate" type="text/html"/>
    <title>Complexity Analysis of General and Fractional Hypertree Decompositions</title>
    <feedworld_mtime>1581811200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gottlob:Georg.html">Georg Gottlob</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lanzinger:Matthias.html">Matthias Lanzinger</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pichler:Reinhard.html">Reinhard Pichler</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Razgon:Igor.html">Igor Razgon</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.05239">PDF</a><br/><b>Abstract: </b>Hypertree decompositions (HDs), as well as the more powerful generalized
hypertree decompositions (GHDs), and the yet more general fractional hypertree
decompositions (FHDs) are hypergraph decomposition methods successfully used
for answering conjunctive queries and for solving constraint satisfaction
problems. Every hypergraph $H$ has a width relative to each of these methods:
its hypertree width $hw(H)$, its generalized hypertree width $ghw(H)$, and its
fractional hypertree width $fhw(H)$, respectively. It is known that $hw(H)\leq
k$ can be checked in polynomial time for fixed $k$, while checking $ghw(H)\leq
k$ is NP-complete for $k \geq 3$. The complexity of checking $fhw(H)\leq k$ for
a fixed $k$ has been open for over a decade.
</p>
<p>We settle this open problem by showing that checking $fhw(H)\leq k$ is
NP-complete, even for $k=2$. The same construction allows us to prove also the
NP-completeness of checking $ghw(H)\leq k$ for $k=2$. After that, we identify
meaningful restrictions which make checking for bounded $ghw$ or $fhw$
tractable or allow for an efficient approximation of the $fhw$.
</p></div>
    </summary>
    <updated>2020-02-16T23:20:40Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-14T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/02/15/linkage</id>
    <link href="https://11011110.github.io/blog/2020/02/15/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>University of California to resume Elsevier talks after signing deals elsewhere (, via). We’ve been without access to newly-published Elsevier papers since last year (although old papers are still accessible) but it hasn’t affected me much. I hope the university negotiators continue to stand firm.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p><a href="https://www.timeshighereducation.com/news/california-resume-elsevier-talks-after-signing-deals-elsewhere">University of California to resume Elsevier talks after signing deals elsewhere</a> (<a href="https://mathstodon.xyz/@11011110/103585224859220412"/>, <a href="https://retractionwatch.com/2020/02/01/weekend-reads-a-harvard-prof-in-handcuffs-an-alleged-phd-for-grant-scheme-unethical-reviewer-behavior-outed/">via</a>). We’ve been without access to newly-published Elsevier papers since last year (although old papers are still accessible) but it hasn’t affected me much. I hope the university negotiators continue to stand firm.</p>
  </li>
  <li>
    <p><a href="https://tikzjax-demo.glitch.me/">TikZJax</a> (<a href="https://mathstodon.xyz/@christianp/103282904455005026"/>). Render your TikZ diagrams online in web pages.</p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@gnivasch/103597005916029039">An algorithm whose termination cannot be proven in Peano arithmetic</a> (brief announcement by Gabriel Nivasch of forthcoming work with Jeff Erickson and Junyan Xu). Just try to compute the following recurrence in the obvious way:</p>

    
  </li>
  <li>
    <p><a href="https://hsm.stackexchange.com/q/11401/11029">Did Newton invent convex hulls?</a> (<a href="https://mathstodon.xyz/@11011110/103604981863673018"/>).  I haven’t received any useful answers yet from my post to the HSM stackexchange but maybe someone beyond that site knows something relevant.</p>
  </li>
  <li>
    <p>New arXiv preprint: <a href="https://arxiv.org/abs/2002.01610">Simplifying activity-on-edge graphs</a> (<a href="https://mathstodon.xyz/@11011110/103609363225411795"/>), with Daniel Frishberg and Elham Havvaei. It’s on graphs whose vertices represent project milestones and edges represent either tasks or ordering constraints between milestones. I already wrote <a href="https://11011110.github.io/blog/2019/01/29/simplifying-task-milestone.html">a blog post on simplification rules for these graphs</a>, but now we can prove that these rules produce an optimal equivalent graph in polynomial time.</p>
  </li>
  <li>
    <p>The plum trees (or cherry? I don’t know) have been in bloom outside the building I work in (<a href="https://mathstodon.xyz/@11011110/103615924359836065"/>).</p>

    <p style="text-align: center;"><a href="https://www.ics.uci.edu/~eppstein/pix/dbhfeb/index.html"><img alt="Donald Bren Hall, UC Irvine" src="https://www.ics.uci.edu/~eppstein/pix/dbhfeb/dbhfeb-m.jpg" style="border-style: solid; border-color: black;"/></a></p>
  </li>
  <li>
    <p><a href="https://www.walser-h-m.ch/hans/Schnittpunkte/">Schnittpunkte</a> (<a href="https://mathstodon.xyz/@11011110/103622068585682579"/>). Hans Walser extends his book <em><a href="https://en.wikipedia.org/wiki/99_Points_of_Intersection">99 Points of Intersection</a></em> to over 800 geometric constructions involving points where three or more lines, circles, or other curves all cross each other. The text is in German but that doesn’t matter because there’s so little of it. Most of the content is a figure for each point of intersection, with three smaller figures showing its construction.</p>
  </li>
  <li>
    <p><a href="https://math.stackexchange.com/questions/1819928/triangle-dissection-no-shared-edges">Triangle dissection, no shared edges</a> (<a href="https://mathstodon.xyz/@11011110/103630668576881404"/>, <a href="http://www.mathpuzzle.com/">via</a>). The question is how to divide a triangle into smaller triangles, no two sharing a whole edge, but the solutions shown also have no separating triangles and a straight angle at each interior vertex. Double-counting angles and combining with Euler shows that, with these conditions, . Do all internally-4-connected planar graphs with  work?</p>
  </li>
  <li>
    <p><a href="https://simonhearne.com/2015/find-third-party-assets/">Visualize how much junk from third-party sites you download when you visit your favorite web site</a> (<a href="https://mathstodon.xyz/@11011110/103633369348510849"/>). Mathstodon.xyz: Completely clean. Wikipedia: only a few small bits and pieces from other Wikimedia sites. Some other sites that I visit regularly: lots of junk. Adblockers help, but attention to keeping things slim in site design would help more.</p>
  </li>
  <li>
    <p><a href="https://www.sciencemag.org/news/2020/02/trump-s-2021-budget-drowns-science-agencies-red-ink-again">Big cuts to most US research funding agencies in Trump’s proposed 2021 budget</a> (<a href="https://mathstodon.xyz/@11011110/103637995254385786"/>). And <a href="https://arstechnica.com/science/2020/02/amid-coronavirus-outbreak-trump-proposes-slashing-cdc-budget/">the targets for these big proposed budget cuts also include the Centers for Disease Control and the part of the CDC that handles animal-to-human disease transmission</a> (like the current coronavirus outbreak; <a href="https://www.dailykos.com/stories/2020/2/11/1918500/-As-coronavirus-spreads-Trump-admin-unveils-plans-to-cut-Centers-for-Disease-Control-budget">via</a>). The only not-so-bad news here is that actual federal budgets have to start in the House of Representatives, not the White House. But this is probably a warning of budget battles to come soon.</p>
  </li>
  <li>
    <p><a href="https://socg20.inf.ethz.ch/socg-accepted">The list of accepted papers for this year’s Symposium on Computational Geometry (late June in Zürich) is online</a> (<a href="https://mathstodon.xyz/@11011110/103643151678028921"/>). So far there are only authors and titles (by the date of the conference the full papers will be online open access) but probably for many of them you can search for the title and find more.</p>
  </li>
  <li>
    <p><a href="https://mathoverflow.net/a/350526/440">How to generate all flats of the cycle matroid of a graph</a> (<a href="https://mathstodon.xyz/@11011110/103650422429888248"/>). A flat is a partition of vertices into connected induced subgraphs. If you give edges distinct weights and look at the minimum spanning forests of the flats, you get a nice tree structure on the space of all flats where the parent of a flat removes the heaviest edge from its forest (partitioning one tree and therefore one subgraph into two). This leads to efficient enumeration algorithms using reverse search.</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2001.09496">Jorge Hirsch repudiates the h-index he invented</a> (<a href="https://mathstodon.xyz/@11011110/103653202036330152"/>): “I have now come to believe that it can also fail spectacularly and have severe unintended negative consequences. I can understand how the sorcerer’s apprentice must have felt.” (This is an aside; the actual linked article is about Hirsch’s difficulty in breaching the orthodox consensus on superconductivity.)</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.05414">A quasi-polynomial algorithm for well-spaced hyperbolic TSP</a> (<a href="https://mathstodon.xyz/@11011110/103661644069949220"/>). This new preprint by Sándor Kisfaludi-Bak (accepted to SoCG) caught my attention. TSP is NP-hard for Euclidean points or close-together hyperbolic points. This paper shows that it’s much easier when the points are widely spaced in the hyperbolic plane. The idea is to separate the input by a short line segment that the solution crosses few times and apply dynamic programming.</p>
  </li>
  <li>
    <p><a href="https://puzzling.stackexchange.com/questions/93766/your-task-is-to-create-the-worlds-hardest-irregular-sudoku">The world’s hardest irregular sudoku</a> (<a href="https://mathstodon.xyz/@11011110/103664252334007929"/>). The joke is that the puzzle itself is easy. “Hardest” means only that it has few givens. The meta-puzzle is to construct the puzzle: a 9x9 grid divided into 9 9-ominoes (analogous to the 3x3 blogs of standard sudoku), with as few grid cells as possible specified as givens so that there is a unique solution.</p>
  </li>
</ul></div>
    </content>
    <updated>2020-02-15T22:25:00Z</updated>
    <published>2020-02-15T22:25:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-02-16T06:28:10Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/010</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/010" rel="alternate" type="text/html"/>
    <title>TR20-010 |  Strong Average-Case Circuit Lower Bounds from Non-trivial Derandomization | 

	Lijie Chen, 

	Hanlin Ren</title>
    <summary>We prove that for all constants a, NQP = NTIME[n^{polylog(n)}] cannot be (1/2 + 2^{-log^a n})-approximated by 2^{log^a n}-size ACC^0 of THR circuits (ACC^0 circuits with a bottom layer of THR gates). Previously, it was even open whether E^NP can be (1/2+1/sqrt{n})-approximated by AC^0[2] circuits. As a straightforward application, we obtain an infinitely often (NE cap coNE)_{/1}-computable pseudorandom generator for poly-size ACC^0 circuits with seed length 2^{log^{eps} n}, for all eps &gt; 0.
    
    More generally, we establish a connection showing that, for a typical circuit class C, non-trivial nondeterministic algorithms estimating the acceptance probability of a given S-size C circuit with an additive error 1/S (we call it a CAPP algorithm) imply strong (1/2 + 1/n^omega(1)) average-case lower bounds for nondeterministic time classes against C circuits. Note that the existence of such (deterministic) algorithms is much weaker than the widely believed conjecture PromiseBPP = PromiseP.
    
    We also apply our results to several sub-classes of TC^0 circuits. First, we show that for all k, NP cannot be (1/2 + n^{-k})-approximated by n^k-size Sum of THR circuits (exact R-linear combination of threshold gates), improving the corresponding worst-case result in [Williams, CCC 2018]. Second, we establish strong average-case lower bounds and build (NE cap coNE)_{/1}-computable PRGs for Sum of PTF circuits, for various regimes of degrees. Third, we show that non-trivial CAPP algorithms for MAJ of MAJ indeed already imply worst-case lower bounds for TC^0_3 (MAJ of MAJ of MAJ). Since exponential lower bounds for MAJ of MAJ are already known, this suggests TC^0_3 lower bounds are probably within reach. 
    
    Our new results build on a line of recent works, including [Murray and Williams, STOC 2018], [Chen and Williams, CCC 2019] and [Chen, FOCS 2019]. In particular, it strengthens the corresponding (1/2 + 1/polylog(n))-inapproximability average-case lower bounds in [Chen, FOCS 2019].
    
    The two important technical ingredients are techniques from Cryptography in NC^0 [Applebaum et al., SICOMP 2006], and Probabilistic Checkable Proofs of Proximity with NC^1-computable proofs.</summary>
    <updated>2020-02-12T16:46:17Z</updated>
    <published>2020-02-12T16:46:17Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-17T07:20:29Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://theorydish.blog/?p=1555</id>
    <link href="https://theorydish.blog/2020/02/11/approx-random-2020/" rel="alternate" type="text/html"/>
    <title>APPROX-RANDOM 2020</title>
    <summary>The CFPs for APPROX 2020 and RANDOM 2020 are out. The conference will be held August 17-19, 2020 at the University of Washington in Seattle. Submissions: April 24, 2020.    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The CFPs for <a href="https://approxconference.wordpress.com/approx-2020/">APPROX 2020</a> and <a href="https://randomconference.com/random-2020-home/">RANDOM 2020</a> are out. The conference will be held August 17-19, 2020 at the University of Washington in Seattle. <strong>Submissions:</strong> April 24, 2020.</p>
<p> </p>
<p> </p></div>
    </content>
    <updated>2020-02-12T06:21:12Z</updated>
    <published>2020-02-12T06:21:12Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Omer Reingold</name>
    </author>
    <source>
      <id>https://theorydish.blog</id>
      <logo>https://theorydish.files.wordpress.com/2017/03/cropped-nightdish1.jpg?w=32</logo>
      <link href="https://theorydish.blog/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://theorydish.blog" rel="alternate" type="text/html"/>
      <link href="https://theorydish.blog/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://theorydish.blog/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Stanford's CS Theory Research Blog</subtitle>
      <title>Theory Dish</title>
      <updated>2020-02-17T07:21:36Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16664</id>
    <link href="https://rjlipton.wordpress.com/2020/02/11/using-negative-nodes-to-count/" rel="alternate" type="text/html"/>
    <title>Using Negative Nodes to Count</title>
    <summary>A deeper basis for generalized Tutte-Grothendieck invariants Via Psychology Today article Alexander Grothendieck peppered algebraic geometry with nilpotent elements. He augmented spaces with elements such that for some power , . Despite debates over whether such ephemeral entities could be “natural,” they make many calculations nicer. Today we ask whether some additions to graph theory […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>A deeper basis for generalized Tutte-Grothendieck invariants</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2020/02/11/using-negative-nodes-to-count/grothendieckstructureobject/" rel="attachment wp-att-16674"><img alt="" class="alignright wp-image-16674" height="180" src="https://rjlipton.files.wordpress.com/2020/02/grothendieckstructureobject.png?w=150&amp;h=180" width="150"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Via <i>Psychology Today</i> <a href="https://www.psychologytoday.com/us/articles/201707/the-mad-genius-mystery">article</a></font></td>
</tr>
</tbody>
</table>
<p>
Alexander Grothendieck peppered algebraic geometry with nilpotent elements. He augmented spaces with elements <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> such that for some power <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/>, <img alt="{x^a = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Ea+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x^a = 0}"/>. Despite debates over whether such ephemeral entities could be “natural,” they make many calculations nicer.</p>
<p>
Today we ask whether some additions to graph theory may have similar effect.</p>
<p>
Adding extra elements to avoid special cases is an old idea that happens throughout mathematics. Gerolamo Cardano made perhaps the first mention of <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> in his work on solving cubic equations in 1545, but argument swirled on whether <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> is a true mathematical object. The term “imaginary number” was coined by René Descartes in 1637 to sneer at it, and <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> took over a century more to gain wide acceptance.</p>
<p>
Regarding nilpotents, a commenter in a MathOverflow <a href="https://mathoverflow.net/questions/55244/why-nilpotent-elements-must-be-allowed-in-modern-algebraic-geometry">item</a> nine years ago expressed the motivation in terms analogous to our purpose:</p>
<blockquote><p><b> </b> <em> Grothendieck introduced nilpotents for many reasons … to get correct counting in degenerate situations, it is typically necessary to allow nilpotents; they are also the bedrock of [other] ideas in algebraic geometry. </em>
</p></blockquote>
<p/><p>
His comment went on to describe a situation where nilpotents allow one to <em>reduce</em> the task of checking certain properties to well-behaved cases. he continued:</p>
<blockquote><p><b> </b> <em> This is a powerful method, which … comes up in lots of places, e.g. in establishing basic properties of abelian schemes, by reducing to the abelian variety case. </em>
</p></blockquote>
<p/><p>
Other comments show how nilpotents make counting come out right. An early-2015 <a href="https://www.nature.com/articles/517272a">obituary</a> by the algebraic geometers David Mumford and John Tate gave the motivation of modeling small <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon}"/> under assumptions like <img alt="{\epsilon^2 = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%5E2+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon^2 = 0}"/>, and my own memorial <a href="https://rjlipton.wordpress.com/2014/11/16/alexander-grothendieck-1928-2014/">post</a> gave other aspects of them. We wonder whether something roughly analogous can make a counting tool in combinatorics—one already co-named for Grothendieck—more acute for purposes such as evaluating quantum circuits.</p>
<p>
</p><p/><h2> Duality and Isolated Nodes </h2><p/>
<p/><p>
In our previous <a href="https://rjlipton.wordpress.com/2020/02/01/subliminal-graph-duals/">post</a> we discussed how the 2-polymatroid dual <img alt="{G^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G^*}"/> of a graph <img alt="{G = (V,E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G = (V,E)}"/> is an isomorphism invariant so that <img alt="{(G^{*})^* = G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28G%5E%7B%2A%7D%29%5E%2A+%3D+G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(G^{*})^* = G}"/>. This requires shifting attention to the structure <img alt="{(E,r_G)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28E%2Cr_G%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(E,r_G)}"/> where the <em>rank function</em> <img alt="{r_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_G}"/> is defined for all subsets <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> by </p>
<p align="center"><img alt="\displaystyle  r_G(A) = ||\{u \in V: (\exists v \in V)(u,v) \in A\}||. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++r_G%28A%29+%3D+%7C%7C%5C%7Bu+%5Cin+V%3A+%28%5Cexists+v+%5Cin+V%29%28u%2Cv%29+%5Cin+A%5C%7D%7C%7C.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  r_G(A) = ||\{u \in V: (\exists v \in V)(u,v) \in A\}||. "/></p>
<p>Here <img alt="{v = u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv+%3D+u%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v = u}"/> is allowed so <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> can have loops, and the definition if coherent even if <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> is a multiset—the ambiguity of which of multiple edges is “<img alt="{(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(u,v)}"/>” does not matter. The definition does exclude <em>circles</em>, which touch no vertex but can still belong to <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/>. That is OK because circles contribute <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/> to the rank in all cases. </p>
<p>
There is, however, an asterisk: the structure <img alt="{(E,r_G)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28E%2Cr_G%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(E,r_G)}"/> ignores any isolated nodes <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> may have. Isolated nodes do not contribute anything to any subset of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/>. Thus we really have <img alt="{(G^{*})^* = G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28G%5E%7B%2A%7D%29%5E%2A+%3D+G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(G^{*})^* = G}"/> <em>iff <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> has no isolated nodes</em>. </p>
<p>
Our last post showed examples where deleting an edge in <img alt="{G^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G^*}"/> corresponded to “exploding” it in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. Let us flip that around so that the deletion occurs in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>, the explosion in <img alt="{G^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G^*}"/>. Here is the example of the “lollipop” graph:</p>
<p><a href="https://rjlipton.wordpress.com/2020/02/11/using-negative-nodes-to-count/lollipopnegativeisol/" rel="attachment wp-att-16670"><img alt="" class="aligncenter wp-image-16670" height="153" src="https://rjlipton.files.wordpress.com/2020/02/lollipopnegativeisol.jpg?w=360&amp;h=153" width="360"/></a></p>
<p>
The operations do not quite commute because the deletion of the edge <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> leaves an isolated node, whereas the explosion of <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> in the dual—as it was defined—does not. What should go in place of the ‘(?)’? We contend that the answer is: <em>a negative isolated node</em>. We denote it by <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>, whereas an ordinary isolated node is <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/>.</p>
<p>
All uses of <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/> that we need can come from one extra clause in the definition of explosion given <a href="https://rjlipton.wordpress.com/2020/02/01/subliminal-graph-duals/">there</a> and in the major reference of our <a href="https://rjlipton.wordpress.com/2019/06/17/contraction-and-explosion/">post</a> on explosion last summer:</p>
<blockquote><p><b> </b> <em> Exploding a loop, as opposed to a regular edge, also introduces one <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\ominus}"/>. Exploding a circle leaves two: <img alt="{\ominus~\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7E%5Cominus%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\ominus~\ominus}"/>. </em>
</p></blockquote>
<p>
</p><p/><h2> A Simple Recurrence and Duality </h2><p/>
<p/><p>
At the end of a recent <a href="https://rjlipton.wordpress.com/2020/02/01/subliminal-graph-duals/">post</a> we noted that for the planar dual or other surface dual <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> of a graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>, deleting an edge in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> <em>contracts</em> the corresponding edge of <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/>. This lends mathematical power to the <em>deletion-contraction</em> recurrence by which William Tutte defined his polynomial <img alt="{T_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T_G(x,y)}"/>. We denote deletion by <img alt="{G \setminus e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Csetminus+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \setminus e}"/>, contraction by <img alt="{G/e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%2Fe%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G/e}"/>, and explosion by <img alt="{G \backslash\!\backslash e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \backslash\!\backslash e}"/>.</p>
<p>
What we call “explosion” is the effect on graphs of the notion of <em>contraction</em> that applies to matroids, in particular graphic 2-polymatroids (G2PMs). James Oxley and Geoff Whittle, in their 1993 <a href="http://homepages.mcs.vuw.ac.nz/~whittle/pubs/Tutte_invariants_of_2-polymatroids.pdf">paper</a> which we featured in a previous <a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/">post</a>, define a <b>generalized Tutte-Grothendieck invariant</b> (GTGI) to be any algebraic quantity <img alt="{\phi_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_G}"/> that obeys a recurrence with deletion and matroid contraction (which we call explosion) instead:</p>
<ul>
<li>
If <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> is a disjoint union of <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> and <img alt="{G''}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G''}"/>, then <img alt="{\phi(G) = \phi({G'})\phi({G''})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%28G%29+%3D+%5Cphi%28%7BG%27%7D%29%5Cphi%28%7BG%27%27%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi(G) = \phi({G'})\phi({G''})}"/>; <p/>
</li><li>
For any edge or loop <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>, <a name="recurse"><p/>
<p align="center"><img alt="\displaystyle  \phi(G) = \alpha\phi({G \setminus e}) + \beta\phi({G \backslash\!\backslash e}). \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cphi%28G%29+%3D+%5Calpha%5Cphi%28%7BG+%5Csetminus+e%7D%29+%2B+%5Cbeta%5Cphi%28%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D%29.+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \phi(G) = \alpha\phi({G \setminus e}) + \beta\phi({G \backslash\!\backslash e}). \ \ \ \ \ (1)"/></p>
</a><p><a name="recurse"/>
</p></li></ul>
<p>
Their definition does not specify base cases. All previous papers we’ve found have used one-edge graphs as their base cases. Our first benefit of negative isolated nodes is that we can define a basis for <em>zero</em> edges in a way that reveals even more cleanly that GTGIs <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> are basically polynomials. Define: </p>
<p align="center"><img alt="\displaystyle  \phi({\emptyset}) = 1,\quad \phi(\bullet) = x,\quad \phi({\ominus}) = y. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cphi%28%7B%5Cemptyset%7D%29+%3D+1%2C%5Cquad+%5Cphi%28%5Cbullet%29+%3D+x%2C%5Cquad+%5Cphi%28%7B%5Cominus%7D%29+%3D+y.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \phi({\emptyset}) = 1,\quad \phi(\bullet) = x,\quad \phi({\ominus}) = y. "/></p>
<p>Here <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> and <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/> can be arbitrary objects, not just variables, but the point is that we can always treat them as variables. Thus all of these rules define a polynomial which we call <img alt="{R_{G,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G,\alpha,\beta}(x,y)}"/>. It is not immediately clear that this is well defined—i.e., independent of the order in which edges <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> are chosen.</p>
<p>
Now we look at the one-edge cases, which are the circle <img alt="{\bigcirc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbigcirc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bigcirc}"/>, the loop <img alt="{G_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_1}"/>, and the graph <img alt="{G_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_2}"/> of one regular edge. We obtain: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  R_{\bigcirc,\alpha,\beta}(x,y) &amp;=&amp; \alpha + \beta y^2;\\ R_{G_1,\alpha,\beta}(x,y) &amp;=&amp; \alpha x + \beta y;\\ R_{G_2,\alpha,\beta}(x,y) &amp;=&amp; \alpha x^2 + \beta. \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++R_%7B%5Cbigcirc%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%26%3D%26+%5Calpha+%2B+%5Cbeta+y%5E2%3B%5C%5C+R_%7BG_1%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%26%3D%26+%5Calpha+x+%2B+%5Cbeta+y%3B%5C%5C+R_%7BG_2%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%26%3D%26+%5Calpha+x%5E2+%2B+%5Cbeta.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  R_{\bigcirc,\alpha,\beta}(x,y) &amp;=&amp; \alpha + \beta y^2;\\ R_{G_1,\alpha,\beta}(x,y) &amp;=&amp; \alpha x + \beta y;\\ R_{G_2,\alpha,\beta}(x,y) &amp;=&amp; \alpha x^2 + \beta. \end{array} "/></p>
<p>This is pleasingly symmetric, which bodes well for effective use of duality. Note that switching <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> with <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/> and <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> with <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/> preserves <img alt="{R_{G_1,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG_1%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G_1,\alpha,\beta}(x,y)}"/> but interchanges <img alt="{R_{\bigcirc,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7B%5Cbigcirc%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{\bigcirc,\alpha,\beta}(x,y)}"/> with <img alt="{R_{G_2,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG_2%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G_2,\alpha,\beta}(x,y)}"/>. Recall from the previous <a href="https://rjlipton.wordpress.com/2020/02/01/subliminal-graph-duals/">post</a> that <img alt="{G_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_1}"/> is self-dual while <img alt="{G_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_2}"/> and <img alt="{\bigcirc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbigcirc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bigcirc}"/> are dual to each other. This is no accident:</p>
<blockquote><p><b>Theorem 1</b> <em> For any generalized Tutte-Grothendieck invariant <img alt="{R_{G,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{R_{G,\alpha,\beta}(x,y)}"/> and (graphical) 2-polymatroid <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/>, </em></p><em>
<p align="center"><img alt="\displaystyle  R_{G^*,\alpha,\beta}(x,y) = R_{G,\beta,\alpha}(y,x). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++R_%7BG%5E%2A%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%3D+R_%7BG%2C%5Cbeta%2C%5Calpha%7D%28y%2Cx%29.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  R_{G^*,\alpha,\beta}(x,y) = R_{G,\beta,\alpha}(y,x). "/></p>
</em><p><em/>
</p></blockquote>
<p/><p>
The proof is immediate by the base cases <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> and <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>, the form of the recursion (<a href="https://rjlipton.wordpress.com/feed/#recurse">1</a>), and the duality of deletion and explosion via <img alt="{G \backslash\!\backslash e = (G^* \setminus e)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Cbackslash%5C%21%5Cbackslash+e+%3D+%28G%5E%2A+%5Csetminus+e%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \backslash\!\backslash e = (G^* \setminus e)^*}"/>.</p>
<p>
Abbreviate <img alt="{R_{G,1,1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C1%2C1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G,1,1}}"/> for the case <img alt="{\alpha,\beta = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%2C%5Cbeta+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha,\beta = 1}"/> to just <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/>. We will connect <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/> to the polynomial <img alt="{S_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(x,y)}"/> introduced by Oxley and Whittle as discussed in our <a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/">post</a>. They use the term “recipe theorem” for the general idea that all GTGIs are evaluations of the single <img alt="{\alpha,\beta = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%2C%5Cbeta+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha,\beta = 1}"/> at different points, ascribing it to work by Oxley with Dominic Welsh, who was my own doctoral advisor a few years after Oxley. </p>
<p>
</p><p/><h2> Re-Basing the Recipe Theorem </h2><p/>
<p/><p>
Henceforth let <img alt="{G = (V,E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G = (V,E)}"/> stand for a graph augmented with both circles and negative isolated nodes. The associated G2PM is <img alt="{(E,r)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28E%2Cr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(E,r)}"/> where <img alt="{r = r_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br+%3D+r_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r = r_G}"/> is the rank function as above. Let <img alt="{n_{\ominus}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn_%7B%5Cominus%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n_{\ominus}}"/> stand for the number of negative isolated nodes and <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> for the count of nodes in which each <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/> counts <img alt="{-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{-1}"/>. That is, <img alt="{n = |V| - 2n_{\ominus}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+%7CV%7C+-+2n_%7B%5Cominus%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = |V| - 2n_{\ominus}}"/>. </p>
<blockquote><p><b>Theorem 2 (Recipe Theorem)</b> <em> For all <img alt="{G,\alpha,\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%2C%5Calpha%2C%5Cbeta%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G,\alpha,\beta}"/>, with <img alt="{\rho = \sqrt{\frac{\beta}{\alpha}}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Crho+%3D+%5Csqrt%7B%5Cfrac%7B%5Cbeta%7D%7B%5Calpha%7D%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\rho = \sqrt{\frac{\beta}{\alpha}}}"/>, <a name="recipe"/></em></p><em><a name="recipe">
<p align="center"><img alt="\displaystyle  R_{G,\alpha,\beta}(x,y) = \alpha^{|E|}\rho^n R_G(\frac{x}{\rho}, \rho y). \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++R_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%3D+%5Calpha%5E%7B%7CE%7C%7D%5Crho%5En+R_G%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29.+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  R_{G,\alpha,\beta}(x,y) = \alpha^{|E|}\rho^n R_G(\frac{x}{\rho}, \rho y). \ \ \ \ \ (2)"/></p>
</a></em><p><em><a name="recipe"/> </em>
</p></blockquote>
<p/><p>
<em>Proof:</em>  For the base case of a completely empty graph, we have <img alt="{|E| = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CE%7C+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|E| = 0}"/> and <img alt="{n = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = 0}"/>, so <img alt="{R_{\emptyset,\alpha,\beta}(x,y) = R_{\emptyset}(\frac{x}{\rho}, \rho y) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7B%5Cemptyset%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%3D+R_%7B%5Cemptyset%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{\emptyset,\alpha,\beta}(x,y) = R_{\emptyset}(\frac{x}{\rho}, \rho y) = 1}"/>. For the base case of a single isolated node, <img alt="{|E| = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CE%7C+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|E| = 0}"/> but <img alt="{n = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = 1}"/>, so we get </p>
<p align="center"><img alt="\displaystyle  \rho R_{\bullet}(\frac{x}{\rho}, \rho y) = \rho\frac{x}{\rho} = x, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Crho+R_%7B%5Cbullet%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%3D+%5Crho%5Cfrac%7Bx%7D%7B%5Crho%7D+%3D+x%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \rho R_{\bullet}(\frac{x}{\rho}, \rho y) = \rho\frac{x}{\rho} = x, "/></p>
<p>as required. For <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/> we have <img alt="{n = -1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = -1}"/> so we get </p>
<p align="center"><img alt="\displaystyle  \rho^{-1} R_{\ominus}(\frac{x}{\rho}, \rho y) =\rho^{-1} \rho y = y, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Crho%5E%7B-1%7D+R_%7B%5Cominus%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%3D%5Crho%5E%7B-1%7D+%5Crho+y+%3D+y%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \rho^{-1} R_{\ominus}(\frac{x}{\rho}, \rho y) =\rho^{-1} \rho y = y, "/></p>
<p>again as required of <img alt="{R_{\ominus,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7B%5Cominus%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{\ominus,\alpha,\beta}(x,y)}"/>. If <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> is a disjoint union of <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> and <img alt="{G''}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G''}"/>, multiplicativity goes through because <img alt="{n = n' + n''}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+n%27+%2B+n%27%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = n' + n''}"/> and <img alt="{|E| = |E'| + |E''|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CE%7C+%3D+%7CE%27%7C+%2B+%7CE%27%27%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|E| = |E'| + |E''|}"/> for the respective components. </p>
<p>
Now let <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> be any edge in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. Note that in <img alt="{G' = G \backslash\!\backslash r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27+%3D+G+%5Cbackslash%5C%21%5Cbackslash+r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G' = G \backslash\!\backslash r}"/>, the new <img alt="{n'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n'}"/> equals <img alt="{n-2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n-2}"/> whether <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a regular edge or a loop, the latter owing to introducing one <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>. Supposing by induction that (<a href="https://rjlipton.wordpress.com/feed/#recipe">2</a>) is valid for <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> and for <img alt="{G \setminus e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Csetminus+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \setminus e}"/>, that is all we need in order to calculate: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  R_{G,\alpha,\beta}(x,y) &amp;=&amp; \alpha R_{G \setminus e,\alpha,\beta}(x,y) \;+\; \beta R_{G \backslash\!\backslash e,\alpha,\beta}(x,y)\\ &amp;=&amp; \alpha \alpha^{|E|-1}\rho^n R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; \beta \alpha^{|E|-1}\rho^{n-2} R_{G \backslash\!\backslash e}(\frac{x}{\rho}, \rho y)\\ &amp;=&amp; \alpha^{|E|}\rho^n R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; \rho^2 \alpha^{|E|}\rho^{n-2} R_{G \backslash\!\backslash e}(\frac{x}{\rho}, \rho y)\\ &amp;=&amp; \alpha^{|E|} \rho^n (R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; R_{G\backslash\!\backslash e}(\frac{x}{\rho}, \rho y))\\ &amp;=&amp; \alpha^{|E|} \rho^n R_G(\frac{x}{\rho}, \rho y). \;\Box \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++R_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%26%3D%26+%5Calpha+R_%7BG+%5Csetminus+e%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%5C%3B%2B%5C%3B+%5Cbeta+R_%7BG+%5Cbackslash%5C%21%5Cbackslash+e%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%5C%5C+%26%3D%26+%5Calpha+%5Calpha%5E%7B%7CE%7C-1%7D%5Crho%5En+R_%7BG%5Csetminus+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%5C%3B%2B%5C%3B+%5Cbeta+%5Calpha%5E%7B%7CE%7C-1%7D%5Crho%5E%7Bn-2%7D+R_%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29%5C%5C+%26%3D%26+%5Calpha%5E%7B%7CE%7C%7D%5Crho%5En+R_%7BG%5Csetminus+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%5C%3B%2B%5C%3B+%5Crho%5E2+%5Calpha%5E%7B%7CE%7C%7D%5Crho%5E%7Bn-2%7D+R_%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29%5C%5C+%26%3D%26+%5Calpha%5E%7B%7CE%7C%7D+%5Crho%5En+%28R_%7BG%5Csetminus+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29+%5C%3B%2B%5C%3B+R_%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29%29%5C%5C+%26%3D%26+%5Calpha%5E%7B%7CE%7C%7D+%5Crho%5En+R_G%28%5Cfrac%7Bx%7D%7B%5Crho%7D%2C+%5Crho+y%29.+%5C%3B%5CBox+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  R_{G,\alpha,\beta}(x,y) &amp;=&amp; \alpha R_{G \setminus e,\alpha,\beta}(x,y) \;+\; \beta R_{G \backslash\!\backslash e,\alpha,\beta}(x,y)\\ &amp;=&amp; \alpha \alpha^{|E|-1}\rho^n R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; \beta \alpha^{|E|-1}\rho^{n-2} R_{G \backslash\!\backslash e}(\frac{x}{\rho}, \rho y)\\ &amp;=&amp; \alpha^{|E|}\rho^n R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; \rho^2 \alpha^{|E|}\rho^{n-2} R_{G \backslash\!\backslash e}(\frac{x}{\rho}, \rho y)\\ &amp;=&amp; \alpha^{|E|} \rho^n (R_{G\setminus e}(\frac{x}{\rho}, \rho y) \;+\; R_{G\backslash\!\backslash e}(\frac{x}{\rho}, \rho y))\\ &amp;=&amp; \alpha^{|E|} \rho^n R_G(\frac{x}{\rho}, \rho y). \;\Box \end{array} "/></p>
<p>
</p><p/><h2> Representation Theorem </h2><p/>
<p/><p>
The analogous recipe theorem in Oxley and Whittle’s paper bases everything on their <em>rank-generating function</em> for an arbitrary 2-polymatroid <img alt="{(E,f)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28E%2Cf%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(E,f)}"/>: </p>
<p align="center"><img alt="\displaystyle  S_E(x,y) = \sum_{A \subseteq E}x^{f(E) - f(A)} y ^{2|A| - f(A)}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S_E%28x%2Cy%29+%3D+%5Csum_%7BA+%5Csubseteq+E%7Dx%5E%7Bf%28E%29+-+f%28A%29%7D+y+%5E%7B2%7CA%7C+-+f%28A%29%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S_E(x,y) = \sum_{A \subseteq E}x^{f(E) - f(A)} y ^{2|A| - f(A)}. "/></p>
<p>Although isolated nodes are immaterial for <i>graphical</i> 2-polymatroids, we augment them to include <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> and <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>. We replace <img alt="{f(E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E)}"/> by the signed node count <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> and use its negative portion <img alt="{n_{\ominus}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn_%7B%5Cominus%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n_{\ominus}}"/> separately. By characterizing <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/>, the recipe theorem extends this representation even further:</p>
<blockquote><p><b>Theorem 3 (Representation Theorem)</b> <em><a name="representation"/> For any G2PM <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> with rank function <img alt="{r = r_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br+%3D+r_G%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{r = r_G}"/>, <a name="rgf"/></em></p><em><a name="rgf">
<p align="center"><img alt="\displaystyle  R_G(x,y) = (xy)^{n_{\ominus}} \sum_{A \subseteq E}x^{n - r(A)} y ^{2|A| - r(A)}. \ \ \ \ \ (3)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++R_G%28x%2Cy%29+%3D+%28xy%29%5E%7Bn_%7B%5Cominus%7D%7D+%5Csum_%7BA+%5Csubseteq+E%7Dx%5E%7Bn+-+r%28A%29%7D+y+%5E%7B2%7CA%7C+-+r%28A%29%7D.+%5C+%5C+%5C+%5C+%5C+%283%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  R_G(x,y) = (xy)^{n_{\ominus}} \sum_{A \subseteq E}x^{n - r(A)} y ^{2|A| - r(A)}. \ \ \ \ \ (3)"/></p>
</a></em><p><em><a name="rgf"/> </em>
</p></blockquote>
<p/><p>
This says that <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/> is just an extension of <img alt="{S_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G}"/> from G2PMs to our augmented class of graphs. We give a fresh proof of the theorem.</p>
<p>
<em>Proof:</em>  For the completely empty graph, there is just the term <img alt="{A = \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = \emptyset}"/> and all exponents are zero, so the value is <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> as required. For <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/>, we have the term for <img alt="{A = \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = \emptyset}"/> with <img alt="{n = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = 1}"/> (and <img alt="{n_{\ominus} = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn_%7B%5Cominus%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n_{\ominus} = 0}"/>), which leaves <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>. For <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>, we have <img alt="{n = -1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = -1}"/> and also <img alt="{n_{\ominus} = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn_%7B%5Cominus%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n_{\ominus} = 1}"/>. The result is <img alt="{x^{-1}xy = y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5E%7B-1%7Dxy+%3D+y%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x^{-1}xy = y}"/>, again as required. </p>
<p>
Because this is proving confluence, the only case of disjoint graphs we need to consider is adding one <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> or <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>. The above shows that the effect is to multiply by <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, or respectively, by <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/>. To save the case of recursing on <img alt="{e = \bigcirc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be+%3D+%5Cbigcirc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e = \bigcirc}"/> below, we include that here: <img alt="{G \setminus e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Csetminus+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \setminus e}"/> is just <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> without adding the circle, whereas <img alt="{G \backslash\!\backslash e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \backslash\!\backslash e}"/> adds two <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>, so the net effect is multiplying by <img alt="{(1 + y^2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281+%2B+y%5E2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(1 + y^2)}"/>, again as required.</p>
<p>
This also lets us suppose that <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> has no isolated nodes, so <img alt="{n = r(E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+r%28E%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = r(E)}"/> after all, and we may let <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> be any member of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/>. Again write <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> for <img alt="{G\backslash\!\backslash e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G\backslash\!\backslash e}"/>; note that both <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> and <img alt="{G \setminus e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Csetminus+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G \setminus e}"/> may have <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> and/or <img alt="{\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ominus}"/>. Consider subsets <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> that do not contain <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/>. Then <img alt="{r_{G \setminus e}(B) = r_G(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_%7BG+%5Csetminus+e%7D%28B%29+%3D+r_G%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_{G \setminus e}(B) = r_G(B)}"/> Therefore when we begin the induction: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  R_G(x,y) &amp;=&amp; R_{G \setminus e}(x,y) + R_{G'}(x,y)\\ &amp;=&amp; \sum_{B \subseteq E \setminus \{e\}}x^{n - r(B)} y ^{2|B| - r(B)} + R_{G'}(x,y), \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++R_G%28x%2Cy%29+%26%3D%26+R_%7BG+%5Csetminus+e%7D%28x%2Cy%29+%2B+R_%7BG%27%7D%28x%2Cy%29%5C%5C+%26%3D%26+%5Csum_%7BB+%5Csubseteq+E+%5Csetminus+%5C%7Be%5C%7D%7Dx%5E%7Bn+-+r%28B%29%7D+y+%5E%7B2%7CB%7C+-+r%28B%29%7D+%2B+R_%7BG%27%7D%28x%2Cy%29%2C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  R_G(x,y) &amp;=&amp; R_{G \setminus e}(x,y) + R_{G'}(x,y)\\ &amp;=&amp; \sum_{B \subseteq E \setminus \{e\}}x^{n - r(B)} y ^{2|B| - r(B)} + R_{G'}(x,y), \end{array} "/></p>
<p>the first term already gives us the part of the sum in (<a href="https://rjlipton.wordpress.com/feed/#rgf">3</a>) that is over <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> without <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/>. So we need only show that <a name="e1"/></p><a name="e1">
<p align="center"><img alt="\displaystyle  \sum_{B \subseteq E \setminus \{e\}}x^{n - r(B \cup \{e\})} y ^{2|B|+ 2 - r(B \cup \{e\})} = R_{G'}(x,y). \ \ \ \ \ (4)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csum_%7BB+%5Csubseteq+E+%5Csetminus+%5C%7Be%5C%7D%7Dx%5E%7Bn+-+r%28B+%5Ccup+%5C%7Be%5C%7D%29%7D+y+%5E%7B2%7CB%7C%2B+2+-+r%28B+%5Ccup+%5C%7Be%5C%7D%29%7D+%3D+R_%7BG%27%7D%28x%2Cy%29.+%5C+%5C+%5C+%5C+%5C+%284%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sum_{B \subseteq E \setminus \{e\}}x^{n - r(B \cup \{e\})} y ^{2|B|+ 2 - r(B \cup \{e\})} = R_{G'}(x,y). \ \ \ \ \ (4)"/></p>
</a><p><a name="e1"/> Note that the edge set <img alt="{E'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E'}"/> of <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> can be identified with <img alt="{E \setminus \{e\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE+%5Csetminus+%5C%7Be%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E \setminus \{e\}}"/>, even though some edges may become loops or circles. If <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a loop then <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> still has <img alt="{n' = n - 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%27+%3D+n+-+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n' = n - 2}"/> but <img alt="{n_{\ominus} = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn_%7B%5Cominus%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n_{\ominus} = 1}"/>. Thus we have by induction: <a name="e2"/></p><a name="e2">
<p align="center"><img alt="\displaystyle \begin{array}{rcl} R_{G'}(x,y) &amp;=&amp; (xy)^{n_{\ominus}}\sum_{B \subseteq E \setminus \{e\}}x^{n' - r'(B)} y ^{2|B| - r'(B)}\\ &amp;=&amp; (xy)^{n_{\ominus}}\sum_{B \subseteq E \setminus \{e\}}x^{n - 2 - r'(B)} y ^{2|B| - r'(B)}. \end{array}  \ \ \ \ \ (5)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cbegin%7Barray%7D%7Brcl%7D+R_%7BG%27%7D%28x%2Cy%29+%26%3D%26+%28xy%29%5E%7Bn_%7B%5Cominus%7D%7D%5Csum_%7BB+%5Csubseteq+E+%5Csetminus+%5C%7Be%5C%7D%7Dx%5E%7Bn%27+-+r%27%28B%29%7D+y+%5E%7B2%7CB%7C+-+r%27%28B%29%7D%5C%5C+%26%3D%26+%28xy%29%5E%7Bn_%7B%5Cominus%7D%7D%5Csum_%7BB+%5Csubseteq+E+%5Csetminus+%5C%7Be%5C%7D%7Dx%5E%7Bn+-+2+-+r%27%28B%29%7D+y+%5E%7B2%7CB%7C+-+r%27%28B%29%7D.+%5Cend%7Barray%7D++%5C+%5C+%5C+%5C+%5C+%285%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \begin{array}{rcl} R_{G'}(x,y) &amp;=&amp; (xy)^{n_{\ominus}}\sum_{B \subseteq E \setminus \{e\}}x^{n' - r'(B)} y ^{2|B| - r'(B)}\\ &amp;=&amp; (xy)^{n_{\ominus}}\sum_{B \subseteq E \setminus \{e\}}x^{n - 2 - r'(B)} y ^{2|B| - r'(B)}. \end{array}  \ \ \ \ \ (5)"/></p>
</a><p><a name="e2">
Equating (</a><a href="https://rjlipton.wordpress.com/feed/#e1">4</a>) and (<a href="https://rjlipton.wordpress.com/feed/#e2">5</a>) as formal polynomials gives the same necessary and sufficient condition on the powers of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> and <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/>: </p>
<p align="center"><img alt="\displaystyle  r(B \cup \{e\}) = r'(B) + (2 - n_{\ominus}). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++r%28B+%5Ccup+%5C%7Be%5C%7D%29+%3D+r%27%28B%29+%2B+%282+-+n_%7B%5Cominus%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  r(B \cup \{e\}) = r'(B) + (2 - n_{\ominus}). "/></p>
<p>This is true because <img alt="{B \cup \{e\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB+%5Ccup+%5C%7Be%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B \cup \{e\}}"/> always touches the one-or-two nodes that are exploded away, whereas <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> does not touch them in <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> (but touches everything else <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> touches in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>) and the difference is <img alt="{2 - n_{\ominus}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2+-+n_%7B%5Cominus%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2 - n_{\ominus}}"/>. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
Combined with the recipe theorem we obtain the following, which re-emphasizes that <img alt="{R_{G,\alpha,\beta}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G,\alpha,\beta}(x,y)}"/> for real <img alt="{\alpha,\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%2C%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha,\beta}"/> is always a real polynomial:</p>
<blockquote><p><b>Corollary 4</b> <em><a name="realcor"/> For any augmented G2PM <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> with rank function <img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{r}"/>, and all <img alt="{\alpha,\beta \neq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%2C%5Cbeta+%5Cneq+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\alpha,\beta \neq 0}"/>: <a name="rgfreal"/></em></p><em><a name="rgfreal">
<p align="center"><img alt="\displaystyle  R_{G,\alpha,\beta}(x,y) = (xy)^{n_{\ominus}} \sum_{A \subseteq E} \beta^{|A|} \alpha^{|E \setminus A|} x^{n - r(A)} y ^{2|A| - r(A)}. \ \ \ \ \ (5)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++R_%7BG%2C%5Calpha%2C%5Cbeta%7D%28x%2Cy%29+%3D+%28xy%29%5E%7Bn_%7B%5Cominus%7D%7D+%5Csum_%7BA+%5Csubseteq+E%7D+%5Cbeta%5E%7B%7CA%7C%7D+%5Calpha%5E%7B%7CE+%5Csetminus+A%7C%7D+x%5E%7Bn+-+r%28A%29%7D+y+%5E%7B2%7CA%7C+-+r%28A%29%7D.+%5C+%5C+%5C+%5C+%5C+%285%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  R_{G,\alpha,\beta}(x,y) = (xy)^{n_{\ominus}} \sum_{A \subseteq E} \beta^{|A|} \alpha^{|E \setminus A|} x^{n - r(A)} y ^{2|A| - r(A)}. \ \ \ \ \ (5)"/></p>
</a></em><p><em><a name="rgfreal"/> </em>
</p></blockquote>
<p>
</p><p/><h2> The Points </h2><p/>
<p/><p>
The quick finish to the proof of Theorem <a href="https://rjlipton.wordpress.com/feed/#representation">3</a>—combining what could be several cases of <img alt="{r(B \cup \{e\})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%28B+%5Ccup+%5C%7Be%5C%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r(B \cup \{e\})}"/> versus <img alt="{r(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r(B)}"/> into one—can also be viewed through the lens of duality. Then the complement <img alt="{B'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B'}"/> of <img alt="{B \cup \{e\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB+%5Ccup+%5C%7Be%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B \cup \{e\}}"/> in <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> does not include <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/>, so <img alt="{r^*(B')}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%5E%2A%28B%27%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r^*(B')}"/> is unchanged by removing <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/>. As we noted in the previous <a href="https://rjlipton.wordpress.com/2020/02/01/subliminal-graph-duals/">post</a>, however, <img alt="{r^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r^*}"/> need not be the rank function of a graph. Thus the proof gives a handle on manipulating a wider class of structures via graph theory.  It moreover seems extendable to all 2-polymatroids augmented with <img alt="{\bullet,\ominus}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%2C%5Cominus%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet,\ominus}"/>, so as to give <img alt="{R_E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_E}"/> extending <img alt="{S_E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_E}"/>. </p>
<p>
The beauty of the recipe theorem is that a whole host of recursions become encoded by evaluations of the polynomials <img alt="{R_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G(x,y)}"/>. As we <a href="https://rjlipton.wordpress.com/2019/06/17/contraction-and-explosion/">noted</a> with the Tutte polynomial <img alt="{T_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T_G(x,y)}"/> and <a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/">with</a> the Oxley-Whittle polynomial <img alt="{S_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(x,y)}"/>, evaluations of them at certain points <img alt="{(x_0,y_0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28x_0%2Cy_0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(x_0,y_0)}"/> convey information about the graphs. For many points <img alt="{(x_0,y_0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28x_0%2Cy_0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(x_0,y_0)}"/> the information is <img alt="{\mathsf{\#P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{\#P}}"/>-hard.</p>
<p>
The case we care most about now is <img alt="{\alpha = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha = 1}"/>, <img alt="{\beta = -\frac{1}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta+%3D+-%5Cfrac%7B1%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta = -\frac{1}{2}}"/>. We <a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/">showed</a> how this evaluates the tractable subclass of quantum <em>stabilizer circuits</em>. This makes <img alt="{\rho = \sqrt{\beta/\alpha}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Crho+%3D+%5Csqrt%7B%5Cbeta%2F%5Calpha%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\rho = \sqrt{\beta/\alpha}}"/> imaginary, but by Corollary <a href="https://rjlipton.wordpress.com/feed/#realcor">4</a> the values at real points are real. </p>
<p>
When <img alt="{y = 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By+%3D+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y = 2}"/> we have <img alt="{\rho y = \pm \sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Crho+y+%3D+%5Cpm+%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\rho y = \pm \sqrt{2}i}"/>, so the value <img alt="{R_{G,1,-1/2}(x,2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C1%2C-1%2F2%7D%28x%2C2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G,1,-1/2}(x,2)}"/> agrees with the polynomial <img alt="{Q(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q(x)}"/> in that post. The fact that <img alt="{(\rho y)^2 = -2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Crho+y%29%5E2+%3D+-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\rho y)^2 = -2}"/> evades the <img alt="{\mathsf{\#P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{\#P}}"/>-hardness technique in the <a href="https://bura.brunel.ac.uk/bitstream/2438/818/1/polymatroid.pdf">paper</a> by Steve Noble which we also discussed there. So let us now abbreviate <img alt="{R_{G,1,-1/2}(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7BG%2C1%2C-1%2F2%7D%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{G,1,-1/2}(x,y)}"/> as <img alt="{Q_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x,y)}"/>. Then <img alt="{Q_G(1,2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%281%2C2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(1,2)}"/> evaluates stabilizer circuits in polynomial time.</p>
<blockquote><p><b> </b> <em> What other points <img alt="{Q_G(x_0,y_0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x_0%2Cy_0%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Q_G(x_0,y_0)}"/> are easy to evaluate, given <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/>? </em>
</p></blockquote>
<p/><p>
The point <img alt="{(0,2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%280%2C2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(0,2)}"/> may even be nontrivial. If <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> has no isolated nodes then the sum is over spanning edge-subsets <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and becomes </p>
<p align="center"><img alt="\displaystyle  Q_{G}(0,2) = \sum_{\text{spanning} A \subseteq E} (-\frac{1}{2})^{|A|} 2 ^{2|A| - n} = \frac{1}{2^n} \sum_{\text{spanning} A \subseteq E} (-2)^{|A|}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Q_%7BG%7D%280%2C2%29+%3D+%5Csum_%7B%5Ctext%7Bspanning%7D+A+%5Csubseteq+E%7D+%28-%5Cfrac%7B1%7D%7B2%7D%29%5E%7B%7CA%7C%7D+2+%5E%7B2%7CA%7C+-+n%7D+%3D+%5Cfrac%7B1%7D%7B2%5En%7D+%5Csum_%7B%5Ctext%7Bspanning%7D+A+%5Csubseteq+E%7D+%28-2%29%5E%7B%7CA%7C%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  Q_{G}(0,2) = \sum_{\text{spanning} A \subseteq E} (-\frac{1}{2})^{|A|} 2 ^{2|A| - n} = \frac{1}{2^n} \sum_{\text{spanning} A \subseteq E} (-2)^{|A|}. "/></p>
<p>Is this in polynomial time?</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
What more can we gain from this augmentation and streamlining of Tutte-Grothendieck invariants? Can we find further characterizations of the polynomials <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/> and <img alt="{Q_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G}"/>? What can be done with <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-polymatroids with <img alt="{k &gt; 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk+%3E+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k &gt; 2}"/>, which might allow evaluating more quantum circuits?</p>
<p/><p><br/>
[some word improvements]</p></font></font></div>
    </content>
    <updated>2020-02-11T23:40:19Z</updated>
    <published>2020-02-11T23:40:19Z</published>
    <category term="All Posts"/>
    <category term="graph isomorphism"/>
    <category term="Ideas"/>
    <category term="2-polymatroids"/>
    <category term="counting"/>
    <category term="duality"/>
    <category term="graphs"/>
    <category term="Grothendieck"/>
    <category term="invariants"/>
    <category term="matroids"/>
    <category term="quantum circuits"/>
    <category term="rank-generation polynomial"/>
    <category term="Tutte polynomial"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-02-17T07:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/02/11/postdoc-in-quantum-and-classical-algorithms-at-university-of-warwick-uk-apply-by-march-8-2020/</id>
    <link href="https://cstheory-jobs.org/2020/02/11/postdoc-in-quantum-and-classical-algorithms-at-university-of-warwick-uk-apply-by-march-8-2020/" rel="alternate" type="text/html"/>
    <title>Postdoc in quantum and classical algorithms at University of Warwick, UK (apply by March 8, 2020)</title>
    <summary>We invite applications for a postdoc position, hosted by Tom Gur at the University of Warwick. The position is part of the UKRI Future Leaders project “Foundations of classical and quantum verifiable computing”, focused on interactive proofs, coding theory, and sublinear-time algorithms, both in the classical and quantum settings. Please apply via the link below […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We invite applications for a postdoc position, hosted by Tom Gur at the University of Warwick. The position is part of the UKRI Future Leaders project “Foundations of classical and quantum verifiable computing”, focused on interactive proofs, coding theory, and sublinear-time algorithms, both in the classical and quantum settings.</p>
<p>Please apply via the link below or contact Tom directly.</p>
<p>Website: <a href="https://atsv7.wcn.co.uk/search_engine/jobs.cgi?SID=amNvZGU9MTg2MDg3NCZ2dF90ZW1wbGF0ZT0xNDU3Jm93bmVyPTUwNjI0NTImb3duZXJ0eXBlPWZhaXImYnJhbmRfaWQ9MCZ2YWNfeHRyYTUwNjI0NTIuNTJfNTA2MjQ1Mj0yMzk5MjEmcG9zdGluZ19jb2RlPTYzNQ==">https://atsv7.wcn.co.uk/search_engine/jobs.cgi?SID=amNvZGU9MTg2MDg3NCZ2dF90ZW1wbGF0ZT0xNDU3Jm93bmVyPTUwNjI0NTImb3duZXJ0eXBlPWZhaXImYnJhbmRfaWQ9MCZ2YWNfeHRyYTUwNjI0NTIuNTJfNTA2MjQ1Mj0yMzk5MjEmcG9zdGluZ19jb2RlPTYzNQ==</a><br/>
Email: tom.gur@warwick.ac.uk</p></div>
    </content>
    <updated>2020-02-11T14:19:54Z</updated>
    <published>2020-02-11T14:19:54Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-02-17T07:20:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=19277</id>
    <link href="https://gilkalai.wordpress.com/2020/02/08/the-largest-clique-in-the-paley-graph-unexpected-significant-progress-and-surprising-connections/" rel="alternate" type="text/html"/>
    <title>The largest clique in the Paley Graph: unexpected significant progress and surprising connections.</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The result on Paley Graphs by Hanson and Petridis On May 2019, Brandon Hanson and Giorgis Petridis posed a paper on the arXive: Refined Estimates Concerning Sumsets Contained in the Roots of Unity. The abstract was almost as short as … <a href="https://gilkalai.wordpress.com/2020/02/08/the-largest-clique-in-the-paley-graph-unexpected-significant-progress-and-surprising-connections/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><h2>The result on Paley Graphs by Hanson and Petridis</h2>
<p>On May 2019, Brandon Hanson and Giorgis Petridis posed a paper on the arXive: <a href="https://arxiv.org/abs/1905.09134">Refined Estimates Concerning Sumsets Contained in the Roots of Unity.</a> The <strong>abstract</strong> was almost as short as the title (the paper is short as well!):</p>
<blockquote><p><em>We prove that the clique number of the Paley graph is at most <img alt="\sqrt {p/2}+1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt+%7Bp%2F2%7D%2B1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sqrt {p/2}+1"/>, and that any supposed additive decompositions of the set of quadratic residues can only come from co-Sidon sets.</em></p></blockquote>
<p>Let me elaborate on the first half of the abstract.</p>
<p>Let <img alt="q" class="latex" src="https://s0.wp.com/latex.php?latex=q&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="q"/> be a prime power such that <img alt="q=1 (\mod 4)" class="latex" src="https://s0.wp.com/latex.php?latex=q%3D1+%28%5Cmod+4%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="q=1 (\mod 4)"/>. This choice implies that in <img alt="F_q" class="latex" src="https://s0.wp.com/latex.php?latex=F_q&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="F_q"/> the difference of two numbers, <img alt="a-b" class="latex" src="https://s0.wp.com/latex.php?latex=a-b&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="a-b"/>, is a square iff <img alt="-(a-b)" class="latex" src="https://s0.wp.com/latex.php?latex=-%28a-b%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="-(a-b)"/> is a square, so the Paley graph we are going to define is a simple graph.</p>
<p>In the <a href="https://en.wikipedia.org/wiki/Paley_graph"><strong>Payley graph</strong></a> the vertices are the elements of <img alt="F_q" class="latex" src="https://s0.wp.com/latex.php?latex=F_q&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="F_q"/> and two are adjacent iff their difference is a square.</p>
<p>When the field is <img alt="F_p" class="latex" src="https://s0.wp.com/latex.php?latex=F_p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="F_p"/>, where <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/> is prime, then the Paley graph is conjectured to be an excellent construction for a Ramsey graphs, the largest complete subgraph (which has the same size as its largest empty subgraph since it is self-complementary) is conjectured to be <img alt="\log(p)\log \log (p)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clog%28p%29%5Clog+%5Clog+%28p%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\log(p)\log \log (p)"/>. This is actually a lower bound for infinitely many primes, proved by Montgomery under the assumption that the generalized Riemann hypothesis holds.</p>
<p>The upper bound (which is easy to prove) is <img alt="\sqrt p" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt+p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sqrt p"/>. This upper bound is sharp for the field <img alt="F_{p^2}." class="latex" src="https://s0.wp.com/latex.php?latex=F_%7Bp%5E2%7D.&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="F_{p^2}."/> (This is a very nice construction of <a href="http://people.sabanciuniv.edu/~mlavrauw/Aart/aart_and_combinatorics.html">Aart Blokhuis</a>.)</p>
<p>There was practically no improvement on the <img alt="\sqrt p" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt+p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sqrt p"/> upper bound until 2013, when Bachoc, Ruzsa and Matolcsi, proved that the <img alt="\sqrt p-1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt+p-1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sqrt p-1"/> bound holds for infinitely many primes.</p>
<p>Hanson and Petridis thus improved the upper bound significantly! They gave the upper bound <img alt="\sqrt{p/2}+1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt%7Bp%2F2%7D%2B1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sqrt{p/2}+1"/> on the clique size of the Paley graph. Their  proof uses Stepanov’s method.</p>
<h2>The result of Di Benedetto, Solymosi, and White on directions in Cartesian products</h2>
<p>A couple weeks ago, Daniel Di Benedetto, József Solymosi, and Ethan White posted a paper on the arxive: <a href="https://arxiv.org/abs/2001.06994">On the directions determined by a Cartesian product in an affine Galois plane</a>. Also here the <strong>abstract</strong> is also quite short (and so is the entire paper!).</p>
<blockquote><p><em>We prove that the number of directions contained in a set of the form <img alt="A \times B \subset AG(2,p)" class="latex" src="https://s0.wp.com/latex.php?latex=A+%5Ctimes+B+%5Csubset+AG%282%2Cp%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A \times B \subset AG(2,p)"/>, where <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/> is prime, is at least <img alt="|A||B| -\min\{|A|,|B|\}+2" class="latex" src="https://s0.wp.com/latex.php?latex=%7CA%7C%7CB%7C+-%5Cmin%5C%7B%7CA%7C%2C%7CB%7C%5C%7D%2B2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|A||B| -\min\{|A|,|B|\}+2"/>. Here <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A"/> and <img alt="B" class="latex" src="https://s0.wp.com/latex.php?latex=B&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="B"/> are subsets of <img alt="GF(p)" class="latex" src="https://s0.wp.com/latex.php?latex=GF%28p%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="GF(p)"/> each with at least two elements and <img alt="|A||B|&lt;p" class="latex" src="https://s0.wp.com/latex.php?latex=%7CA%7C%7CB%7C%3Cp&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|A||B|&lt;p"/>. This bound is tight for an infinite class of examples. Our main tool is the use of the Rédei polynomial with Szőnyi’s extension</em>.</p></blockquote>
<h3>A surprising connection</h3>
<p>Now, if you have a set <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A"/> where the difference between any two elements is a square then in <img alt="A \times A" class="latex" src="https://s0.wp.com/latex.php?latex=A+%5Ctimes+A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A \times A"/> all directions, <img alt="(a-b)/(c-d)" class="latex" src="https://s0.wp.com/latex.php?latex=%28a-b%29%2F%28c-d%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(a-b)/(c-d)"/>, are also squares. To Daniel, József, and Ethan’s  great surprise applying their bound on the clique number of the Paley graph gave the very same bound as Hanson and Petridis!</p>
<p>I am thankful to Józsi Solymosi for very helpful clarifications.</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/02/1024px-paley13.svg_.png"><img alt="" class="alignnone size-full wp-image-19289" height="640" src="https://gilkalai.files.wordpress.com/2020/02/1024px-paley13.svg_.png?w=640&amp;h=640" width="640"/></a></p>
<p><span style="color: #ff0000;">Payley graph with 13 vertices (source: <a href="https://en.wikipedia.org/wiki/Paley_graph">wikipedea</a>)</span></p>
<h3><em>A quick Sum-Product update, and associations.</em></h3>
<p>Now that I mention Józsi’s work let me also use this opportunity to give a quick update about Erdős-Szemeredi’s sum product conjecture. In an <a href="https://gilkalai.wordpress.com/2008/07/17/extermal-combinatorics-ii-some-geometry-and-number-theory/">old post</a> from 2009, I presented Elekes’ pioneering geometric proof for his sum-product world record and gave a link to a paper and <a href="https://ilaba.wordpress.com/2008/06/24/the-sum-product-problem/">a blog post</a> written by Izabella Laba about József Solymosi’s new (then) world record. I just saw <a href="https://www.quantamagazine.org/the-sum-product-problem-shows-how-addition-and-multiplication-constrain-each-other-20190206/?fbclid=IwAR2MqPEVRiFYhL5MIKCwhhIn038DDCwm4XZumNOw6n4XwKoN6F9uQ88MwbA">an article by Kevin Hartnett about the problem</a> in Quanta Magazine describing several subsequent records. The current world record is <a href="https://arxiv.org/abs/1803.04637">in a 2019 paper by George Shakan</a>.   (Sergei Konyagin and Ilya Shkredov broke József’s record in 2015, and the new record improved a 2016 world record by Misha Rudnev, Ilya Shkredov and Sophie Stevens; I also updated my related <a href="https://mathoverflow.net/a/217602/1532">MO answer.</a>) Of course, the sum-product phenomena is a huge area with amazing applications (See, <a href="https://terrytao.wordpress.com/2007/12/06/milliman-lecture-iii-sum-product-estimates-expanders-and-exponential-sums/">here</a>, here, <a href="https://terrytao.wordpress.com/2014/05/07/stickiness-graininess-planiness-and-a-sum-product-approach-to-the-kakeya-problem/">here,</a> and <a href="https://ilaba.wordpress.com/2008/12/25/expanders-and-the-sum-product-problem/">here</a>; I recall that Jean Bourgain referred to it as a gold mine or something like that). Now, talking about sum-product theorems, and about Bourgain, and about Quanta Magazine, I should mention a lovely <a href="https://www.quantamagazine.org/alex-kontorovich-on-the-absolute-truth-of-pure-math-20200128/">Quanta podcast featuring Alex Kontorovich interviewed by Steven Strogatz </a> .</p></div>
    </content>
    <updated>2020-02-08T20:10:35Z</updated>
    <published>2020-02-08T20:10:35Z</published>
    <category term="Combinatorics"/>
    <category term="Number theory"/>
    <category term="Brandon Hanson"/>
    <category term="Daniel Di Benedetto"/>
    <category term="Ethan White"/>
    <category term="Giorgis Petridis"/>
    <category term="Jozsef Solymosi"/>
    <category term="Paley graph"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-02-17T07:20:32Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://kamathematics.wordpress.com/?p=40</id>
    <link href="https://kamathematics.wordpress.com/2020/02/08/icalp-and-lics-2020-relocation-and-extended-deadline/" rel="alternate" type="text/html"/>
    <title>ICALP (and LICS) 2020 – Relocation and Extended Deadline</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Due to the Wuhan coronavirus outbreak, the organizers of ICALP and LICS have made the difficult decision to relocate both (co-located) conferences from Beijing, China, to Saarbrücken, Germany. Speaking specifically about ICALP now (I do not have further information about LICS): As a result of previous uncertainty regarding the situation, the deadline has been extended … <a class="more-link" href="https://kamathematics.wordpress.com/2020/02/08/icalp-and-lics-2020-relocation-and-extended-deadline/">Continue reading<span class="screen-reader-text"> "ICALP (and LICS) 2020 – Relocation and Extended Deadline"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Due to the Wuhan coronavirus outbreak, the organizers of ICALP and LICS have made the difficult decision to relocate both (co-located) conferences from Beijing, China, to Saarbrücken, Germany. Speaking specifically about ICALP now (I do not have further information about LICS): As a result of previous uncertainty regarding the situation, the deadline has been extended by about six days, until Tuesday February 18, 2020, at 6 AM GMT. The dates of the conference remain (roughly) the same, July 8 – 11, 2020. <br/>The following is a more official message from ICALP Track A Chair, Artur Czumaj.</p>



<hr class="wp-block-separator"/>



<p>The ICALP and the LICS steering committee have agreed together with the conference chairs in Beijing to relocate the two conferences.<br/>ICALP and LICS 2020 will take place in <strong>Saarbrücken</strong>, Germany, July 8 – 11 2020 (with satellite workshops on July 6 – 7 2020).<br/>The deadline is extended, see below.</p>



<p><strong>Call for Papers – ICALP 2020</strong><br/><strong>July 8 – 11 2020, Saarbrücken, Germany</strong></p>



<p><strong>NEW Paper submission deadline: Tuesday February 18, 2020, 6am GMT</strong><br/><a href="https://easychair.org/conferences/?conf=icalp2020">https://easychair.org/conferences/?conf=icalp2020</a></p>



<p>ICALP (International Colloquium on Automata, Languages and Programming) is the main European conference in Theoretical Computer Science and annual meeting of the European Association for Theoretical Computer Science (EATCS). ICALP 2020 will be hosted on the Saarland Informatics Campus in Saarbrücken, in co-location with LICS 2020 (ACM/IEEE Symposium on Logic in Computer Science).</p>



<p><strong>Invited speakers:</strong><br/>Track A: Virginia Vassilevska (MIT), Robert Krauthgamer (Weizmann)<br/>Track B: Stefan Kiefer (Oxford)<br/>Joint ICALP-LICS: Andrew Yao (Tsinghua), Jérôme Leroux (Bordeaux)</p>



<p><strong>Submission Guidelines:</strong> see <a href="https://easychair.org/conferences/?conf=icalp2020">https://easychair.org/conferences/?conf=icalp2020</a></p>



<p><strong>NEW Paper submission deadline: February 18</strong>, 2020, 6am GMT<br/>notifications: April 15, 2020<br/>camera ready: April 28, 2020</p>



<p>Topics: ICALP 2020 will have the two traditional tracks<br/>A (Algorithms, Complexity and Games – including Algorithmic Game Theory, Distributed Algorithms and Parallel, Distributed and External Memory Computing) and<br/>B (Automata, Logic, Semantics and Theory of Programming).<br/><strong><em>    (Notice that the old tracks A and C have been merged into a single track A.)</em></strong><br/>Papers presenting original, unpublished research on all aspects of theoretical computer science are sought.</p>



<p>Typical, but not exclusive topics are:</p>



<p>Track A — Algorithmic Aspects of Networks and Networking, Algorithms for Computational Biology, Algorithmic Game Theory, Combinatorial Optimization, Combinatorics in Computer Science, Computational Complexity, Computational Geometry, Computational Learning Theory, Cryptography, Data Structures, Design and Analysis of Algorithms, Foundations of Machine Learning, Foundations of Privacy, Trust and Reputation in Network, Network Models for Distributed Computing, Network Economics and Incentive-Based Computing Related to Networks, Network Mining and Analysis, Parallel, Distributed and External Memory Computing, Quantum Computing, Randomness in Computation, Theory of Security in Networks</p>



<p>Track B — Algebraic and Categorical Models, Automata, Games, and Formal Languages, Emerging and Non-standard Models of Computation, Databases, Semi-Structured Data and Finite Model Theory, Formal and Logical Aspects of Learning, Logic in Computer Science, Theorem Proving and Model Checking, Models of Concurrent, Distributed, and Mobile Systems, Models of Reactive, Hybrid and Stochastic Systems, Principles and Semantics of Programming Languages, Program Analysis and Transformation, Specification, Verification and Synthesis, Type Systems and Theory, Typed Calculi</p>



<p><strong>PC Track A chair: Artur Czumaj</strong> (University  of Warwick)<br/><strong>PC Track B chair: Anuj Dawar</strong> (University of Cambridge)</p>



<p>Contact<br/>All questions about submissions should be emailed to the PC Track chairs:<br/>Artur Czumaj <a href="mailto:A.Czumaj@warwick.ac.uk">A.Czumaj@warwick.ac.uk&lt;mailto:A.Czumaj@warwick.ac.uk&gt;</a><br/>Anuj Dawar <a href="mailto:Anuj.Dawar@cl.cam.ac.uk">Anuj.Dawar@cl.cam.ac.uk&lt;mailto:Anuj.Dawar@cl.cam.ac.uk&gt;</a></p></div>
    </content>
    <updated>2020-02-08T15:01:28Z</updated>
    <published>2020-02-08T15:01:28Z</published>
    <author>
      <name>Gautam</name>
    </author>
    <source>
      <id>https://kamathematics.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://kamathematics.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://kamathematics.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://kamathematics.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://kamathematics.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Kamathematics</title>
      <updated>2020-02-17T07:21:55Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/02/08/postdoc-at-northwestern-and-ttic-as-part-of-ideal-apply-by-february-22-2020/</id>
    <link href="https://cstheory-jobs.org/2020/02/08/postdoc-at-northwestern-and-ttic-as-part-of-ideal-apply-by-february-22-2020/" rel="alternate" type="text/html"/>
    <title>Postdoc at Northwestern and TTIC (as part of IDEAL) (apply by February 22, 2020)</title>
    <summary>The Institute for Data, Econometrics, Algorithms, and Learning (IDEAL) invites applications for two postdoctoral fellowships starting Fall of 2020, to conduct inter-disciplinary research that focuses on the theoretical foundations of data science. One fellowship is based at the Toyota Technology Institute at Chicago (TTIC) and one fellowship is based at Northwestern University. Website: https://www.ideal.northwestern.edu/2020/02/04/postdocs/ Email: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Institute for Data, Econometrics, Algorithms, and Learning (IDEAL) invites applications for two postdoctoral fellowships starting Fall of 2020, to conduct inter-disciplinary research that focuses on the theoretical foundations of data science. One fellowship is based at the Toyota Technology Institute at Chicago (TTIC) and one fellowship is based at Northwestern University.</p>
<p>Website: <a href="https://www.ideal.northwestern.edu/2020/02/04/postdocs/">https://www.ideal.northwestern.edu/2020/02/04/postdocs/</a><br/>
Email: admin@ideal.northwestern.edu</p></div>
    </content>
    <updated>2020-02-08T14:45:51Z</updated>
    <published>2020-02-08T14:45:51Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-02-17T07:20:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16647</id>
    <link href="https://rjlipton.wordpress.com/2020/02/07/counting-votes-by-humans/" rel="alternate" type="text/html"/>
    <title>Counting Votes By Humans</title>
    <summary>A new way to agree on calculations Cropped from ABC News source Troy Price is the Iowa Democratic Party Chair. He was in charge of Iowa’s primary vote. The vote totals were due Monday night but have not been finished, now three nights later, and may need to be re-tallied. At a press conference to […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>A new way to agree on calculations</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.files.wordpress.com/2020/02/tonyprice.jpg"><img alt="" class="alignright wp-image-16649" height="198" src="https://rjlipton.files.wordpress.com/2020/02/tonyprice.jpg?w=145&amp;h=198" width="145"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Cropped from ABC News <a href="https://www.facebook.com/ABC13News/photos/a.10150267351592428/10157269745777428/?type=3&amp;theater">source</a></font></td>
</tr>
</tbody>
</table>
<p>
Troy Price is the Iowa Democratic Party Chair. He was in charge of Iowa’s primary vote. The vote totals were due Monday night but have not been finished, now three nights later, and may need to be re-tallied. At a press conference to explain the cause for the delay—mainly a failed phone app—Price was <a href="https://www.washingtonexaminer.com/news/reporter-hollers-at-iowa-democratic-party-chairman-how-can-anyone-trust-you-now">asked</a>, “How can anyone trust you now?”</p>
<p>
Today, Ken and I discuss a way to make counting votes quickly checkable by humans.<br/>
<span id="more-16647"/></p>
<p>
Indeed the issue with vote counting is one of trust. Our idea is to use computers to assist humans in tallying the votes. But the computers will not be trusted. The goal is to make the number of operations that humans perform of order <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> where there are <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> votes. Even for a national election this is a modest requirement. The surprise, perhaps, is this can be done. </p>
<p>
</p><p/><h2> The Vote-Counting Game </h2><p/>
<p/><p>
Our key insight is to assume that the election is being monitored by two parties—call them Donna and Rachel—who are adversaries. Let us suppose the votes can only be <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> or <img alt="{R}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R}"/>. Donna wants the count of <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> to be high, while Rachel wants <img alt="{R}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R}"/> to be high, which here is the same as <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> being low. This is a kind of two-prover model. In complexity theory we know that two provers are more powerful than one prover.</p>
<p>
We insist that D and R play a game. We will explain how the game is played in a moment. The key is that the game—the <i>voting game</i>—has several properties. </p>
<ol>
<li>
At the end of the game, D and R both have made at most order <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> human operations. <p/>
</li><li>
At the end of the game, D and R may agree on the vote count. <p/>
</li><li>
At the end of the game, if D and R do not agree on the vote count, then one of them will be found to be “cheating” and will be fined a monetary amount.
</li></ol>
<p>
The voting game “solves” the problem of having a humanly checkable election process. The incentive is for D and R to be honest and correct. This precludes either passive error, such as by having incorrect software, or active cheating. If they cheat they may get the fine. If the fine is high enough, that should make D and R strive to be correct.</p>
<p>
Item 2 is critical. We do not claim that if D and R agree that their tally is correct. We only claim that if they agree they should be content with the outcome. This is a key insight and perhaps the most controversial point. If we insisted that D and R only agree when they have the objectively correct count, then it is easy to see they must violate 1: they must take order <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> steps.</p>
<p>
</p><p/><h3> Structure of the Game and Preparation By the Parties </h3><p/>
<p/><p>
One structural requirement that is a practical necessity anyway is that the vote count is <em>ordered</em> and that the R and D counts follow the same order. We may suppose, say, that the votes are totaled alphabetically by county, then in order of precints within each county, and finally by name in each precinct. Both D and R are required to provide running tallies that respect this order and their computer systems must allow random access to any running subtotal. Producing the tallies of course is a lot of work while the votes are being counted, but this is divided among many people where each side has onsite observers. The act of <em>checking</em> the tallies—and either finding an error or agreeing on the totals—is what we will optimize.</p>
<p/><p>
Let’s consider the tallying of votes. Let 	</p>
<p align="center"><img alt="\displaystyle  v_{1},\dots,v_{n} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++v_%7B1%7D%2C%5Cdots%2Cv_%7Bn%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  v_{1},\dots,v_{n} "/></p>
<p>be the ordered sequence of votes. Let 	</p>
<p align="center"><img alt="\displaystyle  t_{k} = \sum_{i=1}^{k} v_{i} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++t_%7Bk%7D+%3D+%5Csum_%7Bi%3D1%7D%5E%7Bk%7D+v_%7Bi%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  t_{k} = \sum_{i=1}^{k} v_{i} "/></p>
<p>be the running tally of the votes—say the count of <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/>. We are not saying D and R can compute this whole sequence infallibly. Of course a computer can compute it, but we cannot trust its answers. What we do is ask D and R to compile their own versions of the tally vector. Let D’s vector be 	</p>
<p align="center"><img alt="\displaystyle  d_{1},\dots,d_{n} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++d_%7B1%7D%2C%5Cdots%2Cd_%7Bn%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  d_{1},\dots,d_{n} "/></p>
<p>and R’s vector be 	</p>
<p align="center"><img alt="\displaystyle  r_{1},\dots,r_{n}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++r_%7B1%7D%2C%5Cdots%2Cr_%7Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  r_{1},\dots,r_{n}. "/></p>
<p>These vectors are computed by computers owned and run by D and R respectively, using the agreed ordering. Each is responsible for the correctness of their vectors. A critical point is that D and R are responsible for their vectors—we do not assume that they are correct.</p>
<p>
</p><p/><h3> Running The Protocol </h3><p/>
<p/><p>
First, D and R check whether <img alt="{d_{n} = r_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_%7Bn%7D+%3D+r_%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_{n} = r_{n}}"/>. If they are equal, it follows that the tally of the election is done. Since D and R are adversaries, if they agree that <img alt="{d_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_{n}}"/> is equal to <img alt="{r_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_{n}}"/> they agree on the outcome of the election. This is success. Note it is important that in this case: </p>
<blockquote><p><b> </b> <em> <i>The value they agree on is not necessarily the true <img alt="{t_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt_%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{t_{n}}"/>.</i> </em>
</p></blockquote>
<p>This is a critical point. We cannot calculate <img alt="{t_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt_%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t_{n}}"/> with limited human computations. But if D and R agree that is good enough.</p>
<p>
If <img alt="{d_{n} \neq r_{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_%7Bn%7D+%5Cneq+r_%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_{n} \neq r_{n}}"/>, then at least one of D and R has made a mistake—or mistakes. That is, some vector is not correct. Note the “mistake” may be a computer error, a human error, or a deliberate error. We do not care which is the case. Nor do we care about finding <em>all</em> mistakes. The goal of the protocol is to give a strong incentive not to make any mistakes and have a process that can check the totals rapidly.</p>
<p>
So take <img alt="{m = \frac{n}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Cfrac%7Bn%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = \frac{n}{2}}"/>, rounded down when needed. D and R then report their running totals <img alt="{d_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m}"/> and <img alt="{r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_m}"/>. This uses random access to their tally vectors and so takes constant time. </p>
<ul>
<li>
If <img alt="{d_m \neq r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m+%5Cneq+r_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m \neq r_m}"/>, then D and R know there is an error in the first half. They recurse on that. <p/>
</li><li>
If <img alt="{d_m = r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m+%3D+r_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m = r_m}"/>, then even though these counts may not be correct by themselves, their agreement implies there must be a discrepancy in the second half. D and R recurse on that.
</li></ul>
<p>
This becomes a binary search in which the invariant is that the counts at the low boundary agree and the counts at the high boundary disagree. In about <img alt="{\log_2(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log_2(n)}"/> steps it gets down to where a discrepancy is found in the tallying of a single vote: one of D and R got it right and the other did not. Whoever did not pays the fine. </p>
<p>
This completes the description of the protocol.  In a more abstract setting this is the same as the discrepancy-finding protocol of Mauricio Karchmer and Avi Wigderson; see their 1990 <a href="https://epubs.siam.org/doi/pdf/10.1137/0403021">paper</a> and this 2017 <a href="https://eccc.weizmann.ac.il/report/2017/129/revision/3/download/">paper</a> by Or Meir.</p>
<p>
</p><p/><h3> Analysis </h3><p/>
<p/><p>
The time analysis is simple. The running time <img alt="{T(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T(n)}"/> obeys the recursion </p>
<p align="center"><img alt="\displaystyle  T(n) = T(n/2) + O(1) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++T%28n%29+%3D+T%28n%2F2%29+%2B+O%281%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  T(n) = T(n/2) + O(1) "/></p>
<p>with solution is <img alt="{T(n) = O(\log n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%28n%29+%3D+O%28%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T(n) = O(\log n)}"/>, just as for binary search. </p>
<p>
One fine point is that neither D nor R has any incentive to “lie” by making their tallies deliberately wrong. Suppose <img alt="{d_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m}"/> is a lie. In the case where <img alt="{r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_m}"/> differs, the recursion will go there and be one step closer to finding a lie. If Rachel’s vector is correct up to <img alt="{r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_m}"/>, the discrepancy would never be found with her. If <img alt="{r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_m}"/> agrees with an incorrect <img alt="{d_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m}"/>, then that doesn’t matter: there still must be a discrepancy in the upper half, and the search will go there. Thus an honest and correct player cannot be tripped up by dishonesty of the other, while in case <img alt="{d_n \neq r_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_n+%5Cneq+r_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_n \neq r_n}"/> and <em>both</em> have made mistakes, neither player has a way to know to pin the discovered error on the other party by misreporting <img alt="{d_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_m}"/> or <img alt="{r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_m}"/>. </p>
<p>
Both the penalty and the swiftness of determining itare incentives to D and R to have good programs. They must rely on a program that each has to determine their values <img alt="{d_{i}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd_%7Bi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d_{i}}"/> and <img alt="{r_{i}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_%7Bi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_{i}}"/>. Both are liable for the correctness of their program. Several aspects make us wonder whether this is a new idea in “checking” of computations:</p>
<ol>
<li>
Humans are able to do the checking. They never do more than order <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> work. <p/>
</li><li>
The result is not a guaranteed correct sum. It is guaranteed that D and R will be forced to agree. <p/>
</li><li>
The players D and R are assumed to work against each other.
</li></ol>
<p>
If there are more than two non-negligible candidates then the details are more complicated—such as needing one “prover” per candidate—but the principles are much the same. More problematic are cases where there might be up to <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> errors (where the probability of <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> errors may tail off with higher <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>) and the goal is to find them all. That could be a subject for another post.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
In what situations might this protocol be useful? Has anything like it been proposed?</p>
<p>
<b>Update</b> (12:45am ET 2/7): Iowa did finish the count by midnight Thursday in Central Time, but it is open to challenge by any candidate until 1pm ET.  <b>Update:</b> The 1pm challenge deadline has been extended to Monday, so the results will not be final until at least a week later than the vote.  See also this CNN <a href="https://www.cnn.com/2020/02/07/politics/iowa-results-errors/index.html">story</a> about errors in the count.  And this Sunday NYT <a href="https://www.nytimes.com/2020/02/09/us/politics/iowa-democratic-caucuses.html">story</a> on counting errors etc.</p>
<p/><p><br/>
[added updates; added reference to Karchmer-Wigderson protocol.]</p></font></font></div>
    </content>
    <updated>2020-02-07T05:39:40Z</updated>
    <published>2020-02-07T05:39:40Z</published>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="News"/>
    <category term="People"/>
    <category term="Proofs"/>
    <category term="election"/>
    <category term="interactive proofs"/>
    <category term="Iowa caucuses"/>
    <category term="protocols"/>
    <category term="Tony Price"/>
    <category term="voting"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-02-17T07:20:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=387</id>
    <link href="https://tcsplus.wordpress.com/2020/02/06/tcs-talk-wednesday-february-12-albert-atserias-universitat-politecnica-de-catalunya/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, February 12 — Albert Atserias, Universitat Politecnica de Catalunya</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, February 12th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 18:00 UTC). Albert Atserias from Universitat Politecnica de Catalunya will speak about “Automating Resolution is NP-Hard” (abstract below). Please make sure you reserve a spot for your group to join […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, February 12th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 18:00 UTC). <strong>Albert Atserias</strong> from Universitat Politecnica de Catalunya will speak about “<em>Automating Resolution is NP-Hard</em>” (abstract below).</p>
<p>Please make sure you reserve a spot for your group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk/live-seat-reservation">the online form</a>. As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>
<blockquote><p>Abstract: We show that it is NP-hard to distinguish CNF formulas that have Resolution refutations of almost linear length from CNF formulas that do not even have weakly exponentially long ones. It follows from this that Resolution is not automatable in polynomial time unless P = NP, or in weakly exponential time unless ETH fails. The proof of this is simple enough that all its ideas can be explained in a talk. Along the way, I will try to explain the process of discovery that led us to the result. This is joint work with Moritz Müller.</p></blockquote>
<p> </p></div>
    </content>
    <updated>2020-02-06T22:05:58Z</updated>
    <published>2020-02-06T22:05:58Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2020-02-17T07:21:26Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/009</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/009" rel="alternate" type="text/html"/>
    <title>TR20-009 |  Theorems of KKL, Friedgut, and Talagrand via Random Restrictions and Log-Sobolev Inequality | 

	Subhash Khot, 

	Dor Minzer, 

	Muli Safra, 

	Guy Kindler, 

	Esty Kelman</title>
    <summary>We give alternate proofs for three related results in analysis of Boolean functions, namely the KKL
Theorem, Friedgut’s Junta Theorem, and Talagrand’s strengthening of the KKL Theorem. We follow a
new approach: looking at the first Fourier level of the function after a suitable random restriction and
applying the Log-Sobolev inequality appropriately. In particular, we avoid using the hypercontractive inequality
that is common to the original proofs. Our proofs might serve as an alternate, uniform exposition
to these theorems and the techniques might benefit further research.</summary>
    <updated>2020-02-06T21:02:30Z</updated>
    <published>2020-02-06T21:02:30Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-17T07:20:29Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://adamsheffer.wordpress.com/?p=5488</id>
    <link href="https://adamsheffer.wordpress.com/2020/02/04/an-algorithms-course-with-minimal-prerequisites/" rel="alternate" type="text/html"/>
    <title>An Algorithms Course with Minimal Prerequisites</title>
    <summary>There are amazing materials for teaching theoretical algorithms courses: excellent books, lecture notes, and online courses. But none of the resources I am familiar with fits the algorithms course I was supposed to prepare. I wanted to teach a course for students who hardly have any prerequisites. My students are non-CS majors (mostly math majors), […]</summary>
    <updated>2020-02-04T20:21:05Z</updated>
    <published>2020-02-04T20:21:05Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Adam Sheffer</name>
    </author>
    <source>
      <id>https://adamsheffer.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://adamsheffer.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://adamsheffer.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://adamsheffer.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://adamsheffer.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Discrete geometry and other typos</subtitle>
      <title>Some Plane Truths</title>
      <updated>2020-02-17T07:21:17Z</updated>
    </source>
  </entry>
</feed>
