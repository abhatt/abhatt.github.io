<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2019-04-09T08:22:00Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.04216</id>
    <link href="http://arxiv.org/abs/1904.04216" rel="alternate" type="text/html"/>
    <title>Junta correlation is testable</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/De:Anindya.html">Anindya De</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mossel:Elchanan.html">Elchanan Mossel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neeman:Joe.html">Joe Neeman</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.04216">PDF</a><br/><b>Abstract: </b>The problem of tolerant junta testing is a natural and challenging problem
which asks if the property of a function having some specified correlation with
a $k$-Junta is testable. In this paper we give an affirmative answer to this
question: We show that given distance parameters $\frac{1}{2} &gt;c_u&gt;c_{\ell} \ge
0$, there is a tester which given oracle access to $f:\{-1,1\}^n \rightarrow
\{-1,1\}$, with query complexity $ 2^k \cdot \mathsf{poly}(k,1/|c_u-c_{\ell}|)$
and distinguishes between the following cases:
</p>
<p>$\mathbf{1.}$ The distance of $f$ from any $k$-junta is at least $c_u$;
</p>
<p>$\mathbf{2.}$ There is a $k$-junta $g$ which has distance at most $c_\ell$
from $f$.
</p>
<p>This is the first non-trivial tester (i.e., query complexity is independent
of $n$) which works for all $1/2 &gt; c_u &gt; c_\ell \ge 0$. The best previously
known results by Blais \emph{et~ al.}, required $c_u \ge 16 c_\ell$. In fact,
with the same query complexity, we accomplish the stronger goal of identifying
the most correlated $k$-junta, up to permutations of the coordinates.
</p>
<p>We can further improve the query complexity to $\mathsf{poly}(k,
1/|c_u-c_{\ell}|)$ for the (weaker) task of distinguishing between the
following cases:
</p>
<p>$\mathbf{1.}$ The distance of $f$ from any $k'$-junta is at least $c_u$.
</p>
<p>$\mathbf{2.}$ There is a $k$-junta $g$ which is at a distance at most
$c_\ell$ from $f$.
</p>
<p>Here $k'=O(k^2/|c_u-c_\ell|)$.
</p>
<p>Our main tools are Fourier analysis based algorithms that simulate oracle
access to influential coordinates of functions.
</p></div>
    </summary>
    <updated>2019-04-09T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.04129</id>
    <link href="http://arxiv.org/abs/1904.04129" rel="alternate" type="text/html"/>
    <title>A note on Cunningham's algorithm for matroid intersection</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nguyen:Huy_L=.html">Huy L. Nguyen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.04129">PDF</a><br/><b>Abstract: </b>In the matroid intersection problem, we are given two matroids of rank $r$ on
a common ground set $E$ of $n$ elements and the goal is to find the maximum set
that is independent in both matroids. In this note, we show that Cunningham's
algorithm for matroid intersection can be implemented to use $O(nr\log^2(r))$
independent oracle calls.
</p></div>
    </summary>
    <updated>2019-04-09T01:23:19Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.04126</id>
    <link href="http://arxiv.org/abs/1904.04126" rel="alternate" type="text/html"/>
    <title>Weighted Reservoir Sampling from Distributed Streams</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jayaram:Rajesh.html">Rajesh Jayaram</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sharma:Gokarna.html">Gokarna Sharma</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tirthapura:Srikanta.html">Srikanta Tirthapura</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Woodruff:David_P=.html">David P. Woodruff</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.04126">PDF</a><br/><b>Abstract: </b>We consider message-efficient continuous random sampling from a distributed
stream, where the probability of inclusion of an item in the sample is
proportional to a weight associated with the item. The unweighted version,
where all weights are equal, is well studied, and admits tight upper and lower
bounds on message complexity. For weighted sampling with replacement, there is
a simple reduction to unweighted sampling with replacement. However, in many
applications the stream has only a few heavy items which may dominate a random
sample when chosen with replacement. Weighted sampling \textit{without
replacement} (weighted SWOR) eludes this issue, since such heavy items can be
sampled at most once.
</p>
<p>In this work, we present the first message-optimal algorithm for weighted
SWOR from a distributed stream. Our algorithm also has optimal space and time
complexity. As an application of our algorithm for weighted SWOR, we derive the
first distributed streaming algorithms for tracking \textit{heavy hitters with
residual error}. Here the goal is to identify stream items that contribute
significantly to the residual stream, once the heaviest items are removed.
Residual heavy hitters generalize the notion of $\ell_1$ heavy hitters and are
important in streams that have a skewed distribution of weights. In addition to
the upper bound, we also provide a lower bound on the message complexity that
is nearly tight up to a $\log(1/\epsilon)$ factor. Finally, we use our weighted
sampling algorithm to improve the message complexity of distributed $L_1$
tracking, also known as count tracking, which is a widely studied problem in
distributed streaming. We also derive a tight message lower bound, which closes
the message complexity of this fundamental problem.
</p></div>
    </summary>
    <updated>2019-04-09T01:24:45Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.04072</id>
    <link href="http://arxiv.org/abs/1904.04072" rel="alternate" type="text/html"/>
    <title>The Complexity of the Ideal Membership Problem and Theta Bodies for Constrained Problems Over the Boolean Domain</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mastrolilli:Monaldo.html">Monaldo Mastrolilli</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.04072">PDF</a><br/><b>Abstract: </b>Given an ideal $I$ and a polynomial $f$ the {Ideal Membership Problem} is to
test if $f\in I$. This problem is a fundamental algorithmic problem with
important applications and notoriously intractable. We study the complexity of
the Ideal Membership Problem for combinatorial ideals that arise from
constrained problems over the Boolean domain. As our main result, we identify
the precise borderline of tractability. By using Gr\"{o}bner bases techniques,
we generalize Schaefer's dichotomy theorem [STOC, 1978] which classifies all
Constraint Satisfaction Problems over the Boolean domain to be either in P or
NP-hard. Moreover, our result implies necessary and sufficient conditions
(assuming $P\not = NP$) for the efficient computation of Theta Body SDP
relaxations, identifying therefore the precise borderline of tractability for
constraint language problems. This paper is motivated by the pursuit of
understanding the recently raised issue of bit complexity of Sum-of-Squares
proofs [O'Donnell, ITCS, 2017]. Raghavendra and Weitz [ICALP, 2017] show how
the Ideal Membership Problem tractability for combinatorial ideals implies
bounded coefficients in Sum-of-Squares proofs.
</p></div>
    </summary>
    <updated>2019-04-09T01:22:25Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.04045</id>
    <link href="http://arxiv.org/abs/1904.04045" rel="alternate" type="text/html"/>
    <title>Subsets and Supermajorities: Unifying Hashing-based Set Similarity Search</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ahle:Thomas_Dybdahl.html">Thomas Dybdahl Ahle</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.04045">PDF</a><br/><b>Abstract: </b>We consider the problem of designing Locality Sensitive Filters (LSF) for set
overlaps, also known as maximum inner product search on binary data. We give a
simple data structure that generalizes and outperforms previous algorithms such
as MinHash [J. Discrete Algorithms 1998], SimHash [STOC 2002], Spherical LSF
[SODA 2017] and Chosen Path [STOC 2017]; and we show matching lower bounds
using hypercontractive inequalities for a wide range of parameters and
space/time trade-offs. This answers the main open question in Christiani and
Pagh [STOC 2017] on unifying the landscape of Locality Sensitive
(non-data-dependent) set similarity search.
</p></div>
    </summary>
    <updated>2019-04-09T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03950</id>
    <link href="http://arxiv.org/abs/1904.03950" rel="alternate" type="text/html"/>
    <title>From independent sets and vertex colorings to isotropic spaces and isotropic decompositions</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bei:Xiaohui.html">Xiaohui Bei</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Shiteng.html">Shiteng Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Guan:Ji.html">Ji Guan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/q/Qiao:Youming.html">Youming Qiao</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sun:Xiaoming.html">Xiaoming Sun</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03950">PDF</a><br/><b>Abstract: </b>In the 1970's, Lov\'asz built a bridge between graphs and alternating matrix
spaces, in the context of perfect matchings (FCT 1979). A similar connection
between bipartite graphs and matrix spaces plays a key role in the recent
resolutions of the non-commutative rank problem
(Garg-Gurvits-Oliveira-Wigderson, FOCS 2016; Ivanyos-Qiao-Subrahmanyam, ITCS
2017). In this paper, we lay the foundation for another bridge between graphs
and alternating matrix spaces, in the context of independent sets and vertex
colorings. The corresponding structures in alternating matrix spaces are
isotropic spaces and isotropic decompositions, both useful structures in group
theory and manifold theory.
</p>
<p>We first show that the maximum independent set problem and the vertex
c-coloring problem reduce to the maximum isotropic space problem and the
isotropic c-decomposition problem, respectively. Next, we show that several
topics and results about independent sets and vertex colorings have natural
correspondences for isotropic spaces and decompositions. These include
algorithmic problems, such as the maximum independent set problem for bipartite
graphs, and exact exponential-time algorithms for the chromatic number, as well
as mathematical questions, such as the number of maximal independent sets, and
the relation between the maximum degree and the chromatic number. These
connections lead to new interactions between graph theory and algebra. Some
results have concrete applications to group theory and manifold theory, and we
initiate a variant of these structures in the context of quantum information
theory. Finally, we propose several open questions for further exploration.
</p>
<p>This paper is dedicated to the memory of Ker-I Ko.
</p></div>
    </summary>
    <updated>2019-04-09T01:23:38Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03890</id>
    <link href="http://arxiv.org/abs/1904.03890" rel="alternate" type="text/html"/>
    <title>On popularity-based random matching markets</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gimbert:Hugo.html">Hugo Gimbert</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mathieu:Claire.html">Claire Mathieu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mauras:Simon.html">Simon Mauras</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03890">PDF</a><br/><b>Abstract: </b>Stable matching in a community consisting of N men and N women is a classical
combinatorial problem that has been the subject of intense theoretical and
empirical study since its introduction in 1962 in a seminal paper by Gale and
Shapley [GS62]. In this paper, we study the number of stable pairs, that is,
the man/woman pairs that appear in some stable matching. We prove that if the
preference lists on one side are generated at random using the popularity model
of Immorlica and Mahdian [IM15], the expected number of stable edges is bounded
by N + N ln N , matching the asymptotic bound for uniform preference lists. If
in addition that popularity model is a geometric distribution, then the number
of stable edges is O(N) and the incentive to manipulate is limited. If in
addition the preference lists on the other side are uniform, then the number of
stable edges is asymptotically N up to lower order terms: most participants
have a unique stable partner, hence non-manipulability.
</p></div>
    </summary>
    <updated>2019-04-09T01:30:05Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03874</id>
    <link href="http://arxiv.org/abs/1904.03874" rel="alternate" type="text/html"/>
    <title>Parametrized Metrical Task Systems</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bubeck:S=eacute=bastien.html">Sébastien Bubeck</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rabani:Yuval.html">Yuval Rabani</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03874">PDF</a><br/><b>Abstract: </b>We consider parametrized versions of metrical task systems and metrical
service systems, two fundamental models of online computing, where the
constrained parameter is the number of possible distinct requests $m$. Such
parametrization occurs naturally in a wide range of applications. Striking
examples are certain power management problems, which are modeled as metrical
task systems with $m=2$. We characterize the competitive ratio in terms of the
parameter $m$ for both deterministic and randomized algorithms on
hierarchically separated trees. Our findings uncover a rich and unexpected
picture that differs substantially from what is known or conjectured about the
unparametrized versions of these problems. For metrical task systems, we show
that deterministic algorithms do not exhibit any asymptotic gain beyond
one-level trees (namely, uniform metric spaces), whereas randomized algorithms
do not exhibit any asymptotic gain even for one-level trees. In contrast, the
special case of metrical service systems (subset chasing) behaves very
differently. Both deterministic and randomized algorithms exhibit gain, for $m$
sufficiently small compared to $n$, for any number of levels. Most
significantly, they exhibit a large gain for uniform metric spaces and a
smaller gain for two-level trees. Moreover, it turns out that in these cases
(as well as in the case of metrical task systems for uniform metric spaces with
$m$ being an absolute constant), deterministic algorithms are essentially as
powerful as randomized algorithms. This is surprising and runs counter to the
ubiquitous intuition/conjecture that, for most problems that can be modeled as
metrical task systems, the randomized competitive ratio is polylogarithmic in
the deterministic competitive ratio.
</p></div>
    </summary>
    <updated>2019-04-09T01:32:56Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03858</id>
    <link href="http://arxiv.org/abs/1904.03858" rel="alternate" type="text/html"/>
    <title>The Kikuchi Hierarchy and Tensor PCA</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wein:Alexander_S=.html">Alexander S. Wein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Alaoui:Ahmed_El.html">Ahmed El Alaoui</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moore:Cristopher.html">Cristopher Moore</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03858">PDF</a><br/><b>Abstract: </b>For the tensor PCA (principal component analysis) problem, we propose a new
hierarchy of algorithms that are increasingly powerful yet require increasing
runtime. Our hierarchy is analogous to the sum-of-squares (SOS) hierarchy but
is instead inspired by statistical physics and related algorithms such as
belief propagation and AMP (approximate message passing). Our level-$\ell$
algorithm can be thought of as a (linearized) message-passing algorithm that
keeps track of $\ell$-wise dependencies among the hidden variables.
Specifically, our algorithms are spectral methods based on the Kikuchi Hessian
matrix, which generalizes the well-studied Bethe Hessian matrix to the
higher-order Kikuchi free energies.
</p>
<p>It is known that AMP, the flagship algorithm of statistical physics, has
substantially worse performance than SOS for tensor PCA. In this work we
`redeem' the statistical physics approach by showing that our hierarchy gives a
polynomial-time algorithm matching the performance of SOS. Our hierarchy also
yields a continuum of subexponential-time algorithms, and we prove that these
achieve the same (conjecturally optimal) tradeoff between runtime and
statistical power as SOS. Our results hold for even-order tensors, and we
conjecture that they also hold for odd-order tensors.
</p>
<p>Our methods suggest a new avenue for systematically obtaining optimal
algorithms for Bayesian inference problems, and our results constitute a step
toward unifying the statistical physics and sum-of-squares approaches to
algorithm design.
</p></div>
    </summary>
    <updated>2019-04-09T01:31:45Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03836</id>
    <link href="http://arxiv.org/abs/1904.03836" rel="alternate" type="text/html"/>
    <title>A Fast Scheme for the Uniform Sampling of Binary Matrices with Fixed Margins</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Guanyang.html">Guanyang Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03836">PDF</a><br/><b>Abstract: </b>Uniform sampling of binary matrix with fixed margins is an important and
difficult problem in statistics, computer science, ecology and so on. The
well-known swap algorithm would be inefficient when the size of the matrix
becomes large or when the matrix is too sparse/full.
</p>
<p>Here we propose the Rectangle loop algorithm, a Markov-chain Monte Carlo
algorithm to sample binary matrices with fixed margins uniformly. Theoretically
the Rectangle loop algorithm is better than the swap algorithm in Peskun's
order. Empirically studies also demonstrates the Rectangle loop algorithm is
remarkablely more efficient than the swap algorithm.
</p></div>
    </summary>
    <updated>2019-04-09T01:24:40Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03796</id>
    <link href="http://arxiv.org/abs/1904.03796" rel="alternate" type="text/html"/>
    <title>Minimum Enclosing Ball Revisited: Stability and Sub-linear Time Algorithms</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Ding:Hu.html">Hu Ding</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03796">PDF</a><br/><b>Abstract: </b>In this paper, we revisit the Minimum Enclosing Ball (MEB) problem and its
robust version, MEB with outliers, in Euclidean space $\mathbb{R}^d$. Though
the problem has been extensively studied before, most of the existing
algorithms need at least linear time (in the number of input points $n$ and the
dimensionality $d$) to achieve a $(1+\epsilon)$-approximation. Motivated by
some recent developments on beyond worst-case analysis, we introduce the notion
of stability for MEB (with outliers), which is natural and easy to understand.
Under the stability assumption, we present two sampling algorithms for
computing approximate MEB with sample complexities independent of the number of
input points. Further, we achieve the first sub-linear time approximation
algorithm for MEB with outliers. We also show that our idea can be extended to
the general case of MEB with outliers ({\em i.e.,} without the stability
assumption), and obtain a sub-linear time bi-criteria approximation algorithm.
Our results can be viewed as a new step along the direction of beyond
worst-case analysis.
</p></div>
    </summary>
    <updated>2019-04-09T01:49:01Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03766</id>
    <link href="http://arxiv.org/abs/1904.03766" rel="alternate" type="text/html"/>
    <title>Generalized Persistence Algorithm for Decomposing Multi-parameter Persistence Modules</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dey:Tamal_K=.html">Tamal K. Dey</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xin:Cheng.html">Cheng Xin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03766">PDF</a><br/><b>Abstract: </b>The classical persistence algorithm virtually computes the unique
decomposition of a persistence module implicitly given by an input simplicial
filtration. Based on matrix reduction, this algorithm is a cornerstone of the
emergent area of topological data analysis. Its input is a simplicial
filtration defined over integers $\mathbb{Z}$ giving rise to a $1$-parameter
persistence module. It has been recognized that multi-parameter version of
persistence modules given by simplicial filtrations over $d$-dimensional
integer grids $\mathbb{Z}^d$ is equally or perhaps more important in data
science applications. However, in the multi-parameter setting, one of the main
bottlenecks is that topological summaries such as barcodes and distances among
them cannot be as efficiently computed as in the $1$-parameter case because
there is no known generalization of the persistence algorithm for computing the
decomposition of multi-parameter persistence modules. The Meataxe algorithm,
the only known one for computing such a decomposition runs in
$\tilde{O}(n^{6(d+1)})$ time where $n$ is the size of input module. We present
for the first time a generalization of the persistence algorithm based on a
generalized matrix reduction technique that runs in $O(n^{2\omega})$ time where
$\omega&lt;2.373$ is the exponent for matrix multiplication. We also present an
$O(n^{d+1})$ algorithm to convert the input filtration to a suitable matrix
called \textit{presentation matrix} which is ultimately decomposed. Various
structural and computational results connecting the graded modules from
commutative algebra to matrix reductions are established through the course.
</p></div>
    </summary>
    <updated>2019-04-09T01:47:41Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03764</id>
    <link href="http://arxiv.org/abs/1904.03764" rel="alternate" type="text/html"/>
    <title>Implicit Manifold Reconstruction</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cheng:Siu=Wing.html">Siu-Wing Cheng</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chiu:Man=Kwun.html">Man-Kwun Chiu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03764">PDF</a><br/><b>Abstract: </b>Let ${\cal M} \subset \mathbb{R}^d$ be a compact, smooth and boundaryless
manifold with dimension $m$ and unit reach. We show how to construct a function
$\varphi: \mathbb{R}^d \rightarrow \mathbb{R}^{d-m}$ from a uniform
$(\varepsilon,\kappa)$-sample $P$ of $\cal M$ that offers several guarantees.
Let $Z_\varphi$ denote the zero set of $\varphi$. Let $\widehat{{\cal M}}$
denote the set of points at distance $\varepsilon$ or less from $\cal M$. There
exists $\varepsilon_0 \in (0,1)$ that decreases as $d$ increases such that if
$\varepsilon \leq \varepsilon_0$, the following guarantees hold. First,
$Z_\varphi \cap \widehat{\cal M}$ is a faithful approximation of $\cal M$ in
the sense that $Z_\varphi \cap \widehat{\cal M}$ is homeomorphic to $\cal M$,
the Hausdorff distance between $Z_\varphi \cap \widehat{\cal M}$ and $\cal M$
is $O(m^{5/2}\varepsilon^{2})$, and the normal spaces at nearby points in
$Z_\varphi \cap \widehat{\cal M}$ and $\cal M$ make an angle
$O(m^2\sqrt{\kappa\varepsilon})$. Second, $\varphi$ has local support; in
particular, the value of $\varphi$ at a point is affected only by sample points
in $P$ that lie within a distance of $O(m\varepsilon)$. Third, we give a
projection operator that only uses sample points in $P$ at distance
$O(m\varepsilon)$ from the initial point. The projection operator maps any
initial point near $P$ onto $Z_\varphi \cap \widehat{\cal M}$ in the limit by
repeated applications.
</p></div>
    </summary>
    <updated>2019-04-09T01:46:54Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03741</id>
    <link href="http://arxiv.org/abs/1904.03741" rel="alternate" type="text/html"/>
    <title>Graph pattern detection: Hardness for all induced patterns and faster non-induced cycles</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dalirrooyfard:Mina.html">Mina Dalirrooyfard</a>, Thuy Duong Vuong, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Williams:Virginia_Vassilevska.html">Virginia Vassilevska Williams</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03741">PDF</a><br/><b>Abstract: </b>We consider the pattern detection problem in graphs: given a constant size
pattern graph $H$ and a host graph $G$, determine whether $G$ contains a
subgraph isomorphic to $H$. Our main results are:
</p>
<p>* We prove that if a pattern $H$ contains a $k$-clique subgraph, then
detecting whether an $n$ node host graph contains a not necessarily induced
copy of $H$ requires at least the time for detecting whether an $n$ node graph
contains a $k$-clique. The previous result of this nature required that $H$
contains a $k$-clique which is disjoint from all other $k$-cliques of $H$.
</p>
<p>* We show that if the famous Hadwiger conjecture from graph theory is true,
then detecting whether an $n$ node host graph contains a not necessarily
induced copy of a pattern with chromatic number $t$ requires at least the time
for detecting whether an $n$ node graph contains a $t$-clique. This implies
that: (1) under Hadwiger's conjecture for every $k$-node pattern $H$, finding
an induced copy of $H$ requires at least the time of $\sqrt k$-clique
detection, and at least size $\omega(n^{\sqrt{k}/4})$ for any constant depth
circuit, and (2) unconditionally, detecting an induced copy of a random
$G(k,p)$ pattern w.h.p. requires at least the time of $\Theta(k/\log k)$-clique
detection, and hence also at least size $n^{\Omega(k/\log k)}$ for circuits of
constant depth.
</p>
<p>* Finally, we consider the case when the pattern is a directed cycle on $k$
nodes, and we would like to detect whether a directed $m$-edge graph $G$
contains a $k$-Cycle as a not necessarily induced subgraph. We resolve a 14
year old conjecture of [Yuster-Zwick SODA'04] on the complexity of $k$-Cycle
detection by giving a tight analysis of their $k$-Cycle algorithm. Our analysis
improves the best bounds for $k$-Cycle detection in directed graphs, for all
$k&gt;5$.
</p></div>
    </summary>
    <updated>2019-04-09T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03723</id>
    <link href="http://arxiv.org/abs/1904.03723" rel="alternate" type="text/html"/>
    <title>Linear-Time and Efficient Distributed Algorithms for List Coloring Graphs on Surfaces</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Postle:Luke.html">Luke Postle</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03723">PDF</a><br/><b>Abstract: </b>In 1994, Thomassen proved that every planar graph is 5-list-colorable. In
1995, Thomassen proved that every planar graph of girth at least five is
3-list-colorable. His proofs naturally lead to quadratic-time algorithms to
find such colorings. Here, we provide the first such linear-time algorithms to
find such colorings.
</p>
<p>For a fixed surface S, Thomassen showed in 1997 that there exists a
linear-time algorithm to decide if a graph embedded in S is 5-colorable and
similarly in 2003 if a graph of girth at least five embedded in S is
3-colorable. Using the theory of hyperbolic families, the author and Thomas
showed such algorithms exist for list-colorings. Dvorak and Kawarabayashi
actually gave an $O(n^{O(g+1)})$-time algorithm to find such colorings (if they
exist) in n-vertex graphs where g is the Euler genus of the surface. Here we
provide the first such algorithm whose exponent does not depend on the genus;
indeed, we provide a linear-time algorithm.
</p>
<p>In 1988, Goldberg, Plotkin and Shannon provided a deterministic distributed
algorithm for 7-coloring n-vertex planar graphs in $O(\log n)$ rounds. In 2018,
Aboulker, Bonamy, Bousquet, and Esperet provided a deterministic distributed
algorithm for 6-coloring n-vertex planar graphs in $O(\log^3 n)$ rounds. Their
algorithm in fact works for 6-list-coloring. They also provided an $O(\log^3
n)$-round algorithm for 4-list-coloring triangle-free planar graphs. Chechik
and Mukhtar independently obtained such algorithms for ordinary coloring in
$O(\log n)$ rounds, which is best possible in terms of running time. Here we
provide the first polylogarithmic deterministic distributed algorithms for
5-coloring n-vertex planar graphs and similarly for 3-coloring planar graphs of
girth at least five. Indeed, these algorithms run in $O(\log n)$ rounds, work
also for list-colorings, and even work on a fixed surface (assuming such a
coloring exists).
</p></div>
    </summary>
    <updated>2019-04-09T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03636</id>
    <link href="http://arxiv.org/abs/1904.03636" rel="alternate" type="text/html"/>
    <title>Semi-Countable Sets and their Application to Search Problems</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>P. W. Adriaans <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03636">PDF</a><br/><b>Abstract: </b>We present the concept of the \emph{information efficiency of functions} as a
technique to understand the interaction between information and computation.
Based on these results we identify a new class of objects that we call
\emph{Semi-Countable Sets}. As the name suggests these sets form a separate
class of objects between countable and uncountable sets. In principle these
objects are countable, but the information in the descriptions of the elements
of the class grows faster than the information in the natural numbers that
index them. Any characterization of the class in terms of natural numbers is
fundamentally incomplete. Semi-countable sets define one-to-one injections into
the set of natural numbers that can be computed in exponential time, but not in
polynomial time. A characteristic semi-countable object is $\phi_{\Sigma}$ the
set of all additions for all finite sets of natural numbers. The class
$\phi_{\Sigma}$ codes the Subset Sum problem. This gives a natural and
transparant analysis of the separation between the classes $P$ and $NP$.
</p></div>
    </summary>
    <updated>2019-04-09T01:20:25Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03611</id>
    <link href="http://arxiv.org/abs/1904.03611" rel="alternate" type="text/html"/>
    <title>Near-linear time approximation schemes for Steiner tree and forest in low-dimensional spaces</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gottlieb:Lee=Ad.html">Lee-Ad Gottlieb</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bartal:Yair.html">Yair Bartal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03611">PDF</a><br/><b>Abstract: </b>We give an algorithm that computes a $(1+\epsilon)$-approximate Steiner
forest in near-linear time $n \cdot 2^{(1/\epsilon)^{O(ddim^2)} (\log \log
n)^2}$. This is a dramatic improvement upon the best previous result due to
Chan et al., who gave a runtime of $n^{2^{O(ddim)}} \cdot
2^{(ddim/\epsilon)^{O(ddim)} \sqrt{\log n}}$.
</p>
<p>For Steiner tree our methods achieve an even better runtime $n (\log
n)^{(1/\epsilon)^{O(ddim^2)}}$ in doubling spaces. For Euclidean space the
runtime can be reduced to $2^{(1/\epsilon)^{O(d^2)}} n \log n$, improving upon
the result of Arora in fixed dimension $d$.
</p></div>
    </summary>
    <updated>2019-04-09T01:46:16Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03602</id>
    <link href="http://arxiv.org/abs/1904.03602" rel="alternate" type="text/html"/>
    <title>Competitive ratio versus regret minimization: achieving the best of both worlds</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Daniely:Amit.html">Amit Daniely</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mansour:Yishay.html">Yishay Mansour</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03602">PDF</a><br/><b>Abstract: </b>We consider online algorithms under both the competitive ratio criteria and
the regret minimization one. Our main goal is to build a unified methodology
that would be able to guarantee both criteria simultaneously.
</p>
<p>For a general class of online algorithms, namely any Metrical Task System
(MTS), we show that one can simultaneously guarantee the best known competitive
ratio and a natural regret bound. For the paging problem we further show an
efficient online algorithm (polynomial in the number of pages) with this
guarantee.
</p>
<p>To this end, we extend an existing regret minimization algorithm
(specifically, Kapralov and Panigrahy) to handle movement cost (the cost of
switching between states of the online system). We then show how to use the
extended regret minimization algorithm to combine multiple online algorithms.
Our end result is an online algorithm that can combine a "base" online
algorithm, having a guaranteed competitive ratio, with a range of online
algorithms that guarantee a small regret over any interval of time. The
combined algorithm guarantees both that the competitive ratio matches that of
the base algorithm and a low regret over any time interval.
</p>
<p>As a by product, we obtain an expert algorithm with close to optimal regret
bound on every time interval, even in the presence of switching costs. This
result is of independent interest.
</p></div>
    </summary>
    <updated>2019-04-09T01:41:29Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03587</id>
    <link href="http://arxiv.org/abs/1904.03587" rel="alternate" type="text/html"/>
    <title>Fast Grid Splitting Detection for N-1 Contingency Analysis by Graph Computing</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhu:Yongli.html">Yongli Zhu</a>, Lingpeng Shi, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dai:Renchang.html">Renchang Dai</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Guangyi.html">Guangyi Liu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03587">PDF</a><br/><b>Abstract: </b>In this study, a graph-computing based grid splitting detection algorithm is
proposed for contingency analysis in a graph-based EMS (Energy Management
System). The graph model of a power system is established by storing its
bus-branch information into the corresponding vertex objects and edge objects
of the graph database. Numerical comparison to an up-to-date serial computing
algorithm is also investigated. Online tests on a real power system of China
State Grid with 2752 buses and 3290 branches show that a 6 times speedup can be
achieved, which lays a good foundation for advanced contingency analysis.
</p></div>
    </summary>
    <updated>2019-04-09T01:35:30Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03581</id>
    <link href="http://arxiv.org/abs/1904.03581" rel="alternate" type="text/html"/>
    <title>A Quantum Algorithm for Minimum Steiner Tree Problem</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Miyamoto:Masayuki.html">Masayuki Miyamoto</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Iwamura:Masakazu.html">Masakazu Iwamura</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kise:Koichi.html">Koichi Kise</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03581">PDF</a><br/><b>Abstract: </b>Minimum Steiner tree problem is a well-known NP-hard problem. For the minimum
Steiner tree problem in graphs with $n$ vertices and $k$ terminals, there are
many classical algorithms that take exponential time in $k$. In this paper, to
the best of our knowledge, we propose the first quantum algorithm for the
minimum Steiner tree problem. The complexity of our algorithm is
$\mathcal{O}^*(1.812^k)$. A key to realize the proposed method is how to reduce
the computational time of dynamic programming by using a quantum algorithm
because existing classical (non-quantum) algorithms in the problem rely on
dynamic programming. Fortunately, dynamic programming is realized by a quantum
algorithm for the travelling salesman problem, in which Grover's quantum search
algorithm is introduced. However, due to difference between their problem and
our problem to be solved, recursions are different. Hence, we cannot apply
their technique to the minimum Steiner tree problem in that shape. We solve
this issue by introducing a decomposition of a graph proposed by Fuchs et al.
</p></div>
    </summary>
    <updated>2019-04-09T01:35:59Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03467</id>
    <link href="http://arxiv.org/abs/1904.03467" rel="alternate" type="text/html"/>
    <title>Density-friendly Graph Decomposition</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tatti:Nikolaj.html">Nikolaj Tatti</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gionis:Aristides.html">Aristides Gionis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03467">PDF</a><br/><b>Abstract: </b>Decomposing a graph into a hierarchical structure via $k$-core analysis is a
standard operation in any modern graph-mining toolkit. $k$-core decomposition
is a simple and efficient method that allows to analyze a graph beyond its mere
degree distribution. More specifically, it is used to identify areas in the
graph of increasing centrality and connectedness, and it allows to reveal the
structural organization of the graph.
</p>
<p>Despite the fact that $k$-core analysis relies on vertex degrees, $k$-cores
do not satisfy a certain, rather natural, density property. Simply put, the
most central $k$-core is not necessarily the densest subgraph. This
inconsistency between $k$-cores and graph density provides the basis of our
study.
</p>
<p>We start by defining what it means for a subgraph to be locally-dense, and we
show that our definition entails a nested chain decomposition of the graph,
similar to the one given by $k$-cores, but in this case the components are
arranged in order of increasing density. We show that such a locally-dense
decomposition for a graph $G=(V,E)$ can be computed in polynomial time. The
running time of the exact decomposition algorithm is ${\cal O}(|V|^2|E|)$ but
is significantly faster in practice. In addition, we develop a linear-time
algorithm that provides a factor-2 approximation to the optimal locally-dense
decomposition. Furthermore, we show that the $k$-core decomposition is also a
factor-2 approximation, however, as demonstrated by our experimental
evaluation, in practice $k$-cores have different structure than locally-dense
subgraphs, and as predicted by the theory, $k$-cores are not always
well-aligned with graph density.
</p></div>
    </summary>
    <updated>2019-04-09T01:28:12Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03313</id>
    <link href="http://arxiv.org/abs/1904.03313" rel="alternate" type="text/html"/>
    <title>On the computational tractability of statistical estimation on amenable graphs</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Alaoui:Ahmed_El.html">Ahmed El Alaoui</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Montanari:Andrea.html">Andrea Montanari</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03313">PDF</a><br/><b>Abstract: </b>We consider the problem of estimating a vector of discrete variables
$(\theta_1,\cdots,\theta_n)$, based on noisy observations $Y_{uv}$ of the pairs
$(\theta_u,\theta_v)$ on the edges of a graph $G=([n],E)$. This setting
comprises a broad family of statistical estimation problems, including group
synchronization on graphs, community detection, and low-rank matrix estimation.
</p>
<p>A large body of theoretical work has established sharp thresholds for weak
and exact recovery, and sharp characterizations of the optimal reconstruction
accuracy in such models, focusing however on the special case of
Erd\"os-R\'enyi-type random graphs. The single most important finding of this
line of work is the ubiquity of an information-computation gap. Namely, for
many models of interest, a large gap is found between the optimal accuracy
achievable by any statistical method, and the optimal accuracy achieved by
known polynomial-time algorithms. This gap is robust to small amounts of
additional side information revealed about the $\theta_i$'s.
</p>
<p>How does the structure of the graph $G$ affect this picture? Is the
information-computation gap a general phenomenon or does it only apply to
specific families of graphs?
</p>
<p>We prove that the picture is dramatically different for graph sequences
converging to transitive amenable graphs (including, for instance,
$d$-dimensional grids). We consider a model in which an arbitrarily small
fraction of the vertex labels is revealed to the algorithm, and show that a
linear-time algorithm can achieve reconstruction accuracy that is arbitrarily
close to the information-theoretic optimum. We contrast this to the case of
random graphs. Indeed, focusing on group synchronization on random regular
graphs, we prove that the information-computation gap persists if a small
amounts of additional side information revealed about the labels $\theta_i$'s.
</p></div>
    </summary>
    <updated>2019-04-09T01:33:55Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03248</id>
    <link href="http://arxiv.org/abs/1904.03248" rel="alternate" type="text/html"/>
    <title>Average Sensitivity of Graph Algorithms</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Nithin Varma, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yoshida:Yuichi.html">Yuichi Yoshida</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03248">PDF</a><br/><b>Abstract: </b>In modern applications of graphs algorithms, where the graphs of interest are
large and dynamic, it is unrealistic to assume that an input representation
contains the full information of a graph being studied. Hence, it is desirable
to use algorithms that, even when only a (large) subgraph is available, output
solutions that are close to the solutions output when the whole graph is
available. We formalize this idea by introducing the notion of average
sensitivity of graph algorithms, which is the average earth mover's distance
between the output distributions of an algorithm on a graph and its subgraph
obtained by removing an edge, where the average is over the edges removed and
the distance between two outputs is the Hamming distance.
</p>
<p>In this work, we initiate a systematic study of average sensitivity. After
deriving basic properties of average sensitivity such as composability, we
provide efficient approximation algorithms with low average sensitivities for
concrete graph problems, including the minimum spanning forest problem, the
global minimum cut problem, the maximum matching problem, and the minimum
vertex cover problem. We also show that every algorithm for the 2-coloring
problem has average sensitivity linear in the number of vertices. To show our
algorithmic results, we establish and utilize the following fact; if the
presence of a vertex or an edge in the solution output by an algorithm can be
decided locally, then the algorithm has a low average sensitivity, allowing us
to reuse the analyses of known sublinear-time algorithms.
</p></div>
    </summary>
    <updated>2019-04-09T01:27:23Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03219</id>
    <link href="http://arxiv.org/abs/1904.03219" rel="alternate" type="text/html"/>
    <title>Network design for s-t effective resistance</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chan:Pak_Hay.html">Pak Hay Chan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lau:Lap_Chi.html">Lap Chi Lau</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schild:Aaron.html">Aaron Schild</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wong:Sam_Chiu=wai.html">Sam Chiu-wai Wong</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhou:Hong.html">Hong Zhou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03219">PDF</a><br/><b>Abstract: </b>We consider a new problem of designing a network with small $s$-$t$ effective
resistance. In this problem, we are given an undirected graph $G=(V,E)$, two
designated vertices $s,t \in V$, and a budget $k$. The goal is to choose a
subgraph of $G$ with at most $k$ edges to minimize the $s$-$t$ effective
resistance. This problem is an interpolation between the shortest path problem
and the minimum cost flow problem and has applications in electrical network
design.
</p>
<p>We present several algorithmic and hardness results for this problem and its
variants. On the hardness side, we show that the problem is NP-hard, and the
weighted version is hard to approximate within a factor smaller than two
assuming the small-set expansion conjecture. On the algorithmic side, we
analyze a convex programming relaxation of the problem and design a constant
factor approximation algorithm. The key of the rounding algorithm is a
randomized path-rounding procedure based on the optimality conditions and a
flow decomposition of the fractional solution. We also use dynamic programming
to obtain a fully polynomial time approximation scheme when the input graph is
a series-parallel graph, with better approximation ratio than the integrality
gap of the convex program for these graphs.
</p></div>
    </summary>
    <updated>2019-04-09T01:37:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03214</id>
    <link href="http://arxiv.org/abs/1904.03214" rel="alternate" type="text/html"/>
    <title>The complexity of 3-colouring $H$-colourable graphs</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Andrei Krokhin, Jakub Opršal <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03214">PDF</a><br/><b>Abstract: </b>We study the complexity of approximation on satisfiable instances for graph
homomorphism problems. For a fixed graph $H$, the $H$-colouring problem is to
decide whether a given graph has a homomorphism to $H$. By a result of Hell and
Ne\v{s}et\v{r}il, this problem is NP-hard for any non-bipartite graph $H$. In
the context of promise constraint satisfaction problems, Brakensiek and
Guruswami conjectured that this hardness result extends to promise graph
homomorphism as follows: fix any non-bipartite graph $H$ and another graph $G$
with a homomorphism from $H$ to $G$, it is NP-hard to find a homomorphism to
$G$ from a given $H$-colourable graph. Arguably, the two most important special
cases of this conjecture are when $H$ is fixed to be $K_3$ (and $G$ is any
graph with a triangle) and when $G=K_3$ (and $H$ is any 3-colourable graph).
The former case is equivalent to the notoriously difficult approximate graph
colouring problem. In this paper, we confirm the Brakensiek-Guruswami
conjecture for the latter case. Our proofs rely on a novel combination of the
universal-algebraic approach to promise constraint satisfaction, that was
recently developed by Bul\'in and the authors, with some ideas from algebraic
topology.
</p></div>
    </summary>
    <updated>2019-04-09T01:22:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03213</id>
    <link href="http://arxiv.org/abs/1904.03213" rel="alternate" type="text/html"/>
    <title>Spectral analysis of matrix scaling and operator scaling</title>
    <feedworld_mtime>1554768000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kwok:Tsz_Chiu.html">Tsz Chiu Kwok</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lau:Lap_Chi.html">Lap Chi Lau</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Ramachandran:Akshay.html">Akshay Ramachandran</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03213">PDF</a><br/><b>Abstract: </b>We present a spectral analysis for matrix scaling and operator scaling. We
prove that if the input matrix or operator has a spectral gap, then a natural
gradient flow has linear convergence. This implies that a simple gradient
descent algorithm also has linear convergence under the same assumption. The
spectral gap condition for operator scaling is closely related to the notion of
quantum expander studied in quantum information theory.
</p>
<p>The spectral analysis also provides bounds on some important quantities of
the scaling problems, such as the condition number of the scaling solution and
the capacity of the matrix and operator. These bounds can be used in various
applications of scaling problems, including matrix scaling on expander graphs,
permanent lower bounds on random matrices, the Paulsen problem on random
frames, and Brascamp-Lieb constants on random operators. In some applications,
the inputs of interest satisfy the spectral condition and we prove
significantly stronger bounds than the worst case bounds.
</p></div>
    </summary>
    <updated>2019-04-09T01:31:25Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-09T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-events.org/2019/04/08/computer-science-summer-in-russia/</id>
    <link href="https://cstheory-events.org/2019/04/08/computer-science-summer-in-russia/" rel="alternate" type="text/html"/>
    <title>Computer Science Summer in Russia</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">June 24 – July 5, 2019 Akademgorodok, Novosibirsk, Russia http://cssr.nsu.ru/school/ Registration deadline: May 12, 2019 The school will take place from 24 -29 June, 2019 at Novosibirsk State University and targets student audience from Russia and neighbor countries. The school consists of two parallel tracks: The Theory of Programming + Methods of Software Verification &amp; … <a class="more-link" href="https://cstheory-events.org/2019/04/08/computer-science-summer-in-russia/">Continue reading <span class="screen-reader-text">Computer Science Summer in Russia</span></a></div>
    </summary>
    <updated>2019-04-08T23:07:16Z</updated>
    <published>2019-04-08T23:07:16Z</published>
    <category term="school"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-events.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-events.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-events.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-events.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-events.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Aggregator for CS theory workshops, schools, and so on</subtitle>
      <title>CS Theory Events</title>
      <updated>2019-04-09T08:21:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://bit-player.org/?p=2150</id>
    <link href="http://bit-player.org/2019/737-the-max-mess" rel="alternate" type="text/html"/>
    <link href="http://bit-player.org/2019/737-the-max-mess#comments" rel="replies" type="text/html"/>
    <link href="http://bit-player.org/2019/737-the-max-mess/feed/atom" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">737: The MAX Mess</title>
    <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">Controlled Flight into Terrain is the aviation industry’s term for what happens when a properly functioning airplane plows into the ground because the pilots are distracted or disoriented. What a nightmare. Even worse, in my estimation, is Automated Flight into … <a href="http://bit-player.org/2019/737-the-max-mess">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>Controlled Flight into Terrain</em> is the aviation industry’s term for what happens when a properly functioning airplane plows into the ground because the pilots are distracted or disoriented. What a nightmare. Even worse, in my estimation, is <em>Automated Flight into Terrain</em>, when an aircraft’s control system forces it into a fatal nose dive despite the frantic efforts of the crew to save it. That is the conjectured cause of two recent crashes of new Boeing 737 MAX 8 airplanes. I’ve been trying to reason my way through to an understanding of how those accidents could have happened.</p>
<p>Disclaimer: The investigations of the MAX 8 disasters are in an early stage, so much of what follows is based on secondary sources—in other words, on leaks and rumors and the speculations of people who may or may not know what they’re talking about. As for my own speculations: I’m not an aeronautical engineer, or an airframe mechanic, or a control theorist. I’m not even a pilot. Please keep that in mind if you choose to read on.</p>
<h3>The accidents</h3>
<p>Early on the morning of October 29, 2018, Lion Air Flight 610 departed Jakarta, Indonesia, with 189 people on board. The airplane was a four-month-old 737 MAX 8—the latest model in a line of Boeing aircraft that goes back to the 1960s. Takeoff and climb were normal to about 1,600 feet, where the pilots retracted the flaps (wing extensions that increase lift at low speed). At that point the aircraft unexpectedly descended to 900 feet. In radio conversations with air traffic controllers, the pilots reported a “flight control problem” and asked about their altitude and speed as displayed on the controllers’ radar screens. Cockpit instruments were giving inconsistent readings. The pilots then redeployed the flaps and climbed to 5,000 feet, but when the flaps were stowed again, the nose dipped and the plane began to lose altitude. Over the next six or seven minutes the pilots engaged in a tug of war with their own aircraft, as they struggled to keep the nose level but the flight control system repeatedly pushed it down. In the end the machine won. The airplane plunged into the sea at high speed, killing everyone aboard.</p>
<p>The second crash happened March 8, when Ethiopian Airlines Flight 302 went down six minutes after taking off from Addis Ababa, killing 157. The aircraft was another MAX 8, just two months old. The pilots reported control problems, and data from a satellite tracking service showed sharp fluctuations in altitude. The similarities to the Lion Air crash set off alarm bells: If the same malfunction or design flaw caused both accidents, it might also cause more. Within days, the worldwide fleet of 737 MAX aircraft was grounded. Data recovered since then from the Flight 302 wreckage has reinforced the suspicion that the two accidents are closely related.</p>
<p>The grim fate of Lion Air 610 can be traced in brightly colored squiggles extracted from the flight data recorder. (The chart was published in November in a <a href="http://jacdec.de/database/2018-10-29_PK-LQP-NTSC_Preliminary%20Report.pdf">preliminary report</a> from the Indonesian National Committee on Transportation Safety.)</p>
<p><img alt="Lion Air 610 flight data chart 1280" border="0" class="centered withLoupe" height="834" src="http://bit-player.org/wp-content/uploads/2019/03/Lion-Air-610-flight-data-chart-1280.jpg" width="900"/></p>
<p>The outline of the story is given in the altitude traces at the bottom of the chart. The initial climb is interrupted by a sharp dip; then a further climb is followed by a long, erratic roller coaster ride. At the end comes the dive, as the aircraft plunges 5,000 feet in a little more than 10 seconds. (Why are there two altitude curves, separated by a few hundred feet? I’ll come back to that question at the end of this long screed.)</p>
<p>All those ups and downs were caused by movements of the horizontal stabilizer, the small winglike control surface at the rear of the fuselage. <img alt="Stabilizer elevator diagram" border="0" class="alignright" height="" src="http://bit-player.org/wp-content/uploads/2019/04/stabilizer_elevator_diagram.svg" style="margin-bottom: 12px;" width="250"/>The stabilizer controls the airplane’s pitch attitude—nose-up vs. nose-down. On the 737 it does so in two ways. A mechanism for pitch <em>trim</em> tilts the entire stabilizer, whereas push­ing or pulling on the pilot’s control yoke moves the elevator, a hinged tab at the rear of the stabilizer. In either case, moving the trailing edge of the surface upward tends to force the nose of the airplane up, and vice versa. Here we’re mainly concerned with trim changes rather than elevator movements.</p>
<p>Commands to the pitch-trim system and their effect on the airplane are shown in three traces from the flight data, which I reproduce here for convenience:</p>
<p><img alt="Lion Air 610 flight data chart trim commands" border="0" class="aligncenter" height="117" src="http://bit-player.org/wp-content/uploads/2019/04/Lion-Air-610-flight-data-chart-trim-commands.jpg" width="640"/></p>
<p>The line labeled “trim manual” <em>(light blue)</em> reflects the pilots’ inputs, “trim automatic” <em>(orange)</em> shows commands from the airplane’s electronic systems, and “pitch trim position” <em>(dark blue)</em> represents the tilt of the stabilizer, with higher position on the scale denoting a nose-up command. This is where the tug of war between man and machine is clearly evident. In the latter half of the flight, the automatic trim system repeatedly commands nose down, at intervals of roughly 10 seconds. In the breaks between those automated commands, the pilots dial in nose-up trim, using buttons on the control yoke. In response to these conflicting commands, the position of the horizontal stabilizer oscillates with a period of 15 or 20 seconds. The see-sawing motion continues for at least 20 cycles, but toward the end the unrelenting automatic nose-down adjustments prevail over the briefer nose-up commands from the pilots. The stabilizer finally reaches its limiting nose-down deflection and stays there as the airplane plummets into the sea.</p>
<h3>Angle of attack</h3>
<p>What’s to blame for the perverse behavior of the automatic pitch trim system? The accusatory finger is pointing at something called MCAS, a new feature of the 737 MAX series. MCAS stands for Maneuvering Characteristics Augmentation System—an im­pressively polysyllabic name that tells you nothing about what the thing is or what it does. As I understand it, MCAS is not a piece of hardware; there’s no box labeled MCAS in the airplane’s electronic equipment bays. MCAS consists entirely of software. It’s a program running on a computer.</p>
<p>MCAS has just one function. It is designed to help prevent an aerodynamic stall, a situation in which an airplane has its nose pointed up so high with respect to the surrounding airflow that the wings can’t keep it aloft. A stall is a little like what happens to a bicyclist climbing a hill that keeps getting steeper and steeper: Eventually the rider runs out of oomph, wobbles a bit, and then rolls back to the bottom. Pilots are taught to recover from stalls, but it’s not a skill they routinely practice with a planeful of passengers. In commercial aviation the emphasis is on <em>avoiding</em> stalls—forestalling them, so to speak. Airliners have mechanisms to detect an imminent stall and warn the pilot with lights and horns and a “stick shaker” that vibrates the control yoke. On Flight 610, the captain’s stick was shaking almost from start to finish.</p>
<p>Some aircraft go beyond mere warnings when a stall threatens. If the aircraft’s nose continues to pitch upward, an automated system intervenes to push it back down—if necessary overriding the manual control inputs of the pilot. MCAS is designed to do exactly this. It is armed and ready whenever two criteria are met: The flaps are up (generally true except during takeoff and landing) and the airplane is under manual control (not autopilot). Under these conditions the system is triggered whenever an aerodynamic quantity called angle of attack, or AoA, rises into a dangerous range.</p>
<p>Angle of attack is a concept subtle enough to merit a diagram:Adapted from Lisa R. Le Vie, <a href="https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20140011419.pdf">Review of Research on Angle-of-Attack Indi­cator Effectiveness</a>.</p>
<p><img alt="Le Vie angle of attack diagram detail" border="0" class="centered" height="229" src="http://bit-player.org/wp-content/uploads/2019/03/Le-Vie-angle-of-attack-diagram-detail.png" width="607"/></p>
<p class="undent">The various angles at issue are rotations of the aircraft body around the pitch axis, a line parallel to the wings, perpendicular to the fuselage, and passing through the airplane’s center of gravity. If you’re sitting in an exit row, the pitch axis might run right under your seat. Rotation about the pitch axis tilts the nose up or down. <em>Pitch attitude</em> is defined as the angle of the fuselage with respect to a horizontal plane. The <em>flight-path angle</em> is measured between the horizontal plane and the aircraft’s velocity vector, thus showing how steeply it is climbing or descending. <em>Angle of attack</em> is the difference between pitch attitude and flight-path angle. It is the angle at which the aircraft is moving through the surrounding air (assuming the air itself is motionless, <em>i.e.</em>, no wind).</p>
<p>AoA affects both lift (the upward force opposing the downward tug of gravity) and drag (the dissipative force opposing forward motion and the thrust of the engines). As AoA increases from zero, lift is enhanced because of air impinging on the underside of the wings and fuselage. For the same reason, however, drag also increases. As the angle of attack grows even steeper, the flow of air over the wings becomes turbulent; beyond that point lift diminishes but drag continues increasing. That’s where the stall sets in. The critical angle for a stall depends on speed, weight, and other factors, but usually it’s no more than 15 degrees.</p>
<p>Neither the Lion Air nor the Ethiopian flight was ever in danger of stalling, so if MCAS was activated, it must have been by mistake. The working hypothesis mentioned in many press accounts is that the system received and acted upon erroneous input from a failed AoA sensor. </p>
<p>A sensor to measure angle of attack is conceptually simple. It’s essentially a weather­vane poking out into the airstream. In the photo below, the angle-of-attack sensor is the small black vane just forward of the “737 MAX” legend. Hinged at the front, the vane rotates to align itself with the local airflow and generates an electrical signal that rep­resents the vane’s angle with respect to the axis of the fuselage. The 737 MAX has two angle-of-attack vanes, one on each side of the nose. (The protruding devices above the AoA vane are pitot tubes, used to measure air speed. Another device below the word MAX is probably a temperature sensor.)</p>
<p><img alt="SpiritofRenton nose1280" border="0" class="centered" height="452" src="http://bit-player.org/wp-content/uploads/2019/03/SpiritofRenton-nose1280.jpg" width="640"/></p>
<p class="indent">Angle of attack was not among the variables displayed to the pilots of the Lion Air 737, but the flight data recorder did capture signals derived from the two AoA sensors:</p>
<p><img alt="Lion Air 610 flight data chart AoA details" border="0" class="centered" height="60" src="http://bit-player.org/wp-content/uploads/2019/04/Lion-Air-610-flight-data-chart-AoA-details.jpg" width="640"/></p>
<p class="undent">There’s something dreadfully wrong here. The left sensor is indicating an angle of attack about 20 degrees steeper than the right sensor. That’s a huge discrepancy. There’s no plausible way those disparate readings could reflect the true state of the airplane’s motion through the air, with the left side of the nose pointing sky-high and the right side near level. One of the measurements must be wrong, and the higher reading is the suspect one. If the true angle of attack ever reached 20 degrees, the airplane would already be in a deep stall. Unfortunately, on Flight 610 MCAS was taking data only from the left-side AoA sensor. It interpreted the nonsensical measurement as a valid indicator of aircraft attitude, and worked relentlessly to correct it, up to the very moment the airplane hit the sea.</p>
<h3>Cockpit automation</h3>
<p>The tragedies in Jakarta and Addis Ababa are being framed as a cautionary tale of automation run amok, with computers usurping the authority of pilots. The <em>Washington Post</em> <a href="https://www.washingtonpost.com/opinions/the-boeing-crashes-are-a-cautionary-tale-about-automation/2019/03/27/62c09154-4fd0-11e9-8d28-f5149e5a2fda_story.html?utm_term=.514085b92e47">editorialized</a>: </p>
<blockquote><p>A second fatal airplane accident involving a Boeing 737 MAX 8 may have been a case of man vs. machine…. The debacle shows that regulators should apply extra review to systems that take control away from humans when safety is at stake.</p></blockquote>
<p class="undent">Tom Dieusaert, a Belgian journalist who writes often on aviation and computation, offered this <a href="https://medium.com/crash-investigators/computer-crash-on-a-boeing-what-we-do-know-about-lion-air-jt610-9b5dbd654c75">opinion</a>:</p>
<blockquote><p>What can’t be denied is that the Boeing of Flight JT610 had serious computer problems. And in the hi-tech, fly-by-wire world of aircraft manufacturers, where pilots are reduced to button pushers and passive observers, these accidents are prone to happen more in the future.</p></blockquote>
<p>The button-pushing pilots are particularly irate. <a href="https://drive.google.com/file/d/1249KS8xtIDKb5SxgpeFI6AD-PSC6nFA5/view">Gregory Travis</a>, who is both a pilot and software developer, summed up his feelings in this acerbic comment:</p>
<blockquote><p>“Raise the nose, HAL.” </p>
<p class="undent">“I’m sorry, Dave, I can’t do that.”</p>
</blockquote>
<p>Even Donald Trump <a href="https://twitter.com/realDonaldTrump/status/1105468569800839169">tweeted</a> on the issue:</p>
<blockquote><p>Airplanes are becoming far too complex to fly. Pilots are no longer needed, but rather computer scientists from MIT. I see it all the time in many products. Always seeking to go one unnecessary step further, when often old and simpler is far better. Split second decisions are…. </p>
<p>….needed, and the complexity creates danger. All of this for great cost yet very little gain. I don’t know about you, but I don’t want Albert Einstein to be my pilot. I want great flying professionals that are allowed to easily and quickly take control of a plane!</p></blockquote>
<p>There’s considerable irony in the complaint that the 737 is too automated; in many respects the aircraft is in fact quaintly old-fashioned. The basic design goes back more than 50 years, and even in the latest MAX models quite a lot of 1960s technology survives. The primary flight controls are hydraulic, with a spider web of high-pressure tubing running directly from the control yokes in the cockpit to the ailerons, elevator, and rudder. If the hydraulic systems should fail, there’s a purely mechanical backup, with cables and pulleys to operate the various control surfaces. For stabilizer trim the primary actuator is an electric motor, but again there’s a mechanical fallback, with crank wheels near the pilots’ knees pulling on cables that run all the way back to the tail.</p>
<p>Other aircraft are much more dependent on computers and electronics. The 737′s principal competitor, the Airbus A320, is a thoroughgoing fly-by-wire vehicle. The pilot flies the computer, and the computer flies the airplane. Specifically, the pilot decides where to go—up, down, left, right—but the computer decides how to get there, choosing which control surfaces to deflect and by how much. Boeing’s own more recent designs, the 777 and 787, also rely on digital controls. Indeed, the latest models from both companies go a step beyond fly-by-wire to fly-by-network. Most of the communication from sensors to computers and onward to control surfaces consists of digital packets flowing through a <a href="https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20150011061.pdf">variant of Ethernet</a>. The airplane is a computer peripheral.</p>
<p>Thus if you want to gripe about the dangers and indignities of automation on the flight deck, the 737 is not the most obvious place to start. And a Luddite campaign to smash all the avionics and put pilots back in the seat of their pants would be a dangerously off-target response to the current predicament. There’s no question the 737 MAX has a critical problem. It’s a matter of life and death for those who would fly in it and possibly also for the Boeing Company. But the problem didn’t start with MCAS. It started with earlier decisions that made MCAS necessary. Furthermore, the problem may not end with the remedy that Boeing has proposed—a software update that will hobble MCAS and leave more to the discretion of pilots.</p>
<h3>Maxing out the 737</h3>
<p>The 737 flew its first passengers in 1968. It was (and still is) the smallest member of the Boeing family of jet airliners, and it is also the most popular by far. More than 10,000 have been sold, and Boeing has orders for another 4,600. Of course there have been changes over the years, especially to engines and instruments. A 1980s update came to be known as 737 Classic, and a 1997 model was called 737 NG, for “next generation.” (Now, with the MAX, the NG has become the <em>previous</em> generation.) Through all these revisions, however, the basic structure of the airframe has hardly changed.</p>
<p>Ten years ago, it looked like the 737 had finally come to the end of its life. Boeing announced it would develop an all-new design as a replacement, with a hull built of lightweight composite materials rather than aluminum. Competitive pressures forced a change of course. Airbus had a head start on the A320neo, an update that would bring more efficient engines to their entry in the same market segment. The revised Airbus would be ready around 2015, whereas Boeing’s clean-slate project would take a decade. Customers were threatening to defect. In particular, American Airlines—long a Boeing loyalist—was negotiating a large order of A320neos. </p>
<p>In 2011 Boeing scrapped the plan for an all-new design and elected to do the same thing Airbus was doing: bolt new engines onto an old airframe. This would eliminate most of the up-front design work, as well as the need to build tooling and manufacturing facilities. Testing and certification by the FAA would also go quicker, so that the first deliveries might be made in five or six years, not too far behind Airbus.</p>
<p>A 737-800 (a pre-MAX model) burns about 800 gallons of jet fuel per hour aloft. That comes to $2,000 at $2.50 per gallon. If the airplane flies 10 hours a day, the annual fuel bill is $7.3 million. Fourteen percent of that is just over $1 million.The new engines mated to the 737 promised a 14 percent gain in fuel efficiency, which might save an airline a million dollars a year in operating costs. The better fuel economy would also increase the airplane’s range. And to sweeten the deal Boeing proposed to keep enough of the airframe unchanged that the new model would operate under the same “type certificate” as the old one. A pilot qualified to fly the 737 NG could step into the MAX without extensive retraining.</p>
<p><img alt="737 200 and 737 MAX compared" border="0" class="centered" height="272" src="http://bit-player.org/wp-content/uploads/2019/04/737-200-and-737-MAX-compared.jpg" width="640"/>Sources: <em>(left)</em> <a href="https://www.flickr.com/people/12094576@N08">Bryan</a> via Wikimedia, <a href="https://creativecommons.org/licenses/by/2.0/deed.en">CC BY 2.0</a>; <em>(right)</em> <a href="https://www.flickr.com/people/71965027@N02">Steve Lynes</a> via Wikimedia, <a href="https://creativecommons.org/licenses/by/2.0/deed.en">CC BY 2.0</a>.</p>
<p class="indent">The original 1960s 737 had two cigar-shaped engines, long and skinny, tucked up under the wings <em>(left photo above)</em>. Since then, jet engines have grown fat and stubby. They derive much of their thrust not from the jet exhaust coming out of the tailpipe but from “bypass” air moved by a large-diameter fan. Such engines would scrape on the ground if they were mounted under the wings of the 737; instead they are perched on pylons that extend forward from the leading edge of the wing. The engines on the MAX models <em>(right photo)</em> are the fattest yet, with a fan 69 inches in diameter. Compared with the NG series, the MAX engines are pushed a few inches farther forward and hang a few inches lower.</p>
<p>A <a href="https://www.nytimes.com/2019/03/23/business/boeing-737-max-crash.html?action=click&amp;module=RelatedCoverage&amp;pgtype=Article&amp;region=Footer">New York Times article</a> by David Gelles, Natalie Kitroeff, Jack Nicas, and Rebecca R. Ruiz describes the plane’s development as hurried and hectic.</p>
<blockquote><p>Months behind Airbus, Boeing had to play catch-up. The pace of the work on the 737 Max was frenetic, according to current and former employees who spoke with <em>The New York Times</em>…. Engineers were pushed to submit technical drawings and designs at roughly double the normal pace, former employees said.</p></blockquote>
<p>The <em>Times</em> article also notes:  “Although the project had been hectic, current and former employees said they had finished it feeling confident in the safety of the plane.” </p>
<h3>Pitch instability</h3>
<p>Sometime during the development of the MAX series, Boeing got an unpleasant surprise. The new engines were causing unwanted pitch-up movements under certain flight con­ditions. When I first read about this problem, soon after the Lion Air crash, I found the following explanation is an article by Sean Broderick and Guy Norris in <em>Aviation Week and Space Technology</em> (Nov. 26–Dec. 9, 2018, pp. 56–57):</p>
<blockquote><p>Like all turbofan-powered airliners in which the thrust lines of the engines pass below the center of gravity (CG), any change in thrust on the 737 will result in a change of flight path angle caused by the vertical component of thrust.</p></blockquote>
<p>In other words, the low-slung engines not only push the airplane forward but also tend to twirl it around the pitch axis. It’s like a motorcycle doing wheelies. Because the MAX engines are mounted farther below and in front of the center of gravity, they act through a longer lever arm and cause more severe pitch-up motions. </p>
<p>I found more detail on this effect in an <a href="https://aviationweek.com/commercial-aviation/pilot-report-flying-737-8-boeing-s-new-narrowbody-breadwinner">earlier <em>Aviation Week</em> article</a>, a 2017 pilot report by Fred George, describing his first flight at the controls of the new MAX 8. </p>
<blockquote><p>The aircraft has sufficient natural speed stability through much of its flight envelope. But with as much as 58,000 lb. of thrust available from engines mounted well below the center of gravity, there is pronounced thrust-versus-pitch coupling at low speeds, especially with aft center of gravity (CG) and at light gross weights. Boeing equips the aircraft with a speed-stability augmen­tation function that helps to compensate for the coupling by automatically trimming the horizontal stabilizer according to indicated speed, thrust lever position and CG. Pilots still must be aware of the effect of thrust changes on pitching moment and make purposeful control-wheel and pitch-trim inputs to counter it.</p></blockquote>
<p>The reference to an “augmentation function” that works by “automatically trimming the horizontal stabilizer” sounded awfully familiar, but it turns out this is <em>not</em> MCAS. The system that compensates for thrust-pitch coupling is known as <em>speed-trim</em>. Like MCAS, it works “behind the pilot’s back,” making adjustments to control surfaces that were not directly commanded. There’s yet another system of this kind called <em>mach-trim</em> that silently corrects a different pitch anomally when the aircraft reaches transonic speeds, at about mach 0.6. Neither of these systems is new to the MAX series of aircraft; they have been part of the control algorithm at least since the NG came out in 1997. MCAS runs on the same computer as speed-trim and mach-trim and is part of the same software system, but it is a distinct function. And according to what I’ve been reading in the past few weeks, it addresses a different problem—one that seems more sinister.</p>
<p>Most aircraft have the pleasant property of static stability. When an airplane is properly trimmed for level flight, you can let go of the controls—at least briefly—and it will continue on a stable path. Moreover, if you pull back on the control yoke to point the nose up, then let go again, the pitch angle should return to neutral. The layout of the airplane’s various airfoil surfaces accounts for this behavior. When the nose goes up, the tail goes down, pushing the underside of the horizontal stabilizer into the airstream. The pressure of the air against this tail surface provides a restoring force that brings the tail back up and the nose back down. (That’s why it’s called a <em>stabilizer</em>!) This negative feedback loop is built in to the structure of the airplane, so that any departure from equilibrium creates a force that opposes the disturbance.</p>
<p><img alt="Pitch stability" border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2019/04/pitch-stability.svg" width="600"/></p>
<p class="indent">However, the tail surface, with its helpful stablizing influence, is not the only structure that affects the balance of aerodynamic forces. Jet engines are not designed to contribute lift to the airplane, but at high angles of attack they can do so, as the airstream impinges on the lower surface of each engine’s outer covering, or nacelle. When the engines are well forward of the center of gravity, the lift creates a pitch-up turning moment. If this moment exceeds the counterbalancing force from the tail, the aircraft is unstable. A nose-up attitude generates forces that raise the nose still higher, and positive feedback takes over.</p>
<p>Is the 737 MAX vulnerable to such runaway pitch excursions? The possibility had not occurred to me until I read a <a href="http://www.b737.org.uk/mcas.htm">commentary on MCAS</a> on the <a href="http://www.b737.org.uk/index.htm">Boeing 737 Technical Site</a>, a web publication produced by Chris Brady, a former 737 pilot and flight instructor. He writes:</p>
<blockquote><p>MCAS is a longitudinal stability enhancement. It is not for stall prevention or to make the MAX handle like the NG; it was introduced to counteract the non-linear lift of the LEAP-1B engine nacelles and give a steady increase in stick force as AoA increases. The LEAP engines are both larger and relocated slightly up and forward from the previous NG CFM56-7 engines to accommodate their larger fan diameter. This new location and size of the nacelle cause the vortex flow off the nacelle body to produce lift at high AoA; as the nacelle is ahead of the CofG this lift causes a slight pitch-up effect (ie a reducing stick force) which could lead the pilot to further increase the back pressure on the yoke and send the aircraft closer towards the stall. This non-linear/reducing stick force is not allowable underFAR = Federal Air Regulations. <a href="https://www.ecfr.gov/cgi-bin/text-idx?SID=1a3ab2a8cbd0ea0ab242c75558315fc2&amp;mc=true&amp;node=pt14.1.25&amp;rgn=div5">Part 25</a> deals with airworthiness standards for transport category airplanes. FAR §25.173 “Static longitudinal stability”. MCAS was therefore introduced to give an automatic nose down stabilizer input during steep turns with elevated load factors (high AoA) and during flaps up flight at airspeeds approaching stall.</p></blockquote>
<p class="indent">Brady cites no sources for this statement, and as far as I know Boeing has neither confirmed nor denied. But <em>Aviation Week</em>, which earlier mentioned the thrust-pitch linkage, has more recently (<a href="https://aviationweek.com/commercial-aviation/boeing-737-max-mcas-explained">issue of March 20</a>) gotten behind the nacelle-lift instability hypothesis:</p>
<blockquote><p>The MAX’s larger CFM Leap 1 engines create more lift at high AOA and give the aircraft a greater pitch-up moment than the CFM56-7-equipped NG. The MCAS was added as a certification requirement to minimize the handling difference between the MAX and NG.</p></blockquote>
<p class="indent">Assuming the Brady account is correct, an interesting question is when Boeing noticed the instability. Were the designers aware of this hazard from the outset? Did it emerge during early computer simulations, or in wind tunnel testing of scale models? A story by Dominic Gates in the <em>Seattle Times</em> hints that Boeing may not have recognized the severity of the problem until flight tests of the first completed aircraft began in 2015.</p>
<p>According to Gates, the safety analysis that Boeing submitted to the FAA specified that MCAS would be allowed to move the horizontal stabilizer by no more than 0.6 degree. In the airplane ultimately released to the market, MCAS can go as far as 2.5 degrees, and it can act repeatedly until reaching the mechanical limit of motion at about 5 degrees. <a href="https://www.seattletimes.com/business/boeing-aerospace/failed-certification-faa-missed-safety-issues-in-the-737-max-system-implicated-in-the-lion-air-crash/">Gates writes</a>:</p>
<blockquote><p>That limit was later increased after flight tests showed that a more powerful movement of the tail was required to avert a high-speed stall, when the plane is in danger of losing lift and spiraling down.</p>
<p>The behavior of a plane in a high angle-of-attack stall is difficult to model in advance purely by analysis and so, as test pilots work through stall-recovery routines during flight tests on a new airplane, it’s not uncommon to tweak the control software to refine the jet’s performance.</p></blockquote>
<p>The high-AoA instability of the MAX appears to be a property of the aerodynamic form of the entire aircraft, and so a direct way to suppress it would be to alter that form. For example, enlarging the tail surface might restore static stability. But such airframe modifications would have delayed the delivery of the airplane, especially if the need for them was discovered only after the first prototypes were already flying. Structural changes might also jeopardize inclusion of the new model under the old type certificate. Modifying software instead of aluminum must have looked like an attractive alternative. Someday, perhaps, we’ll learn how the decision was made.</p>
<p>By the way, according to Gates, the safety document filed with the FAA specifying a 0.6 degree limit has yet to be amended to reflect the true range of MCAS commands.</p>
<h3>Flying while unstable</h3>
<p>Instability is not necessarily the kiss of death in an airplane. There have been at least a few successful unstable designs, starting with the 1903 Wright Flyer. The Wright brothers deliberately put the horizontal stabilizer in front of the wing rather than behind it because their earlier experiments with kites and gliders had shown that what we call stability can also be described as sluggishness. The Flyer’s forward control surfaces (known as canards) tended to amplify any slight nose-up or nose-down motions. Maintaining a steady pitch attitude demanded high alertness from the pilot, but it also allowed the airplane to respond more quickly when the pilot <em>wanted</em> to pitch up or down. (The pros and cons of the design are reviewed in a 1984 <a href="https://authors.library.caltech.edu/21217/">paper</a> by Fred E. C. Culick and Henry R. Jex.)</p>
<p><img alt="Wright First Flight 1903Dec17" border="0" class="centered" height="213" src="http://bit-player.org/wp-content/uploads/2019/04/Wright_First_Flight_1903Dec17.jpg" width="640"/>Orville at the controls, Wilbur running alongside, at Kitty Hawk on December 17, 1903. In this view we are seeing the airplane from the stern. The canards—dual adjustable horizontal surfaces at the front—seem to be calling for nose-up pitch. (Photo from <a href="https://commons.wikimedia.org/wiki/File:Wright_First_Flight_1903Dec17_(full_restore_115).jpg">WikiMedia</a>.</p>
<p class="indent">Another dramatically unstable aircraft was the Grumman X-29, a research platform designed in the 1980s. The X-29 had its wings on backwards; to make matters worse,<img alt="X 29 at High Angle of Attack with Smoke Generators" border="0" class="alignleft" height="234" src="http://bit-player.org/wp-content/uploads/2019/04/X-29_at_High_Angle_of_Attack_with_Smoke_Generators.jpg" style="margin-bottom: 12px;" width="300"/> the primary surfaces for pitch control were canards mounted in front of the wings, as in the Wright Flyer. The aim of this quirky project was to explore designs with exceptional agility, sacrificing static stability for tighter maneuvering. No unaided human pilot could have mastered such a twitchy vehicle. It required a digital fly-by-wire system that sampled the state of the airplane and adjusted the control surfaces up to 80 times per second. The controller was successful—perhaps too much so. It allowed the airplane to be flown safely, but in taming the instability it also left the plane with rather tame handling characteristics.</p>
<p>I have a glancing personal connection with the X-29 project. In the 1980s I briefly worked as an editor with members of the group at Honeywell who designed and built the X-29 control system. I helped prepare publications on the control laws and on their implementation in hardware and software. That experience taught me just enough to recognize something odd about MCAS: It is way too slow to be suppressing aerodynamic instability in a jet aircraft. Whereas the X-29 controller had a response time of 25 milliseconds, MCAS takes 10 seconds to move the 737 stabilizer through a 2.5-degree adjustment. At that pace, it cannot possibly keep up with forces that tend to flip the nose upward in a positive feedback loop.</p>
<p>There’s a simple explanation. MCAS is not meant to control an unstable aircraft. It is meant to restrain the aircraft from entering the regime where it becomes unstable. This is the same strategy used by other mechanisms of stall prevention—intervening before the angle of attack reaches the critical point. However, if Brady is correct about the instability of the 737 MAX, the task is more urgent for MCAS. Instability implies a steep and slippery slope. MCAS is a guard rail that bounces you back onto the road when you’re about to drive over the cliff. </p>
<p>Which brings up the question of Boeing’s announced plan to fix the MCAS problem. <a href="https://aviationweek.com/commercial-aviation/boeing-max-changes-add-redundancy-pilot-control">Reportedly</a>, the revised system will not keep reactivating itself so persistently, and it will automatically disengage if it detects a large difference between the two AoA sensors. These changes should prevent a recurrence of the recent crashes. But do they provide adequate protection against the kind of mishap that MCAS was designed to prevent in the first place? With MCAS shut down, either manually or automatically, there’s nothing to stop an unwary or misguided pilot from wandering into the corner of the flight envelope where the MAX becomes unstable.</p>
<p>Without further information from Boeing, there’s no telling how severe the instability might be—if indeed it exists at all. The Brady article at the Boeing 737 Technical Site implies the problem is partly pilot-induced. Normally, to make the nose go higher and higher you have to pull harder and harder on the control yoke. In the unstable region, however, the resistance to pulling suddenly fades, and so the pilot may unwittingly pull the yoke to a more extreme position.</p>
<p>Is this human interaction a <em>necessary</em> part of the instability, or is it just an exacer­bating factor? In other words, without the pilot in the loop, would there still be positive feedback causing runaway nose-up pitch? I have yet to find answers.</p>
<p>Another question: If the root of the problem is a deceptive change in the force resisting a nose-up movements of the control yoke, why not address that issue directly? The elevator feel computer and the elevator feel and centering unit pro­vide “fake” forces to the pilot’s control yoke. Figure borrowed from <a href="https://www.slideshare.net/theoryce/b737-ng-flight-controls">B737 NG Flight controls</a>, a presentation by <a href="https://www.slideshare.net/theoryce">theoryce</a>. The presentation is for the 737 NG, not the MAX series; it’s possible the architecture has changed.<img alt="Pitch controls diagram" border="0" class="alignright" height="407" src="http://bit-player.org/wp-content/uploads/2019/04/pitch-controls-diagram.png" width="300"/>In the 737 (and most other large aircraft) the forces that the pilot “feels” through the control yoke are not simple reflections of the aerodynamic forces acting on the elevator and other control surfaces. The feedback forces are largely synthetic, generated by an “elevator feel computer” and an “elevator feel and centering unit,” devices that monitor the state of the airplane and gen­erate appro­priate hydraulic pressures push­ing the yoke one way or another. Those systems could have been given the addi­tional task of maintaining or increasing back force on the yoke when the angle of attack approaches the instability. Artificially en­hanced resis­tance is already part of the stall warning system. Why not extend it to MCAS? (There may be a good answer; I just don’t know it.)</p>
<h3>Where’s the off switch?</h3>
<p>Even after the spurious activation of MCAS on Lion Air 610, the crash and the casualties would have been avoided if the pilots had simply turned the damn thing off. Why didn’t they? Apparently because they had never heard of MCAS, and didn’t know it was installed on the airplane they were flying, and had not received any instruction on how to disable it. There’s no switch or knob in the cockpit labeled “MCAS ON/OFF.” The Flight Crew Operation Manual does not mention it (<a href="https://www.cbc.ca/news/business/boeing-737-manual-mcas-system-plane-crash-1.5065842">except in a list of abbreviations</a>), and neither did the transitional training program the pilots had completed before switching from the 737 NG to the MAX. The training consisted of either one or two hours (reports differ) with an iPad app.</p>
<p>Boeing’s explanation of these omissions was captured in a <a href="https://www.wsj.com/articles/boeing-withheld-information-on-737-model-according-to-safety-experts-and-others-1542082575"><em>Wall Street Journal</em> story</a>:</p>
<blockquote><p>One high-ranking Boeing official said the company had decided against disclos­ing more details to cockpit crews due to concerns about inundating average pilots with too much information—and significantly more technical data—than they needed or could digest.</p></blockquote>
<p>To call this statement disingenuous would be disingenuous. What it is is preposterous. In the first place, Boeing did not withhold “more details”; they failed to mention the very existence of MCAS. And the too-much-information argument is silly. I don’t have access to the Flight Crew Operation Manual for the MAX, but <a href="http://www.737ng.co.uk/737NG%20POH.pdf">the NG edition</a> runs to more than 1,300 pages, plus another 800 for the Quick Reference Handbook. A few paragraphs on MCAS would not have sunk any pilot who wasn’t already drowning in TMI. Moreover, the manual carefully documents the speed-trim and mach-trim features, which seem to fall in the same category as MCAS: They act autonomously, and offer the pilot no direct interface for monitoring or adjusting them.</p>
<p>In the aftermath of the Lion Air accident, Boeing stated that the procedure for disabling MCAS was spelled out in the manual, even though MCAS itself wasn’t mentioned. That procedure is given in a checklist for “runaway stabilizer trim.” It is not complicated: Hang onto the control yoke, switch off the autopilot and autothrottles if they’re on; then, if the problem persists, flip two switches labeled “STAB TRIM” to the “CUTOUT” position. Only the last step will actually matter in the case of an MCAS malfunction.</p>
<p>This checklist is considered a “memory item”; pilots must be able to execute the steps without looking it up in the handbook. The Lion Air crew should certainly have been familiar with it. But could they recognize that it was the right checklist to apply in an airplane whose behavior was unlike anything they had seen in their training or previous 737 flying experience? According to the handbook, the condition that triggers use of the runaway checklist is “Uncommanded stabilizer trim movement occurs continuously.” The MCAS commands were not continuous but repetitive, so some leap of inference would have been needed to make this diagnosis.</p>
<p><img alt="Center console trim wheels" border="0" class="aligncenter" height="576" src="http://bit-player.org/wp-content/uploads/2019/04/center-console-trim-wheels.png" width="500"/></p>
<p class="indent">By the time of the Ethiopian crash, 737 pilots everywhere knew all about MCAS and the procedure for disabling it. A <a href="http://www.ecaa.gov.et/documents/20435/0/Preliminary+Report+B737-800MAX+,(ET-AVJ).pdf">preliminary report</a> issued last week by Ethiopian Airlines indicates that after a few minutes of wrestling with the control yoke, the pilots on Flight 302 did invoke the checklist procedure, and moved the STAB TRIM switches to CUTOUT. The stabilizer then stopped responding to MCAS nose-down commands, but the pilots were unable to regain control of the airplane. </p>
<p>It’s not entirely clear why they failed or what was going on in the cockpit in those last minutes. One factor may be that the cutout switch disables not only automatic pitch trim movements but also manual ones requested through the buttons on the control yoke. The switch cuts all power to the electric motor that moves the stabilizer. In this situation the only way to adjust the trim is to turn the hand crank wheels near the pilots’ knees. During the crisis on Flight 302 that mechanism may have been too slow to correct the trim in time, or the pilots may have been so fixated on pulling the control yoke back with maximum force that they did not try the manual wheels. It’s also possible that they flipped the switches back to the NORMAL setting, restoring power to the stabilizer motor. The report’s narrative doesn’t mention this possibility, but the graph from the flight data recorder suggests it <em>(see below)</em>.</p>
<h3>The single point of failure</h3>
<p>There’s room for debate on whether the MCAS system is a good idea when it is operating correctly, but when it activates <em>mistakenly</em> and sends an airplane diving into the sea, no one would defend it. By all appearances, the rogue behavior in both the Lion Air and the Ethiopian accidents was triggered by a malfunction in a single sensor. That’s not supposed to happen in aviation. It’s unfathomable that any aircraft manufacturer would knowingly build a vehicle in which the failure of a single part would lead to a fatal accident.</p>
<p>Protection against single failures comes from redundancy, and the 737 is so committed to this principle that it almost amounts to two airplanes wrapped up in a single skin. Aircraft that rely more heavily on automation generally have <em>three</em> of everything—sensors, computers, and actuators.The cockpit has stations for two pilots, who look at separate sets of instruments and operate separate sets of controls. The left and right instrument panels receive signals from separate sets of sensors, and those signals are processed by separate computers. Each side of the cockpit has its own inertial guidance system, its own navigation computer, its own autopilot. There are two electric power supplies and two hydraulic systems—plus mechanical backups in case of a dual hydraulic failure. The two control yokes normally move in unison—they are linked under the floor—but if one yoke should get stuck, the connection can be broken, allowing the other pilot to continue flying the airplane.</p>
<p>There’s one asterisk in this roster of redundancy: A device called the flight control computer, or FCC, apparently gets special treatment. There are two FCCs, but <a href="http://www.b737.org.uk/mcas.htm">according to the Boeing 737 Technical Site</a> only one of them operates during any given flight. All the other duplicated components run in parallel, receiving independent inputs, doing independent computations, emitting independent control actions. But for each flight just one FCC does all the work, and the other is put on standby. The scheme for choosing the active computer seems strangely arbitrary. Each day when the airplane is powered up, the left side FCC gets control for the first flight, then the right side unit takes over for the second flight of the day, and the two sides alternate until the power is shut off. After a restart, the alternation begins again with the left FCC.</p>
<p>Aspects of this scheme puzzle me. I don’t understand why redundant FCC units are treated differently from other components. If one FCC dies, does the other automatically take over? Can the pilots switch between them in flight? If so, would that be an effective way to combat MCAS misbehavior? I’ve tried to find answers in the manuals, but I don’t trust my interpretation of what I read.</p>
<p>I’ve also had a hard time learning anything about the FCC itself. I don’t know who makes it, or what it looks like, or how it is programmed. <img alt="Honeywell 737 Flight Control Computer" border="0" class="alignleft" height="253" src="http://bit-player.org/wp-content/uploads/2019/04/Honeywell-737-Flight-Control-Computer.jpg" style="margin-bottom: 12px;" width="300"/> On a website called <a href="https://www.closetwonderfuls.top/737-boeing-honeywell-flight-controller-computer-asremoved-pn4051600914-p-18738.html">Closet Wonderfuls</a> an item identified as a 737 flight control computer is on offer for $43.82, with free shipping.A website called <a href="http://www.airframer.com/aircraft_detail.html?model=B737">Airframer</a> lists many suppliers of parts and materials for the 737, but there’s no entry for a flight control computer. It has a Honeywell label. I’m tempted, but I’m pretty sure this is not the unit installed in the latest MAX models. I’ve learned that the FCC was once the FCE, for flight control elec­tronics, suggesting it was an analog device, doing its integrations and differ­entiations with capacitors and resis­tors. By now I’m sure the FCC has caught up with the digital age, but it might still be special-purpose, custom-built hardware. Or it might be an off-the-shelf Intel CPU in a fancy box, maybe even running Linux or Windows. I just don’t know.</p>
<p>In the context of the MAX crashes, the flight control computer is important for two reasons. First, it’s where MCAS lives; this is the computer on which the MCAS software runs. Second, the curious procedure for choosing a different FCC on alternating flights also winds up choosing which AoA sensor is providing input to MCAS. The left and right sensors are connected to the corresponding FCCs.</p>
<p>If the two FCCs are used in alternation, that raises an interesting question about the history of the aircraft that crashed in Indonesia. The preliminary crash report describes trouble with various instruments and controls on five flights over four days (including the fatal flight). All of the problems were on the left side of the aircraft or involved a dis­agreement between the left and right sides.<br/>
The flight in the gray row is not mentioned in the preliminary report, but the airplane had to get from Manado to Denpasar for the following day’s flight.</p>

<table class="tg" style="margin-top: 16px;">
<tbody><tr>
<th class="tg-7btt">date</th>
<th class="tg-amwm">route</th>
<th class="tg-amwm">trouble reports</th>
<th class="tg-amwm">maintenance</th>
</tr>
<tr>
<td class="tg-c3ow">Oct 26</td>
<td class="tg-baqh">Tianjin → Manado</td>
<td class="tg-baqh">left side: no airspeed<br/>or altitude indications</td>
<td class="tg-baqh">test left Stall Management and<br/>Yaw Damper computer; passed<br/></td>
</tr>
<tr>
<td class="tg-yj5y">?</td>
<td class="tg-uqo3">Manado → Denpasar</td>
<td class="tg-uqo3">?</td>
<td class="tg-uqo3">?</td>
</tr>
<tr>
<td class="tg-c3ow">Oct 27</td>
<td class="tg-baqh">Denpasar → Manado</td>
<td class="tg-baqh">left side: no airspeed<br/>or altitude indications<br/><br/>speed trim and mach trim<br/>warning lights</td>
<td class="tg-baqh">test left Stall Management and<br/>Yaw Damper computer; failed<br/><br/>reset left Air Data and Inertial<br/>Reference Unit<br/><br/>retest left Stall Management and<br/>Yaw Damper computer; passed<br/><br/>clean electrical connections</td>
</tr>
<tr>
<td class="tg-c3ow">Oct 27</td>
<td class="tg-baqh">Manado → Denpasar</td>
<td class="tg-baqh">left side: no airspeed<br/>or altitude indications<br/><br/>speed trim and mach trim<br/>warning lights<br/><br/>autothrottle disconnect</td>
<td class="tg-baqh">test left Stall Management and<br/>Yaw Damper computer; failed<br/><br/>reset left Air Data and Inertial<br/>Reference Unit<br/><br/>replace left AoA sensor</td>
</tr>
<tr>
<td class="tg-bolj">Oct 28</td>
<td class="tg-cmwg">Denpasar → Jakarta</td>
<td class="tg-cmwg">left/right disagree warning<br/>on airspeed and altitude<br/><br/>stick shaker<br/><br/>[MCAS activation]</td>
<td class="tg-cmwg">flush left pitot tube<br/>and static port<br/><br/>clean electrical connectors<br/>on elevator “feel” computer</td>
</tr>
<tr>
<td class="tg-bolj">Oct 29</td>
<td class="tg-cmwg">Jakarta → Pangkal Pinang</td>
<td class="tg-cmwg">stick shaker<br/><br/>[MCAS activation]</td>
<td class="tg-cmwg"/>
</tr>
</tbody></table>
<p class="indent">Which of the five flights had the left-side FCC as active computer? The final two flights <em>(red)</em>, where MCAS activated, were both first-of-the-day flights and so presumably under control of the left FCC. For the rest it’s hard to tell, especially since maintenance operations may have entailed full shutdowns of the aircraft, which would have reset the alternation sequence.</p>
<p>The revised MCAS software will reportedly consult signals from both AoA sensors. What will it do with the additional information? Only one clue has been published so far: If the readings differ by more than 5.5 degrees, MCAS will shut down. What if the readings differ by 4 or 5 degrees? A <a href="https://www.researchgate.net/publication/306356837_Enhanced_detection_and_isolation_of_angle_of_attack_sensor_faults">recent paper</a> by Daniel Ossmann of the German Aerospace Center dis­cusses algorithmic detection of fail­ures in AoA sensors.Which sensor will MCAS choose to believe? Conservative (or pessimistic) engineering practice would seem to favor the higher reading, in order to provide better protection against instability and a stall. But that choice also raises the risk of dangerous “corrections” mandated by a faulty sensor.</p>
<p>The present MCAS system, with its alternating choice of left and right, has a 50 percent chance of disaster when a single random failure causes an AoA sensor to spew out falsely high data. With the same one-sided random failure, the updated MCAS will have a 100 percent chance of ignoring a pilot’s excursion into stall territory. Is that an improvement?</p>
<h3>The broken sensor</h3>
<p>Although a faulty sensor should not bring down an airplane, I would still like to know what went wrong with the AoA vane.</p>
<p>It’s no surprise that AoA sensors can fail. They are mechanical devices operating in a harsh environment: winds exceeding 500 miles per hour and temperatures below –40. <img alt="Lion Air 610 flight data chart AoA detail" border="0" class="alignright" height="110" src="http://bit-player.org/wp-content/uploads/2019/04/Lion-Air-610-flight-data-chart-AoA-detail.jpg" style="margin-bottom: 10px;" width="300"/>A common failure mode is a stuck vane, often caused by ice (despite a built-in de-icing heater). But a seized vane would produce a constant output, regardless of the real angle of attack, which is not the symptom seen in Flight 610. The flight data recorder shows small fluctuations in the signals from both the left and the right instruments. Furthermore, the jiggles in the two curves are closely aligned, suggesting they are both tracking the same movements of the aircraft. In other words, the left-hand sensor appears to be functioning; it’s just giving measurements offset by a constant deviation of roughly 20 degrees.</p>
<p>Is there some other failure mode that might produce the observed offset? Sure: Just bend the vane by 20 degrees. Maybe a catering truck or an airport jetway blundered into it. Another creative thought is that the sensor might have been installed wrong, with the entire unit rotated by 20 degrees. Several writers on a website called the <a href="https://www.pprune.org/tech-log/616624-maintenance-lapse-identified-initial-problem-leading-lion-air-crash.html">Professional Pilots Rumour Network</a> explored this possibility, but they ultimately concluded it was impossible. The manufacturer, doubtless aware of the risk, placed the mounting screws and locator pins asymmetrically, so the unit will only go into the hull opening one way.</p>
<p>You might get the same effect through an assembly error during the manufacture of the sensor. The vane could be incorrectly attached to the shaft, or else the internal transducer that converts angular position into an electrical signal might be mounted wrong. Did the designers also ensure that such mistakes are impossible? I don’t know; I haven’t been able to find any drawings or photographs of the sensor’s innards.</p>
<p>Looking for other ideas about what might have gone wrong, I made a quick, scattershot survey of <a href="https://www.faa.gov/regulations_policies/airworthiness_directives/">FAA airworthiness directives</a> that call for servicing or replacing AoA sensors. I found dozens of them, including several that discuss the same sensor installed on the 737 MAX (the <a href="https://utcaerospacesystems.com/wp-content/uploads/2018/04/Angle-of-Attack-AOA-Systems.pdf">Rosemount 0861</a>). But none of the reports I read describes a malfunction that could cause a consistent 20-degree error.</p>
<p>For a while I thought that the fault might lie not in the sensor itself but farther along the data path. It could be something as simple as a bad cable or connector. Signals from the AoA sensor go to the Air Data and Inertial Reference Unit (ADIRU), where the sine and cosine components are combined and digitized to yield a number representing the measured angle of attack. The ADIRU also receives inputs from other sensors, including the pitot tubes for measuring airspeed and the static ports for air pressure. And it houses the gyroscopes and accelerometers of an inertial guidance system, which can keep track of aircraft motion without reference to external cues. (There’s a separate ADIRU for each side of the airplane.) Maybe there was a problem with the digitizer—a stuck bit rather than a stuck vane.</p>
<p>Further information has undermined this idea. For one thing, the AoA sensor removed by the Lion Air maintenance crew on October 27 is now in the hands of investigators. According to <a href="https://www.nytimes.com/2019/04/04/world/asia/ethiopia-crash-boeing.html">news reports</a>, it was “deemed to be defective,” though I’ve heard no hint of what the defect might be. Also, it turns out that one element of the control system, the Stall Management and Yaw Damper (SMYD) computer, receives the raw sine and cosine voltages directly from the sensor, not a digitized angle calculated by the ADIRU. It is the SMYD that controls the stick-shaker function. On both the Lion Air and the Ethiopian flights the stick shaker was active almost continuously, so those undigitized sine and cosine voltages must have been indicating a high angle of attack. In other words the error already existed before the signals reached the ADIRU.</p>
<p>I’m still stumped by the fixed angular offset in the Lion Air data, but the question now seems a little less important. The release of the preliminary report on Ethiopian Flight 302 shows that the left-side AoA sensor on that aircraft also failed badly, but in a way that looks totally different. Here are the relevant traces from the flight data recorder:</p>
<p><img alt="Ethiopian 302 FDR AoA" border="0" class="centered withLoupe" height="175" src="http://bit-player.org/wp-content/uploads/2019/04/Ethiopian-302-FDR-AoA.png" width="900"/></p>
<p>The readings from the AoA sensors are the uppermost lines, red for the left sensor and blue for the right. At the left edge of the graph they differ somewhat when the airplane has just begun to move, but they fall into close coincidence once the roll down the runway has built up some speed. At takeoff, however, they suddenly diverge dramtically, as the left vane begins reading an utterly implausible 75 degrees nose up. Later it comes down a few degrees but otherwise shows no sign of the ripples that would suggest a response to airflow. At the very end of the flight there are some more unexplained excursions.</p>
<p>By the way, in this graph the light blue trace of automatic trim commands offers another clue to what might have happened in the last moments of Flight 302. Around the middle of the graph, the STAB TRIM switches were pulled, with the result that an automatic nose-down command had no effect on the stabilizer position. But at the far right, another automatic nose-down command does register in the trim-position trace, suggesting that the cutout switches may have been turned on again.</p>
<h3>Still more stumpers</h3>
<p>There’s so much I still don’t understand.</p>
<p>Puzzle 1. If the Lion Air and Ethiopian accidents were both caused by faulty AoA sensors, then there were three parts with similar defects in brand new aircraft (including the replacement sensor installed by Lion Air on October 27). A recent news item says the replacement was not a new part but one that had been refurbished by a Florida shop called <a href="http://www.xtaero.com/">XTRA Aerospace</a>. This fact offers us somewhere else to point the accusatory finger, but presumably the two sensors installed by Boeing were not retreads, so XTRA can’t be blamed for all of them.</p>
<p>There are roughly 400 MAX aircraft in service, with 800 AoA sensors. Is a failure rate of 3 out of 800 unusual or unacceptable? Does that judgment depend on whether or not it’s the same defect in all three cases?</p>
<p>Puzzle 2. Let’s look again at the traces for pitch trim and angle of attack in the Lion Air 610 data. The conflicting manual and automatic commands in the second half of the flight have gotten lots of attention, but I’m also baffled by what was going on in the first few minutes.</p>
<p><img alt="Lion Air 610 flight data chart  trim and AoA detail" border="0" class="centered" height="185" src="http://bit-player.org/wp-content/uploads/2019/04/Lion-Air-610-flight-data-chart-trim-and-AoA-detail.jpg" width="640"/></p>
<p>During the roll down the runway, the pitch trim system was set near its maximum pitch-up position <em>(dark blue line)</em>. Immediately after takeoff, the automatic trim system began calling for further pitch-up movement, and the stabilizer probably reached its mechanical limit. At that point the pilots manually trimmed it in the pitch-down direction, and the automatic system replied with a rapid sequence of up adjustments. In other words, there was already a tug-of-war underway, but the pilots and the automated controls were pulling in directions opposite to those they would choose later on. All this happened while the flaps were still deployed, which means that MCAS could not have been active. Some other element of the control system must have been issuing those automatic pitch-up orders. Deepening the mystery, the left side AoA sensor was already feeding its spurious high readings to the left-side flight control computer. If the FCC was acting on that data, it should not have been commanding nose-up trim.</p>
<p>Puzzle 3. The AoA readings are not the only peculiar data in the chart from the Lion Air preliminary report. Here are the altitude and speed traces:</p>
<p><img alt="Lion Air 610 flight data chart alt and ias details" border="0" class="centered" height="198" src="http://bit-player.org/wp-content/uploads/2019/04/Lion-Air-610-flight-data-chart-alt-and-ias-details.jpg" width="640"/></p>
<p>The left-side altitude readings <em>(red)</em> are low by at least a few hundred feet. The error looks like it might be multiplicative rather than additive, perhaps 10 percent. The left and right computed airspeeds also disagree, although the chart is too squished to allow a quantitative comparison. It was these discrepancies that initially upset the pilots of Flight 610; they could see them on their instruments. (They had no angle of attack indicators in the cockpit, so that conflict was invisible to them.)</p>
<p>Altitude, airspeed, and angle of attack are all measured by different sensors. Could they all have gone haywire at the same time? Or is there some common point of failure that might explain all the weird behavior? In particular, is it possible a single wonky AoA sensor caused all of this havoc? My guess is yes. The sensors for altitude and airspeed and even temperature are influenced by angle of attack. The measured speed and pressure are therefore adjusted to compensate for this confounding variable, using the output of the AoA sensor. That output was wrong, and so the adjustments allowed one bad data stream to infect all of the air data measurements.</p>
<h3>Man or machine</h3>
<p>Six months ago, I was <a href="http://bit-player.org/2018/another-technological-tragedy">writing</a> about another disaster caused by an out-of-control control system. In that case the trouble spot was a natural gas distribution network in Massa­chusetts, where a misconfigured pressure-regulating station caused fires and explosions in more than 100 buildings, with one fatality and 20 serious injuries. I lamented: “The special pathos of technological tragedies is that the engines of our destruction are machines that we ourselves design and build.”</p>
<p>In a world where defective automatic controls are blowing up houses and dropping aircraft out of the sky, it’s hard to argue for <em>more</em> automation, for adding further layers of complexity to control systems, for endowing machines with greater autonomy. Public sentiment leans the other way. Like President Trump, most of us trust pilots more than we trust computer scientists. We don’t want MCAS on the flight deck. We want Chesley Sullenberger III, the hero of USAir Flight 1549, who guided his crippled A320 to a dead-stick landing in the Hudson River and saved all 155 souls on board. No amount of cockpit automation could have pulled off that feat.</p>
<p>Nevertheless, a cold, analytical view of the statistics suggests a different reaction. The human touch doesn’t always save the day. On the contrary, pilot error is responsible for more fatal crashes than any other cause. One <a href="https://ageconsearch.umn.edu/record/207282/files/2010_164_Why_Airplanes_Crash.pdf">survey</a> lists pilot error as the initiating event in 40 percent of fatal accidents, with equipment failure accounting for 23 percent. No one is (yet) advocating a <a href="https://www.theatlantic.com/technology/archive/2016/03/has-the-self-flying-plane-arrived/472005/">pilotless cockpit</a>, but at this point in the history of aviation technology that’s a nearer prospect than a computer-free cockpit.</p>
<p>The MCAS system of the 737 MAX represents a particularly awkward compromise between fully manual and fully automatic control. The software is given a large measure of responsibility for flight safety and is even allowed to override the decisions of the pilot. And yet when the system malfunctions, it’s entirely up to the pilot to figure out what went wrong and how to fix it—and the fix had better be quick, before MCAS can drive the plane into the ground.</p>
<p>Two lost aircraft and 346 deaths are strong evidence that this design was not a good idea. But what to do about it? <a href="https://www.boeing.com/commercial/737max/737-max-software-updates.page">Boeing’s plan</a> is a retreat from automatic control, returning more responsibility and authority to the pilots: </p>
<blockquote><ul>
<li>Flight control system will now compare inputs from both AOA sensors. If the sensors disagree by 5.5 degrees or more with the flaps retracted, MCAS will not activate. An indicator on the flight deck display will alert the pilots.</li>
<li>If MCAS is activated in non-normal conditions, it will only provide one input for each elevated AOA event. There are no known or envisioned failure conditions where MCAS will provide multiple inputs.</li>
<li>MCAS can never command more stabilizer input than can be counter­acted by the flight crew pulling back on the column. The pilots will continue to always have the ability to override MCAS and manually control the airplane.</li>
</ul>
</blockquote>
<p>A <a href="https://www.boeing.com/commercial/737max/737-max-update.page">statement</a> from Dennis Muilenburg, Boeing’s CEO, says the software update “will ensure accidents like that of Lion Air Flight 610 and Ethiopian Airlines Flight 302 never happen again.” I hope that’s true, but what about the accidents that MCAS was designed to prevent? I also hope we will not be reading about a 737 MAX that stalled and crashed because the pilots, believing MCAS was misbehaving, kept hauling back on the control yokes.</p>
<p>If Boeing were to take the opposite approach—not curtailing MCAS but enhancing it with still more algorithms that fiddle with the flight controls—the plan would be greeted with hoots of outrage and derision. Indeed, it seems like a terrible idea. MCAS was installed to prevent pilots from wandering into hazardous territory. A new supervisory system would keep an eye on MCAS, stepping in if it began acting suspiciously. Wouldn’t we then need another custodian to guard the custodians, ad infinitum? Moreoever, with each extra layer of complexity we get new side effects and unintended consequences and opportunities for something to break. The system becomes harder to test, and impossible to prove correct.</p>
<p>Those are serious objections, but the problem being addressed is also serious.</p>
<p>Suppose the 737 MAX didn’t have MCAS but did have a cockpit indicator of angle of attack. On the Lion Air flight, the captain would have felt the stick-shaker warning him of an incipient stall and would have seen an alarmingly high angle of attack on his instrument panel. His training would have impelled him to do the same thing MCAS did: Push the nose down to get the wings working again. Would he have continued pushing it down until the plane crashed? Surely not. He would have looked out the window, he would have cross-checked the instruments on the other side of the cockpit, and after some scary moments he would have realized it was a false alarm. (In darkness or low visibility, where the pilot can lose track of the horizon, the outcome might be worse.)</p>
<p>I see two lessons in this hypothetical exercise. First, erroneous sensor data is dangerous, whether the airplane is being flown by a computer or by Chesley Sullenberger. A prudently designed instrument and control system would take steps to detect (and ideally correct) such errors. At the moment, redundancy is the only defense against these failures—and in the unpatched version of MCAS even that protection is compromised. It’s not enough. One key to the superiority of human pilots is that they exercise judgment and sometimes skepticism about what the instruments tell them. That kind of reasoning is not beyond the reach of automated systems. There’s plenty of information to be exploited. For example, inconsistencies between AoA sensors, pitot tubes, static pressure ports, and air temperature probes not only signal that something’s wrong but can offer clues about <em>which</em> sensor has failed. The inertial reference unit provides an independent check on aircraft attitude; even GPS signals might be brought to bear. Admittedly, making sense of all this data and drawing a valid conclusion from it—a problem known as sensor fusion—is a major challenge.</p>
<p>Second, a closed-loop controller has yet another source of information: an implicit model of the system being controlled. If you change the angle of the horizontal stabilizer, the state of the airplane is expected to change in known ways—in angle of attack, pitch angle, airspeed, altitude, and in the rate of change in all these parameters. If the result of the control action is not consistent with the model, something’s not right. To persist in issuing the same commands when they don’t produce the expected results is not reasonable behavior. Autopilots include rules to deal with such situations; the lower-level control laws that run in manual-mode flight could incorporate such sanity checks as well.</p>
<p>I don’t claim the answer to the MCAS problem. And I don’t want to fly in an airplane I designed. (Neither do you.) But there’s a general principle here that I believe should be taken to heart: If an autonomous system makes life-or-death decisions based on sensor data, it ought to verify the validity of the data.</p></div>
    </content>
    <updated>2019-04-08T21:34:51Z</updated>
    <published>2019-04-08T21:34:51Z</published>
    <category scheme="http://bit-player.org" term="computing"/>
    <category scheme="http://bit-player.org" term="technology"/>
    <author>
      <name>Brian Hayes</name>
      <uri>http://bit-player.org</uri>
    </author>
    <source>
      <id>http://bit-player.org/feed/atom</id>
      <link href="http://bit-player.org" rel="alternate" type="text/html"/>
      <link href="http://bit-player.org/feed/atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">An amateur's outlook on computation and mathematics</subtitle>
      <title xml:lang="en-US">bit-player</title>
      <updated>2019-04-09T01:41:07Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-5672867789279325982</id>
    <link href="https://blog.computationalcomplexity.org/feeds/5672867789279325982/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/04/problems-with-point-not-plug-just-some.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/5672867789279325982" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/5672867789279325982" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/04/problems-with-point-not-plug-just-some.html" rel="alternate" type="text/html"/>
    <title>Problems with a point- NOT a plug, just some thoughts on books and book writing</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Problems with a Point: Exploring Math and Computer Science by Gasarch and Kruskal, available on amazon <a href="https://www.amazon.com/Problems-Point-Exploring-Computer-Science/dp/9813279974/ref=sr_1_1?keywords=gasarcj&amp;qid=1553111113&amp;s=gateway&amp;sr=8-1-spell">here</a>, came out a while back  and I plugged it in my  blog post <a href="https://blog.computationalcomplexity.org/2019/02/problems-with-point-exploring-math-and.html">here</a>. Regan-Lipton reviewed it <a href="https://rjlipton.wordpress.com/2019/03/10/problems-with-a-point/">here</a>.<br/>
<br/>
This post is NOT a plug, its random points about the book and book writing<br/>
<br/>
1) On Feb 28 I checked my Amazon ranking twice. At noon it was at 400,000 and at 4:00PM it was at  roughly 80,000.  Either (a) someone bought a copy, or (b) the number of sales of such books is so small that amazon does rankings arbitrarily. A counter argument to that: Bounded Queries in Recursion Theory, which I wrote in 1998 and, despite an awesome review on amazon that I wrote,  sold literally 0 copies last year, is ranked 5,000,000. So even within the low numbers there is SOME logic to the rankings. (Update- Today, April 7, PWAP is at 800,000 and BQIRT is at 12,000,000. I suspect that nothing has changed with BQIRT and the 5,000,000 or 12,000,000 is arbitrary. As for PWAP--- since its still a new book the ranking might mean something. Oh well- fame is fleeting!)<br/>
<br/>
1.5) At one time my book was 29th in the category <i>Teen and Young Adult Computer Programming. </i>Really? While teens and young adults might read it, I don't think of it as geared towards them (only one use of  <i>OMG</i> and two uses of <i>awesome</i>  in the entire book). And as for Computer Programming... uh... no.<br/>
<br/>
2) I emailed many people about it and many people are buying it. Some tell me that the cover looks great so YES, they are judging a book by its cover. My mom asked how it was selling. I told her that (a) about 20 people told me they bought it, and (b) I doubt that's how JK Rowling responds when she's asked how her Harry Potter books are selling.<br/>
<br/>
3) Many people could actually read this book and would care about its content. When I wrote Bounded Queries in Recursion Theory (with Georgia Martin) I didn't email a lot of people about it since it was rather specialized.<br/>
<br/>
4) Some people said `Gee bill, we didn't know you were working on a book'. That's true- I didn't talk about it much. Clyde knew (my co-author, so he had  to know), Lance knew. Darling knew. Mom Knew. That might be about it. Why so few? see next point.<br/>
<br/>
5) I had heard there are two kinds of people:<br/>
<br/>
<i>Those that talk about writing a book but don't do it</i><br/>
<br/>
<i>Those that write a book instead of talking about it</i>.<br/>
<br/>
I chose to be the second type.<br/>
<br/>
6) When I got an advanced copy I couldn't stop reading it. Ego? Disbelieve? Some of each?<br/>
<br/>
7) ADVICE for book writers: just get it done. You can polish it later but first get it done so you have something to polish.<br/>
<br/>
8) More advice: You can never have too many proofreaders. Even though its been gone over a lot I still read it and find minor things to fix OR think `gee why didn't I include BLAH in the book'<br/>
<br/>
9) Title: `Problems with a Point' I came up with very early and I liked it a lot. World Scientific (our publisher) pointed out, correctly, that we need a subtitle since  PWAP didn't really tell the reader whats in it. I wanted to make it alliterative but it was hard. Here were some possibilities<br/>
<br/>
PWAP: Mathematical Musing Made Magnificent (can replace Musings with Morsels)<br/>
<br/>
PWAP: Mathematical Meditations  and Computer Science Cogitations<br/>
<br/>
PWAP: Mathematical Musings and the Math that Makes those Musings Matter<br/>
<br/>
All in all I am happy with the non-alliterative, but informative<br/>
<br/>
PWAP: Exploring Math and Computer Science.<br/>
<br/>
10) Odd thing I learned- if I quote someone who made a comment on my blog or emailed me I needed permission. Actually I doubt I NEEDED it but the laws here are murky so I got it just to make sure. That explains this blog from a while back: <a href="https://blog.computationalcomplexity.org/2018/10/john-sidles-mike-roman-matt-howell.html">here</a><br/>
<br/>
11) ADVICE for book writers: Write the preface last since then you have a better idea of why you wrote the book.</div>
    </content>
    <updated>2019-04-08T03:02:00Z</updated>
    <published>2019-04-08T03:02:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2019-04-09T06:31:23Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03139</id>
    <link href="http://arxiv.org/abs/1904.03139" rel="alternate" type="text/html"/>
    <title>Parameter estimation for integer-valued Gibbs distributions</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Harris:David_G=.html">David G. Harris</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kolmogorov:Vladimir.html">Vladimir Kolmogorov</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03139">PDF</a><br/><b>Abstract: </b>We consider the family of \emph{Gibbs distributions}, which are probability
distributions over a discrete space $\Omega$ given by
$\mu^\Omega_\beta(x)=\frac{e^{\beta H(x)}}{Z(\beta)}$. Here
$H:\Omega\rightarrow \{0,1,\ldots,n\}$ is a fixed function (called a {\em
Hamiltonian}), $\beta$ is the parameter of the distribution, and
$Z(\beta)=\sum_{x\in\Omega}e^{\beta H(x)} = \sum_{k=0}^n c_k e^{\beta k}$ is
the normalization factor called the {\em partition function}. We study how
function $Z(\cdot)$ can be estimated using an oracle that produces samples
$x\sim \mu_\beta(\cdot)$ for a value $\beta$ in a given interval
$[\beta_{\min}, \beta_{\max}]$.
</p>
<p>Recently, it has been shown how to estimate quantity
$q=\log\frac{Z(\beta_{\max})}{Z(\beta_{\min})}$ with additive
error~$\varepsilon$ using $\tilde O(\frac{q}{\varepsilon^2})$ samples in
expectation. We improve this result to $\tilde O(\frac
{\min\{q,n^2\}}{\varepsilon^2})$, matching a lower bound of Kolmogorov (2018)
up to logarithmic factors.
</p>
<p>We also consider the problem of estimating the normalized coefficients $c_k$
for indices $k\in\{0,1,\ldots,n\}$ that satisfy $\max_{\beta}
\mu_\beta^\Omega(\{x\:|\:H(x)=k\}) \ge\mu_\ast$, where $\mu_\ast\in(0,1)$ is a
given parameter. We solve this problem using $\tilde O(\frac{\min\{ q + \frac{
\sqrt{q}}{\mu_{\ast}}, n^2 + \frac{ n}{\mu_{\ast}} \}}{\varepsilon^2})$
expected samples, and we show that this complexity is optimal up to logarithmic
factors. This is improved to roughly $\tilde O( \frac{1/\mu_{\ast}+\min\{q +
n,n^2\}}{\varepsilon^2})$ for applications in which the coefficients are known
to be log-concave (e.g.\ for connected subgraphs of a given graph).
</p></div>
    </summary>
    <updated>2019-04-08T23:21:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03050</id>
    <link href="http://arxiv.org/abs/1904.03050" rel="alternate" type="text/html"/>
    <title>An Experimental Study of Algorithms for Geodesic Shortest Paths in the Constant-Workspace Model</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cleve:Jonas.html">Jonas Cleve</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mulzer:Wolfgang.html">Wolfgang Mulzer</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03050">PDF</a><br/><b>Abstract: </b>We perform an experimental evaluation of algorithms for finding geodesic
shortest paths between two points inside a simple polygon in the
constant-workspace model. In this model, the input resides in a read-only array
that can be accessed at random. In addition, the algorithm may use a constant
number of words for reading and for writing. The constant-workspace model has
been studied extensively in recent years, and algorithms for geodesic shortest
paths have received particular attention.
</p>
<p>We have implemented three such algorithms in Python, and we compare them to
the classic algorithm by Lee and Preparata that uses linear time and linear
space. We also clarify a few implementation details that were missing in the
original description of the algorithms. Our experiments show that all
algorithms perform as advertised in the original works and according to the
theoretical guarantees. However, the constant factors in the running times turn
out to be rather large for the algorithms to be fully useful in practice.
</p></div>
    </summary>
    <updated>2019-04-08T23:43:13Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03039</id>
    <link href="http://arxiv.org/abs/1904.03039" rel="alternate" type="text/html"/>
    <title>Drawing k-linear Metro Maps</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Soeren Nickel, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/N=ouml=llenburg:Martin.html">Martin Nöllenburg</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03039">PDF</a><br/><b>Abstract: </b>Schematic metro maps in practice as well as metro map layout algorithms
usually adhere to an octilinear layout style with all paths composed of
horizontal, vertical, and 45$^\circ$-diagonal edges. Despite growing interest
in non-octilinear metro maps, generic algorithms to draw metro maps based on a
system of $k \ge 2$ equidistant slopes have not been investigated thoroughly.
In this paper we present and implement an adaptation of the octilinear
mixed-integer linear programming approach of N\"ollenburg and Wolff (2011) that
can draw k-linear metro maps.
</p></div>
    </summary>
    <updated>2019-04-08T23:42:09Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.03015</id>
    <link href="http://arxiv.org/abs/1904.03015" rel="alternate" type="text/html"/>
    <title>A Faster Algorithm for the Limited-Capacity Many-to-Many Point Matching in One Dimension</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rajabi=Alni:Fatemeh.html">Fatemeh Rajabi-Alni</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bagheri:Alireza.html">Alireza Bagheri</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.03015">PDF</a><br/><b>Abstract: </b>Given two point sets S and T on a line, we present a linear time algorithm
for the limited capacity many-to-many matching between S and T which improves
the previous quadratic algorithm.
</p></div>
    </summary>
    <updated>2019-04-08T23:42:56Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.02991</id>
    <link href="http://arxiv.org/abs/1904.02991" rel="alternate" type="text/html"/>
    <title>Automating Resolution is NP-Hard</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Atserias:Albert.html">Albert Atserias</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/M=uuml=ller:Moritz.html">Moritz Müller</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.02991">PDF</a><br/><b>Abstract: </b>We show that the problem of finding a Resolution refutation that is at most
polynomially longer than a shortest one is NP-hard. In the parlance of proof
complexity, Resolution is not automatizable unless P = NP. Indeed, we show it
is NP-hard to distinguish between formulas that have Resolution refutations of
polynomial length and those that do not have subexponential length refutations.
This also implies that Resolution is not automatizable in subexponential time
or quasi-polynomial time unless NP is included in SUBEXP or QP, respectively.
</p></div>
    </summary>
    <updated>2019-04-08T23:20:49Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.02944</id>
    <link href="http://arxiv.org/abs/1904.02944" rel="alternate" type="text/html"/>
    <title>Reducing Topological Minor Containment to the Unique Linkage Theorem</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fomin:Fedor_V=.html">Fedor V. Fomin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lokshtanov:Daniel.html">Daniel Lokshtanov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Panolan:Fahad.html">Fahad Panolan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Saurabh:Saket.html">Saket Saurabh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zehavi:Meirav.html">Meirav Zehavi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.02944">PDF</a><br/><b>Abstract: </b>In the Topological Minor Containment problem (TMC) problem two undirected
graphs, $G$ and $H$ are given and the objective is to check whether $G$
contains $H$ as a topological minor. Grohe, Kawarabayashi, Marx, and
Wollan~[STOC 2011] resolved the parameterized complexity of this problem by
designing an algorithm with running time $f(k)n^{3}$. Here, $k=|V(H)|$ and
$n=|V(G)|$. Among several other tools, this algorithm was based on a variant of
the linkage theorem of Robertson-Seymour, tailor-made for TMC, by adapting
elements of the new proof of the unique linkage theorem of Kawarabayashi and
Wollan~[STOC 2010]. In this paper we turn the wheel back, and design an
alternate algorithm for TMC by giving a direct reduction to a version of unique
linkage theorem appearing in Graph Minors XXII of Robertson and Seymour. That
is, the new proof requires a black-box invocation of a known result arising in
the proof of graph minor theorem. Our result has the following advantages:
</p>
<p>(1) Graph classes where the bounds in the unique linkage theorem are known,
this immediately results in explicit time-bounds for TMC on those graph
classes. For example, we get first algorithm with explicit time bounds for TMC
on planar graphs and more generally for graphs of genus $g$. In particular, the
algorithm runs in time $2^{2^{2^{{\cal O}(k)}}}$ on planar graphs.
</p>
<p>(2) Any new development on the unique linkage theorem will immediately led to
a faster algorithm for TMC. That is, one does not need to design a similar
theorem specifically for TMC.
</p></div>
    </summary>
    <updated>2019-04-08T23:31:03Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.02861</id>
    <link href="http://arxiv.org/abs/1904.02861" rel="alternate" type="text/html"/>
    <title>Achieving Optimal Backlog in Multi-Processor Cup Games</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bender:Michael_A=.html">Michael A. Bender</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Farach=Colton:Martin.html">Martin Farach-Colton</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kuszmaul:William.html">William Kuszmaul</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.02861">PDF</a><br/><b>Abstract: </b>The single- and multi- processor cup games can be used to model natural
problems in areas such as processor scheduling, deamortization, and buffer
management. At the beginning of the single-processor cup game, $n$ cups are
initially empty. In each step of the game, a filler distributes $1$ unit of
water among the cups, and then an emptier selects a cup and removes $1 +
\epsilon$ units from that cup. The goal of the emptier is to minimize the
amount of water in the fullest cup, also known as the backlog. It is known that
the greedy algorithm (i.e., empty the fullest cup) achieves backlog $O(\log
n)$, and that no deterministic algorithm can do better. We show that the
performance of the greedy algorithm can be greatly improved with a small amount
of randomization: After any step $i$, and for any $k \ge \Omega(\log
\epsilon^{-1})$, the emptier achieves backlog at most $O(k)$ with probability
at least $1 -O(2^{-2^k})$. Whereas bounds for the single-processor cup game
have been known for more than fifteen years, proving nontrivial bounds on
backlog for the multi-processor extension has remained open. We present a
simple analysis of the greedy algorithm for the multi-processor cup game,
establishing a backlog of $O(\epsilon^{-1} \log n)$, as long as $\delta$, the
game's other speed-augmentation constant, is at least $1/poly(n)$. Turning to
randomized algorithms, we encounter an unexpected phenomenon: When the number
of processors $p$ is large, the backlog after each step drops to
\emph{constant} with large probability. Specifically, we show that if $\delta$
and $\epsilon$ satisfy reasonable constraints, then there exists an algorithm
that bounds the backlog after a given step by three or less with probability at
least $1 - O(\exp(-\Omega(\epsilon^2 p))$. We further extend the guarantees of
our randomized algorithm to consider larger backlogs.
</p></div>
    </summary>
    <updated>2019-04-08T23:39:44Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.02824</id>
    <link href="http://arxiv.org/abs/1904.02824" rel="alternate" type="text/html"/>
    <title>Taming the Knight's Tour: Minimizing Turns and Crossings</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Juan Jose Besa, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Johnson:Timothy.html">Timothy Johnson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mamano:Nil.html">Nil Mamano</a>, Martha C. Osegueda <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.02824">PDF</a><br/><b>Abstract: </b>We introduce two new metrics of simplicity for knight's tours: the number of
turns and the number of crossings. We give a novel algorithm that produces
tours with $9.5n+O(1)$ turns and $13n+O(1)$ crossings on a $n\times n$ board.
We show lower bounds of $(6-\varepsilon)n$, for any $\varepsilon&gt;0$, and
$4n-O(1)$ on the respective problems of minimizing these metrics. Hence, we
achieve approximation ratios of $19/12+o(1)$ and $13/4+o(1)$. We generalize our
techniques to rectangular boards, high-dimensional boards, symmetric tours, odd
boards with a missing corner, and tours for $(1,4)$-leapers. In doing so, we
show that these extensions also admit a constant approximation ratio on the
minimum number of turns, and on the number of crossings in most cases.
</p></div>
    </summary>
    <updated>2019-04-08T23:22:12Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1904.02809</id>
    <link href="http://arxiv.org/abs/1904.02809" rel="alternate" type="text/html"/>
    <title>Proving tree algorithms for succinct data structures</title>
    <feedworld_mtime>1554681600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Affeldt:Reynald.html">Reynald Affeldt</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Garrigue:Jacques.html">Jacques Garrigue</a>, XuanruiQi, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tanaka:Kazunari.html">Kazunari Tanaka</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1904.02809">PDF</a><br/><b>Abstract: </b>Succinct data structures give space-efficient representations of large
amounts of data without sacrificing performance. They rely one cleverly
designed data representations and algorithms. We present here the formalization
in Coq/SSReflect of two different tree-based succinct representations and their
accompanying algorithms. One is the Level-Order Unary Degree Sequence, which
encodes the structure of a tree in breadth-first order as a sequence of bits,
where access operations can be defined in terms of Rank and Select, which work
in constant time for static bit sequences. The other represents dynamic bit
sequences as binary balanced trees, where Rank and Select present a low
logarithmic overhead compared to their static versions, and with efficient
insertion and deletion. The two can be stacked to provide a dynamic
representation of dictionaries for instance. While both representations are
well-known, we believe this to be their first formalization and a needed step
towards provably-safe implementations of big data.
</p></div>
    </summary>
    <updated>2019-04-08T23:22:28Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-04-08T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/04/07/photos-from-barbados</id>
    <link href="https://11011110.github.io/blog/2019/04/07/photos-from-barbados.html" rel="alternate" type="text/html"/>
    <title>Photos from Barbados</title>
    <summary>I spent this year’s spring break at Erik Demaine’s annual computational geometry workshop in Barbados again. A few photos of workshop participants:</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I spent this year’s spring break at Erik Demaine’s annual computational geometry workshop in Barbados again. A few photos of workshop participants:</p>

<div><table style="margin-left: auto; margin-right: auto;">
<tbody><tr style="text-align: center; vertical-align: middle;">
<td style="padding: 10px;"><img alt="Hannah Alpert and Tom Hull" src="http://www.ics.uci.edu/~eppstein/pix/bellairs19/9-m.jpg" style="border-style: solid; border-color: black;" width="360"/></td>
<td style="padding: 10px;"><img alt="Jonathan Shoemaker, Ryuhei Uehara, and Bob Hearn" src="http://www.ics.uci.edu/~eppstein/pix/bellairs19/13-m.jpg" style="border-style: solid; border-color: black;" width="266"/></td>
</tr><tr style="text-align: center; vertical-align: middle;">
<td style="padding: 10px;"><img alt="Bel&#xE9;n Palop and Vera Sacrist&#xE1;n" src="http://www.ics.uci.edu/~eppstein/pix/bellairs19/26-m.jpg" style="border-style: solid; border-color: black;" width="240"/></td>
<td style="padding: 10px;"><img alt="Yushi Uno, Walker Anderson, Ryan Williams, Dylan Hendrickson, and Jayson Lynch" src="http://www.ics.uci.edu/~eppstein/pix/bellairs19/10-m.jpg" style="border-style: solid; border-color: black;" width="360"/></td>
</tr></tbody></table></div>

<p>This time around, as well as the usual suspects, Erik included two high school students, incoming to MIT. You can see them at the left of the second and fourth photos.</p>

<p><a href="http://www.ics.uci.edu/~eppstein/pix/bellairs19/index.html">Here are the rest of my photos</a>.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/101888686019377462">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2019-04-07T18:52:00Z</updated>
    <published>2019-04-07T18:52:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-04-08T04:33:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7500</id>
    <link href="https://windowsontheory.org/2019/04/06/pcp-fest-videos/" rel="alternate" type="text/html"/>
    <title>PCP Fest videos</title>
    <summary>In December I participated in the wonderful “PCP Fest” workshop in Tel Aviv. The videos from these workshops are now online on their youtube channel. The channel contains not just videos of talks but also two wide ranging interviews of Alon Rosen with Avi Wigderson and Christos Papadimitriou, as well as a discussion between them. […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In December I participated in the wonderful <a href="https://sites.google.com/view/pcpfest/home">“PCP Fest”</a> workshop in Tel Aviv. The videos from these workshops are now online on their <a href="https://www.youtube.com/playlist?list=PLGRBwz8taWHiBHlgnX98zrbnWQCeDtFQ_">youtube channel</a>.</p>



<p>The channel contains not just videos of talks but also two wide ranging interviews of Alon Rosen with <a href="https://youtu.be/-GQnK6ys6C0">Avi Wigderson</a> and <a href="https://youtu.be/vKCE7QnsFcw">Christos Papadimitriou</a>, as well as a discussion between them.  I think many people, especially students, might find these interviews inspiring. They cover Avi’s and Christos’ personal and intellectual journeys, that are similar in some ways and quite different in others. </p></div>
    </content>
    <updated>2019-04-07T02:48:23Z</updated>
    <published>2019-04-07T02:48:23Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>windowsontheory</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2019-04-09T08:21:16Z</updated>
    </source>
  </entry>
</feed>
