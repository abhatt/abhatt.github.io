<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2021-02-17T04:39:44Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://cstheory-events.org/2021/02/17/stoc-2021-workshops/</id>
    <link href="https://cstheory-events.org/2021/02/17/stoc-2021-workshops/" rel="alternate" type="text/html"/>
    <title>STOC 2021 workshops</title>
    <summary>June 21-25, 2021 Online http://acm-stoc.org/stoc2021/callforworkshops.html Submission deadline: March 15, 2021 STOC 2021 will hold workshops during the conference week, June 21–25, 2021. We invite groups of interested researchers to submit workshop proposals. The due date for proposals is March 15.</summary>
    <updated>2021-02-17T04:07:12Z</updated>
    <published>2021-02-17T04:07:12Z</published>
    <category term="workshop"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-events.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-events.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-events.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-events.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-events.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Aggregator for CS theory workshops, schools, and so on</subtitle>
      <title>CS Theory Events</title>
      <updated>2021-02-17T04:39:08Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/02/16/lattice-borromean-rings</id>
    <link href="https://11011110.github.io/blog/2021/02/16/lattice-borromean-rings.html" rel="alternate" type="text/html"/>
    <title>Lattice Borromean rings</title>
    <summary>A lot of topology is finding ways to prove things that are really obvious but where explaining why they’re obvious can be difficult. So I want to do this for a discrete analogue of ropelength, the length of the shortest lattice representation, for the Borromean rings. You can find several pretty lattice (and non-lattice) representations of the Borromean rings in a paper by Verhoeff &amp; Verhoeff, “Three families of mitered Borromean ring sculptures” [Bridges, 2015]; the one in the middle of their figure 2, thinned down to use only lattice edges and not thick solid rings, is the one I have in mind. It is formed by three \(2\times 4\) rectangles, shown below next to Jessen’s icosahedron which has the same vertex coordinates. (You can do the same thing with a regular icosahedron but then you get non-lattice golden rectangles.)</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A lot of topology is finding ways to prove things that are really obvious but where explaining why they’re obvious can be difficult. So I want to do this for a discrete analogue of <a href="https://en.wikipedia.org/wiki/Ropelength">ropelength</a>, the length of the shortest lattice representation, for the <a href="https://en.wikipedia.org/wiki/Borromean_rings">Borromean rings</a>. You can find several pretty lattice (and non-lattice) representations of the Borromean rings in a paper by Verhoeff &amp; Verhoeff, “<a href="https://archive.bridgesmathart.org/2015/bridges2015-53.pdf">Three families of mitered Borromean ring sculptures</a>” [<em>Bridges</em>, 2015]; the one in the middle of their figure 2, thinned down to use only lattice edges and not thick solid rings, is the one I have in mind. It is formed by three \(2\times 4\) rectangles, shown below next to <a href="https://en.wikipedia.org/wiki/Jessen%27s_icosahedron">Jessen’s icosahedron</a> which has the same vertex coordinates. (You can do the same thing with a regular icosahedron but then you get non-lattice golden rectangles.)</p>

<p style="text-align: center;"><img alt="Lattice Borromean rings and Jessen's icosahedron" src="https://11011110.github.io/blog/assets/2021/Borromean-Jessen.svg"/></p>

<p>Each of the three rectangles has perimeter \(12\), so the total length of the whole link is \(36\). Why should this be the minimum possible? One could plausibly run a brute force search over all small-enough realizations, but this would be tedious and some effort would be needed to prune the search enough to get it to run at all. Instead, I found an argument based on the lengths of the individual loops in the link, allowing me to analyze them (mostly) separately.</p>

<p>Each loop is unknotted, so it can be the boundary of a disk in space. Importantly, for the Borromean rings, every disk spanned by one of the loops must be crossed at least twice by other loops. If we could find a disk spanned by one loop that was not crossed at all by other loops, then we could shrink the first loop topologically within its disk down to a size so small that it could easily be pulled apart from the other two loops, something that is not possible with the Borromean rings. And if we could find a disk that was only crossed once by another loop, then the <a href="https://en.wikipedia.org/wiki/Linking_number">linking number</a> of the two loops would be one, something that doesn’t happen for the Borromean rings.</p>

<p>If you travel in some consistent direction around a ring in a 3d lattice, every step in one direction along a coordinate axis must be cancelled by a step in the opposite direction elsewhere along the ring. So if a ring has length \(\ell\), there must be \(\ell/2\) pairs of opposite steps, partitioned somehow among the three dimensions. If the bounding box of the ring has size \(a\times b\times c\), then we must have \(a+b+c\le\ell/2\), and we can classify the possible shapes of rings of length \(\ell\) by the possible shapes of their bounding boxes. This gives us the following cases:</p>

<ul>
  <li>
    <p>A ring of length \(\ell=4\) can only be a square, with bounding box dimensions \(1\times 1\times 0\) (the zero means that it lies in a single plane in 3d, not that it doesn’t exist at all). The square itself is a disk not crossed by any other lattice path, unusable in the Borromean rings.</p>
  </li>
  <li>
    <p>A ring of length \(\ell=6\) can be a rectangle with bounding box \(2\times 1\times 0\), or fully 3-dimensional with bounding box \(1\times 1\times 1\). There are two fully 3-dimensional cases, one that avoids two opposite vertices of the bounding box and one that avoids two adjacent vertices. The rectangle can be its own spanning disk, and in the 3-dimensional cases we can use a spanning disk connecting the center of the bounding cube by a line segment to each point along the ring. Neither of these types of disks is crossed by any other lattice path.</p>

    <p style="text-align: center;"><img alt="Spanning disks for three grid 6-cycles" src="https://11011110.github.io/blog/assets/2021/grid-6-cycles.svg"/></p>
  </li>
  <li>
    <p>A ring of length \(\ell=8\) can be a rectangle with bounding box \(3\times 1\times 0\), a square with bounding box \(2\times 2\times 0\) or fully 3-dimensional with bounding box \(2\times 1\times 1\). It can also double back on itself and cover all vertices of a cube, with bounding box \(1\times 1\times 1\). All cases except the \(2\times 2\times 0\) square can be handled as in the length \(6\) cases; for instance, for the \(2\times 1\times 1\) bounding box we form a disk at the center of the box, connected by a line segment to all points of the ring. These cases cannot be crossed by any other lattice path. The \(2\times 2\times 0\) square can be crossed by a lattice path, through its center point, but only by one path. We can see from this that the shortest lattice representation of the <a href="https://en.wikipedia.org/wiki/Hopf_link">Hopf link</a> (two linked circles) is the obvious one formed from two length-\(8\) squares. However, these squares are still too small to be used in the Borromean rings.</p>
  </li>
  <li>
    <p>A ring of length \(\ell=10\) can be a rectangle with bounding box \(4\times 1\times 0\) or \(3\times 2\times 0\), or fully 3-dimensional with bounding box \(3\times 1\times 1\) or \(2\times 2\times 1\). The \(4\times 1\times 0\) rectangle and the center-point spanning disk of the \(3\times 1\times 1\) box cannot be crossed by any other lattice path, and the center-point spanning disk of the \(2\times 2\times 1\) can be crossed only by one, through its center edge. Using even-smaller bounding boxes doesn’t help.</p>
  </li>
</ul>

<p>That leaves only one problematic case, the \(3\times 2\times 0\) rectangle, of perimeter \(10\), which is shorter than the rectangles of the optimal representation but can nevertheless be crossed by two other lattice paths. In fact, this rectangle can be used in a representation of the Borromean rings. It is even possible to use two of them! (I’ll leave this as an exercise.) So we need some other argument to prove that, when we use one or two of these short rectangles, we have to make up for it elsewhere by making something else extra-long.</p>

<p>If a \(3\times 2\times 0\) rectangle is crossed twice, it must be twice by the same ring; otherwise the rectangle would have nonzero linking number with both other rings, different from what happens in the Borromean rings. And the crossings must happen at the two interior lattice points of the rectangle, through paths that (to avoid each other and the boundary of the rectangle) must pass straight across the rectangle, at least for one unit on each side. The ring that crosses the rectangle in this way consists of two loops connecting the pairs of ends of these two straight paths; any other connection pattern would lead to linking number \(2\), not zero. We can think of these two loops as being separate cycles, shortcut by the lattice edges between the endpoints of the two straight paths. And any disk that spans either of these two loops must itself be crossed by another part of the Borromean rings, because if one of the loops had an uncrossed spanning disk then we could wrap a spanning disk for the rectangle around it (like a glove around a hand) and create an uncrossed spanning disk for the rectangle as well.</p>

<p style="text-align: center;"><img alt="Spanning disk wrapping around a loop like a glove around a hand, adapted from https://commons.wikimedia.org/wiki/File:Disposable_nitrile_glove_with_transparent_background.png" src="https://11011110.github.io/blog/assets/2021/glove.png"/></p>

<p>By the analysis above, in order to be crossed by something else, both of the two shortcut loops of the ring that crosses the \(3\times 2\times 0\) rectangle must have length at least \(8\). Adding in the two straight paths (and removing the two shortcut edges) shows that the ring itself must have length at least \(18\). And if we have one ring of length \(18\) and two more of length \(10\), we get total length at least \(38\), more than the length of the minimal representation. Since all representations that use loops of length less than \(12\) are too long, the representation in which all three loop lengths are exactly \(12\) must be the optimal one, QED.</p>

<p>Researching all this led me to an interesting paper by Dai, Ernst, Por, and Ziegler,  “<a href="https://doi.org/10.1142/S0218216519500858">The ropelengths of knots are almost linear in terms of their crossing numbers</a>” [<em>J. Knot Theory and its Ramifications</em>, 2019]. Ropelength is the minimum length of a 3d representation that can be thickened to a radius-1 tube without self-intersections. (Some sources use diameter in place of radius; this changes the numeric values by a factor of two but does not change the optimizing representations.) Doubling the dimensions of a lattice representation gives you such a representation, and on the other hand one can find short lattice representations by following the thickened tubes of a ropelength representation, so ropelength and lattice length are within constant factors of each other. Dai et al. use this to show that knots that can be drawn in the plane with few crossings also have small ropelength. It doesn’t work to use the plane embedding directly, adding a third coordinate to handle the crossings, because some planar graphs (like the <a href="https://en.wikipedia.org/wiki/Nested_triangles_graph">nested triangles graph</a>) have nonlinear total edge length in any planar lattice drawing. Instead, Dai et al show how to crumple up a planar drawing of any degree-four planar graph into a 3d integer lattice embedding of the graph, with near-linear total edge length, so that the faces of the drawing can also be embedded as disks that are not crossed by each other or the graph edges. One can then modify the lifted drawing to turn the degree-four vertices into crossings in the lifted topologically-planar surface formed by these faces, giving a grid representation of the original knot with near-linear total length.</p>

<p>The ropelength of the Borromean rings has also been the subject of some study. Doubling the grid rectangles and rounding off their corners produces three <a href="https://en.wikipedia.org/wiki/Stadium_(geometry)">stadia</a> with total perimeter \(12\pi+24\approx 61.7\). The same argument as above shows that each curve must be at least long enough for all its spanning disks to be crossable by two disjoint radius-1 tubes. Intuitively the smallest curve that can surround two tubes is a smaller stadium corresponding to the \(2\times 3\) rectangle, with length \(4\pi+4\). If so, this would give a lower bound of \(12\pi+12\approx 49.7\) for the total ropelength of the Borromean rings. The conjectured-optimal configuration, <a href="https://archive.bridgesmathart.org/2008/bridges2008-63.html">used for the logo of the International Mathematical Union</a>, uses three copies of a complicated two-lobed planar curve in roughly the same positions as the three rectangles or stadia; it is described carefully by Cantarella, Fu, Kusner, Sullivan, and Wrinkle, “<a href="http://dx.doi.org/10.2140/gt.2006.10.2055">Criticality for the Gehring link problem</a>” [<em>Geometry &amp; Topology</em> 2006] (section 10), and has length \(\approx 58.006\). The intuition that the \(2\times 3\) stadium is the shortest curve that can surround two others also appears to be stated as proven in this paper, in section 7.1. But they state that the best lower bound for the Borromean ropelength is \(12\pi\) so maybe the \(12\pi+12\) argument above is new?</p>

<p>(<a href="https://mathstodon.xyz/@11011110/105743724683948185">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2021-02-16T16:11:00Z</updated>
    <published>2021-02-16T16:11:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-02-17T00:20:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/016</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/016" rel="alternate" type="text/html"/>
    <title>TR21-016 |  Unambiguous DNFs from Hex | 

	Shalev Ben-David, 

	Mika Göös, 

	Siddhartha Jain, 

	Robin Kothari</title>
    <summary>We exhibit an unambiguous $k$-DNF formula that requires CNF width $\tilde{\Omega}(k^{1.5})$. Our construction is inspired by the board game Hex and it is vastly simpler than previous ones, which achieved at best an exponent of $1.22$. Our result is known to imply several other improved separations in query and communication complexity (e.g., clique vs. independent set problem) and graph theory (Alon--Saks--Seymour problem).</summary>
    <updated>2021-02-16T12:53:50Z</updated>
    <published>2021-02-16T12:53:50Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/015</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/015" rel="alternate" type="text/html"/>
    <title>TR21-015 |  Hitting Sets for Orbits of Circuit Classes and Polynomial Families | 

	Chandan Saha, 

	Bhargav Thankey</title>
    <summary>The orbit of an $n$-variate polynomial $f(\mathbf{x})$ over a field $\mathbb{F}$ is the set $\mathrm{orb}(f) := \{f(A\mathbf{x}+\mathbf{b}) : A \in \mathrm{GL}(n,\mathbb{F}) \ \mathrm{and} \ \mathbf{b} \in \mathbb{F}^n\}$. This paper studies explicit hitting sets for the orbits of polynomials computable by certain well-studied circuit classes. This version of the hitting set problem is interesting as $\mathrm{orb}(f)$ is a natural subset of the set of affine projections of $f$. Affine projections of polynomials computable by seemingly weak circuit classes can be quite powerful. For example, the polynomial $\mathrm{IMM}_{3,d}$ -- the $(1,1)$-th entry of a product of $d$ generic $3 \times 3$ matrices -- is computable by a constant-width read-once oblivious algebraic branching program (ROABP), yet every polynomial computable by a size-$s$ general arithmetic formula is an affine projection of $\mathrm{IMM}_{3,\mathrm{poly}(s)}$. To our knowledge, no efficient hitting set construction was known for even $\mathrm{orb}(\mathrm{IMM}_{3, d})$ before this work. 

In this work, we give efficient constructions of hitting sets for the orbits of several interesting circuit classes and polynomial families. In particular, we give quasi-polynomial time hitting sets for the orbits of:

1. Low-individual-degree polynomials computable by commutative ROABP. This implies quasi-polynomial time hitting sets for the orbits of multilinear sparse polynomials and the orbits of the elementary symmetric polynomials.

2. Multilinear polynomials computable by constant-width ROABP. This implies a quasi-polynomial time hitting set for the orbit of $\mathrm{IMM}_{3,d}$.

3. Polynomials computable by constant-depth, constant-occur formulas with low-individual-degree sparse polynomials at the leaves. This implies quasi-polynomial time hitting sets for the orbits of multilinear depth-4 circuits with constant top fan-in, and also poly-time hitting sets for the orbits of the power symmetric polynomials and the sum-product polynomials. 

4. Polynomials computable by occur-once formulas with low-individual-degree sparse polynomials at the leaves. 

We say a polynomial has low individual degree if the degree of every variable in the polynomial is at most $\mathrm{poly}(\log n)$, where $n$ is the number of variables.

The first two results are obtained by building upon the rank concentration by translation technique of [Agrawal-Saha-Saxena, STOC'13]; the second result also uses the merge-and-reduce idea from [Forbes-Shpilka, APPROX'13], [Forbes-Saptharishi-Shpilka, STOC'14]. The proof of the third result applies the algebraic independence based technique of [Agrawal-Saha-Saptharishi-Saxena, STOC'12], [Beecken-Mittmann-Saxena, ICALP'11] to reduce to the case of constructing hitting sets for orbits of sparse polynomials. A similar reduction using the Shpilka-Volkovich (SV) generator based argument in [Shpilka-Volkovich, STOC'08, APPROX-RANDOM'09] yields the fourth result. The SV generator plays an important role in all the four results.</summary>
    <updated>2021-02-16T08:54:53Z</updated>
    <published>2021-02-16T08:54:53Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=5330</id>
    <link href="https://www.scottaaronson.com/blog/?p=5330" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=5330#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=5330" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">On standing up sans backbone</title>
    <summary xml:lang="en-US">Note: To get myself into the spirit of writing this post, tonight I watched the 2019 movie Mr. Jones, about the true story of the coverup of Stalin’s 1932-3 mass famine by New York Times journalist Walter Duranty. Recommended! In my last post, I wrote that despite all my problems with Cade Metz’s New York […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><blockquote class="wp-block-quote"><p><strong>Note:</strong> To get myself into the spirit of writing this post, tonight I watched the 2019 movie <a href="https://www.amazon.com/Mr-Jones-James-Norton/dp/B089XVJB9S/ref=sr_1_1?dchild=1&amp;keywords=Mr.+Jones+%282019%29&amp;qid=1613446265&amp;s=instant-video&amp;sr=1-1">Mr. Jones</a>, about the true story of the coverup of Stalin’s 1932-3 mass famine by <em>New York Times</em> journalist <a href="https://en.wikipedia.org/wiki/Walter_Duranty">Walter Duranty</a>.  Recommended!</p></blockquote>



<p>In my <a href="https://www.scottaaronson.com/blog/?p=5310">last post</a>, I wrote that despite all my problems with Cade Metz’s <em>New York Times</em> hit piece on Scott Alexander, I’d continue talking to journalists—even Metz himself, I added, assuming he’d still talk to me after my public disparagement of his work.  Over the past few days, though, the many counterarguments in my comments section and elsewhere gradually caused me to change my mind.  I now feel like to work with Metz again, even just on some quantum computing piece, would be to reward—and to be seen as rewarding—journalistic practices that are making the world worse, and that this consideration overrides even my extreme commitment to openness.</p>



<p>At the least, before I could talk to Metz again, I’d need a better understanding of how the hit piece happened.  What was the role of the editors?  How did the original hook—namely, the rationalist community’s early rightness about covid-19—disappear entirely from the article?  How did the piece manage to evince so little <em>curiosity</em> about such an unusual subculture and such a widely-admired writer?  How did it fail so completely to engage with the rationalists’ <em>ideas</em>, instead jumping immediately to “six degrees of Peter Thiel” and other reductive games?  How did an angry SneerClubber, David Gerard, end up (according to <a href="https://twitter.com/davidgerard/status/1360735880466604040">his own boast</a>) basically dictating the NYT piece’s content?</p>



<p>It’s always ripping-off-a-bandage painful to admit when trust in another person was wildly misplaced—for then who<em> else</em> can we not trust?  But sometimes that’s the truth of it.</p>



<p>I continue to believe passionately in the centrality of good journalism to a free society.  I’ll continue to talk to journalists often, about quantum computing or whatever else.  I also recognize that the NYT is a large, heterogeneous institution (I myself <a href="https://www.nytimes.com/2011/12/06/science/scott-aaronson-quantum-computing-promises-new-insights.html">published</a> in it <a href="https://www.nytimes.com/2019/10/30/opinion/google-quantum-computer-sycamore.html">twice</a>); it’s not hard to imagine that many of its own staff take issue with the SSC piece.</p>



<p>But let’s be clear about the stakes here.  In the discussion of my last post, I <a href="https://www.scottaaronson.com/blog/?p=5310#comment-1878641">described</a> the NYT as “still the main vessel of consensus reality in <s>human civilization</s>” [alright, alright, American civilization!].  What’s really at issue, beyond the treatment of a single blogger, is whether the NYT can continue serving that central role in a world reshaped by social media, resurgent fascism, and entitled wokery.</p>



<p>Sure, we all know that the NYT has been disastrously wrong before: it ridiculed Goddard’s dream of spaceflight, denied the Holodomor, relegated the Holocaust to the back pages while it was happening, published the fabricated justifications for the Iraq War.  But the NYT and a few other publications were still the blockchain of reality, the engine of the consensus of all that is, the last bulwark against the conspiracists and the anti-vaxxers and the empowered fabulists and the horned insurrectionists storming the Capitol, because there was no ability to coordinate around any serious alternative.  I’m <em>still</em> skeptical that there’s a serious alternative, but I now look more positively than I did just a few days ago on attempts to create one.</p>



<p>To all those who called me naïve or a coward for having cooperated with the NYT: believe me, I’m well aware that I wasn’t born with much backbone.  (I am, after all, that guy on the Internet who famously once planned on a life of celibate asceticism, or more likely suicide, rather than asking women out and thereby risking eternal condemnation as a misogynistic sexual harasser by the normal, the popular, the socially adept, the … <em>humanities grads</em> and the <em>journalists</em>.)  But whenever I need a pick-me-up, I tell myself that rather than being ashamed about my lack of a backbone, I can take pride in having occasionally managed to stand even without one.</p></div>
    </content>
    <updated>2021-02-16T05:33:59Z</updated>
    <published>2021-02-16T05:33:59Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Nerd Self-Help"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Obviously I'm Not Defending Aaronson"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Self-Referential"/>
    <category scheme="https://www.scottaaronson.com/blog" term="The Fate of Humanity"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2021-02-16T23:03:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07310</id>
    <link href="http://arxiv.org/abs/2102.07310" rel="alternate" type="text/html"/>
    <title>On Ray Shooting for Triangles in 3-Space and Related Problems</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Ezra:Esther.html">Esther Ezra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sharir:Micha.html">Micha Sharir</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07310">PDF</a><br/><b>Abstract: </b>We consider several problems that involve lines in three dimensions, and
present improved algorithms for solving them. The problems include (i) ray
shooting amid triangles in $R^3$, (ii) reporting intersections between query
lines (segments, or rays) and input triangles, as well as approximately
counting the number of such intersections, (iii) computing the intersection of
two nonconvex polyhedra, (iv) detecting, counting, or reporting intersections
in a set of lines in $R^3$, and (v) output-sensitive construction of an
arrangement of triangles in three dimensions.
</p>
<p>Our approach is based on the polynomial partitioning technique.
</p>
<p>For example, our ray-shooting algorithm processes a set of $n$ triangles in
$R^3$ into a data structure for answering ray shooting queries amid the given
triangles, which uses $O(n^{3/2+\varepsilon})$ storage and preprocessing, and
answers a query in $O(n^{1/2+\varepsilon})$ time, for any $\varepsilon&gt;0$. This
is a significant improvement over known results, obtained more than 25 years
ago, in which, with this amount of storage, the query time bound is roughly
$n^{5/8}$. The algorithms for the other problems have similar performance
bounds, with similar improvements over previous results.
</p>
<p>We also derive a nontrivial improved tradeoff between storage and query time.
Using it, we obtain algorithms that answer $m$ queries on $n$ objects in \[
\max \left\{ O(m^{2/3}n^{5/6+\varepsilon} + n^{1+\varepsilon}),\;
O(m^{5/6+\varepsilon}n^{2/3} + m^{1+\varepsilon}) \right\} \] time, for any
$\varepsilon&gt;0$, again an improvement over the earlier bounds.
</p></div>
    </summary>
    <updated>2021-02-16T23:20:34Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07173</id>
    <link href="http://arxiv.org/abs/2102.07173" rel="alternate" type="text/html"/>
    <title>A note on VNP-completeness and border complexity</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Ikenmeyer:Christian.html">Christian Ikenmeyer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sanyal:Abhiroop.html">Abhiroop Sanyal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07173">PDF</a><br/><b>Abstract: </b>In 1979 Valiant introduced the complexity class VNP of p-definable families
of polynomials, he defined the reduction notion known as p-projection and he
proved that the permanent polynomial and the Hamiltonian cycle polynomial are
VNP-complete under p-projections.
</p>
<p>In 2001 Mulmuley and Sohoni (and independently B\"urgisser) introduced the
notion of border complexity to the study of the algebraic complexity of
polynomials. In this algebraic machine model, instead of insisting on exact
computation, approximations are allowed. This gives VNP the structure of a
topological space. In this short note we study the set VNPC of VNP-complete
polynomials. We show that the complement VNP \ VNPC lies dense in VNP. Quite
surprisingly, we also prove that VNPC lies dense in VNP. We prove analogous
statements for the complexity classes VF, VBP, and VP.
</p>
<p>The density of VNP \ VNPC holds for several different reduction notions:
p-projections, border p-projections, c-reductions, and border c-reductions. We
compare the relationship of the VNP-completeness notion under these reductions
and separate most of the corresponding sets. Border reduction notions were
introduced by Bringmann, Ikenmeyer, and Zuiddam (JACM 2018). Our paper is the
first structured study of border reduction notions.
</p></div>
    </summary>
    <updated>2021-02-16T22:54:55Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07154</id>
    <link href="http://arxiv.org/abs/2102.07154" rel="alternate" type="text/html"/>
    <title>Fault-Tolerant Distance Labeling for Planar Graphs</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Aviv Bar-Natan, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Charalampopoulos:Panagiotis.html">Panagiotis Charalampopoulos</a>, Paweł Gawrychowski, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mozes:Shay.html">Shay Mozes</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Weimann:Oren.html">Oren Weimann</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07154">PDF</a><br/><b>Abstract: </b>In fault-tolerant distance labeling we wish to assign short labels to the
vertices of a graph $G$ such that from the labels of any three vertices $u,v,f$
we can infer the $u$-to-$v$ distance in the graph $G\setminus \{f\}$. We show
that any directed weighted planar graph (and in fact any graph in a graph
family with $O(\sqrt{n})$-size separators, such as minor-free graphs) admits
fault-tolerant distance labels of size $O(n^{2/3})$. We extend these labels in
a way that allows us to also count the number of shortest paths, and provide
additional upper and lower bounds for labels and oracles for counting shortest
paths.
</p></div>
    </summary>
    <updated>2021-02-16T23:05:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07113</id>
    <link href="http://arxiv.org/abs/2102.07113" rel="alternate" type="text/html"/>
    <title>Comprehensive Comparative Study of Multi-Label Classification Methods</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bogatinovski:Jasmin.html">Jasmin Bogatinovski</a>, Ljupčo Todorovski, Sašo Džeroski, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kocev:Dragi.html">Dragi Kocev</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07113">PDF</a><br/><b>Abstract: </b>Multi-label classification (MLC) has recently received increasing interest
from the machine learning community. Several studies provide reviews of methods
and datasets for MLC and a few provide empirical comparisons of MLC methods.
However, they are limited in the number of methods and datasets considered.
This work provides a comprehensive empirical study of a wide range of MLC
methods on a plethora of datasets from various domains. More specifically, our
study evaluates 26 methods on 42 benchmark datasets using 20 evaluation
measures. The adopted evaluation methodology adheres to the highest literature
standards for designing and executing large scale, time-budgeted experimental
studies. First, the methods are selected based on their usage by the community,
assuring representation of methods across the MLC taxonomy of methods and
different base learners. Second, the datasets cover a wide range of complexity
and domains of application. The selected evaluation measures assess the
predictive performance and the efficiency of the methods. The results of the
analysis identify RFPCT, RFDTBR, ECCJ48, EBRJ48 and AdaBoost.MH as best
performing methods across the spectrum of performance measures. Whenever a new
method is introduced, it should be compared to different subsets of MLC
methods, determined on the basis of the different evaluation criteria.
</p></div>
    </summary>
    <updated>2021-02-16T22:54:26Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07100</id>
    <link href="http://arxiv.org/abs/2102.07100" rel="alternate" type="text/html"/>
    <title>IMF: An Iterative Max-Flow Method for Localizability Detection</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Ping:Haodi.html">Haodi Ping</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07100">PDF</a><br/><b>Abstract: </b>Determining whether nodes can be localized, called localizability detection,
is a basic work in network localization. We present a novel approach for
localizability detection given a set of nodes and their connectivity
relationships. The key idea is transforming the problem of detecting three
disjoint paths into a max-flow problem, which can be efficiently solved by
existing algorithms. Furthermore, we prove the correctness of our algorithm.
</p></div>
    </summary>
    <updated>2021-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07089</id>
    <link href="http://arxiv.org/abs/2102.07089" rel="alternate" type="text/html"/>
    <title>Simple vertex coloring algorithms</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Jackson Morris, Fang Song <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07089">PDF</a><br/><b>Abstract: </b>Given a graph $G$ with $n$ vertices and maximum degree $\Delta$, it is known
that $G$ admits a vertex coloring with $\Delta + 1$ colors such that no edge of
$G$ is monochromatic. This can be seen constructively by a simple greedy
algorithm, which runs in time $O(n\Delta)$.
</p>
<p>Very recently, a sequence of results (e.g., [Assadi et. al. SODA'19, Bera et.
al. ICALP'20, Alon Assadi Approx/Random'20]) show randomized algorithms for
$(\epsilon + 1)\Delta$-coloring in the query model making
$\tilde{O}(n\sqrt{n})$ queries, improving over the greedy strategy on dense
graphs. In addition, a lower bound of $\Omega(n\sqrt n)$ for any
$O(\Delta)$-coloring is established on general graphs.
</p>
<p>In this work, we give a simple algorithm for $(1 + \epsilon)\Delta$-coloring.
This algorithm makes $O(\epsilon^{-1/2}n\sqrt{n})$ queries, which matches the
best existing algorithms as well as the classical lower bound for sufficiently
large $\epsilon$. Additionally, it can be readily adapted to a quantum query
algorithm making $\tilde{O}(\epsilon^{-1}n^{4/3})$ queries, bypassing the
classical lower bound. Complementary to these algorithmic results, we show a
quantum lower bound of $\Omega(n)$ for $O(\Delta)$-coloring.
</p></div>
    </summary>
    <updated>2021-02-16T23:06:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.07011</id>
    <link href="http://arxiv.org/abs/2102.07011" rel="alternate" type="text/html"/>
    <title>Beating Two-Thirds For Random-Order Streaming Matching</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Assadi:Sepehr.html">Sepehr Assadi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Behnezhad:Soheil.html">Soheil Behnezhad</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.07011">PDF</a><br/><b>Abstract: </b>We study the maximum matching problem in the random-order semi-streaming
setting. In this problem, the edges of an arbitrary $n$-vertex graph $G=(V, E)$
arrive in a stream one by one and in a random order. The goal is to have a
single pass over the stream, use $O(n polylog n)$ space, and output a large
matching of $G$.
</p>
<p>We prove that for an absolute constant $\epsilon_0 &gt; 0$, one can find a $(2/3
+ \epsilon_0)$-approximate maximum matching of $G$ using $O(n \log n)$ space
with high probability. This breaks the natural boundary of $2/3$ for this
problem prevalent in the prior work and resolves an open problem of
Bernstein~[ICALP'20] on whether a $(2/3 + \Omega(1))$-approximation is
achievable.
</p></div>
    </summary>
    <updated>2021-02-16T23:04:52Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06977</id>
    <link href="http://arxiv.org/abs/2102.06977" rel="alternate" type="text/html"/>
    <title>Almost-linear-time Weighted $\ell_p$-norm Solvers in Slightly Dense Graphs via Sparsification</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Adil:Deeksha.html">Deeksha Adil</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bullins:Brian.html">Brian Bullins</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kyng:Rasmus.html">Rasmus Kyng</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sachdeva:Sushant.html">Sushant Sachdeva</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06977">PDF</a><br/><b>Abstract: </b>We give almost-linear-time algorithms for constructing sparsifiers with $n\
poly(\log n)$ edges that approximately preserve weighted $(\ell^{2}_2 +
\ell^{p}_p)$ flow or voltage objectives on graphs. For flow objectives, this is
the first sparsifier construction for such mixed objectives beyond unit
$\ell_p$ weights, and is based on expander decompositions. For voltage
objectives, we give the first sparsifier construction for these objectives,
which we build using graph spanners and leverage score sampling. Together with
the iterative refinement framework of [Adil et al, SODA 2019], and a new
multiplicative-weights based constant-approximation algorithm for
mixed-objective flows or voltages, we show how to find $(1+2^{-\text{poly}(\log
n)})$ approximations for weighted $\ell_p$-norm minimizing flows or voltages in
$p(m^{1+o(1)} + n^{4/3 + o(1)})$ time for $p=\omega(1),$ which is almost-linear
for graphs that are slightly dense ($m \ge n^{4/3 + o(1)}$).
</p></div>
    </summary>
    <updated>2021-02-16T23:02:20Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06959</id>
    <link href="http://arxiv.org/abs/2102.06959" rel="alternate" type="text/html"/>
    <title>Euclidean Affine Functions and Applications to Calendar Algorithms</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neri:Cassio.html">Cassio Neri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schneider:Lorenz.html">Lorenz Schneider</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06959">PDF</a><br/><b>Abstract: </b>We study properties of Euclidean affine functions (EAFs), namely those of the
form $f(r) = (\alpha\cdot r + \beta)/\delta$, and their closely related
expression $\mathring{f}(r) = (\alpha\cdot r + \beta)\%\delta$, where $r$,
$\alpha$, $\beta$ and $\delta$ are integers, and where $/$ and $\%$
respectively denote the quotient and remainder of Euclidean division. We derive
algebraic relations and numerical approximations that are important for the
efficient evaluation of these expressions in modern CPUs. Since simple division
and remainder are particular cases of EAFs (when $\alpha = 1$ and $\beta = 0$),
the optimisations proposed in this paper can also be appplied to them. Such
expressions appear in some of the most common tasks in any computer system,
such as printing numbers, times and dates. We use calendar calculations as the
main application example because it is richer with respect to the number of
EAFs employed. Specifically, the main application presented in this article
relates to Gregorian calendar algorithms. We will show how they can be
implemented substantially more efficiently than is currently the case in widely
used C, C++, C# and Java open source libraries. Gains in speed of a factor of
two or more are common.
</p></div>
    </summary>
    <updated>2021-02-16T23:05:18Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06939</id>
    <link href="http://arxiv.org/abs/2102.06939" rel="alternate" type="text/html"/>
    <title>Optimal Streaming Algorithms for Graph Matching</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Jianer.html">Jianer Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Huang:Qin.html">Qin Huang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kanj:Iyad.html">Iyad Kanj</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xia:Ge.html">Ge Xia</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06939">PDF</a><br/><b>Abstract: </b>We present parameterized streaming algorithms for the graph matching problem
in both the dynamic and the insert-only models. For the dynamic streaming
model, we present a one-pass algorithm that, with high probability, computes a
maximum-weight $k$-matching of a weighted graph in $\tilde{O}(Wk^2)$ space and
that has $\tilde{O}(1)$ update time, where $W$ is the number of distinct edge
weights and the notation $\tilde{O}()$ hides a poly-logarithmic factor in the
input size. For the insert-only streaming model, we present a one-pass
algorithm that runs in $O(k^2)$ space and has $O(1)$ update time, and that,
with high probability, computes a maximum-weight $k$-matching of a weighted
graph. The space complexity and the update-time complexity achieved by our
algorithms for unweighted $k$-matching in the dynamic model and for weighted
$k$-matching in the insert-only model are optimal.
</p>
<p>A notable contribution of this paper is that the presented algorithms {\it do
not} rely on the apriori knowledge/promise that the cardinality of \emph{every}
maximum-weight matching of the input graph is upper bounded by the parameter
$k$. This promise has been a critical condition in previous works, and lifting
it required the development of new tools and techniques.
</p></div>
    </summary>
    <updated>2021-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06904</id>
    <link href="http://arxiv.org/abs/2102.06904" rel="alternate" type="text/html"/>
    <title>Traveling Repairperson, Unrelated Machines, and Other Stories About Average Completion Times</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bienkowski:Marcin.html">Marcin Bienkowski</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kraska:Artur.html">Artur Kraska</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Hsiang=Hsuan.html">Hsiang-Hsuan Liu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06904">PDF</a><br/><b>Abstract: </b>We present a unified framework for minimizing average completion time for
many seemingly disparate \emph{online} scheduling problems, such as the
traveling repairperson problems (TRP), dial-a-ride problems (DARP), and
scheduling on unrelated machines.
</p>
<p>We construct a simple algorithm that handles all these scheduling problems,
by computing and later executing auxiliary schedules, each optimizing a certain
function on already seen prefix of the input. The optimized function resembles
a prize-collecting variant of the original scheduling problem. By a careful
analysis of the interplay between these auxiliary schedules, and later
employing the resulting inequalities in a factor-revealing linear program, we
obtain improved bounds on the competitive ratio for all these scheduling
problems.
</p>
<p>In particular, our techniques yield a $4$-competitive deterministic algorithm
for all previously studied variants of online TRP and DARP, and a
$3$-competitive one for the scheduling on unrelated machines (also with
precedence constraints). This improves over currently best ratios for these
problems that are $5.14$ and $4$, respectively. We also show how to use
randomization to further reduce the competitive ratios to $1+2/\ln 3 &lt; 2.821$
and $1+1/\ln 2 &lt; 2.443$, respectively. The randomized bounds also substantially
improve the current state of the art. Our upper bound for DARP contradicts the
lower bound of 3 given by Fink et al. (Inf. Process. Lett. 2009); we pinpoint a
flaw in their proof.
</p></div>
    </summary>
    <updated>2021-02-16T23:18:23Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06901</id>
    <link href="http://arxiv.org/abs/2102.06901" rel="alternate" type="text/html"/>
    <title>Lower Bounds on Dynamic Programming for Maximum Weight Independent Set</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Korhonen:Tuukka.html">Tuukka Korhonen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06901">PDF</a><br/><b>Abstract: </b>We prove lower bounds on pure dynamic programming algorithms for maximum
weight independent set (MWIS). We model such algorithms as tropical circuits,
i.e., circuits that compute with $\max$ and $+$ operations. For a graph $G$, an
MWIS-circuit of $G$ is a tropical circuit whose inputs correspond to vertices
of $G$ and which computes the weight of a maximum weight independent set of $G$
for any assignment of weights to the inputs. We show that if $G$ has treewidth
$w$ and maximum degree $d$, then any MWIS-circuit of $G$ has $2^{\Omega(w/d)}$
gates and that if $G$ is planar then any MWIS-circuit of $G$ has
$2^{\Omega(w)}$ gates. An MWIS-formula is an MWIS-circuit where each gate has
fan-out at most one. We show that if $G$ has treedepth $t$ and maximum degree
$d$, then any MWIS-formula of $G$ has $2^{\Omega(t/d)}$ gates. It follows that
treewidth characterizes optimal MWIS-circuits up to polynomials for all bounded
degree graphs and planar graphs, and treedepth characterizes optimal
MWIS-formulas up to polynomials for all bounded degree graphs.
</p></div>
    </summary>
    <updated>2021-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06857</id>
    <link href="http://arxiv.org/abs/2102.06857" rel="alternate" type="text/html"/>
    <title>On Robust Optimal Transport: Computational Complexity, Low-rank Approximation, and Barycenter Computation</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Le:Khang.html">Khang Le</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nguyen:Huy.html">Huy Nguyen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nguyen:Quang.html">Quang Nguyen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Ho:Nhat.html">Nhat Ho</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pham:Tung.html">Tung Pham</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bui:Hung.html">Hung Bui</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06857">PDF</a><br/><b>Abstract: </b>We consider two robust versions of optimal transport, named $\textit{Robust
Semi-constrained Optimal Transport}$ (RSOT) and $\textit{Robust Unconstrained
Optimal Transport}$ (ROT), formulated by relaxing the marginal constraints with
Kullback-Leibler divergence. For both problems in the discrete settings, we
propose Sinkhorn-based algorithms that produce $\varepsilon$-approximations of
RSOT and ROT in $\widetilde{\mathcal{O}}(\frac{n^2}{\varepsilon})$ time, where
$n$ is the number of supports of the probability distributions. Furthermore, to
reduce the dependency of the complexity of the Sinkhorn-based algorithms on
$n$, we apply Nystr\"{o}m method to approximate the kernel matrix in both RSOT
and ROT by a matrix of rank $r$ before passing it to these Sinkhorn-based
algorithms. We demonstrate that these new algorithms have
$\widetilde{\mathcal{O}}(n r^2 + \frac{nr}{\varepsilon})$ runtime to obtain the
RSOT and ROT $\varepsilon$-approximations. Finally, we consider a barycenter
problem based on RSOT, named $\textit{Robust Semi-Constrained Barycenter}$
problem (RSBP), and develop a robust iterative Bregman projection algorithm,
called $\textbf{Normalized-RobustIBP}$ algorithm, to solve the RSBP in the
discrete settings of probability distributions. We show that an
$\varepsilon$-approximated solution of the RSBP can be achieved in
$\widetilde{\mathcal{O}}(\frac{mn^2}{\varepsilon})$ time using
$\textbf{Normalized-RobustIBP}$ algorithm when $m = 2$, which is better than
the previous complexity $\widetilde{\mathcal{O}}(\frac{mn^2}{\varepsilon^2})$
of IBP algorithm for approximating the Wasserstein barycenter. Extensive
experiments confirm our theoretical results.
</p></div>
    </summary>
    <updated>2021-02-16T23:03:18Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06833</id>
    <link href="http://arxiv.org/abs/2102.06833" rel="alternate" type="text/html"/>
    <title>Interactive quantum advantage with noisy, shallow Clifford circuits</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Grier:Daniel.html">Daniel Grier</a>, Nathan Ju, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schaeffer:Luke.html">Luke Schaeffer</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06833">PDF</a><br/><b>Abstract: </b>Recent work by Bravyi et al. constructs a relation problem that a noisy
constant-depth quantum circuit (QNC$^0$) can solve with near certainty
(probability $1 - o(1)$), but that any bounded fan-in constant-depth classical
circuit (NC$^0$) fails with some constant probability. We show that this
robustness to noise can be achieved in the other low-depth quantum/classical
circuit separations in this area. In particular, we show a general strategy for
adding noise tolerance to the interactive protocols of Grier and Schaeffer. As
a consequence, we obtain an unconditional separation between noisy QNC$^0$
circuits and AC$^0[p]$ circuits for all primes $p \geq 2$, and a conditional
separation between noisy QNC$^0$ circuits and log-space classical machines
under a plausible complexity-theoretic conjecture.
</p>
<p>A key component of this reduction is showing average-case hardness for the
classical simulation tasks -- that is, showing that a classical simulation of
the quantum interactive task is still powerful even if it is allowed to err
with constant probability over a uniformly random input. We show that is true
even for quantum tasks which are $\oplus$L-hard to simulate. To do this, we
borrow techniques from randomized encodings used in cryptography.
</p></div>
    </summary>
    <updated>2021-02-16T22:55:10Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06805</id>
    <link href="http://arxiv.org/abs/2102.06805" rel="alternate" type="text/html"/>
    <title>The Structure of Minimum Vertex Cuts</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pettie:Seth.html">Seth Pettie</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yin:Longhui.html">Longhui Yin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06805">PDF</a><br/><b>Abstract: </b>In this paper we continue a long line of work on representing the cut
structure of graphs. We classify the types minimum vertex cuts, and the
possible relationships between multiple minimum vertex cuts.
</p>
<p>As a consequence of these investigations, we exhibit a simple $O(\kappa
n)$-space data structure that can quickly answer pairwise
$(\kappa+1)$-connectivity queries in a $\kappa$-connected graph. We also show
how to compute the "closest" $\kappa$-cut to every vertex in near linear
$\tilde{O}(m+poly(\kappa)n)$ time.
</p></div>
    </summary>
    <updated>2021-02-16T23:06:56Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06798</id>
    <link href="http://arxiv.org/abs/2102.06798" rel="alternate" type="text/html"/>
    <title>Which Regular Languages can be Efficiently Indexed?</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cotumaccio:Nicola.html">Nicola Cotumaccio</a>, Giovanna D'Agostino, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Policriti:Alberto.html">Alberto Policriti</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Prezza:Nicola.html">Nicola Prezza</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06798">PDF</a><br/><b>Abstract: </b>In the present work, we study the hierarchy of $p$-sortable languages:
regular languages accepted by automata of width $p$. In this hierarchy, regular
languages are sorted according to the new fundamental measure of NFA complexity
$p$. Our main contributions are the following: (i) we show that the hierarchy
is strict and does not collapse, (ii) we provide (exponential) upper and lower
bounds relating the minimum widths of equivalent NFAs and DFAs, and (iii) we
characterize DFAs of minimum $p$ for a given $\mathcal L$ via a
co-lexicographic variant of the Myhill-Nerode theorem. Our findings imply that
in polynomial time we can build an index breaking the worst-case conditional
lower bound of $\Omega(\pi m)$, whenever the input NFA's width is at most
$\epsilon \log_2 m$, for any constant $0 \leq \epsilon &lt; 1/2$.
</p></div>
    </summary>
    <updated>2021-02-16T22:55:29Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2102.06783</id>
    <link href="http://arxiv.org/abs/2102.06783" rel="alternate" type="text/html"/>
    <title>The Complexity of Transitively Orienting Temporal Graphs</title>
    <feedworld_mtime>1613433600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mertzios:George_B=.html">George B. Mertzios</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Molter:Hendrik.html">Hendrik Molter</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Renken:Malte.html">Malte Renken</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Spirakis:Paul_G=.html">Paul G. Spirakis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zschoche:Philipp.html">Philipp Zschoche</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2102.06783">PDF</a><br/><b>Abstract: </b>In a temporal network with discrete time-labels on its edges, entities and
information can only "flow" along sequences of edges whose time-labels are
non-decreasing (resp. increasing), i.e. along temporal (resp. strict temporal)
paths. Nevertheless, in the model for temporal networks of [Kempe et al., JCSS,
2002], the individual time-labeled edges remain undirected: an edge $e=\{u,v\}$
with time-label $t$ specifies that "$u$ communicates with $v$ at time $t$".
This is a symmetric relation between $u$ and $v$, and it can be interpreted
that the information can flow in either direction. In this paper we make a
first attempt to understand how the direction of information flow on one edge
can impact the direction of information flow on other edges. More specifically,
we introduce the notion of a temporal transitive orientation and we
systematically investigate its algorithmic behavior in various situations. An
orientation of a temporal graph is called temporally transitive if, whenever
$u$ has a directed edge towards $v$ with time-label $t_1$ and $v$ has a
directed edge towards $w$ with time-label $t_2\geq t_1$, then $u$ also has a
directed edge towards $w$ with some time-label $t_3\geq t_2$. If we just demand
that this implication holds whenever $t_2 &gt; t_1$, the orientation is called
strictly temporally transitive. Our main result is a conceptually simple, yet
technically quite involved, polynomial-time algorithm for recognizing whether a
given temporal graph $\mathcal{G}$ is transitively orientable. In wide contrast
we prove that, surprisingly, it is NP-hard to recognize whether $\mathcal{G}$
is strictly transitively orientable. Additionally we introduce and investigate
further related problems to temporal transitivity, notably among them the
temporal transitive completion problem, for which we prove both algorithmic and
hardness results.
</p></div>
    </summary>
    <updated>2021-02-16T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-02-16T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/02/15/linkage</id>
    <link href="https://11011110.github.io/blog/2021/02/15/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>Let’s not dumb down the history of computer science (\(\mathbb{M}\), via). A 2014 plea from Knuth to historians of computer science to stop ignoring the technical parts of the history, reprinted this month in CACM.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p><a href="https://cacm.acm.org/opinion/articles/250078-lets-not-dumb-down-the-history-of-computer-science/fulltext">Let’s not dumb down the history of computer science</a> (<a href="https://mathstodon.xyz/@11011110/105663355639241434">\(\mathbb{M}\)</a>, <a href="https://www.metafilter.com/190214/Lets-Not-Dumb-Down-the-History-of-Computer-Science">via</a>). A 2014 plea from Knuth to historians of computer science to stop ignoring the technical parts of the history, reprinted this month in CACM.</p>
  </li>
  <li>
    <p><a href="https://www.newscientist.com/article/2266041-tom-gaulds-runaway-lobster-telephone-problem/">Studies in ethical surrealism: the runaway lobster telephone problem</a> (<a href="https://mathstodon.xyz/@11011110/105664424099324982">\(\mathbb{M}\)</a>). I was pleased to learn that <a href="https://en.wikipedia.org/wiki/Lobster_Telephone">the lobster telephone depicted in this cartoon is a real objet d’art</a>.</p>
  </li>
  <li>
    <p><a href="https://www.archim.org.uk/eureka/archive/">Archive of back issues of Eureka</a> (<a href="https://mathstodon.xyz/@11011110/105671433589477405">\(\mathbb{M}\)</a>, <a href="https://aperiodical.com/2021/02/aperiodical-news-roundup-january-2021/">via</a>), the recreational mathematics journal of the Cambridge Archimedeans, now online for open access. On Wikipedia, the popular articles from Eureka appear to be Dyson’s work on ranks of partitions, in #8, Haselgrove &amp; Haselgrove on polyominoes, in #23, Penrose on pentaplexity, in #39, and Leinster on his eponymous groups, in #55.</p>
  </li>
  <li>
    <p><a href="https://philpapers.org/rec/BOBFPT">In a new book chapter, Susanne Bobzien claims that famous philosopher of logic Gottlob Frege plagiarized extensively from the Stoic logicians</a> (<a href="https://mathstodon.xyz/@11011110/105680228594244342">\(\mathbb{M}\)</a>, <a href="https://dailynous.com/2021/02/03/frege-plagiarize-stoics/">via</a>, <a href="https://www.metafilter.com/190330/Frege-plagiarized-the-Stoics">via2</a>, <a href="https://handlingideas.blog/2021/02/05/the-stoic-foundations-of-analytic-philosophy-on-susanne-bobziens-groundbreaking-discovery-in-frege-and-prantl/">see also</a>).</p>
  </li>
  <li>
    <p>How did I not know about the <a href="https://civs.cs.cornell.edu/">Condorcet Internet Voting Service</a> before (<a href="https://mathstodon.xyz/@11011110/105683306227631389">\(\mathbb{M}\)</a>)? Set up public or private polls and collate the results with your favorite Condorcet rank aggregation method (at least, if your favorite is one of the five they implement, which it probably is). Their public polls are kind of insipid, though, and in comments David Bremner brings up their past history of enabling online abusers.</p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@RefurioAnachro/105684468712016832">Perkel’s graph and the 57-cell</a>, multi-post sequence on an abstract 4-polytope and associated distance-regular graph, by Refurio Anachro.</p>
  </li>
  <li>
    <p><a href="https://blog.computationalcomplexity.org/2021/02/the-victoria-delfino-problems-example.html">The Victoria Delfino Problems</a> (<a href="https://mathstodon.xyz/@11011110/105694384937282737">\(\mathbb{M}\)</a>). Bill Gasarch blogs about mathematics problems named after non-mathematicians, in this case a Los Angeles based real estate agent.</p>
  </li>
  <li>
    <p>The speech recognition system Zoom and/or my university are using to auto-caption my recorded lectures (whatever it is) really doesn’t like the word “bipartite”, heavily used in my lecture on matching (<a href="https://mathstodon.xyz/@11011110/105700305493373685">\(\mathbb{M}\)</a>). It came out “bipartisan”, “invite part tight”, “by party”, “by protect”, “by apartheid”, “by part aight”, and “by partnership”. Also “spanning forest” is now “Hispanic forest”, but mysteriously it got “spanning tree” right.</p>
  </li>
  <li>
    <p><a href="https://retractionwatch.com/2021/02/09/20-ways-to-spot-the-work-of-paper-mills/">20 ways to spot the work of paper mills</a> (<a href="https://mathstodon.xyz/@11011110/105702699189961130">\(\mathbb{M}\)</a>). However one, using a non-institutional email address, is not “a bad global habit”, but deliberate. I have no thought of moving but do not want my entire professional life tied by email to my employer. My UCI address keeps student emails private but I tend to use gmail for off-campus concerns such as publishers. And not all scholars have institutions who can provide emails. If they refuse my email, I refuse to publish with them.</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2102.01543">Ben Green presents super-polynomial lower bounds for off-diagonal van der Waerden numbers \(W(3,k)\)</a> (<a href="https://mathstodon.xyz/@11011110/105713896982428000">\(\mathbb{M}\)</a>, <a href="https://gilkalai.wordpress.com/2021/02/08/to-cheer-you-up-in-difficult-times-20-ben-green-presents-super-polynomial-lower-bounds-for-off-diagonal-van-der-waerden-numbers-w3k/">via</a>). \(W(3,k)\) is the smallest \(N\) such that a 2-coloring of \([N]\) has a 3-term arithmetic progression of one color or a \(k\)-term progression of the other. It was previously known to be subexponential and thought to be only quadratic.</p>
  </li>
  <li>
    <p><a href="https://mathoverflow.net/q/382940/440">The compound of an 11-simplex in an 11-hypercube (as a subset of its vertices) has the Mathieu group M11 as its symmetries</a> (<a href="https://mathstodon.xyz/@11011110/105717258433892969">\(\mathbb{M}\)</a>, <a href="https://cp4space.hatsya.com/2021/02/08/a-curious-construction-of-the-mathieu-group-m11/">via</a>). The via link goes on to describe how to find two dual 11-simplices in the same hypercube from the perfect ternary Golay code, much like the two simplices in a 3-cube that form the stella octangula.</p>
  </li>
  <li>
    <p><a href="https://distill.pub/selforg/2021/textures/">Self-organizing textures</a> (<a href="https://mathstodon.xyz/@11011110/105719504474157451">\(\mathbb{M}\)</a>, <a href="https://news.ycombinator.com/item?id=26112959">via</a>). A small input image + “neural cellular automata” magic leads to organic-looking image textures.</p>
  </li>
  <li>
    <p><a href="https://cse.buffalo.edu/socg21/accepted.html">Accepted papers for the Symposium on Computational Geometry</a> (SoCG; <a href="https://mathstodon.xyz/@11011110/105727235598338446">\(\mathbb{M}\)</a>). Decisions are out for the Symposium on Theory of Computing (STOC) but I haven’t seen a public list yet. Upcoming submission deadlines include the <a href="https://projects.cs.dal.ca/wads2021/">Algorithms and Data Structures Symposium</a> (WADS, Feb. 20), <a href="https://wg2021.mimuw.edu.pl/">Graph-Theoretic Concepts in Computer Science</a> (WG, Mar. 3), and the new <a href="https://www.siam.org/conferences/cm/conference/acda21">SIAM Conference on Applied and Computational Discrete Algorithms</a> (ACDA21, Mar. 1).</p>
  </li>
  <li>
    <p><a href="http://jdh.hamkins.org/ode-to-hippasus/">A new contribution of Hypatia to mathematics</a> (<a href="https://mathstodon.xyz/@11011110/105732195870260348">\(\mathbb{M}\)</a>). Not the ancient Hypatia, but Hypatia Hamkins, and her parents, philosopher Barbara Gail Montero and logician Joel David Hamkins; the contribution is a verse proof of the irrationality of \(\sqrt{2}\).</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/channel/UC8bRNi3tJX-tfR_RMtyWR7w">Computational Geometry YouTube channel</a> (<a href="https://mathstodon.xyz/@11011110/105739350560629546">\(\mathbb{M}\)</a>). This has been set up by Sariel Har-Peled and Sándor Fekete, and is recording talks from the New York Geometry Seminar. So far there are eleven, of roughly an hour length each.</p>
  </li>
</ul></div>
    </content>
    <updated>2021-02-15T21:45:00Z</updated>
    <published>2021-02-15T21:45:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-02-17T00:20:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=18111</id>
    <link href="https://rjlipton.wordpress.com/2021/02/15/pigenhole-principle/" rel="alternate" type="text/html"/>
    <title>Pigenhole Principle</title>
    <summary>Mathematics is based on the application of simple ideas over and over: From tiny nuts do big trees grow. Jorgen Veisdal is an assistant professor at the Norwegian University of Science and Technology. He is also the editor in chief at Cantor’s Paradise, which is a publication of math and science essays. Today I thought […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Mathematics is based on the application of simple ideas over and over: From tiny nuts do big trees grow. </em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.wordpress.com/2021/02/15/pigenhole-principle/jv/" rel="attachment wp-att-18113"><img alt="" class="alignright wp-image-18113" src="https://rjlipton.files.wordpress.com/2021/02/jv.png?w=150" width="150"/></a></p>
<p>
Jorgen Veisdal is an assistant professor at the Norwegian University of Science and Technology. He is also the editor in chief at <a href="https://medium.com/cantors-paradise">Cantor’s Paradise</a>, which is a publication of math and science essays. </p>
<p>
Today I thought we would discuss a <a href="https://medium.com/cantors-paradise/the-pigeonhole-principle-e4c637940619">post</a> of his on the famous Pigenhole Princeiple (PP).</p>
<p>
Recall the PP states that if <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> items are put into <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{m}"/> boxes, with <img alt="{n &gt; m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3E+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n &gt; m}"/>, then at least one box must contain more than one item.</p>
<p>
The paradox in my opinion is that this idea has any power at all. I wonder if I could explain why it was stated as an explicit <a href="https://en.wikipedia.org/wiki/Pigeonhole_principle">principle</a> by the famous Peter Dirichlet under the name Schubfachprinzip (“drawer principle” or “shelf principle”) in 1834. </p>
<p>
Parts of mathematics not only use PP, but could not live without it. Other parts of mathematics—I believe—are almost untouched by it. Am I right about this? Number theory and combinatorics especially Ramsey theory could not survive without it. What happens in your favorite area? Is there some area of math that is almost untouched by PP?</p>
<p>
</p><table style="margin: auto;">
<tbody><tr>
<td>
<a href="https://rjlipton.wordpress.com/2021/02/15/pigenhole-principle/pigeons/" rel="attachment wp-att-18114"><img alt="" class="aligncenter  wp-image-18114" src="https://rjlipton.files.wordpress.com/2021/02/pigeons.png?w=400" width="400"/></a>
</td>
</tr>
<tr>

</tr>
</tbody></table>
<p>
</p><p/><h2> An Example of PP </h2><p/>
<p>
The main issue is why is PP so indispensable to some areas of math. But I though it might be fun to give a sample type of proof that uses PP.</p>
<p>
Prove that however one selects 55 integers 	</p>
<p align="center"><img alt="\displaystyle  1 \le x_{1} &lt; x_{2} &lt; x_{3} &lt; \dots &lt; x_{55} \le 100," class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++1+%5Cle+x_%7B1%7D+%3C+x_%7B2%7D+%3C+x_%7B3%7D+%3C+%5Cdots+%3C+x_%7B55%7D+%5Cle+100%2C&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  1 \le x_{1} &lt; x_{2} &lt; x_{3} &lt; \dots &lt; x_{55} \le 100,"/></p>
<p>there will be some two that differ by 9, some two that differ by 10, a pair that differ by 12, and a pair that differ by 13. Surprisingly, there need not be a pair of numbers that differ by 11. </p>
<p/><h2> Proof </h2><p/>
<p>Let <img alt="{f(y,x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28y%2Cx%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{f(y,x)}"/> be number of collisions when place <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{y}"/> into <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x}"/>. Claim 	</p>
<p align="center"><img alt="\displaystyle  f(x+d,x) \ge f(x+1,x), " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%28x%2Bd%2Cx%29+%5Cge+f%28x%2B1%2Cx%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  f(x+d,x) \ge f(x+1,x), "/></p>
<p>for <img alt="{x \ge 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x \ge 1}"/> and <img alt="{d \ge 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{d \ge 1}"/> and 	</p>
<p align="center"><img alt="\displaystyle  f(x+1,x) \ge f(x,x-1), " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%28x%2B1%2Cx%29+%5Cge+f%28x%2Cx-1%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  f(x+1,x) \ge f(x,x-1), "/></p>
<p>for <img alt="{x \ge 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cge+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x \ge 2}"/>. </p>
<p>
Note the first is really simple. Consider the first <img alt="{x+1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x+1}"/> pigeons. They are placed into <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x}"/> places and the inequality follows. The second is about the same. Consider the first <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x}"/> pigeons. There are two cases. They are all placed in <img alt="{x-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x-1}"/> places. Then we are done. So must have some placed into the last place. But if two are there then also done. So <img alt="{x-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x-1}"/> are placed into <img alt="{x-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{x-1}"/>. But where does the last one go? In either case we are done.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p>Are there areas that almost never use the PP? I would like to hear about areas that just do not use PP. </p></font></font></div>
    </content>
    <updated>2021-02-15T17:28:11Z</updated>
    <published>2021-02-15T17:28:11Z</published>
    <category term="History"/>
    <category term="Ideas"/>
    <category term="People"/>
    <category term="Proofs"/>
    <category term="pigen hole"/>
    <category term="principle"/>
    <category term="Ramsey"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2021-02-17T04:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/02/15/postdoc-at-national-university-of-singapore-apply-by-march-31-2021-2/</id>
    <link href="https://cstheory-jobs.org/2021/02/15/postdoc-at-national-university-of-singapore-apply-by-march-31-2021-2/" rel="alternate" type="text/html"/>
    <title>Postdoc at National University of Singapore (apply by March 31, 2021)</title>
    <summary>One post-doctoral position is available. The goal of the intended projects is to develop new frameworks and techniques for testing properties of functions and distributions on high-dimensional spaces. Website: https://www.comp.nus.edu.sg/~arnab/testing-postdoc.html Email: arnabb@nus.edu.sg</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One post-doctoral position is available. The goal of the intended projects is to develop new frameworks and techniques for testing properties of functions and distributions on high-dimensional spaces.</p>
<p>Website: <a href="https://www.comp.nus.edu.sg/~arnab/testing-postdoc.html">https://www.comp.nus.edu.sg/~arnab/testing-postdoc.html</a><br/>
Email: arnabb@nus.edu.sg</p></div>
    </content>
    <updated>2021-02-15T11:29:17Z</updated>
    <published>2021-02-15T11:29:17Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-02-17T04:37:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/02/15/postdoc-at-national-university-of-singapore-apply-by-march-31-2021/</id>
    <link href="https://cstheory-jobs.org/2021/02/15/postdoc-at-national-university-of-singapore-apply-by-march-31-2021/" rel="alternate" type="text/html"/>
    <title>Postdoc at National University of Singapore (apply by March 31, 2021)</title>
    <summary>Two post-doctoral positions are available. The goal of the intended projects is to develop statistical and computational guarantees for algorithms performing causal inference. Website: https://www.comp.nus.edu.sg/~arnab/causal-postdoc.html Email: arnabb@nus.edu.sg</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Two post-doctoral positions are available. The goal of the intended projects is to develop statistical and computational guarantees for algorithms performing causal inference.</p>
<p>Website: <a href="https://www.comp.nus.edu.sg/~arnab/causal-postdoc.html">https://www.comp.nus.edu.sg/~arnab/causal-postdoc.html</a><br/>
Email: arnabb@nus.edu.sg</p></div>
    </content>
    <updated>2021-02-15T11:27:52Z</updated>
    <published>2021-02-15T11:27:52Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-02-17T04:37:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/014</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/014" rel="alternate" type="text/html"/>
    <title>TR21-014 |  Hitting Sets and Reconstruction for Dense Orbits in VP$_e$ and $\Sigma\Pi\Sigma$ Circuits | 

	Dori Medini, 

	Amir Shpilka</title>
    <summary>In this paper we study polynomials in VP$_e$ (polynomial-sized formulas) and in $\Sigma\Pi\Sigma$ (polynomial-size depth-$3$ circuits) whose orbits, under the action of the affine group GL$^{aff}_n({\mathbb F})$, are dense in their ambient class. We construct hitting sets and interpolating sets for these orbits as well as give reconstruction algorithms.

As VP$=$VNC$^2$, our results for VP$_e$ translate immediately to VP with a quasipolynomial blow up in parameters.

If any of our hitting or interpolating sets could be made robust then this would immediately yield a hitting set for the superclass in which the relevant class is dense, and as a consequence also a lower bound for the superclass. Unfortunately, we also prove that the kind of constructions that we have found (which are defined in terms of k-independent polynomial maps) do not necessarily yield robust hitting sets.</summary>
    <updated>2021-02-15T08:59:08Z</updated>
    <published>2021-02-15T08:59:08Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-699230831808345084</id>
    <link href="https://blog.computationalcomplexity.org/feeds/699230831808345084/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2021/02/two-examples-of-journalists-being-wrong.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/699230831808345084" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/699230831808345084" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2021/02/two-examples-of-journalists-being-wrong.html" rel="alternate" type="text/html"/>
    <title>Two examples of Journalists being... Wrong. One BIG one small</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p> Journalists sometimes get things wrong.</p><p>This is not news, but it is interesting when you KNOW they are wrong. </p><p>1) Scott Aaronson has a GREAT example regarding an IMPORTANT story. I recommend you to read his blog post <a href="https://www.scottaaronson.com/blog/?p=5310">here</a>. Most of the comments are good also, though they go off on some tangents (e.g., is the Universal Basic Income a progressive idea?)</p><p><br/></p><p>2) I have my own example. It is far less important than the one Scott discusses; however, inspired by Scott, I will discuss it. My example also involves Scott, but that's a coincidence. </p><p>Quanta Magazine emailed me that they wanted to talk to me about an upcoming article on <i>The Busy</i> <i>Beaver Problem</i>. Why me? Because Scott's (same Scott as above!) survey/open problems column appeared in the SIGACT News Open Problem Column that I edit. </p><p>This sounded fine (Spoiler Alert: It was fine, the errors they made were odd, not harmful).</p><p>Here is the Quanta Article (though I do not know if it is behind paywalls- I can never tell if I am getting access because I have a UMCP account of or anyone can have access or if I am breaking copyright laws by posting the link):    <a href="https://www.quantamagazine.org/the-busy-beaver-game-illuminates-the-fundamental-limits-of-math-20201210/">here</a></p><p>Here is Scotts article: <a href="https://www.scottaaronson.com/papers/bb.pdf">here</a></p><p>The interviewer asked me </p><p>a) Why did I ask Scott to write the article?</p><p>ANSWER: He had a blog post on it, and I was skeptical of why these numbers are interesting, so I asked a question in the comments. He gave a great answer, so I asked him if he wanted to write a column for my open problems column. Actually I asked him if either he or perhaps a grad student would do it- I assumed he would be too busy since his `day job' is quantum  computing. However, much to my surprise and delight he said YES he would do it.</p><p>b) Is the Busy Beaver Function important?</p><p>ANSWER: In my opinion the actual numbers are not that important but its really neat that (a) we know some of them, and (b) they are far smaller than I would have thought. Also these numbers are interesting for the following reason:  there is some  n so that proving </p><p>BB(n)=whatever it equals</p><p> is Ind of Peano Arithmetic. When I hear that I think the number must be really large. Its not. Its 27. NEAT! And stronger theories are related to bigger numbers. This is a way to order theories. For  ZF they have something in the 700's- MUCH SMALLER than I would have thought. Scott and others can even relate BB to open problems in Math! </p><p>There were some other questions also, but I don't recall what they were. </p><p>SO when the article came they mentioned me once, and its... not quite wrong but odd:</p><p><i>William Gasarch, a computer science professor at the University of Maryland College Park,</i></p><p><i>said he's less intrigued by the prospect of pinning down the Busy Beaver numbers than by </i></p><p><i>``the general concept that its actually uncomputable.'' He and other mathematicians are mainly interested in using the yardstick for gauging the difficulty of important open problems in mathematics--or for figuring out what is mathematically knowable at all. </i></p><p><br/></p><p>The oddest thing about the paragraph is they do not mention my connection to Scott and the article he wrote! I reread the article looking for something like `<i>Scotts article appeared in the SIGACT News</i> <i>Open Problems column edited by William Gasarch' </i>Nothing of that sort appears. </p><p>Without that its not clear why they are soliciting my opinion. My colleague Clyde says this is GOOD:  people will ASSUME I am some sort of expert. Am I an expert? I proofread Scott's paper so... there is that...</p><p>Also I come off as more down on BB than I really am. </p><p>Did I claim that Mathematicians are more interested in using it as a yardstick. Actually I may have said something like that. I don't know if its true. That's my bad- I should have said that I am interested in that.</p><p>After the article came out I asked the interviewer why my role was not in the article. He said it was cut by the editor. </p><p>NOW- NONE of this is important, but even on small and easily correctable things, they get it wrong. So imagine what happens on hard issues that are harder to get right. </p><p><br/></p><p>MISC: One comment on Scott's blog was about the Gell-Mann amnesia effect, see this article on it:</p><p><a href="https://www.tefter.io/bookmarks/45454/readable">here</a><br/></p><p><br/></p></div>
    </content>
    <updated>2021-02-14T20:23:00Z</updated>
    <published>2021-02-14T20:23:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-02-15T20:05:01Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/013</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/013" rel="alternate" type="text/html"/>
    <title>TR21-013 |  Positive spectrahedrons: Geometric properties, Invariance principles and Pseudorandom generators | 

	Penghui Yao, 

	Srinivasan Arunachalam</title>
    <summary>In a recent work, O'Donnell, Servedio and Tan (STOC 2019) gave explicit pseudorandom generators (PRGs) for arbitrary $m$-facet polytopes in $n$ variables with seed length poly-logarithmic in $m,n$, concluding a sequence of works in the last decade, that was started by Diakonikolas,  Gopalan,  Jaiswal,  Servedio, Viola (SICOMP 2010) and Meka, Zuckerman (SICOMP 2013) for fooling linear and polynomial threshold functions, respectively. In this work, we consider a natural extension of  PRGs for intersections of positive spectrahedrons. A positive spectrahedron  is a Boolean function $f(x)=[x_1A^1+\cdots +x_nA^n \preceq B]$ where the $A^i$s are $k\times k$ positive semidefinite matrices. We construct explicit PRGs  that $\delta$-fool  "regular" width-$M$ positive spectrahedrons (i.e., when none of the $A^i$s are dominant) over the Boolean space  with seed length $poly(\log k,\log n, M, 1/\delta)$.
    

    Our main technical contributions are the following. We first prove an invariance principle for positive spectrahedrons via the well-known Lindeberg method. As far as we are aware such a  generalization of the Lindeberg method was unknown. Second, we prove various geometric properties of positive spectrahedrons such as their noise sensitivity, Gaussian surface area and a Littlewood-Offord theorem for positive spectrahedrons. Using these results, we give applications for constructing PRGs for positive spectrahedrons, learning theory, discrepancy sets for positive spectrahedrons (over the Boolean cube) and PRGs for intersections of structured polynomial threshold functions.</summary>
    <updated>2021-02-14T14:29:06Z</updated>
    <published>2021-02-14T14:29:06Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/012</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/012" rel="alternate" type="text/html"/>
    <title>TR21-012 |  On the Power and Limitations of Branch and Cut | 

	Noah Fleming, 

	Toniann Pitassi, 

	Li-Yang Tan, 

	Mika Göös, 

	Russell Impagliazzo, 

	Robert Robere, 

	Avi Wigderson</title>
    <summary>The Stabbing Planes proof system was introduced to model the reasoning carried out in practical mixed integer programming solvers. As a proof system, it is powerful enough to simulate Cutting Planes and to refute the Tseitin formulas -- certain unsatisfiable systems of linear equations mod 2 -- which are canonical hard examples for many algebraic proof systems. In a recent (and surprising) result, Dadush and Tiwari showed that these short refutations of the Tseitin formulas could be translated into quasi-polynomial size and depth Cutting Planes proofs, refuting a long-standing conjecture. This translation raises several interesting questions. First, whether all Stabbing Planes proofs can be efficiently simulated by Cutting Planes. This would allow for the substantial analysis done on the Cutting Planes system to be lifted to practical mixed integer programming solvers. Second, whether the quasi-polynomial depth of these proofs is inherent to Cutting Planes. 

In this paper we make progress towards answering both of these questions. First, we show that any Stabbing Planes proof with bounded coefficients SP* can be translated into Cutting Planes. As a consequence of the known lower bounds for Cutting Planes, this establishes the first exponential lower bounds on SP*. Using this translation, we extend the result of Dadush and Tiwari to show that Cutting Planes has short refutations of any unsatisfiable system of linear equations over a finite field. Like the Cutting Planes proofs of Dadush and Tiwari, our refutations also incur a quasi-polynomial blow-up in depth, and we conjecture that this is inherent. As a step towards this conjecture, we develop a new geometric technique for proving lower bounds on the depth of Cutting Planes proofs. This allows us to establish the first lower bounds on the depth of Semantic Cutting Planes proofs of the Tseitin formulas.</summary>
    <updated>2021-02-14T02:07:44Z</updated>
    <published>2021-02-14T02:07:44Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=5310</id>
    <link href="https://www.scottaaronson.com/blog/?p=5310" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=5310#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=5310" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">A grand anticlimax: the New York Times on Scott Alexander</title>
    <summary xml:lang="en-US">Updates (Feb. 14, 2021): Scott Alexander Siskind responds here. Last night, it occurred to me that despite how disjointed it feels, the New York Times piece does have a central thesis: namely, that rationalism is a “gateway drug” to dangerous beliefs. And that thesis is 100% correct—insofar as once you teach people that they can […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><strong><span class="has-inline-color has-vivid-red-color">Updates (Feb. 14, 2021):</span></strong>  <a href="https://astralcodexten.substack.com/p/statement-on-new-york-times-article">Scott Alexander Siskind responds here</a>.</p>



<p>Last night, it occurred to me that despite how disjointed it feels, the <em>New York Times</em> piece does have a central thesis: namely, that rationalism is a “gateway drug” to dangerous beliefs.  And that thesis is 100% correct—insofar as <em>once you teach people that they can think for themselves about issues of consequence, some of them might think bad things</em>.  It’s just that many of us judge the benefit worth the risk!</p>



<p>Happy Valentine’s Day everyone!</p>



<p/><hr/><p/>



<p>Back in June, <em>New York Times</em> technology reporter Cade Metz, who I’d previously known from his reporting on quantum computing, told me that he was writing a story about Scott Alexander, Slate Star Codex, and the rationalist community.  Given my position as someone who <em>knew</em> the rationalist community without ever really being <em>part</em> of it, Cade wondered whether I’d talk with him.  I said I’d be delighted to.</p>



<p>I spent many hours with Cade, taking his calls and emails morning or night, at the playground with my kids or wherever else I was, answering his questions, giving context for his other interviews, suggesting people in the rationalist community for him to talk to, in exactly the same way I might suggest colleagues for a quantum computing story.  And then I spent just as much time urging those people to talk to Cade.  (“How could you possibly not want to talk?  It’s the <em>New York Times</em>!”)  Some of the people I suggested agreed to talk; others refused; a few were livid at me for giving a <em>New York Times</em> reporter their email addresses without asking them.  (I apologized; lesson learned.)</p>



<p>What happened next is already the stuff of Internet history: the NYT’s threat to publish Scott’s real surname; Scott deleting his blog as a way to preempt that ‘doxing’; 8,000 people, including me, signing a <a href="https://www.dontdoxscottalexander.com/">petition</a> urging the NYT to respect Scott’s wish to keep his professional and blog identities separate; Scott resigning from his psychiatry clinic and starting his own low-cost practice, <a href="https://lorienpsych.com/">Lorien Psychiatry</a>; his moving his blog, like so many other writers this year, to <a href="https://substack.com/">Substack</a>; then, a few weeks ago, his <a href="https://astralcodexten.substack.com/">triumphant return</a> to blogging under his real name of Scott Siskind.  All this against the backdrop of an 8-month period that was world-changingly historic in so many other ways: the failed violent insurrection against the United States and the ouster, by democratic means, of the president who incited it; the tragedy of covid and the long-delayed start of the vaccination campaign; the BLM protests; the well-publicized upheavals at the NYT itself, including firings for ideological lapses that would’ve made little sense to our remote ancestors of ~2010.</p>



<p>And now, as an awkward coda, the <em>New York Times</em> article itself is <a href="https://www.nytimes.com/2021/02/13/technology/slate-star-codex-rationalists.html?action=click&amp;module=Top%20Stories&amp;pgtype=Homepage">finally out</a> (<a href="https://www.deccanherald.com/business/technology/why-slate-star-codex-is-silicon-valley-s-safe-space-950727.html">non-paywalled version here</a>).</p>



<p>It could’ve been worse.  I doubt it will do lasting harm.  Of the many choices I disagreed with, I don’t know which were Cade’s and which his editors’.  But no, I was not happy with it.  If you want a feature-length, pop condensation of the rationalist community and its ideas, I preferred <a href="https://www.newyorker.com/culture/annals-of-inquiry/slate-star-codex-and-silicon-valleys-war-against-the-media">this summer’s <em>New Yorker</em> article</a> (but much better still is the <a href="https://www.amazon.com/Does-Not-Hate-You-Superintelligence-ebook/dp/B07K258VCV">book by Tom Chivers</a>).</p>



<p>The trouble with the NYT piece is not that it makes any false statements, but just that it constantly <em>insinuates</em> nefarious beliefs and motives, via strategic word choices and omission of relevant facts that change the emotional coloration of the facts that it <em>does</em> present.  I repeatedly muttered to myself, as I read: “dude, you could make <em>anything</em> sound shady with this exact same rhetorical toolkit!” </p>



<p>Without further ado, here’s a partial list of my issues:</p>



<ol><li>The piece includes the following ominous sentence: “But in late June of last year, when I approached Siskind to discuss the blog, it vanished.”  This framing, it seems to me, would be appropriate for some conman trying to evade accountability without ever explaining himself.  It doesn’t make much sense for a practicing psychiatrist who took the dramatic step of deleting his blog <em>in order to preserve his relationship with his patients</em>—thereby complying with an ethical code that’s universal among psychiatrists, even if slightly strange to the rest of us—and who immediately explained his reasoning to the entire world.  In the latter framing, of course, Scott comes across less like a fugitive on the run and more like an innocent victim of a newspaper’s editorial obstinacy.<br/></li><li>As expected, the piece devotes enormous space to the idea of rationalism as an on-ramp to alt-right extremism.  The trouble is, it never presents the idea that rationalism also can be an <em>off-ramp</em> from extremism—i.e., that it can provide a model for how even after you realize that mainstream sources are confidently wrong on some issue, you don’t respond by embracing conspiracy theories and hatreds, you respond by simply thinking carefully about each individual question rather than buying a worldview wholesale from anyone.  Nor does the NYT piece mention how Scott, precisely <em>because</em> he gives right-wing views more charity than some of us might feel they deserve, actually succeeded in dissuading some of his readers from voting for Trump—which is more success than I can probably claim in that department!  I had many conversations with Cade about these angles that are nowhere reflected in the piece.<br/></li><li>The piece gets off on a weird foot, by describing the rationalists as “a group that aimed to re-examine the world through cold and careful thought.”  Why “cold”?  Like, let’s back up a few steps: what is even the <em>connection</em> in the popular imagination between rationality and “coldness”?  To me, as to many others, the humor, humanity, and <em>warmth</em> of Scott’s writing were always among its most notable features.<br/></li><li>The piece makes liberal use of scare quotes.  Most amusingly, it puts scare quotes around the phrase “Bayesian reasoning”!<br/></li><li>The piece never mentions that many rationalists (Zvi Mowshowitz, Jacob Falkovich, Kelsey Piper…) were right about the risk of covid-19 in early 2020, and then <em>again</em> right about masks, aerosol transmission, faster-spreading variants, the need to get vaccines into arms faster, and many other subsidiary issues, even while public health authorities and the mainstream press struggled for months to reach the same obvious (at least in retrospect) conclusions.  This omission is significant because Cade told me, in June, that the rationalist community’s early rightness about covid was part of what <em>led him to want to write the piece in the first place</em> <em>(!)</em>.  If readers knew about that clear success, would it put a different spin on the rationalists’ weird, cultlike obsession with “Bayesian reasoning” and “consequentialist ethics” (whatever those are), or their nerdy, idiosyncratic worries about the more remote future?<br/></li><li>The piece contains the following striking sentence: “On the internet, many in Silicon Valley believe, everyone has the right not only to say what they want but to say it anonymously.”  Well, yes, except this framing makes it sound like this is a fringe belief of some radical Silicon Valley tribe, rather than just the standard expectation of most of the billions of people who’ve used the Internet for most of its half-century of existence.<br/></li><li>Despite thousands of words about the content of SSC, the piece never gives Scott a few uninterrupted sentences in his own voice, to convey his style.  This is something the <em>New Yorker</em> piece did do, and which would help readers better understand the wit, humor, charity, and self-doubt that made SSC so popular.  To see what I mean, read the NYT’s radically-abridged quotations from Scott’s now-classic riff on the Red, Blue, and Gray Tribes and decide for yourself whether they capture the <a href="https://slatestarcodex.com/2014/09/30/i-can-tolerate-anything-except-the-outgroup/">spirit of the original</a> (alright, I’ll quote the relevant passage myself at the bottom of this post).  Scott has the property, shared by many of my favorite writers, that if you just properly <em>quote</em> him, the words leap off the page, wriggling free from the grasp of any bracketing explanations and making a direct run for the reader’s brain.  All the more reason to <a href="https://howthehell.substack.com/p/nyt-ssc-quoting">quote him</a>!<br/></li><li>The piece describes SSC as “astoundingly verbose.”  A more neutral way to put it would be that Scott has <em>produced a vast quantity of intellectual output</em>.  When I finish a Scott Alexander piece, only in a minority of cases do I feel like he spent more words examining a problem than its complexities really warranted.  Just as often, I’m left wanting more.<br/></li><li>The piece says that Scott once “aligned himself” with Charles Murray, then goes on to note Murray’s explosive views about race and IQ.  That might be fair enough, were it <em>also</em> mentioned that the positions ascribed to Murray that Scott endorses in the <a href="https://web.archive.org/web/20200615030810/https://slatestarcodex.com/2016/05/23/three-great-articles-on-poverty-and-why-i-disagree-with-all-of-them/">relevant post</a>—namely, “hereditarian leftism” and <a href="https://en.wikipedia.org/wiki/Universal_basic_income">universal basic income</a>—are not only unrelated to race but are actually <em>progressive</em> positions.<br/></li><li>The piece says that Scott once had neoreactionary thinker <a href="https://en.wikipedia.org/wiki/Nick_Land">Nick Land</a> on his blogroll.  Again, important context is missing: this was back when Land was mainly known for his strange writings on AI and philosophy, <em>before</em> his neoreactionary turn.<br/></li><li>The piece says that Scott compared “some feminists” to Voldemort.  It didn’t explain what it took for certain specific feminists (like Amanda Marcotte) to prompt that comparison, which might have changed the coloration.  (Another thing that would’ve complicated the picture: the rationalist community’s legendary openness to alternative gender identities and sexualities, before such openness became mainstream.)<br/></li><li>Speaking of feminists—yeah, I’m a minor part of the article.  One of the few things mentioned about me is that I’ve stayed in a rationalist group house.  (If you must know: for like two nights, when I was in Bay Area, with my wife and kids.  We appreciated the hospitality!)  The piece also says that I was “turned off by the more rigid and contrarian beliefs of the Rationalists.”  It’s true that I’ve <em>disagreed</em> with many beliefs espoused by rationalists, but not <em>because</em> they were contrarian, or because I found them noticeably more “rigid” than most beliefs—only because I thought they were mistaken!<br/></li><li>The piece describes Eliezer Yudkowsky as a “polemicist and self-described AI researcher.”  It’s true that Eliezer opines about AI despite a lack of conventional credentials in that field, and it’s also true that the typical NYT reader might find him to be comically self-aggrandizing.  But had the piece mentioned the universally recognized AI experts, like Stuart Russell, who credit Yudkowsky for a central role in the AI safety movement, wouldn’t that have changed what readers perceived as the take-home message?<br/></li><li>The piece says the following about Shane Legg and Demis Hassabis, the founders of DeepMind: “Like the Rationalists, they believed that AI could end up turning against humanity, and because they held this belief, they felt they were among the only ones who were prepared to build it in a safe way.”  This strikes me as a brilliant way to reframe a concern around AI safety as something vaguely sinister.  Imagine if the following framing had been chosen instead: “Amid Silicon Valley’s mad rush to invest in AI, here are the voices urging that it be done safely and in accord with human welfare…”</li></ol>



<p>Reading this article, some will say that they told me so, or even that I was played for a fool.  And yet I confess that, even with hindsight, I have no idea what I should have done differently, how it would’ve improved the outcome, or what I <em>will</em> do differently the next time.  Was there some better, savvier way for me to help out?  For each of the 14 points listed above, were I ever tempted to bang my head and say, “dammit, I wish I’d told Cade X, so his story could’ve reflected that perspective”—well, the truth of the matter is that I <em>did</em> tell him X!  It’s just that I don’t get to decide which X’s make the final cut, or which ideological filter they’re passed through first.</p>



<p>On reflection, then, I’ll continue to talk to journalists, whenever I have time, whenever I think I might know something that might improve their story.  I’ll continue to rank bend-over-backwards openness and honesty among my most fundamental values.  <s>Hell, I’d even talk to Cade for a future story, assuming he’ll talk to me after all the disagreements I’ve aired here!</s>  [<strong><span class="has-inline-color has-vivid-red-color">Update:</span></strong> commenters’ counterarguments caused me to change my stance on this; <a href="https://www.scottaaronson.com/blog/?p=5330">see here</a>.]</p>



<p>For one thing that became apparent from this saga is that I <em>do</em> have a deep difference with the rationalists, one that will likely prevent me from ever truly joining them.  Yes, there might be true and important things that one can’t say without risking one’s livelihood.  At least, there were in every <em>other</em> time and culture, so it would be shocking if Western culture circa 2021 were the lone exception.  But unlike the rationalists, I don’t feel the urge to form walled gardens in which to say those things anyway.  I simply accept that, in the age of instantaneous communication, <em>there are no walled gardens</em>: anything you say to a dozen or more people, you might as well broadcast to the planet.  Sure, we all have things we say only in the privacy of our homes or to a few friends—a privilege that I expect even the most orthodox would like to preserve, at any rate for themselves.  Beyond that, though, my impulse has always been to look for non-obvious truths that <em>can</em> be shared openly, and that might light little candles of understanding in one or two minds—and then to shout those truths from the rooftops under my own name, and learn what I can from whatever sounds come in reply.</p>



<p>So I’m thrilled that Scott Alexander Siskind has now rearranged his life to have the same privilege.  Whatever its intentions, I hope today’s <em>New York Times</em> article draws tens of thousands of curious new readers to Scott’s new-yet-old blog, <a href="https://astralcodexten.substack.com/">Astral Codex Ten</a>, so they can see for themselves what I and so many others saw in it.  I hope Scott continues blogging for decades.  And whatever obscene amount of money Substack is now paying Scott, I hope they’ll soon be paying him even more.</p>



<p/><hr/><p/>



<p>Alright, now for the promised quote, from <a href="https://slatestarcodex.com/2014/09/30/i-can-tolerate-anything-except-the-outgroup/">I Can Tolerate Anything Except the Outgroup</a>.</p>



<blockquote class="wp-block-quote"><p>The Red Tribe is most classically typified by conservative political beliefs, strong evangelical religious beliefs, creationism, opposing gay marriage, owning guns, eating steak, drinking Coca-Cola, driving SUVs, watching lots of TV, enjoying American football, getting conspicuously upset about terrorists and commies, marrying early, divorcing early, shouting “USA IS NUMBER ONE!!!”, and listening to country music.</p><p>The Blue Tribe is most classically typified by liberal political beliefs, vague agnosticism, supporting gay rights, thinking guns are barbaric, eating arugula, drinking fancy bottled water, driving Priuses, reading lots of books, being highly educated, mocking American football, feeling vaguely like they should like soccer but never really being able to get into it, getting conspicuously upset about sexists and bigots, marrying later, constantly pointing out how much more civilized European countries are than America, and listening to “everything except country”.</p><p>(There is a partly-formed attempt to spin off a Grey Tribe typified by libertarian political beliefs, Dawkins-style atheism, vague annoyance that the question of gay rights even comes up, eating paleo, drinking Soylent, calling in rides on Uber, reading lots of blogs, calling American football “sportsball”, getting conspicuously upset about the War on Drugs and the NSA, and listening to filk – but for our current purposes this is a distraction and they can safely be considered part of the Blue Tribe most of the time)</p><p>… Even in something as seemingly politically uncharged as going to California Pizza Kitchen or Sushi House for dinner, I’m restricting myself to the set of people who like cute artisanal pizzas or sophsticated foreign foods, which are classically Blue Tribe characteristics.</p></blockquote></div>
    </content>
    <updated>2021-02-13T21:16:01Z</updated>
    <published>2021-02-13T21:16:01Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Nerd Interest"/>
    <category scheme="https://www.scottaaronson.com/blog" term="The Fate of Humanity"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2021-02-16T23:03:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/011</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/011" rel="alternate" type="text/html"/>
    <title>TR21-011 |  Classification of the streaming approximability of Boolean CSPs | 

	Santhoshini Velusamy, 

	Chi-Ning  Chou, 

	Madhu Sudan, 

	Alexander Golovnev</title>
    <summary>A Boolean constraint satisfaction problem (CSP), Max-CSP$(f)$, is a maximization problem specified by a constraint $f:\{-1,1\}^k\to\{0,1\}$. An instance of the problem consists of $m$ constraint applications on $n$ Boolean variables, where each constraint application applies the constraint to $k$ literals chosen from the $n$ variables and their negations. The goal is to compute the maximum number of constraints that can be satisfied by a Boolean assignment to the $n$ variables. In the $(\gamma,\beta)$-approximation version of the problem for parameters $\gamma \geq \beta \in [0,1]$, the goal is to distinguish instances where at least $\gamma$ fraction of the constraints can be satisfied from instances where at most $\beta$ fraction of the constraints can be satisfied. 

In this work we completely characterize the approximability of all Boolean CSPs in the streaming model. Specifically, given $f$, $\gamma$ and $\beta$ we show that either (1) the $(\gamma,\beta)$-approximation version of Max-CSP$(f)$ has a probabilistic streaming algorithm using $O(\log n)$ space, or (2) for every $\epsilon &gt; 0$ the $(\gamma-\epsilon,\beta+\epsilon)$-approximation version of Max-CSP$(f)$ requires $\Omega(\sqrt{n})$ space for probabilistic streaming algorithms. Previously such a separation was known only for $k=2$. We stress that for $k=2$, there are only finitely many distinct problems to consider.

Our positive results show wider applicability of bias-based algorithms used previously by [Guruswami-Velingker-Velusamy APPROX'17], [Chou-Golovnev-Velusamy FOCS'20] by giving a systematic way to explore biases. Our negative results combine the Fourier analytic methods of [Kapralov-Khanna-Sudan SODA'15], which we extend to a wider class of CSPs, with a rich collection of reductions among communication complexity problems that lie at the heart of the negative results.</summary>
    <updated>2021-02-13T18:11:13Z</updated>
    <published>2021-02-13T18:11:13Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/02/12/postdoc-in-algorithms-and-complexity-at-university-of-oxford-apply-by-march-26-2021/</id>
    <link href="https://cstheory-jobs.org/2021/02/12/postdoc-in-algorithms-and-complexity-at-university-of-oxford-apply-by-march-26-2021/" rel="alternate" type="text/html"/>
    <title>postdoc in algorithms and complexity  at University of Oxford (apply by March 26, 2021)</title>
    <summary>4-year postdoctoral position working with Leslie Ann Goldberg from 1 Oct 2021. Website: https://my.corehr.com/pls/uoxrecruit/erq_jobspec_details_form.jobspec?p_id=149618 Email: leslie.goldberg@cs.ox.ac.uk</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>4-year postdoctoral position working with Leslie Ann Goldberg from 1 Oct 2021.</p>
<p>Website: <a href="https://my.corehr.com/pls/uoxrecruit/erq_jobspec_details_form.jobspec?p_id=149618">https://my.corehr.com/pls/uoxrecruit/erq_jobspec_details_form.jobspec?p_id=149618</a><br/>
Email: leslie.goldberg@cs.ox.ac.uk</p></div>
    </content>
    <updated>2021-02-12T11:55:27Z</updated>
    <published>2021-02-12T11:55:27Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-02-17T04:37:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://emanueleviola.wordpress.com/?p=838</id>
    <link href="https://emanueleviola.wordpress.com/2021/02/11/submitting-to-icalp-2021/" rel="alternate" type="text/html"/>
    <title>Submitting to ICALP 2021</title>
    <summary>I am taking advantage of the pandemic to participate in conferences where it’s usually hard for me to participate because they require intercontinental travel. I have a paper in CSR 2021, and now am submitting a paper to ICALP 2021 (I count submission as participation, even in case the paper gets rejected). The latter requires […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I am taking advantage of the pandemic to participate in conferences where it’s usually hard for me to participate because they require intercontinental travel.  I have a paper in CSR 2021, and now am submitting a paper to ICALP 2021 (I count submission as participation, even in case the paper gets rejected).  The latter requires submissions to be formatted in a specific way, <a href="https://emanueleviola.wordpress.com/tag/utopia-tcs/">a topic discussed at length on this blog</a>.</p>



<p>Begin 12:48</p>



<p>Download the LIPICs package.</p>



<p>Try to compile their sample paper.</p>



<p>Get error message:  ! LaTeX Error: File `l3backend-dvips.def’ not found.</p>



<p>Google solution.  Says to install packages.</p>



<p>Unfortunately, I am using windows but I only have LyX, and the solution expects MixTeX.</p>



<p>Google how to install packages in LyX.</p>



<p>Can’t find anything simple.</p>



<p>Create a new document on overleaf.</p>



<p>Copy all the LIPIcs files there.</p>



<p>Try to compile their sample.</p>



<p>It works!</p>



<p>Paste my latex.</p>



<p>Usual avalanche of problems to be fixed at the speed of light.</p>



<p>Add dummy section “Introduction” which wasn’t in my paper, otherwise theorem numbers look weird.</p>



<p>Numbers still look weird.  Something’s wrong with theorem statements.</p>



<p>Replace {thm} with {theorem}</p>



<p>Looks better.  Still some wrong stuff all around, however.</p>



<p>No it wasn’t that.  Remove the dummy section.  It seems their “paragraph” environment puts strange numbers like 0.0.0.1</p>



<p>Replace \paragaph with \paragaph* everywhere</p>



<p>Actually, looks weird the way they put the ack– put back the dummy Introduction section.</p>



<p>Check page limit: <strong>no more than 12 pages, excluding references</strong></p>



<p>I’m a little over.  Does this really matter?  Apparently, <a href="https://emanueleviola.wordpress.com/2014/09/30/eliminate-all-formatting-requirements-survival-tip/">it does!</a>  Move last proof to the appendix.  Actually, last proof is kind of short, I should move the penultimate proof. Update paper organization (next time I shouldn’t put it).</p>



<p>Final look.  Fix a few indentations.</p>



<p>OK, time to actually submit.  Go to the easychair website.  They want me to re-enter all the information!?  Why, after forcing me to enter title, keywords, etc. in <em>their </em>format, are they asking me to do this again?  Can’t we just send the .tex file and extract it from there?</p>



<p>Oh come one, it’s just a few seconds of copy-paste.</p>



<p>OK, done, paper submitted.</p>



<p>End: 3:05</p>



<p>Well, next time it will be easier.  Perhaps <em>easier</em>, but not <em>easy</em> because as the reader knows there will be another missing package, another incompatible system, etc.  And of course, if the paper is rejected, then I won’t even save the time to convert it into camera-ready format.  On the other hand, the benefit is non-existent.  It would be better for everyone if in order to submit a paper you have to complete a random 1-hour task on Amazon mechanical Turk and donate the profit to charity.</p></div>
    </content>
    <updated>2021-02-11T13:14:54Z</updated>
    <published>2021-02-11T13:14:54Z</published>
    <category term="Uncategorized"/>
    <category term="utopia-tcs"/>
    <author>
      <name>Manu</name>
    </author>
    <source>
      <id>https://emanueleviola.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>by Manu</subtitle>
      <title>Thoughts</title>
      <updated>2021-02-17T04:38:12Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/010</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/010" rel="alternate" type="text/html"/>
    <title>TR21-010 |  Cryptographic Hardness under Projections for Time-Bounded Kolmogorov Complexity | 

	Eric Allender, 

	John Gouwar, 

	Shuichi Hirahara, 

	Caleb Robelle</title>
    <summary>A version of time-bounded Kolmogorov complexity, denoted KT, has received attention in the past several years, due to its close connection to circuit complexity and to the Minimum Circuit Size Problem MCSP. Essentially all results about the complexity of MCSP hold also for MKTP (the problem of computing the KT complexity of a string). Both MKTP and MCSP are hard for SZK (Statistical Zero Knowledge) under BPP-Turing reductions; neither is known to be NP-complete. Recently, some hardness results for MKTP were proved that are not (yet) known to hold for MCSP. In particular, MKTP is hard for DET (a subclass of P) under nonuniform NC^0 m-reductions.

In this paper, we improve this, to show that MKTP is hard for the (apparently larger) class NISZK_L under not only NC^0 m-reductions but even under projections. Also MKTP is hard for NISZK under P/poly m-reductions. Here, NISZK is the class of problems with non-interactive zero-knowledge proofs, and NISZK_L is the non-interactive version of the class SZK_L that was studied by Dvir et al.

As an application, we provide several improved worst-case to average-case reductions to problems in NP.</summary>
    <updated>2021-02-11T00:24:56Z</updated>
    <published>2021-02-11T00:24:56Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-02-17T04:37:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://thmatters.wordpress.com/?p=1318</id>
    <link href="https://thmatters.wordpress.com/2021/02/10/sigact-award-deadlines-for-2021/" rel="alternate" type="text/html"/>
    <title>SIGACT Award deadlines for 2021</title>
    <summary>From the SIGACT executive committee: The deadlines to submit nominations for the Gödel Prize and the SIGACT Distinguished Service Award are coming soon. Calls for nominations for both awards can be found at the links below. Gödel Prize: deadline February 28, 2021. SIGACT Distinguished Service Award: deadline March 8, 2021.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>From the SIGACT executive committee:</p>



<p>The deadlines to submit nominations for the Gödel Prize and the SIGACT Distinguished Service Award are coming soon. Calls for nominations for both awards can be found at the links below.</p>



<ul><li><a href="https://www.sigact.org/prizes/g%C3%B6del/g%C3%B6del_call21.pdf">Gödel Prize</a>: deadline <strong>February 28</strong>, 2021.</li><li><a href="https://sigact.org/prizes/service.html">SIGACT Distinguished Service Award</a>: deadline <strong>March 8</strong>, 2021.</li></ul></div>
    </content>
    <updated>2021-02-10T20:39:50Z</updated>
    <published>2021-02-10T20:39:50Z</published>
    <category term="Uncategorized"/>
    <category term="awards"/>
    <category term="deadlines"/>
    <author>
      <name>shuchic</name>
    </author>
    <source>
      <id>https://thmatters.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://thmatters.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://thmatters.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://thmatters.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://thmatters.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theory Matters</title>
      <updated>2021-02-17T04:38:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://bit-player.org/?p=2296</id>
    <link href="http://bit-player.org/2021/foldable-words" rel="alternate" type="text/html"/>
    <link href="http://bit-player.org/2021/foldable-words#comments" rel="replies" type="text/html"/>
    <link href="http://bit-player.org/2021/foldable-words/feed/atom" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Foldable Words</title>
    <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">Packing up the household for a recent move, I was delving into shoeboxes, photo albums, and file folders that had not been opened in decades. One of my discoveries, found in an envelope at the back of a file drawer, … <a href="http://bit-player.org/2021/foldable-words">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>Packing up the household for a recent move, I was delving into shoeboxes, photo albums, and file folders that had not been opened in decades. One of my discoveries, found in an envelope at the back of a file drawer, was the paper sleeve from a drinking straw, imprinted with a saccharine message:</p>
<p><img alt="Drinking-straw wrapper inscribed &#x201C;It&#x2019;s A Pleasure To Serve You&#x201D;" border="0" class="centered" height="82" src="http://bit-player.org/wp-content/uploads/2021/01/Its-a-Pleasure-to-Serve-You-recto.jpg" width="640"/></p>
<p>This flimsy slip of paper seems like an odd scrap to preserve for the ages, but when I pulled it out of the envelope, I knew instantly where it came from and why I had saved it.</p>
<p>The year was 1967. I was 17 then; I’m 71 now. Transposing those two digits takes just a flick of the fingertips. I can blithely skip back and forth from one prime number to the other. But the span of lived time between 1967 and 2021 is a chasm I cannot so easily leap across. At 17 I was in a great hurry to grow up, but I couldn’t see as far as 71; I didn’t even try. Going the other way—revisiting the mental and emotional life of an adolescent boy—is also a journey deep into alien territory. But the straw wrapper helps—it’s a Proustian <em>aide memoire</em>.</p>
<p>In the spring of 1967 I had a girlfriend, Lynn. After school we would meet at the Maple Diner, where the booths had red leatherette upholstery and formica tabletops with a boomerang motif. We’d order two Cokes and a plate of french fries to share. The waitress liked us; she’d make sure we had a full bottle of ketchup. I mention the ketchup because it was a token of our progress toward intimacy. On our first dates Lynn had put only a dainty dab on her fries, but by April we were comfortable enough to reveal our true appetites.</p>
<p>One afternoon I noticed she was fiddling intently with the wrapper from her straw, folding and refolding. I had no idea what she was up to. A teeny paper airplane she would sail over my head? When she finished, she pushed her creation across the table:</p>
<p><img alt="&#x201C;It&#x2019;s a Pleasure to Serve You&#x201D; folded to read &#x201C;I love You&#x201D;" border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2021/01/Its-a-Pleasure-to-Serve-You-folded.jpg" width="250"/></p>
<p>What a wallop there was in that little wad of paper. At that point in our romance, the words had not yet been spoken aloud. </p>
<p>How did I respond to Lynn’s folded declaration? I can’t remember; the words are lost. But evidently I got through that awkward moment without doing any permanent damage. A year later Lynn and I were married.</p>
<p>Today, at 71, with the preserved artifact in front of me, my chief regret is that I failed to take up the challenge implicit in the word game Lynn had invented. Why didn’t I craft a reply by folding my own straw wrapper? There are quite a few messages I could have extracted by strategic deletions from “It’s a pleasure to serve you.”</p>
<div style="padding: 1em;">
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsap</span><strong>l</strong><span style="color: #ccc;">easuret</span><strong>o</strong><span style="color: #ccc;">ser</span><strong>veyou</strong>   ==&gt;   I love you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsa</span><strong>pleas</strong><span style="color: #ccc;">ur</span><strong>e</strong><span style="color: #ccc;">toserve</span><strong>you</strong>   ==&gt;   I please you.</pre>
<pre style="padding: 0.5em;">          <strong>it</strong><span style="color: #ccc;">sapl</span><strong>eas</strong><span style="color: #ccc;">ur</span><strong>e</strong><span style="color: #ccc;">toserve</span><strong>you</strong>   ==&gt;   I tease you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsa</span><strong>pleasure</strong><span style="color: #ccc;">toserve</span><strong>you</strong>   ==&gt;   I pleasure you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsa</span><strong>p</strong><span style="color: #ccc;">l</span><strong>e</strong><span style="color: #ccc;">a</span><strong>s</strong><span style="color: #ccc;">ure</span><strong>t</strong><span style="color: #ccc;">os</span><strong>er</strong><span style="color: #ccc;">ve</span><strong>you</strong>   ==&gt;   I pester you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsa</span><strong>p</strong><span style="color: #ccc;">l</span><strong>e</strong><span style="color: #ccc;">asur</span><strong>e</strong><span style="color: #ccc;">toser</span><strong>veyou</strong>   ==&gt;   I peeve you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">t</span><strong>sa</strong><span style="color: #ccc;">p</span><strong>l</strong><span style="color: #ccc;">eas</span><strong>u</strong><span style="color: #ccc;">re</span><strong>t</strong><span style="color: #ccc;">os</span><strong>e</strong><span style="color: #ccc;">rve</span><strong>you</strong>   ==&gt;   I salute you.</pre>
<pre style="padding: 0.5em;">          <strong>i</strong><span style="color: #ccc;">tsap</span><strong>lea</strong><span style="color: #ccc;">suretoser</span><strong>veyou</strong>   ==&gt;   I leave you.</pre>
</div>
<p class="indent">Not all of those statements would have been suited to the occasion of our rendezvous at the Maple Diner, but over the course of our years together—17 years, as it turned out—there came a moment for each of them.</p>
<hr/>
<p>How many words can we form by making folds in the straw-paper slogan? I could not have answered that question in 1967. I couldn’t have even asked it. But times change. Enumerating all the foldable messages now strikes me as an obvious thing to do when presented with the straw wrapper. Furthermore, I have the computational means to do it—although the project was not quite as easy as I expected.</p>
<p>A first step is to be explicit about the rules of the game. We are given a source text, in this case “It’s a pleasure to serve you.” Let us ignore the spaces between words as well as all punctuation and capitalization; in this way we arrive at the normalized text “itsapleasuretoserveyou”. A word is <em>foldable</em> if all of its letters appear in the normalized text in the correct order (though not necessarily consecutively). The folding operation amounts to an editing process in which our only permitted act is deletion of letters; we are not allowed to insert, substitute, or permute. If two or more foldable words are to be combined to make a phrase or sentence, they must follow one another in the correct order without overlaps.</p>
<p>So much for foldability. Next comes the fraught question: What is a word? Linguists and lexicographers offer many subtly divergent opinions on this point, but for present purposes a very simple definition will suffice: A finite sequence of characters drawn from the 26-letter English alphabet is a word if it can legally be played in a game of Scrabble. I have been working with a word list from the 2015 edition of <a href="https://en.wikipedia.org/wiki/Collins_Scrabble_Words">Collins Scrabble Words</a>, which has about 270,000 entries. (There are a number of alternative lists, which I discuss in an appendix at the end of this article.)</p>
<p>Scrabble words range in length from 2 to 15 letters. The upper limit—determined by the size of the game board—is not much of a concern. You’re unlikely to meet a straw-paper text that folds to yield words longer than <em>sesquipedalian</em>. The absence of 1-letter words is more troubling, but the remedy is easy: I simply added the words <em>a</em>, <em>I</em>, and <em>O</em> to my copy of the Scrabble list.</p>
<p>My first computational experiments with foldable words searched for examples at random. Writing a program for random sampling is often easier than taking an exact census of a population, and the sample offers a quick glimpse of typical results. The following Python procedure generates random foldable sequences of letters drawn from a given source text, then returns those sequences that are found in the Scrabble word list. (The parameter <em>k</em> is the length of the words to be generated, and <em>reps</em> specifies the number of random trials.)</p>
<pre class="language-python"><code>def randomFoldableWords(text, lexicon, k, reps):
    normtext = normalize(text)
    n = len(normtext)
    findings = []
    for i in range(reps):
        indices = random.sample(range(n), k)
        indices.sort()
        letters = ""
        for idx in indices:
            letters += normtext[idx]
        if letters in lexicon:
            findings.append(letters)
    return findings</code></pre>
<p>Here are the six-letter foldable words found by invoking the program as follows: <code class="language-python">randomFoldableWords(scrabblewords, 6, 10000)</code>. </p>
<blockquote><p>please, plater, searer, saeter, parter, sleety, sleeve, parser, purvey, laster, islets, taster, tester, slarts, paseos, tapers, saeter, eatery, salute, tsetse, setose, salues, sparer</p></blockquote>
<p>Note that the word saeter (you could look it up—I had to) appears twice in this list. The frequency of such repetitions can yield an estimate of the total population size. A variant of the <a href="http://www.pitt.edu/~yuc2/cr/history.htm">mark-and-recapture</a> method, well-known in wildlife ecology, led me to an estimate of 92 six-letter foldable Scrabble words in the straw-wrapper slogan. The actual number turns out to be 106.</p>
<p>Samples and estimates are helpful, but they leave me wondering, What am I missing? What strange and beautiful word has failed to turn up in any of the samples, like the big fish that never takes the bait? I had to have an exhaustive list.</p>
<hr/>
<p>In many word games, the tool of choice for computer-aided playing (or cheating) is the regular expression, or regex. A regex is a pattern defining a set of strings, or character sequences; from a collection of strings, a regex search will pick out those that match the pattern. For example, the regular expression <code>^.*love.*$</code> selects from the Scrabble word list all words that have the letter sequence <em>love</em> somewhere within them. There are 137 such words, including some that I would not have thought of, such as <em>rollover</em> and <em>slovenly</em>. The regex <code>^.*l.*o.*v.*e.*$</code> finds all words in which <em>l, o, v,</em> and <em>e</em> appear in sequence, whether of not they are adjacent. The set has 267 members, including such secret-lover gems as <em>bloviate</em>, <em>electropositive</em>, and <em>leftovers</em>.</p>
<p>A solution to the foldable words problem could surely be crafted with regular expressions, but I am not a regex wizard. In search of a more muggles-friendly strategy, my first thought was to extend the idea behind the random-sampling procedure. Instead of selecting foldable sequences at random, I’d generate all of them, and check each one against the word list.</p>
<p>The procedure below generates all three-letter strings that can be folded from the given text, and returns the subset of those strings that appear in the Scrabble word list:</p>
<pre><code class="language-python">def foldableStrings3(lexicon, text):
    normtext = normalize(text)
    n = len(normtext)
    words = []
    for i in range(0, n-2):
        for j in range(i+1, n-1):
            for k in range(j+1, n):
                s = normtext[i] + normtext[j] + normtext[k]
                if s in lexicon:
                    words.append(s)
    return(words)</code></pre>
<p>At the heart of the procedure are three nested loops that methodically step through all the foldable combinations: For any initial letter <code>text[i]</code> we can choose any following letter <code>text[j]</code> with<code> j &gt; i</code>; likewise <code>text[j]</code> can be followed by any <code>text[k]</code> with <code>k &gt; j</code>. This scheme works perfectly well, finding 348 instances of three-letter words. I speak of “instances” because some words appear in the list more than once; for example, <em>pee</em> can be formed in three ways. If we count only unique words, there are 137.</p>
<p>Following this model, we could write a separate routine for each word length from 1 to 15 letters, but that looks like a dreary and repetitious task. Nobody wants to write a procedure with loops nested 15 deep. An alternative is to write a meta-procedure, which would generate the appropriate procedure for each word length. I made a start on that exercise in advanced loopology, but before I got very far I realized there’s an easier way. I was wondering: In a text of <em>n</em> letters, how many foldable substrings exist—whether or not they are recognizable words? There are several ways of answering this question, but to me the most illuminating argument comes from an inclusion/​exclusion principle. Consider the first letter of the text, which in our case is the letter <em>I</em>. In the set of all foldable strings, half include this letter and half exclude it. The same is true of the second letter, and the third, and so on. Thus each letter added to the text doubles the number of foldable strings, which means the total number of strings is simply \(2^n\). (Included in this count is the empty string, made up of no letters.)</p>
<p>This observation suggests a simple algorithm for generating all the foldable strings in any <em>n</em>-letter text. Just count from \(0\) to \(2^{n} - 1\), and for each value along the way line up the binary representation of the number with the letters of the text. Then select those letters that correspond to a <code>1</code> bit, like so:</p>
<div style="padding: 1em;">
<pre style="padding: 0.5em;">                    <span style="color: #ccc;">itsa</span><strong>p</strong><span style="color: #ccc;">leasu</span><strong>re</strong><span style="color: #ccc;">to</span><strong>serve</strong><span style="color: #ccc;">you</span>
                    0000100000110011111000</pre>
</div>
<p>And so we see that the word <code>preserve</code> corresponds to the binary representation of the number <code>134392</code>.</p>
<p>Counting is something that computers are good at, so a word-search procedure based on this principle is straightforward:</p>
<pre><code class="language-python">def foldablesByCounting(lexicon, text):
    normtext = normalize(text)
    n = len(normtext)
    words = []
    for i in range(2**n - 1):
        charSeq = ''
        positions = positionsOf1Bits(i, n)
        for p in positions:
            charSeq += normtext[p]
        if charSeq in lexicon:
            words.append(charSeq)
    return(words)</code></pre>
<p>The outer loop (variable <code>i</code>) counts from \(0\) to \(2^{n} - 1\); for each of these numbers the inner loop (variable <code>p</code>) picks out the letters corresponding to 1 bits. The program produces the output expected. Unfortunately, it does so very slowly. For every character added to the text, running time roughly doubles. I haven’t the patience to plod through the \(2^22\) patterns in “itsapleasuretoserveyou”; estimates based on shorter phrases suggest the running time would be more than three hours.</p>
<hr/>
<p>In the middle of the night I realized my approach to this problem was totally backwards. Instead of blindly generating all possible character strings and filtering out the few genuine words, I could march through the list of Scrabble words and test each of them to see if it’s foldable. At worst I would have to try some 270,000 words. I could speed things up even more by making a preliminary pass through the Scrabble list, discarding all words that include characters not present in the normalized text. For the text “It’s a pleasure to serve you,” the character set has just 12 members: <code>aeiloprstuvy</code>. Allowing only words formed from these letters slashes the Scrabble list down to a length of 12,816.</p>
<p>To make this algorithm work, we need a procedure to report whether or not a word can be formed by folding the given text. The simplest approach is to slide the candidate word along the text, looking for a match for each character in turn:</p>
<div style="padding: 0.5em;">
<pre>                    taste
                    <span style="color: #ccc;">itsapleasuretoserveyou</span>

                     <strong>t</strong>aste
                    <span style="color: #ccc;">i</span><strong>t</strong><span style="color: #ccc;">sapleasuretoserveyou</span>

                     <strong>t a</strong>ste
                    <span style="color: #ccc;">i</span><strong>t</strong><span style="color: #ccc;">s</span><strong>a</strong><span style="color: #ccc;">pleasuretoserveyou</span>

                     <strong>t a    s</strong>te
                    <span style="color: #ccc;">i</span><strong>t</strong><span style="color: #ccc;">s</span><strong>a</strong><span style="color: #ccc;">plea</span><strong>s</strong><span style="color: #ccc;">uretoserveyou</span>

                     <strong>t a    s   t</strong>e
                    <span style="color: #ccc;">i</span><strong>t</strong><span style="color: #ccc;">s</span><strong>a</strong><span style="color: #ccc;">plea</span><strong>s</strong><span style="color: #ccc;">ure</span><strong>t</strong><span style="color: #ccc;">oserveyou</span>

                     <strong>t a    s   t  e</strong>
                    <span style="color: #ccc;">i</span><strong>t</strong><span style="color: #ccc;">s</span><strong>a</strong><span style="color: #ccc;">plea</span><strong>s</strong><span style="color: #ccc;">ure</span><strong>t</strong><span style="color: #ccc;">os</span><strong>e</strong><span style="color: #ccc;">rveyou</span>
</pre>
</div>
<p>If every letter of the word finds a mate in the text, the word is foldable, as in the case of <code>taste</code>, shown above. But an attempt to match <code>tastes</code> would fall off the end of the text looking for a second <code>s</code>, which does not exist.</p>
<p>The following code implements this idea:</p>
<pre><code class="language-python">def wordIsFoldable(word, text):
    normtext = normalize(text)
    t = 0                      # pointer to positions in normtext
    w = 0                      # pointer to positions in word
    while t &lt; len(normtext):
        if word[w] == normtext[t]:  # matching chars in word and text
            w += 1                  # move to next char in word
        if w == len(word):          # matched all chars in word
            return(True)            # so: thumbs up
        t += 1                 # move to next char in text
    return(False)              # fell off the end: thumbs down</code></pre>
<p>All we need to do now is embed this procedure in a loop that steps through all the candidate Scrabble words, collecting those for which <code>wordIsFoldable</code> returns <code>True</code>. </p>
<p>There’s still some waste motion here, since we are searching letter-by-letter through the same text, and repeating the same searches thousands of times. The source code (available on GitHub as a <a href="https://github.com/bit-player/foldable-words">Jupyter notebook</a>) explains some further speedups. But even the simple version shown here runs in less than two tenths of a second, so there’s not much point in optimizing.</p>
<p>I can now report that there are 778 unique foldable Scrabble words in “It’s a pleasure to serve you” (including the three one-letter words I added to the list). Words that can be formed in multiple ways bring the total count to 899.</p>
<p>And so we come to the tah-dah! moment—the unveiling of the complete list. I have organized the words into groups based on each word’s starting position within the text. (By Python convention, the positions are numbered from 0 through \(n-1\).) Within each group, the words are sorted according to the position of their last character; that position is given in the subscript following the word. For example, <em>tapestry</em> is in Group 1 because it begins at position 1 in the text (the <em>t</em> in <em>It’s</em>), and it carries the subscript 19 because it ends at position 19 (the <em>y</em> in <em>you</em>). </p>
<p>This arrangement of the words is meant to aid in contructing multiword phrases. If a word ends at position \(m\), the next word in the phrase must come from a group numbered \(m+1\) or greater. </p>
<p><br/></p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 0:</b> i<sub>0</sub> it<sub>1</sub> is<sub>2</sub> its<sub>2</sub> ita<sub>3</sub> isle<sub>6</sub> ilea<sub>7</sub> isles<sub>8</sub> itas<sub>8</sub> ire<sub>11</sub> issue<sub>11</sub> iure<sub>11</sub> islet<sub>12</sub> io<sub>13</sub> iso<sub>13</sub> ileus<sub>14</sub> ios<sub>14</sub> ires<sub>14</sub> islets<sub>14</sub> isos<sub>14</sub> issues<sub>14</sub> issuer<sub>16</sub> ivy<sub>19</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 1:</b> ta<sub>3</sub> tap<sub>4</sub> tae<sub>6</sub> tale<sub>6</sub> tape<sub>6</sub> te<sub>6</sub> tala<sub>7</sub> talea<sub>7</sub> tapa<sub>7</sub> tea<sub>7</sub> taes<sub>8</sub> talas<sub>8</sub> tales<sub>8</sub> tapas<sub>8</sub> tapes<sub>8</sub> taps<sub>8</sub> tas<sub>8</sub> teas<sub>8</sub> tes<sub>8</sub> tapu<sub>9</sub> tau<sub>9</sub> talar<sub>10</sub> taler<sub>10</sub> taper<sub>10</sub> tar<sub>10</sub> tear<sub>10</sub> tsar<sub>10</sub> taleae<sub>11</sub> tare<sub>11</sub> tease<sub>11</sub> tee<sub>11</sub> tapet<sub>12</sub> tart<sub>12</sub> tat<sub>12</sub> taut<sub>12</sub> teat<sub>12</sub> test<sub>12</sub> tet<sub>12</sub> tret<sub>12</sub> tut<sub>12</sub> tao<sub>13</sub> taro<sub>13</sub> to<sub>13</sub> talars<sub>14</sub> talers<sub>14</sub> talus<sub>14</sub> taos<sub>14</sub> tapers<sub>14</sub> tapets<sub>14</sub> tapus<sub>14</sub> tares<sub>14</sub> taros<sub>14</sub> tars<sub>14</sub> tarts<sub>14</sub> tass<sub>14</sub> tats<sub>14</sub> taus<sub>14</sub> tauts<sub>14</sub> tears<sub>14</sub> teases<sub>14</sub> teats<sub>14</sub> tees<sub>14</sub> teres<sub>14</sub> terts<sub>14</sub> tests<sub>14</sub> tets<sub>14</sub> tres<sub>14</sub> trets<sub>14</sub> tsars<sub>14</sub> tuts<sub>14</sub> tasse<sub>15</sub> taste<sub>15</sub> tate<sub>15</sub> terete<sub>15</sub> terse<sub>15</sub> teste<sub>15</sub> tete<sub>15</sub> toe<sub>15</sub> tose<sub>15</sub> tree<sub>15</sub> tsetse<sub>15</sub> taperer<sub>16</sub> tapster<sub>16</sub> tarter<sub>16</sub> taser<sub>16</sub> taster<sub>16</sub> tater<sub>16</sub> tauter<sub>16</sub> tearer<sub>16</sub> teaser<sub>16</sub> teer<sub>16</sub> teeter<sub>16</sub> terser<sub>16</sub> tester<sub>16</sub> tor<sub>16</sub> tutor<sub>16</sub> tav<sub>17</sub> tarre<sub>18</sub> testee<sub>18</sub> tore<sub>18</sub> trove<sub>18</sub> tutee<sub>18</sub> tapestry<sub>19</sub> tapstry<sub>19</sub> tarry<sub>19</sub> tarty<sub>19</sub> tasty<sub>19</sub> tay<sub>19</sub> teary<sub>19</sub> terry<sub>19</sub> testy<sub>19</sub> toey<sub>19</sub> tory<sub>19</sub> toy<sub>19</sub> trey<sub>19</sub> troy<sub>19</sub> try<sub>19</sub> too<sub>20</sub> toro<sub>20</sub> toyo<sub>20</sub> tatou<sub>21</sub> tatu<sub>21</sub> tutu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 2:</b> sap<sub>4</sub> sal<sub>5</sub> sae<sub>6</sub> sale<sub>6</sub> sea<sub>7</sub> spa<sub>7</sub> sales<sub>8</sub> sals<sub>8</sub> saps<sub>8</sub> seas<sub>8</sub> spas<sub>8</sub> sau<sub>9</sub> sar<sub>10</sub> sear<sub>10</sub> ser<sub>10</sub> slur<sub>10</sub> spar<sub>10</sub> spear<sub>10</sub> spur<sub>10</sub> sur<sub>10</sub> salse<sub>11</sub> salue<sub>11</sub> seare<sub>11</sub> sease<sub>11</sub> seasure<sub>11</sub> see<sub>11</sub> sere<sub>11</sub> sese<sub>11</sub> slae<sub>11</sub> slee<sub>11</sub> slue<sub>11</sub> spae<sub>11</sub> spare<sub>11</sub> spue<sub>11</sub> sue<sub>11</sub> sure<sub>11</sub> salet<sub>12</sub> salt<sub>12</sub> sat<sub>12</sub> saut<sub>12</sub> seat<sub>12</sub> set<sub>12</sub> slart<sub>12</sub> slat<sub>12</sub> sleet<sub>12</sub> slut<sub>12</sub> spart<sub>12</sub> spat<sub>12</sub> speat<sub>12</sub> spet<sub>12</sub> splat<sub>12</sub> spurt<sub>12</sub> st<sub>12</sub> suet<sub>12</sub> salto<sub>13</sub> so<sub>13</sub> salets<sub>14</sub> salses<sub>14</sub> saltos<sub>14</sub> salts<sub>14</sub> salues<sub>14</sub> sapless<sub>14</sub> saros<sub>14</sub> sars<sub>14</sub> sass<sub>14</sub> sauts<sub>14</sub> sears<sub>14</sub> seases<sub>14</sub> seasures<sub>14</sub> seats<sub>14</sub> sees<sub>14</sub> seres<sub>14</sub> sers<sub>14</sub> sess<sub>14</sub> sets<sub>14</sub> slaes<sub>14</sub> slarts<sub>14</sub> slats<sub>14</sub> sleets<sub>14</sub> slues<sub>14</sub> slurs<sub>14</sub> sluts<sub>14</sub> sos<sub>14</sub> spaes<sub>14</sub> spares<sub>14</sub> spars<sub>14</sub> sparts<sub>14</sub> spats<sub>14</sub> spears<sub>14</sub> speats<sub>14</sub> speos<sub>14</sub> spets<sub>14</sub> splats<sub>14</sub> spues<sub>14</sub> spurs<sub>14</sub> spurts<sub>14</sub> sues<sub>14</sub> suets<sub>14</sub> sures<sub>14</sub> sus<sub>14</sub> salute<sub>15</sub> saree<sub>15</sub> sasse<sub>15</sub> sate<sub>15</sub> saute<sub>15</sub> setose<sub>15</sub> slate<sub>15</sub> sloe<sub>15</sub> sluse<sub>15</sub> sparse<sub>15</sub> spate<sub>15</sub> sperse<sub>15</sub> spree<sub>15</sub> saeter<sub>16</sub> salter<sub>16</sub> saluter<sub>16</sub> sapor<sub>16</sub> sartor<sub>16</sub> saser<sub>16</sub> searer<sub>16</sub> seater<sub>16</sub> seer<sub>16</sub> serer<sub>16</sub> serr<sub>16</sub> slater<sub>16</sub> sleer<sub>16</sub> spaer<sub>16</sub> sparer<sub>16</sub> sparser<sub>16</sub> spearer<sub>16</sub> speer<sub>16</sub> spuer<sub>16</sub> spurter<sub>16</sub> suer<sub>16</sub> surer<sub>16</sub> sutor<sub>16</sub> sav<sub>17</sub> sov<sub>17</sub> salve<sub>18</sub> save<sub>18</sub> serre<sub>18</sub> serve<sub>18</sub> slave<sub>18</sub> sleave<sub>18</sub> sleeve<sub>18</sub> slove<sub>18</sub> sore<sub>18</sub> sparre<sub>18</sub> sperre<sub>18</sub> splore<sub>18</sub> spore<sub>18</sub> stere<sub>18</sub> sterve<sub>18</sub> store<sub>18</sub> stove<sub>18</sub> salary<sub>19</sub> salty<sub>19</sub> sassy<sub>19</sub> saury<sub>19</sub> savey<sub>19</sub> say<sub>19</sub> serry<sub>19</sub> sesey<sub>19</sub> sey<sub>19</sub> slatey<sub>19</sub> slaty<sub>19</sub> slavey<sub>19</sub> slay<sub>19</sub> sleety<sub>19</sub> sley<sub>19</sub> slurry<sub>19</sub> sly<sub>19</sub> soy<sub>19</sub> sparry<sub>19</sub> spay<sub>19</sub> speary<sub>19</sub> splay<sub>19</sub> spry<sub>19</sub> spurrey<sub>19</sub> spurry<sub>19</sub> spy<sub>19</sub> stey<sub>19</sub> storey<sub>19</sub> story<sub>19</sub> sty<sub>19</sub> suety<sub>19</sub> surety<sub>19</sub> surrey<sub>19</sub> survey<sub>19</sub> salvo<sub>20</sub> servo<sub>20</sub> stereo<sub>20</sub> sou<sub>21</sub> susu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 3:</b> a<sub>3</sub> al<sub>5</sub> ae<sub>6</sub> ale<sub>6</sub> ape<sub>6</sub> aa<sub>7</sub> ala<sub>7</sub> aas<sub>8</sub> alas<sub>8</sub> ales<sub>8</sub> als<sub>8</sub> apes<sub>8</sub> as<sub>8</sub> alu<sub>9</sub> alar<sub>10</sub> aper<sub>10</sub> ar<sub>10</sub> alae<sub>11</sub> alee<sub>11</sub> alure<sub>11</sub> apse<sub>11</sub> are<sub>11</sub> aue<sub>11</sub> alert<sub>12</sub> alt<sub>12</sub> apart<sub>12</sub> apert<sub>12</sub> apt<sub>12</sub> aret<sub>12</sub> art<sub>12</sub> at<sub>12</sub> aero<sub>13</sub> also<sub>13</sub> alto<sub>13</sub> apo<sub>13</sub> apso<sub>13</sub> auto<sub>13</sub> aeros<sub>14</sub> alerts<sub>14</sub> altos<sub>14</sub> alts<sub>14</sub> alures<sub>14</sub> alus<sub>14</sub> apers<sub>14</sub> apos<sub>14</sub> apres<sub>14</sub> apses<sub>14</sub> apsos<sub>14</sub> apts<sub>14</sub> ares<sub>14</sub> arets<sub>14</sub> ars<sub>14</sub> arts<sub>14</sub> ass<sub>14</sub> ats<sub>14</sub> aures<sub>14</sub> autos<sub>14</sub> alate<sub>15</sub> aloe<sub>15</sub> arete<sub>15</sub> arose<sub>15</sub> arse<sub>15</sub> ate<sub>15</sub> alastor<sub>16</sub> alerter<sub>16</sub> alter<sub>16</sub> apter<sub>16</sub> aster<sub>16</sub> arere<sub>18</sub> ave<sub>18</sub> aery<sub>19</sub> alary<sub>19</sub> alay<sub>19</sub> aleatory<sub>19</sub> apay<sub>19</sub> apery<sub>19</sub> arsey<sub>19</sub> arsy<sub>19</sub> artery<sub>19</sub> artsy<sub>19</sub> arty<sub>19</sub> ary<sub>19</sub> ay<sub>19</sub> aloo<sub>20</sub> arvo<sub>20</sub> avo<sub>20</sub> ayu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 4:</b> pe<sub>6</sub> pa<sub>7</sub> pea<sub>7</sub> plea<sub>7</sub> pas<sub>8</sub> peas<sub>8</sub> pes<sub>8</sub> pleas<sub>8</sub> plu<sub>9</sub> par<sub>10</sub> pear<sub>10</sub> per<sub>10</sub> pur<sub>10</sub> pare<sub>11</sub> pase<sub>11</sub> peare<sub>11</sub> pease<sub>11</sub> pee<sub>11</sub> pere<sub>11</sub> please<sub>11</sub> pleasure<sub>11</sub> plue<sub>11</sub> pre<sub>11</sub> pure<sub>11</sub> part<sub>12</sub> past<sub>12</sub> pat<sub>12</sub> peart<sub>12</sub> peat<sub>12</sub> pert<sub>12</sub> pest<sub>12</sub> pet<sub>12</sub> plast<sub>12</sub> plat<sub>12</sub> pleat<sub>12</sub> pst<sub>12</sub> put<sub>12</sub> pareo<sub>13</sub> paseo<sub>13</sub> peso<sub>13</sub> pesto<sub>13</sub> po<sub>13</sub> pro<sub>13</sub> pareos<sub>14</sub> pares<sub>14</sub> pars<sub>14</sub> parts<sub>14</sub> paseos<sub>14</sub> pases<sub>14</sub> pass<sub>14</sub> pasts<sub>14</sub> pats<sub>14</sub> peares<sub>14</sub> pears<sub>14</sub> peases<sub>14</sub> peats<sub>14</sub> pees<sub>14</sub> peres<sub>14</sub> perts<sub>14</sub> pesos<sub>14</sub> pestos<sub>14</sub> pests<sub>14</sub> pets<sub>14</sub> plats<sub>14</sub> pleases<sub>14</sub> pleasures<sub>14</sub> pleats<sub>14</sub> plues<sub>14</sub> plus<sub>14</sub> pos<sub>14</sub> pros<sub>14</sub> pures<sub>14</sub> purs<sub>14</sub> pus<sub>14</sub> puts<sub>14</sub> parse<sub>15</sub> passe<sub>15</sub> paste<sub>15</sub> pate<sub>15</sub> pause<sub>15</sub> perse<sub>15</sub> plaste<sub>15</sub> plate<sub>15</sub> pose<sub>15</sub> pree<sub>15</sub> prese<sub>15</sub> prose<sub>15</sub> puree<sub>15</sub> purse<sub>15</sub> parer<sub>16</sub> parr<sub>16</sub> parser<sub>16</sub> parter<sub>16</sub> passer<sub>16</sub> paster<sub>16</sub> pastor<sub>16</sub> pater<sub>16</sub> pauser<sub>16</sub> pearter<sub>16</sub> peer<sub>16</sub> perter<sub>16</sub> pester<sub>16</sub> peter<sub>16</sub> plaster<sub>16</sub> plater<sub>16</sub> pleaser<sub>16</sub> pleasurer<sub>16</sub> pleater<sub>16</sub> poser<sub>16</sub> pretor<sub>16</sub> proser<sub>16</sub> puer<sub>16</sub> purer<sub>16</sub> purr<sub>16</sub> purser<sub>16</sub> parev<sub>17</sub> pav<sub>17</sub> perv<sub>17</sub> pareve<sub>18</sub> parore<sub>18</sub> parve<sub>18</sub> passee<sub>18</sub> pave<sub>18</sub> peeve<sub>18</sub> perve<sub>18</sub> petre<sub>18</sub> pore<sub>18</sub> preeve<sub>18</sub> preserve<sub>18</sub> preve<sub>18</sub> prore<sub>18</sub> prove<sub>18</sub> parry<sub>19</sub> party<sub>19</sub> pastry<sub>19</sub> pasty<sub>19</sub> patsy<sub>19</sub> paty<sub>19</sub> pay<sub>19</sub> peatery<sub>19</sub> peaty<sub>19</sub> peavey<sub>19</sub> peavy<sub>19</sub> peeoy<sub>19</sub> peery<sub>19</sub> perry<sub>19</sub> pervy<sub>19</sub> pesty<sub>19</sub> plastery<sub>19</sub> platy<sub>19</sub> play<sub>19</sub> ploy<sub>19</sub> plurry<sub>19</sub> ply<sub>19</sub> pory<sub>19</sub> posey<sub>19</sub> posy<sub>19</sub> prey<sub>19</sub> prosy<sub>19</sub> pry<sub>19</sub> pursy<sub>19</sub> purty<sub>19</sub> purvey<sub>19</sub> puy<sub>19</sub> parvo<sub>20</sub> poo<sub>20</sub> proo<sub>20</sub> proso<sub>20</sub> pareu<sub>21</sub> patu<sub>21</sub> poyou<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 5:</b> la<sub>7</sub> lea<sub>7</sub> las<sub>8</sub> leas<sub>8</sub> les<sub>8</sub> leu<sub>9</sub> lar<sub>10</sub> lear<sub>10</sub> lur<sub>10</sub> lare<sub>11</sub> lase<sub>11</sub> leare<sub>11</sub> lease<sub>11</sub> leasure<sub>11</sub> lee<sub>11</sub> lere<sub>11</sub> lure<sub>11</sub> last<sub>12</sub> lat<sub>12</sub> least<sub>12</sub> leat<sub>12</sub> leet<sub>12</sub> lest<sub>12</sub> let<sub>12</sub> lo<sub>13</sub> lares<sub>14</sub> lars<sub>14</sub> lases<sub>14</sub> lass<sub>14</sub> lasts<sub>14</sub> lats<sub>14</sub> leares<sub>14</sub> lears<sub>14</sub> leases<sub>14</sub> leasts<sub>14</sub> leasures<sub>14</sub> leats<sub>14</sub> lees<sub>14</sub> leets<sub>14</sub> leres<sub>14</sub> leses<sub>14</sub> less<sub>14</sub> lests<sub>14</sub> lets<sub>14</sub> los<sub>14</sub> lues<sub>14</sub> lures<sub>14</sub> lurs<sub>14</sub> laree<sub>15</sub> late<sub>15</sub> leese<sub>15</sub> lose<sub>15</sub> lute<sub>15</sub> laer<sub>16</sub> laser<sub>16</sub> laster<sub>16</sub> later<sub>16</sub> leaser<sub>16</sub> leer<sub>16</sub> lesser<sub>16</sub> lor<sub>16</sub> loser<sub>16</sub> lurer<sub>16</sub> luser<sub>16</sub> luter<sub>16</sub> lav<sub>17</sub> lev<sub>17</sub> luv<sub>17</sub> lave<sub>18</sub> leave<sub>18</sub> lessee<sub>18</sub> leve<sub>18</sub> lore<sub>18</sub> love<sub>18</sub> lurve<sub>18</sub> lay<sub>19</sub> leary<sub>19</sub> leavy<sub>19</sub> leery<sub>19</sub> levy<sub>19</sub> ley<sub>19</sub> lory<sub>19</sub> lovey<sub>19</sub> loy<sub>19</sub> lurry<sub>19</sub> laevo<sub>20</sub> lasso<sub>20</sub> levo<sub>20</sub> loo<sub>20</sub> lassu<sub>21</sub> latu<sub>21</sub> lou<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 6:</b> ea<sub>7</sub> eas<sub>8</sub> es<sub>8</sub> eau<sub>9</sub> ear<sub>10</sub> er<sub>10</sub> ease<sub>11</sub> ee<sub>11</sub> ere<sub>11</sub> east<sub>12</sub> eat<sub>12</sub> est<sub>12</sub> et<sub>12</sub> euro<sub>13</sub> ears<sub>14</sub> eases<sub>14</sub> easts<sub>14</sub> eats<sub>14</sub> eaus<sub>14</sub> eres<sub>14</sub> eros<sub>14</sub> ers<sub>14</sub> eses<sub>14</sub> ess<sub>14</sub> ests<sub>14</sub> euros<sub>14</sub> erose<sub>15</sub> esse<sub>15</sub> easer<sub>16</sub> easter<sub>16</sub> eater<sub>16</sub> err<sub>16</sub> ester<sub>16</sub> erev<sub>17</sub> eave<sub>18</sub> eve<sub>18</sub> easy<sub>19</sub> eatery<sub>19</sub> eery<sub>19</sub> estro<sub>20</sub> evo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 7:</b> a<sub>7</sub> as<sub>8</sub> ar<sub>10</sub> ae<sub>11</sub> are<sub>11</sub> aue<sub>11</sub> aret<sub>12</sub> art<sub>12</sub> at<sub>12</sub> auto<sub>13</sub> ares<sub>14</sub> arets<sub>14</sub> ars<sub>14</sub> arts<sub>14</sub> ass<sub>14</sub> ats<sub>14</sub> aures<sub>14</sub> autos<sub>14</sub> arete<sub>15</sub> arose<sub>15</sub> arse<sub>15</sub> ate<sub>15</sub> aster<sub>16</sub> arere<sub>18</sub> ave<sub>18</sub> aery<sub>19</sub> arsey<sub>19</sub> arsy<sub>19</sub> artery<sub>19</sub> artsy<sub>19</sub> arty<sub>19</sub> ary<sub>19</sub> ay<sub>19</sub> aero<sub>20</sub> arvo<sub>20</sub> avo<sub>20</sub> ayu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 8:</b> sur<sub>10</sub> sue<sub>11</sub> sure<sub>11</sub> set<sub>12</sub> st<sub>12</sub> suet<sub>12</sub> so<sub>13</sub> sets<sub>14</sub> sos<sub>14</sub> sues<sub>14</sub> suets<sub>14</sub> sures<sub>14</sub> sus<sub>14</sub> see<sub>15</sub> sese<sub>15</sub> setose<sub>15</sub> seer<sub>16</sub> ser<sub>16</sub> suer<sub>16</sub> surer<sub>16</sub> sutor<sub>16</sub> sov<sub>17</sub> sere<sub>18</sub> serve<sub>18</sub> sore<sub>18</sub> stere<sub>18</sub> sterve<sub>18</sub> store<sub>18</sub> stove<sub>18</sub> sesey<sub>19</sub> sey<sub>19</sub> soy<sub>19</sub> stey<sub>19</sub> storey<sub>19</sub> story<sub>19</sub> sty<sub>19</sub> suety<sub>19</sub> surety<sub>19</sub> surrey<sub>19</sub> survey<sub>19</sub> servo<sub>20</sub> stereo<sub>20</sub> sou<sub>21</sub> susu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 9:</b> ur<sub>10</sub> ure<sub>11</sub> ut<sub>12</sub> ures<sub>14</sub> us<sub>14</sub> uts<sub>14</sub> use<sub>15</sub> ute<sub>15</sub> ureter<sub>16</sub> user<sub>16</sub> uey<sub>19</sub> utu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 10:</b> re<sub>11</sub> ret<sub>12</sub> reo<sub>13</sub> reos<sub>14</sub> res<sub>14</sub> rets<sub>14</sub> ree<sub>15</sub> rete<sub>15</sub> roe<sub>15</sub> rose<sub>15</sub> rev<sub>17</sub> reeve<sub>18</sub> resee<sub>18</sub> reserve<sub>18</sub> retore<sub>18</sub> rore<sub>18</sub> rove<sub>18</sub> retry<sub>19</sub> rory<sub>19</sub> rosery<sub>19</sub> rosy<sub>19</sub> retro<sub>20</sub> roo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 11:</b> et<sub>12</sub> es<sub>14</sub> ee<sub>15</sub> er<sub>16</sub> ere<sub>18</sub> eve<sub>18</sub> eery<sub>19</sub> evo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 12:</b> to<sub>13</sub> te<sub>15</sub> toe<sub>15</sub> tose<sub>15</sub> tor<sub>16</sub> tee<sub>18</sub> tore<sub>18</sub> toey<sub>19</sub> tory<sub>19</sub> toy<sub>19</sub> trey<sub>19</sub> try<sub>19</sub> too<sub>20</sub> toro<sub>20</sub> toyo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 13:</b> o<sub>13</sub> os<sub>14</sub> oe<sub>15</sub> ose<sub>15</sub> or<sub>16</sub> ore<sub>18</sub> oy<sub>19</sub> oo<sub>20</sub> ou<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 14:</b> ser<sub>16</sub> see<sub>18</sub> sere<sub>18</sub> serve<sub>18</sub> sey<sub>19</sub> servo<sub>20</sub> so<sub>20</sub> sou<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 15:</b> er<sub>16</sub> ee<sub>18</sub> ere<sub>18</sub> eve<sub>18</sub> evo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 16:</b> re<sub>18</sub> reo<sub>20</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 17:</b> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 18:</b> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 19:</b> yo<sub>20</sub> you<sub>21</sub> yu<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 20:</b> o<sub>20</sub> ou<sub>21</sub> </p>
<p class="undent" style="margin-bottom: 6pt;"><b>Group 21:</b> </p>
<hr/>
<p>Naturally, I’ve tried out the code on a few other well-known phrases. </p>
<p>If Lynn and I had met at a different dining establishment, she might have found a straw with the statement, “It takes two hands to handle a Whopper.” There’s quite a diverse assortment of possible messages lurking in this text, with 1,154 unique foldable words and almost 2,000 word instances. Perhaps she would have chosen the upbeat “Inhale hope.” Or, in a darker mood, “I taste woe.”</p>
<p>If we had been folding dollar bills instead of straw wrappers, “In God We Trust” might have become the forward-looking proclamation, “I go west!” Horace Greeley’s marching order on the same theme, “Go west, young man,” gives us the enigmatic “O, wet yoga!” or, perhaps more aptly, “Gunman.”</p>
<p>Jumping forward from 1967 to 2021—from the Summer of Love to the Winter of COVID—I can turn “Wear a mask. Wash your hands.” into the plaintive, “We ask: Why us?” With “Maintain social distance,” the best I can do is “A nasal dance” or “A sad stance.”</p>
<p>And then there’s “Make America Great Again.” It yields “Meme rage.” Also “Make me ragtag.”</p>
<hr/>
<h4>Appendix: The Word-List Problem.</h4>
<p>In a project like this one, you might think that getting a suitable list of English words would be the easy part. In fact it seems to be the main trouble spot.</p>
<p>The Scrabble lexicon I’ve been relying on derives from a word list known as SOWPODS, compiled by two associations of Scrabble players starting in the 1980s. Current editions of the list are distributed  by a commercial publisher, Collins Dictionaries. If I understand correctly, all versions of the list are subject to copyright (see <a href="https://boardgames.stackexchange.com/questions/38366/latest-collins-scrabble-words-list-in-text-file">discussion on Stack Exchange</a>) and cannot legally be distributed without permission. But no one seems to be much bothered by that fact. Copies of the lists in plain-text format, with one word per line, are easy to find on the internet—and not just on dodgy sites that specialize in pirated material.</p>
<p>There are alternative lists without legal encumbrances. Indeed, there’s a good chance you already have one such list pre-installed on your computer. A file called <code>words</code> is included in most distributions of the Unix operating system, including MacOS; my copy of the file lives in <code>usr/share/dict/words</code>. If you don’t have or can’t find the Unix <code>words</code> file, I suggest downloading the <a href="http://www.nltk.org/nltk_data/">Natural Language Toolkit</a>, a suite of data files and Python programs that includes a lexicon almost identical to Unix words, as well as many other linguistic resources.</p>
<p>The Scrabble list has one big advantage over <code>words</code>: It includes plurals and inflected forms of verbs—not just <em>test</em> but also <em>tests</em>, <em>tested</em>, and <em>testing</em>. [Bad example; see comments below.] The <code>words</code> file is more like a list of dictionary head words, with only the stem form explicitly included. On the other hand, <code>words</code> has an abundance of names and other proper nouns, as well as abbreviations, which are excluded from the Scrabble list since they are not legal plays in the board game.</p>
<p>How about combining the two word lists? Their union has just under 400,000 entries—quite a large lexicon. Using this augmented list for the analysis of “It’s a pleasure to serve you,” my program finds an additional 219 foldable words, beyond the 778 found with the Scrabble list alone. Here they are:</p>
<blockquote><p>aaru aer aerose aes alares alaster alea alerse aleut alo alose alur aly ao apa apar aperu apus aro arry aru ase asor asse ast astor atry aueto aurore aus ausu aute e eastre eer erse esere estre eu ey iao ie ila islay ist isuret itala itea iter ito iyo l laet lao larry larve lastre lasty latro laur leo ler lester lete leto loro lu lue luo lut luteo lutose ly oer ory ovey p parsee parto passo pastose pato pau paut pavo pavy peasy perty peru pess peste pete peto petr plass platery pluto poe poy presee pretry pu purre purry puru r reve ro roer roey roy s sa saa salar salat salay saltee saltery salvy sao sapa saple sapo sare sart saur sauty sauve se seary seave seavy seesee sero sert sesuto sla slare slav slete sloo sluer soe sory soso spary spass spave spleet splet splurt spor spret sprose sput ssu stero steve stre strey stu sueve suto sutu suu t taa taar tal talao talose taluto tapeats tapete taplet tapuyo tarr tarse tartro tarve tasser tasu taur tave tavy teaer teaey teart teasy teaty teave teet teety tereu tess testor toru torve tosy tou treey tsere tst tu tue tur turr turse tute tutory u uro urs uru usee v vu y</p></blockquote>
<p>Many of the proper nouns in this list are present in the vocabulary of most English speakers: <em>Aleut, Peru, Pluto, Slav</em>; the same is true of personal names such as <em>Larry, Leo, Stu, Tess</em>. But the rest of the words are very unlikely to turn up in the smalltalk of teenage sweethearts. Indeed, the list is full of letter sequences I simply don’t recognize as English words. Please define <em>isuret, ovey, spleet,</em> or <em>sput</em>.</p>
<p>There are even bigger word lists out there. In 2006 Google extracted <a href="https://ai.googleblog.com/2006/08/all-our-n-gram-are-belong-to-you.html">13.5 million unique English words</a> from public web pages. (The sheer number implies a very liberal definition of <em>English</em> and <em>word</em>.) A good place to start exploring this archive is <a href="https://norvig.com/ngrams/">Peter Norvig’s website</a>, which offers a file with the 333,333 most frequent words from the corpus. The list begins as you might expect: <em>the, of, and, to, a, in, for</em>…; but the weirdness creeps in early. The single letters <em>c, e, s,</em> and <em>x</em> are all listed among the 100 most common “words,” and the rest of the alphabet turns up soon after. By the time we get to the end of the file, it’s mostly typos <em>(mepquest, halloweeb, scholarhips)</em>, run-together words <em>(dietsdontwork, weightlossdrugs)</em>, and hundreds of letter strings that have some phonetic or orthographic resemblance to <em>Google</em> or <em>Yahoo!</em> or both <em>(hoogol, googgl, yahhol, gofool, yogol)</em>. (I suspect that much of this rubbish was scraped not from the visible text of web pages but from metadata stuffed into headers for purposes of search-engine optimization.)</p>
<p>Applying the Google list to the search for foldable words more than doubles the volume of results, but it contributes almost nothing to the stock of words that might form interesting messages. I found 1,543 new words, beyond those that are also present in the union of the Scrabble and Unix lists. In alphabetical order, the additions begin: <em>aae, aao, aaos, aar, aare, aaro, aars, aart, aarts, aase, aass, aast, aasu, aat, aats, aatsr, aau, aaus, aav, aave, aay, aea, aeae….</em> I’m not going to be folding up any straw wrappers with those words for my sweetheart.</p>
<p>What we really need, I begin to think, is not a longer word list but a shorter and more discriminating one.</p></div>
    </content>
    <updated>2021-02-09T20:15:47Z</updated>
    <published>2021-02-09T20:15:47Z</published>
    <category scheme="http://bit-player.org" term="computing"/>
    <category scheme="http://bit-player.org" term="games"/>
    <category scheme="http://bit-player.org" term="linguistics"/>
    <category scheme="http://bit-player.org" term="modern life"/>
    <category scheme="http://bit-player.org" term="off-topic"/>
    <author>
      <name>Brian Hayes</name>
      <uri>http://bit-player.org</uri>
    </author>
    <source>
      <id>http://bit-player.org/feed/atom</id>
      <link href="http://bit-player.org" rel="alternate" type="text/html"/>
      <link href="http://bit-player.org/feed/atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">An amateur's outlook on computation and mathematics</subtitle>
      <title xml:lang="en-US">bit-player</title>
      <updated>2021-02-15T20:51:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://emanueleviola.wordpress.com/?p=810</id>
    <link href="https://emanueleviola.wordpress.com/2021/02/09/et-al-ii/" rel="alternate" type="text/html"/>
    <title>Et Al. II</title>
    <summary>From Thoughts, January 16, 2018: The et al. citation style favors scholars whose last name comes early in the dictionary. For example, other things equal, a last name like Aaron would circulate a lot more than Zuck. This problem is compounded by the existence of highly-cited papers which deviate from alphabetical ordering of authors. They […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><strong>From <a href="https://emanueleviola.wordpress.com/2018/01/16/et-al/">Thoughts, <time datetime="2018-01-16T16:48:38-05:00">January 16, 2018</time>:</a></strong></p>



<p>The et al. citation style favors scholars whose last name comes early in the dictionary. For example, other things equal, a last name like Aaron would circulate a lot more than Zuck. This problem is compounded by the existence of highly-cited papers which deviate from alphabetical ordering of authors. They carry the message: order matters, and some of you can’t use this trick, vae victis!</p>



<p>My suggestion is to avoid et al. and instead spell out every name (as in Aaron and Zuck) or every initial (as in AZ). It isn’t perfect, but improvements like randomly permuting the order still aren’t easy to implement. The suggestion actually cannot be implemented in journals like computational complexity which punish the authors into using an idiosyncratic style which has et al. But it doesn’t matter too much; nobody reads papers in those formats anyway, as we discussed <a href="https://emanueleviola.wordpress.com/tag/utopia/">several times</a>.</p>



<p/>



<p/>



<p/>



<p><strong>From the <a href="http://acm-stoc.org/stoc2021/stoc-cfp.html">STOC 2021 call for papers</a></strong>:</p>



<p/>



<p>Authors are asked to avoid “et al.” in citations in favor of an equal mention of all authors’ surnames (unless the number of authors is very large, and if it is large, consider just using \cite{} with no “et al.”). When not listing authors’ names, citations should preferably include the first letters of the authors’ surnames (or at least the first three followed by a +, and possibly the year of publication). If using BibTeX, this can be accomplished by using \bibliographystyle{alpha}.</p></div>
    </content>
    <updated>2021-02-09T18:07:06Z</updated>
    <published>2021-02-09T18:07:06Z</published>
    <category term="Uncategorized"/>
    <category term="utopia-tcs"/>
    <author>
      <name>Manu</name>
    </author>
    <source>
      <id>https://emanueleviola.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>by Manu</subtitle>
      <title>Thoughts</title>
      <updated>2021-02-17T04:38:12Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-27705661.post-9121434197807183435</id>
    <link href="http://processalgebra.blogspot.com/feeds/9121434197807183435/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://www.blogger.com/comment.g?blogID=27705661&amp;postID=9121434197807183435" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/27705661/posts/default/9121434197807183435" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/27705661/posts/default/9121434197807183435" rel="self" type="application/atom+xml"/>
    <link href="http://processalgebra.blogspot.com/2021/02/whence-do-research-collaborations-in.html" rel="alternate" type="text/html"/>
    <title>Whence do research collaborations (in TCS) arise?</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>About ten days ago, I gave a <a href="http://icetcs.ru.is/slides/intro2icetcs2021.pdf" target="_blank">talk</a> to my colleagues at the <a href="https://en.ru.is/st/dcs/" target="_blank">Department of Computer Science at Reykjavik University</a>, introducing my personal (and admittedly very biased) view of the past, present and future of <a href="http://icetcs.ru.is/" target="_blank">ICE-TCS</a>. </p><p>After my presenta­tion, a colleague asked me how she could engage mathematicians and theoretical computer scientists in joint research. I gave her an answer off the top of my head, but it was clear that she was unconvinc­ed and felt that I was avoid­ing answering her question. (For the record, I basically told her that she should knock on our door, discuss with us the problems she was interested in solving and hope that they are of interest to us. I feel that many research collaborations arise from serendipity and that there is no recipe that is guaranteed to work.) </p><p>The thought that she felt that I might have dodged her question prompted me to look back at my own research collabo­rations and how they came about. The rest of this post is the result of that quick-and-dirty reflection. Let me state right away that my list isn't meant to be exhausti­ve and that I won't mention many of the collaborations in which I have been lucky to be involved and that I have played a crucial role in shaping my academic development.  </p><p><b>Reading papers.</b> One of my long-term research collaborations arose from reading a paper written by a colleague. His paper prompted my companion and me to ask ourselves whether we could prove a similar result to the one our colleague had shown in a different setting. We succeeded and sent him our paper. Subsequently, we invited him to visit us in Aalborg. That visit marked the start of a collaboration and friendship that has lasted for over 20 years. <br/><br/><b>Approaching a colleague via email for help in solving a problem.</b> At some point, my companion and I were thinking about a research problem that had frustrated us for a while. I remembered reading a number of papers by a colleague on related topics, so I wrote to him, describing the problem, our attempts at solving it and where we had hit a brick wall. I asked him whether he would be interested in working with us on solving it. He did and that was one of the lucky breaks I have had in my research career. Once more, that collaboration offer via email led to mutual visits, other joint papers and, IMHO even more importantly, a long-term friendship that extended beyond work. <br/> </p><p><b>Available funding and building on one's mistakes.</b> One day in 2009, an email in my mailbox alerted me to the availability of substantial funding for research collabo­ration between universities in country X and those locat­ed in Norway, Iceland and Lichtenstein. This opportunity was enticing, as I had never visited country X, so I asked myself: "Is there anyone there we might conceivably work with?'' Mulling over that question, I recalled that a colleague from country X had spotted an imprecision in a paper I had coauthored. </p><p>I wrote to him, we applied for that funding jointly and got it. That successful grant application provided the funds for many research visits involving several people in our research groups. Those visits resulted in joint papers, another successful grant application and a number of friendships. </p><p><b>Coffee breaks at conferences.</b> I have at least two exhibits under this heading. The first belongs to a previous geologic­al era (1991). I was attend­ing a conference at CMU and asked a colleague what he was working on. He told me<br/>about a problem he was tackling, which I knew was also on the radar of a fellow researcher and on which I had started working independently. Eventually, after some email exchanges, that chat over coffee turned into a three-way collaboration that, thanks to my coauthors, produced one of my best papers. <br/><br/>Fast forward to 2017 and I'm in Rome to deliver an invited talk at a small conference. During the coffee break follow­ing my presentation, I was approached by a young research­er, with whom I had a number of pleasant conversations during the conference. Some time later, she sent me a draft paper dealing with a topic related to the content of my invited talk. I invited her to visit our research group in Reykjavik and to join the team working on a research project for which we had funding at the time. Those coffee-break conversations led to a collaboration and friendship that I hope will last for a long time. Meeting that colleague has been another of my lucky breaks. <br/> </p><p><b>Reading groups.</b> Last, but by no means least, let me mention that my first research collaboration that did not involve my thesis supervisors arose when I read Gordon Plotkin's famous "<a href="http://homepages.inf.ed.ac.uk/gdp/publications/Domains_a4.ps">Pisa Notes (On Domain Theory)</a>" with a fellow PhD student. Reading that work led to our first joint paper in 1991 and a companionship that has lasted to this day. I heard <a href="https://www.youtube.com/watch?v=KYfmXpLCiy4&amp;list=PLEyo0HIOhDCSR8os82H_2p5M0dE70K6KL&amp;index=2" target="_blank">Orna Kupferman</a> give the following, tongue-in-cheek advice to young researchers: "Write papers with your twin-sister!" Mine might be: "Write papers with your companion in life!" </p><p>Let me conclude by saying that serendipity and an actual friendship that extends beyond the confines of scientific work were the key aspects in my most pleasant and enduring collaborations. I apologise to the colleagues from whom I have learnt much over the years (former students and postdocs, as well as others) who were the prime movers in research collaborations I did not mention in this post. </p><p> I guess that this note provides much more information than my colleague was intending to receive, but I thought I should put it out for the benefit of the young researchers at Reykjavik University and at the Gran Sasso Science Institute, and of any reader I might have. </p><p>How did your research collaborations arise? If you have anything to add to what I wrote above, and I am sure you do, add your contributions as comments to this post. <br/><br/><br/></p></div>
    </content>
    <updated>2021-02-08T17:42:00Z</updated>
    <published>2021-02-08T17:42:00Z</published>
    <author>
      <name>Luca Aceto</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/01092671728833265127</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-27705661</id>
      <author>
        <name>Luca Aceto</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/01092671728833265127</uri>
      </author>
      <link href="http://processalgebra.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/27705661/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://processalgebra.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/27705661/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Papers I find interesting---mostly, but not solely, in Process Algebra---, and some fun stuff in Mathematics and Computer Science at large and on general issues related to research, teaching and academic life.</subtitle>
      <title>Process Algebra Diary</title>
      <updated>2021-02-13T21:31:20Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=21161</id>
    <link href="https://gilkalai.wordpress.com/2021/02/08/to-cheer-you-up-in-difficult-times-20-ben-green-presents-super-polynomial-lower-bounds-for-off-diagonal-van-der-waerden-numbers-w3k/" rel="alternate" type="text/html"/>
    <title>To cheer you up in difficult times 20: Ben Green presents super-polynomial lower bounds for off-diagonal van der Waerden numbers W(3,k)</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">What will be the next polymath project? click here for our post about it.  New lower bounds for van der Waerden numbers by Ben Green Abstract: We show that there is a red-blue colouring of [N] with no blue 3-term … <a href="https://gilkalai.wordpress.com/2021/02/08/to-cheer-you-up-in-difficult-times-20-ben-green-presents-super-polynomial-lower-bounds-for-off-diagonal-van-der-waerden-numbers-w3k/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://gilkalai.wordpress.com/2021/01/29/possible-future-polymath-projects-2009-2021/">What will be the next polymath project? click here for our post about it. </a></p>
<h2 class="title mathjax"><a href="https://arxiv.org/abs/2102.01543">New lower bounds for van der Waerden numbers</a> by Ben Green</h2>
<p><span style="color: #0000ff;"><strong>Abstract:</strong> We show that there is a red-blue colouring of <em>[N]</em> with no blue 3-term arithmetic progression and no red arithmetic progression of length <img alt="e^{C(\log N)^{3/4}(\log \log N)^{1/4}}." class="latex" src="https://s0.wp.com/latex.php?latex=e%5E%7BC%28%5Clog+N%29%5E%7B3%2F4%7D%28%5Clog+%5Clog+N%29%5E%7B1%2F4%7D%7D.&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="e^{C(\log N)^{3/4}(\log \log N)^{1/4}}."/> Consequently, the two-colour van der Waerden number w(3,k) is bounded below by <img alt="k^{b(k)}" class="latex" src="https://s0.wp.com/latex.php?latex=k%5E%7Bb%28k%29%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k^{b(k)}"/>, where <img alt="b(k)=c(\frac{\log k}{\log \log k})^{1/3}" class="latex" src="https://s0.wp.com/latex.php?latex=b%28k%29%3Dc%28%5Cfrac%7B%5Clog+k%7D%7B%5Clog+%5Clog+k%7D%29%5E%7B1%2F3%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="b(k)=c(\frac{\log k}{\log \log k})^{1/3}"/>. Previously it had been speculated, supported by data, that <img alt="w(3,k)=O(k^2)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29%3DO%28k%5E2%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k)=O(k^2)"/>.</span></p>
<p><a href="https://gilkalai.files.wordpress.com/2021/02/gsm.png"><img alt="" class="alignnone size-full wp-image-21182" height="180" src="https://gilkalai.files.wordpress.com/2021/02/gsm.png?w=640&amp;h=180" width="640"/></a></p>
<p><span style="color: #ff0000;">The left side of the picture shows the world record holders for W(3,k). On the left Ben Green (LB) and in the centre Tomasz Schoen (UB). The pictures on the right shows protective mittens for people who make bold mathematical conjectures (<a href="https://gilkalai.wordpress.com/2021/01/19/what-if-they-are-all-wrong/">see Igor Pak’s post</a>) </span></p>
<p>The two-colour van der Waerden number <img alt="w(m,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%28m%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(m,k)"/> is the smallest  N such that however [N] = {1, . . . , N} is coloured blue and red, there is either a blue m-term arithmetic progression or a red k-term arithmetic progression. The celebrated theorem of van der Waerden implies that <img alt="w(m, k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%28m%2C+k%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(m, k)"/> is finite.</p>
<p>The van der Waerden number <img alt="w(m,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%28m%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(m,k)"/> is analogous to the Ramsey number <img alt="R(m,k)" class="latex" src="https://s0.wp.com/latex.php?latex=R%28m%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="R(m,k)"/>. Finding the behaviors of <img alt="R(m,k)" class="latex" src="https://s0.wp.com/latex.php?latex=R%28m%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="R(m,k)"/> is an important problem in Ramsey theory and much attention is given to <img alt="R(k,k)" class="latex" src="https://s0.wp.com/latex.php?latex=R%28k%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="R(k,k)"/> and of <img alt="R(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=R%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="R(3,k)"/>. Similarly, understanding the values of <img alt="W(m,k)" class="latex" src="https://s0.wp.com/latex.php?latex=W%28m%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="W(m,k)"/>, and especially of <img alt="W(k,k)" class="latex" src="https://s0.wp.com/latex.php?latex=W%28k%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="W(k,k)"/> and <img alt="W(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=W%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="W(3,k)"/>  are also  central problems in Ramsey theory. A big difference between van der Waerden number and Ramsey numbers is that there are density theorems for the existence of <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k"/>-terms arithmetic progressions. (Roth’s theorem for <img alt="k=3" class="latex" src="https://s0.wp.com/latex.php?latex=k%3D3&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k=3"/> and Szemeredi’s theorem for general <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k"/>.) There are several important methods to derive those density theorems (including Fourier methods, ergodic methods, and Szemeredi-type regularity) and these methods, as far as I know, do not apply for ordinary Ramsey numbers. (But correct me if I am wrong here, and if I am right and you have some insights as to why ergodic methods or Fourier methods do not apply to “ordinary” Ramsey, please share.)</p>
<p>Green’s paper  studies the values of <img alt="w(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k)"/>. The best known upper bound is of Tomasz Schoen, <img alt="w(3, k)&lt;e^{k^{1-c}}" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2C+k%29%3Ce%5E%7Bk%5E%7B1-c%7D%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3, k)&lt;e^{k^{1-c}}"/> for some constant <img alt="c &gt; 0." class="latex" src="https://s0.wp.com/latex.php?latex=c+%3E+0.&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="c &gt; 0."/> The best known lower bound until the new paper, was by Li and Shu: <img alt="w(3, k) \gg (k/ log k)^2" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2C+k%29+%5Cgg+%28k%2F+log+k%29%5E2&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3, k) \gg (k/ log k)^2"/>. (This result, as the earlier bound by Robertson, used a probabilistic argument and relied on Lovasz’s local lemma.)</p>
<p>Several people conjectured, also based on empirical data, that <img alt="w(3,k) = O(k^2)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29+%3D+O%28k%5E2%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k) = O(k^2)"/> but now Green proved a super-polynomial lower bound! This is amazing! Congratulations, Ben!</p>
<p>It is largely conjectured that the Behrend-type bounds give the correct quantitative behaviour for Roth’s theorem (and Szemeredi theorem). In rough terms what we see from Green’s example is that this might be true also for van der Waerden numbers.</p>
<p>The proof is rather involved and long, so, naturally, there is  little I can say about it, which only slightly exceeds the little I actually know about it. The overview and other fragments of the paper I looked at are very illuminating. Here are a few things that caught my eyes.</p>
<p>1) A word about Tomasz Schoen’s upper bound and important paper: <a href="https://arxiv.org/abs/2006.02877">A subexponential upper bound for van der Waerden numbers W(3,k).</a>  Among other things Schoen’s proof relies on a lemma developed by Schoen for improved Roth bound. This relies on a structure theory of Bateman and Katz.  The paper gives a nice description of the state of the art regarding the diagonal values <img alt="w(k,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%28k%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(k,k)"/>. (Schoen’s upper bound on <img alt="w(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k)"/> follows also from the <a href="https://gilkalai.wordpress.com/2020/07/08/to-cheer-you-up-in-difficult-times-7-bloom-and-sisask-just-broke-the-logarithm-barrier-for-roths-theorem/">more recent bound for Roth’s theorem</a> by Bloom and Sisask.)</p>
<p>2) Among the people that speculated that <img alt="w(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k)"/> behaves like <img alt="k^2" class="latex" src="https://s0.wp.com/latex.php?latex=k%5E2&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k^2"/> is Ben Green himself. This is recorded in reference [9] of the paper. However, Green’s first reaction to this possibility was that it must be false. But he realized that some ideas for showing that it is false are themselves false.</p>
<p>3) Reference [9] in the paper is: <strong>B. J. Green, 100 open problems, manuscript, available on request</strong>. If you are curious about the list, request it!</p>
<p>4) New lower bounds in Ramsey theory are nor frequent. Thirteen years ago I described <a href="https://gilkalai.wordpress.com/2008/07/10/pushing-behrend-around/">Elkin’s improvement</a> to Behrend’s bound and a few days ago I mentioned <a href="https://gilkalai.wordpress.com/2021/02/03/to-cheer-you-up-in-difficult-times-19-nati-linial-and-adi-shraibman-construct-larger-corner-free-sets-from-better-numbers-on-the-forehead-protocols/">Linial and Shraibman’s new lower bounds</a> for the corner problem.  Green’s study started by looking at complements of 3-AP free sets. An example by Green and Julia Wolf (that followed Elkin’s result) turned out to be important for reaching some parts of Green’s strategy.</p>
<p>5) In some sense, something about the <img alt="k^2" class="latex" src="https://s0.wp.com/latex.php?latex=k%5E2&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k^2"/> prediction is not entirely lost. The construction gives a sort of a multi-scale behaviour where in the <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="r"/>th scale the example’s cardinality is <img alt="k^r" class="latex" src="https://s0.wp.com/latex.php?latex=k%5Er&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k^r"/>.  (So all the empirical data comes from the <img alt="r=2" class="latex" src="https://s0.wp.com/latex.php?latex=r%3D2&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="r=2"/> regime.) Ben Green boldly suggests that the true values of <img alt="w(3,k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2Ck%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3,k)"/> might exhibit such multi-scale behaviour. He conjectures that the true value of <img alt="w(3, k)" class="latex" src="https://s0.wp.com/latex.php?latex=w%283%2C+k%29&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="w(3, k)"/> is quasi-polynomial, namely it lies somewhere in between the bound given by his construction and  something like <img alt="k^{c\log k}" class="latex" src="https://s0.wp.com/latex.php?latex=k%5E%7Bc%5Clog+k%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0&amp;c=20201002" title="k^{c\log k}"/> (which is Behrend-bound behaviour on the nose) .</p>
<p>6) Until Ben’s list of 100 problems becomes available to you, you may find interest in Francis Su’s <a href="https://www.francissu.com/post/100-questions-about-mathematics">100 questions about mathematics for discussion and reflection</a>.</p>
<p>7) In connection with Linial and Shraibman’s new lower bounds for the corner problem, let me mention that the best upper bound is by I.D. Shkredov. The paper is:  On a two-dimensional analog of Szemeredi’s Theorem in Abelian groups, Izvestiya of Russian Academy of Sciences, 73 (2009), 455–505.</p></div>
    </content>
    <updated>2021-02-08T17:00:33Z</updated>
    <published>2021-02-08T17:00:33Z</published>
    <category term="Combinatorics"/>
    <category term="Number theory"/>
    <category term="Ben Green"/>
    <category term="Tomasz Schoen"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2021-02-17T04:37:40Z</updated>
    </source>
  </entry>
</feed>
