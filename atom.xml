<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2021-10-20T17:39:18Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4572</id>
    <link href="https://lucatrevisan.wordpress.com/2021/10/20/online-optimization-post-6-the-impagliazzo-hard-core-set-lemma/" rel="alternate" type="text/html"/>
    <title>Online Optimization Post 6: The Impagliazzo Hard-Core Set Lemma</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">(This is the sixth in a series of posts on online optimization techniques and their “applications” to complexity theory, combinatorics and pseudorandomness. The plan for this series of posts is to alternate one post explaining a result from the theory … <a href="https://lucatrevisan.wordpress.com/2021/10/20/online-optimization-post-6-the-impagliazzo-hard-core-set-lemma/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>(This is the sixth in a series of posts on online optimization techniques and their “applications” to complexity theory, combinatorics and pseudorandomness. The plan for this series of posts is to alternate one post explaining a result from the theory of online convex optimization and one post explaining an “application.” The first two posts were about the technique of multiplicative weight updates and its application to “derandomizing” probabilistic arguments based on combining a Chernoff bound and a union bound. The third and fourth post were about the Follow-the-Regularized-Leader framework, and how it unifies multiplicative weights and gradient descent, and a “gradient descent view” of the Frieze-Kannan Weak Regularity Lemma. The fifth post was about the constrained version of the Follow-the-Regularized-Leader framework, and today we shall see how to apply that to a proof of the Impagliazzo Hard-Core Lemma.)</em></p>
<p><span id="more-4572"/></p>
<p><b>1. The Impagliazzo Hard-Core Lemma </b></p>
<p>The Impagliazzo Hard-Core Lemma is a striking result in the theory of average-case complexity. Roughly speaking, it says that if <img alt="{g: \{ 0,1 \}^n \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%3A+%5C%7B+0%2C1+%5C%7D%5En+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is a function that is “weakly” hard on average for a class <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of “efficiently computable” functions <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, that is, if, for some <img alt="{\delta&gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, we have that</p>
<p align="center"><img alt="\displaystyle \forall f \in {\cal F}: \ \ \Pr_{x\sim \{ 0,1\}^n} [f(x) = g(x) ] \leq 1 -\delta " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+f+%5Cin+%7B%5Ccal+F%7D%3A+%5C+%5C+%5CPr_%7Bx%5Csim+%5C%7B+0%2C1%5C%7D%5En%7D+%5Bf%28x%29+%3D+g%28x%29+%5D+%5Cleq+1+-%5Cdelta+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>then there is a subset <img alt="{H\subseteq \{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%5Csubseteq+%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of cardinality <img alt="{\geq 2\delta 2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+2%5Cdelta+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is “strongly” hard-on-average on <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, meaning that</p>
<p align="center"><img alt="\displaystyle \forall f \in {\cal F}: \ \ \Pr_{x\sim H} [f(x) = g(x) ] \leq \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+f+%5Cin+%7B%5Ccal+F%7D%3A+%5C+%5C+%5CPr_%7Bx%5Csim+H%7D+%5Bf%28x%29+%3D+g%28x%29+%5D+%5Cleq+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>for a small <img alt="{\epsilon &gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Thus, the reason why functions from <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> make a mistake in predicting <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> at least a <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of the times is that there is a “hard-core” set <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of inputs such that every function from <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> makes a mistake about 1/2 of the times for the <img alt="{2\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of inputs coming from <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>The result is actually not literally true as stated above, and it is useful to understand a counterexample, in order to motivate the correct statement. Suppose that <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> contains just <img alt="{1/\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions, and that each function <img alt="{f\in \cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%5Cin+%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> differs from <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in exactly a <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of inputs from <img alt="{\{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and that the set of mistakes are <em>disjoint</em>. Thus, for every set <img alt="{H\subseteq \{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%5Csubseteq+%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, no matter its size, there is a function <img alt="{f\in \cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%5Cin+%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> that agrees with <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> on at least a <img alt="{1-\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1-%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of inputs from <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. The reason is that the sets of inputs on which the functions of <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> differ from <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> form a partition of <img alt="{\{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and so their intersections with <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> form a partition of <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. By an averaging argument, one of those intersections must then contain at most <img alt="{\delta |H|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%7CH%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> elements of <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>In the above example, however, if we choose any three distinct functions <img alt="{f_1,f_2,f_3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2Cf_2%2Cf_3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> from <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, we have</p>
<p align="center"><img alt="\displaystyle \forall x\in \{ 0,1 \}^n: \ \ \ g(x) = {\rm majority} (f_1(x), f_2(x),f_3(x)) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+x%5Cin+%5C%7B+0%2C1+%5C%7D%5En%3A+%5C+%5C+%5C+g%28x%29+%3D+%7B%5Crm+majority%7D+%28f_1%28x%29%2C+f_2%28x%29%2Cf_3%28x%29%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>So, although <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is weakly hard on average with respect to <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, we have that <img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is not even worst-case hard for a slight extension of <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in which we allow functions obtained by simple compositions of a small number of functions of <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<blockquote><p><b>Theorem 1 (Impagliazzo Hard-Core Lemma)</b> <em> Let <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be a collection of functions <img alt="{f: \{ 0,1 \}^n \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%3A+%5C%7B+0%2C1+%5C%7D%5En+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, let <img alt="{g: \{ 0,1 \}^n \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%3A+%5C%7B+0%2C1+%5C%7D%5En+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> a function, and let <img alt="{\epsilon&gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{\delta &gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be positive reals. Then at least one of the following conditions is true: </em></p>
<ul>
<li>(<img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is not weakly hard-on-average over <img alt="{\{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> with respect to a slight extension of <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>) There is a <img alt="{k= O(\epsilon^{-2} \log \delta^{-1} )}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%3D+O%28%5Cepsilon%5E%7B-2%7D+%5Clog+%5Cdelta%5E%7B-1%7D+%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, an integer <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions <img alt="{f_1,\ldots,f_k \in \cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2C%5Cldots%2Cf_k+%5Cin+%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, such that
<p align="center"><img alt="\displaystyle h(x) := I \{ f_1(x) + \ldots + f_k(x)\geq b \} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+h%28x%29+%3A%3D+I+%5C%7B+f_1%28x%29+%2B+%5Cldots+%2B+f_k%28x%29%5Cgeq+b+%5C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>satisfies</p>
<p align="center"><img alt="\displaystyle \Pr_{x\in \{ 0,1 \}^n} [ g(x) = h(x) ] \geq 1-\delta " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Cin+%5C%7B+0%2C1+%5C%7D%5En%7D+%5B+g%28x%29+%3D+h%28x%29+%5D+%5Cgeq+1-%5Cdelta+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</li>
<li>(<img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is strongly hard-on-average over a set <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of density <img alt="{2\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>) There is a set <img alt="{H\subseteq \{ 0,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%5Csubseteq+%5C%7B+0%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that <img alt="{H \geq 2\delta \cdot 2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH+%5Cgeq+2%5Cdelta+%5Ccdot+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and
<p align="center"><img alt="\displaystyle \forall f\in {\cal F}: \ \ \Pr_{x\in H} [ g(x) = f(x) ] \leq \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+f%5Cin+%7B%5Ccal+F%7D%3A+%5C+%5C+%5CPr_%7Bx%5Cin+H%7D+%5B+g%28x%29+%3D+f%28x%29+%5D+%5Cleq+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</li>
</ul>
</blockquote>
<p>Where <img alt="{I \{ {\rm boolean\ expression} \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BI+%5C%7B+%7B%5Crm+boolean%5C+expression%7D+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is equal to <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> or <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> depending on whether the boolean expression is true or false (the letter “<img alt="{I}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BI%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>” stands for “indicator” function of the truth of the expression).</p>
<p><b>2. Proving the Lemma </b></p>
<p>Impagliazzo’s proof had <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> polynomial in both <img alt="{1/\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{1/\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and an alternative proof discovered by Nisan has a stronger bound on <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the order of <img alt="{\epsilon^{-2} \log \epsilon^{-1} \delta^{-1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%5E%7B-2%7D+%5Clog+%5Cepsilon%5E%7B-1%7D+%5Cdelta%5E%7B-1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. The proofs of Impagliazzo and Nisan did not immediately give a set of size <img alt="{2\delta2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5Cdelta2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> (the set had size <img alt="{\delta 2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>), although this could be achieved by iterating their argument. An idea of Holenstein allows to prove the above statement in a more direct way.</p>
<p>Today we will see how to obtain the Impagliazzo Hard-Core Lemma from online optimization, as done by Barak, Hardt and Kale. Their proof achieves all the parameters claimed above, once combined with Holenstein’s ideas.</p>
<p><!--more--></p>
<p>We say that a distribution <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> (here “<img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>” stands for probability <em>measure</em>; we use this letter since we have already used <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> last time to denote the Bregman divergence) has min-entropy at least <img alt="{K}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> if, for every <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, <img alt="{M(x) \leq 2^{-K}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%28x%29+%5Cleq+2%5E%7B-K%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. In other words, the min-entropy of a distribution <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> over a sample space <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is defined as</p>
<p align="center"><img alt="\displaystyle H_{\infty} (M) := \min_{x\in X} \log_2 \frac 1 {M(x)} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+H_%7B%5Cinfty%7D+%28M%29+%3A%3D+%5Cmin_%7Bx%5Cin+X%7D+%5Clog_2+%5Cfrac+1+%7BM%28x%29%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>The uniform distribution over a set <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> has min-entropy <img alt="{\log_2 |H|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+%7CH%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and all distributions of min-entropy <img alt="{K}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> can be realized as a convex combination of distributions that are each uniform over a set of size <img alt="{\geq K}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+K%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, thus uniform distributions over large sets and large-min-entropy distributions are closely-related concepts. We will prove the following version of the hard-core lemma:</p>
<blockquote><p><b>Theorem 2 (Impagliazzo Hard-Core Lemma — Min-Entropy Version)</b> <em> Let <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be a finite set, <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be a collection of functions <img alt="{f: X \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%3A+X+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, let <img alt="{g: X \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%3A+X+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> a function, and let <img alt="{\epsilon&gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{\delta &gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be positive reals. Then at least one of the following conditions is true: </em></p>
<ul>
<li>(<img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is not weakly hard-on-average over <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> with respect to <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>) There is a <img alt="{k= O(\epsilon^{-2} \log \delta^{-1} )}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%3D+O%28%5Cepsilon%5E%7B-2%7D+%5Clog+%5Cdelta%5E%7B-1%7D+%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, an integer <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions <img alt="{f_1,\ldots,f_k \in \cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2C%5Cldots%2Cf_k+%5Cin+%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, such that
<p align="center"><img alt="\displaystyle h(x) := I \{ f_1(x) + \ldots + f_k(x)\geq b \} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+h%28x%29+%3A%3D+I+%5C%7B+f_1%28x%29+%2B+%5Cldots+%2B+f_k%28x%29%5Cgeq+b+%5C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>satisfies</p>
<p align="center"><img alt="\displaystyle \Pr_{x\in X} [ g(x) = h(x) ] \geq 1-\delta " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Cin+X%7D+%5B+g%28x%29+%3D+h%28x%29+%5D+%5Cgeq+1-%5Cdelta+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</li>
<li>(<img alt="{g}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is strongly hard-on-average on a distribution of min-entropy <img alt="{\geq \log_2 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog_2+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>) There is a distribution <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy <img alt="{\geq \log_2 2\delta|X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog_2+2%5Cdelta%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that
<p align="center"><img alt="\displaystyle \forall f\in {\cal F}: \ \ \Pr_{x\sim H} [ g(x) = f(x) ] \leq \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+f%5Cin+%7B%5Ccal+F%7D%3A+%5C+%5C+%5CPr_%7Bx%5Csim+H%7D+%5B+g%28x%29+%3D+f%28x%29+%5D+%5Cleq+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</li>
</ul>
</blockquote>
<p>Under minimal assumptions on <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> (that it contains <img alt="{&lt;&lt; 2^{|X|}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%3C+2%5E%7B%7CX%7C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions), the min-entropy version implies the set version, and the min-entropy version can be used as-is to derive most of the interesting consequences of the set version.</p>
<p>Let us restate it one more time.</p>
<blockquote><p><b>Theorem 3 (Impagliazzo Hard-Core Lemma — Min-Entropy Version)</b> <em> Let <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be a finite set, <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be a collection of functions <img alt="{f: X \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%3A+X+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, let <img alt="{g: X \rightarrow \{ 0,1 \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%3A+X+%5Crightarrow+%5C%7B+0%2C1+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> a function, and let <img alt="{\epsilon&gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{\delta &gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be positive reals. Suppose that for every distribution <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy <img alt="{\geq \log_2 2\delta|X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog_2+2%5Cdelta%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> we have </em></p>
<p align="center"><img alt="\displaystyle \forall f\in {\cal F}: \ \ \Pr_{x\sim H} [ g(x) = f(x) ] &gt; \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+f%5Cin+%7B%5Ccal+F%7D%3A+%5C+%5C+%5CPr_%7Bx%5Csim+H%7D+%5B+g%28x%29+%3D+f%28x%29+%5D+%3E+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Then there is a <img alt="{k= O(\epsilon^{-2} \log \delta^{-1} )}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%3D+O%28%5Cepsilon%5E%7B-2%7D+%5Clog+%5Cdelta%5E%7B-1%7D+%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, an integer <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions <img alt="{f_1,\ldots,f_k \in \cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2C%5Cldots%2Cf_k+%5Cin+%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, such that</p>
<p align="center"><img alt="\displaystyle h(x) := I \{ f_1(x) + \ldots + f_k(x)\geq b \} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+h%28x%29+%3A%3D+I+%5C%7B+f_1%28x%29+%2B+%5Cldots+%2B+f_k%28x%29%5Cgeq+b+%5C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>satisfies</p>
<p align="center"><img alt="\displaystyle \Pr_{x\in X} [ g(x) = h(x) ] \geq 1-\delta " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Cin+X%7D+%5B+g%28x%29+%3D+h%28x%29+%5D+%5Cgeq+1-%5Cdelta+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</blockquote>
<p>As in previous posts, we are going to think about a game between a “builder” that works toward the construction of <img alt="{h}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and an “inspector” that looks for defects in the construction. More specifically, at every round <img alt="{i = 1,\ldots,T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3D+1%2C%5Cldots%2CT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, the inspector is going to pick a distribution <img alt="{M_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy <img alt="{\geq \log_2 2\delta|X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog_2+2%5Cdelta%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and the builder is going to pick a function <img alt="{f_i\in {\cal F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_i%5Cin+%7B%5Ccal+F%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. The loss function, that the inspector wants to minimize, is</p>
<p align="center"><img alt="\displaystyle L_i (M) := \mathop{\mathbb P}_{x\sim M} [f_i (x) = g(x)] " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L_i+%28M%29+%3A%3D+%5Cmathop%7B%5Cmathbb+P%7D_%7Bx%5Csim+M%7D+%5Bf_i+%28x%29+%3D+g%28x%29%5D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>The inspector runs the agile online mirror descent algorithm with the constraint of picking distributions of the required min-entropy, and using the entropy regularizer; the builder always chooses a function <img alt="{f_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that that</p>
<p align="center"><img alt="\displaystyle L_i (M) := \mathop{\mathbb P}_{x\sim M} [f_i (x) = g(x)] &gt; \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L_i+%28M%29+%3A%3D+%5Cmathop%7B%5Cmathbb+P%7D_%7Bx%5Csim+M%7D+%5Bf_i+%28x%29+%3D+g%28x%29%5D+%3E+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>which is always a possible choice given the assumptions of our theorem.</p>
<p>Just by plugging the above setting into the analysis from the previous post, we get that if we play this online game for <img alt="{T = O(\epsilon^{-2} \log \delta^{-1})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT+%3D+O%28%5Cepsilon%5E%7B-2%7D+%5Clog+%5Cdelta%5E%7B-1%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> steps, the builder picks functions <img alt="{f_1,\ldots,f_T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2C%5Cldots%2Cf_T%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that, <em>for every distribution</em> <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy <img alt="{\geq \log 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, we have</p>
<p><a name="game"/></p>
<p><a name="game"/></p>
<p><a name="game"/></p>
<p><a name="game"/></p>
<p align="center"><img alt="\displaystyle \Pr_{x\sim H, \ i \sim \{ 1,\ldots,T \} } [ f_i(x) = g(x) ] &gt; \frac 12 \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Csim+H%2C+%5C+i+%5Csim+%5C%7B+1%2C%5Cldots%2CT+%5C%7D+%7D+%5B+f_i%28x%29+%3D+g%28x%29+%5D+%3E+%5Cfrac+12+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p><a name="game"/><a name="game"/><a name="game"/><a name="game"/></p>
<p>We will prove that <a href="https://lucatrevisan.wordpress.com/feed/#game">(1)</a> holds in the next section, but we emphasize again that it is just a matter of mechanically using the analysis from the previous post. Impagliazzo’s proof relies, basically, on playing the game using lazy mirror descent with <img alt="{\ell_2^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_2%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> regularization, and he obtains a guarantee like the one above after <img alt="{T=O(\epsilon^{-2} \delta^{-1})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%3DO%28%5Cepsilon%5E%7B-2%7D+%5Cdelta%5E%7B-1%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> steps.</p>
<p>What do we do with <a href="https://lucatrevisan.wordpress.com/feed/#game">(1)</a>? Impagliazzo’s original reasoning was to define</p>
<p align="center"><img alt="\displaystyle h(x) := majority (f_1(x),\ldots,f_T(x)) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+h%28x%29+%3A%3D+majority+%28f_1%28x%29%2C%5Cldots%2Cf_T%28x%29%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and to consider the set <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of “bad” inputs <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that <img alt="{h(x) \neq g(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%28x%29+%5Cneq+g%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. We have</p>
<p align="center"><img alt="\displaystyle \forall x \in B \ \ \Pr_{i \sim \{ 1,\ldots,T \} } [ f_i(x) = g(x) ] \leq \frac 12 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+x+%5Cin+B+%5C+%5C+%5CPr_%7Bi+%5Csim+%5C%7B+1%2C%5Cldots%2CT+%5C%7D+%7D+%5B+f_i%28x%29+%3D+g%28x%29+%5D+%5Cleq+%5Cfrac+12+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and so</p>
<p align="center"><img alt="\displaystyle \Pr_{x\sim B, \ i \sim \{ 1,\ldots,T \} } [ f_i(x) = g(x) ] \leq \frac 12 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Csim+B%2C+%5C+i+%5Csim+%5C%7B+1%2C%5Cldots%2CT+%5C%7D+%7D+%5B+f_i%28x%29+%3D+g%28x%29+%5D+%5Cleq+%5Cfrac+12+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>The min-entropy of the uniform distribution over <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is <img alt="{\log_2 |B|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+%7CB%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and this needs to be less than <img alt="{\log_2 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, so we conclude that <img alt="{h(x) \neq g(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%28x%29+%5Cneq+g%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> happens for at most a <img alt="{2\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of elements of <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>This is qualitatively what we promised, but it is off by a factor of 2 from what we stated above. The factor of 2 comes from a subsequent idea of Holenstein. In Holenstein’s analysis, we sort elements of <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> according to</p>
<p align="center"><img alt="\displaystyle \Pr_{i \sim \{ 1,\ldots, T \}} [ f_i(x) = g_i (x) ] " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bi+%5Csim+%5C%7B+1%2C%5Cldots%2C+T+%5C%7D%7D+%5B+f_i%28x%29+%3D+g_i+%28x%29+%5D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and he lets <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> be the set of <img alt="{2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> elements of <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for which the above quantity is smallest, and he shows that if we properly pick an integer <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and define</p>
<p align="center"><img alt="\displaystyle h(x) := I\{ f_1(x) + \cdots + f_T(x) \geq b \} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+h%28x%29+%3A%3D+I%5C%7B+f_1%28x%29+%2B+%5Ccdots+%2B+f_T%28x%29+%5Cgeq+b+%5C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>then <img alt="{h(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> will be equal to <img alt="{g(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bg%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for all <img alt="{x\not\in B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Cnot%5Cin+B%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and also for at least half the <img alt="{x\in B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Cin+B%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, meaning that <img alt="{h(x) = g(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%28x%29+%3D+g%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for at least a <img alt="{1-\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1-%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of the input. Since this is a bit outside the scope of this series of posts, we will not give an exposition of Holenstein’s argument.</p>
<p><b>3. Analysis of the Online Game </b></p>
<p>It remains to show that we can achieve <a href="https://lucatrevisan.wordpress.com/feed/#game">(1)</a> with <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the order of <img alt="{\frac 1 {\epsilon^2} \log \frac 1 {\delta}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+1+%7B%5Cepsilon%5E2%7D+%5Clog+%5Cfrac+1+%7B%5Cdelta%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. As we said, we play a game in which, at every step <img alt="{i=1,\ldots,T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%3D1%2C%5Cldots%2CT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<ul>
<li>The “inspector” player picks a distribution <img alt="{M_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy at least <img alt="{\log_2 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, that is, it picks a number <img alt="{\frac 1 {2\delta |X|} \geq M_i(x)\geq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+1+%7B2%5Cdelta+%7CX%7C%7D+%5Cgeq+M_i%28x%29%5Cgeq+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for each <img alt="{x\in X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Cin+X%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that <img alt="{\sum_x M_i(x) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csum_x+M_i%28x%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</li>
<li>The “builder” player picks a function <img alt="{f_i \in {\cal F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_i+%5Cin+%7B%5Ccal+F%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, whose existence is guaranteed by the assumption of the theorem, such that
<p align="center"><img alt="\displaystyle \Pr_{x\sim M_i} [f_i(x) = g(x) ] \geq \frac 12 +\epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Csim+M_i%7D+%5Bf_i%28x%29+%3D+g%28x%29+%5D+%5Cgeq+%5Cfrac+12+%2B%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and defines the loss function</p>
<p align="center"><img alt="\displaystyle L_i(M) := \Pr_{x\sim M_i} [f_i(x) = g(x) ] = \sum_{x\in X} M(x) \cdot I\{ f_i(x) = g(x) \} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L_i%28M%29+%3A%3D+%5CPr_%7Bx%5Csim+M_i%7D+%5Bf_i%28x%29+%3D+g%28x%29+%5D+%3D+%5Csum_%7Bx%5Cin+X%7D+M%28x%29+%5Ccdot+I%5C%7B+f_i%28x%29+%3D+g%28x%29+%5C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</li>
<li>The “inspector” is charged the loss <img alt="{L_i(M_i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_i%28M_i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</li>
</ul>
<p>We analyze what happens if the inspector plays the strategy defined by agile mirror descent with negative entropy regularizer. Namely, we define the regularizer</p>
<p align="center"><img alt="\displaystyle R(M) = c \sum_x M(x) \log M(x) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+R%28M%29+%3D+c+%5Csum_x+M%28x%29+%5Clog+M%28x%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>for a choice of <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> that we will fix later. The corresponding Bregman divergence is</p>
<p align="center"><img alt="\displaystyle D(M,\hat M) = c KL(M,\hat M) = c \cdot \left( \sum_x M(x) \log \frac {M(x)}{\hat M(x)} - \sum_x M(x) + \sum_x \hat M(x) \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+D%28M%2C%5Chat+M%29+%3D+c+KL%28M%2C%5Chat+M%29+%3D+c+%5Ccdot+%5Cleft%28+%5Csum_x+M%28x%29+%5Clog+%5Cfrac+%7BM%28x%29%7D%7B%5Chat+M%28x%29%7D+-+%5Csum_x+M%28x%29+%2B+%5Csum_x+%5Chat+M%28x%29+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and we work over the space <img alt="{\cal K}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+K%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of distributions of min-entropy <img alt="{\geq \log_2 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Clog_2+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>The agile online mirror descent algorithm is</p>
<p align="center"><img alt="\displaystyle M_1 = \arg\min_{M\in {\cal K}} R(M) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+M_1+%3D+%5Carg%5Cmin_%7BM%5Cin+%7B%5Ccal+K%7D%7D+R%28M%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>so that <img alt="{M_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is the uniform distribution, and for <img alt="{i\geq 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%5Cgeq+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p align="center"><img alt="\displaystyle \hat M_{i+1} = \arg\min_{M: X \rightarrow {\mathbb R}} \ \ D(M_i,M) + L_i (M) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Chat+M_%7Bi%2B1%7D+%3D+%5Carg%5Cmin_%7BM%3A+X+%5Crightarrow+%7B%5Cmathbb+R%7D%7D+%5C+%5C+D%28M_i%2CM%29+%2B+L_i+%28M%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p align="center"><img alt="\displaystyle M_{i+1} = \arg\min_{M \in {\cal K}} \ \ D(M, \hat M_{i+1} )" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+M_%7Bi%2B1%7D+%3D+%5Carg%5Cmin_%7BM+%5Cin+%7B%5Ccal+K%7D%7D+%5C+%5C+D%28M%2C+%5Chat+M_%7Bi%2B1%7D+%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Solving the first step of agile online mirror descent, we have</p>
<p align="center"><img alt="\displaystyle \hat M_{i+1} (x) = M_i(x) e^{-\frac 1c I \{ f(x) = g(x) \} } " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Chat+M_%7Bi%2B1%7D+%28x%29+%3D+M_i%28x%29+e%5E%7B-%5Cfrac+1c+I+%5C%7B+f%28x%29+%3D+g%28x%29+%5C%7D+%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Using the analysis from the previous post, for every distribution <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in <img alt="{\cal K}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+K%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and every number <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of steps, we have the regret bound</p>
<p align="center"><img alt="\displaystyle \sum_{i=1}^T L_i(M_i) - L_i(M) \leq D(M,M_1) + \sum_{i=1}^T D(M_i, \hat M_{i+1} ) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Csum_%7Bi%3D1%7D%5ET+L_i%28M_i%29+-+L_i%28M%29+%5Cleq+D%28M%2CM_1%29+%2B+%5Csum_%7Bi%3D1%7D%5ET+D%28M_i%2C+%5Chat+M_%7Bi%2B1%7D+%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and we can bound</p>
<p align="center"><img alt="\displaystyle D(M,M_1) = c \sum_x M(x) \cdot \ln |X| \cdot M(x) \leq c \ln \frac 1 {2\delta} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+D%28M%2CM_1%29+%3D+c+%5Csum_x+M%28x%29+%5Ccdot+%5Cln+%7CX%7C+%5Ccdot+M%28x%29+%5Cleq+c+%5Cln+%5Cfrac+1+%7B2%5Cdelta%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and</p>
<p align="center"><img alt="\displaystyle D(M_i,\hat M_{i+1}) = c\cdot \left( \sum_x M_i(x) \ln \frac{M_i(x)}{\hat M_{i+1} (x) } + \sum_x \hat M_{i+1}(x) - M_i(x) \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+D%28M_i%2C%5Chat+M_%7Bi%2B1%7D%29+%3D+c%5Ccdot+%5Cleft%28+%5Csum_x+M_i%28x%29+%5Cln+%5Cfrac%7BM_i%28x%29%7D%7B%5Chat+M_%7Bi%2B1%7D+%28x%29+%7D+%2B+%5Csum_x+%5Chat+M_%7Bi%2B1%7D%28x%29+-+M_i%28x%29+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p align="center"><img alt="\displaystyle = c \cdot \sum_x M_i(x) \cdot \left( \frac 1c I\{ f(x) = g(x) \} + e^{-\frac 1 cI \{ f(x) = g(x)\}} -1 \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%3D+c+%5Ccdot+%5Csum_x+M_i%28x%29+%5Ccdot+%5Cleft%28+%5Cfrac+1c+I%5C%7B+f%28x%29+%3D+g%28x%29+%5C%7D+%2B+e%5E%7B-%5Cfrac+1+cI+%5C%7B+f%28x%29+%3D+g%28x%29%5C%7D%7D+-1+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p align="center"><img alt="\displaystyle \leq O \left( \frac 1c \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cleq+O+%5Cleft%28+%5Cfrac+1c+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>where, in the last step, we used the fact the quantity in parenthesis is either 0 or <img alt="{1/c + e^{-1/c} - 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2Fc+%2B+e%5E%7B-1%2Fc%7D+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> which is <img alt="{O(1/c^2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%281%2Fc%5E2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and that <img alt="{\sum_x M_i(x) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csum_x+M_i%28x%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> because <img alt="{M_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is a distribution.</p>
<p>Overall, the regret is bounded by</p>
<p align="center"><img alt="\displaystyle \sum_{i=1}^T L_i(M_i) - L_i(M) \leq O \left( c\log \frac 1\delta + \frac Tc \right) \leq O \left( \sqrt{T \log \frac 1\delta}\right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Csum_%7Bi%3D1%7D%5ET+L_i%28M_i%29+-+L_i%28M%29+%5Cleq+O+%5Cleft%28+c%5Clog+%5Cfrac+1%5Cdelta+%2B+%5Cfrac+Tc+%5Cright%29+%5Cleq+O+%5Cleft%28+%5Csqrt%7BT+%5Clog+%5Cfrac+1%5Cdelta%7D%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>where the last inequality comes from an optimized choice of <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>Recall that we choose the functions <img alt="{f_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> so that <img alt="{L_i(M_i) \geq 1/2 + \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_i%28M_i%29+%5Cgeq+1%2F2+%2B+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for every <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, so for every <img alt="{M\in {\cal K}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%5Cin+%7B%5Ccal+K%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p align="center"><img alt="\displaystyle \frac 1T \sum_{i=1}^T L_i (M) \geq \frac 12 + \epsilon - O (\left( \sqrt{\frac 1 T \log \frac 1\delta}\right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cfrac+1T+%5Csum_%7Bi%3D1%7D%5ET+L_i+%28M%29+%5Cgeq+%5Cfrac+12+%2B+%5Cepsilon+-+O+%28%5Cleft%28+%5Csqrt%7B%5Cfrac+1+T+%5Clog+%5Cfrac+1%5Cdelta%7D%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and by choosing <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the order of <img alt="{\frac 1 {\epsilon^2} \log \frac 1 \delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+1+%7B%5Cepsilon%5E2%7D+%5Clog+%5Cfrac+1+%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> we get</p>
<p align="center"><img alt="\displaystyle \forall M \in {\cal K} : \ \ \ \frac 1T \sum_{i=1}^T L_i (M) &gt; \frac 12 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cforall+M+%5Cin+%7B%5Ccal+K%7D+%3A+%5C+%5C+%5C+%5Cfrac+1T+%5Csum_%7Bi%3D1%7D%5ET+L_i+%28M%29+%3E+%5Cfrac+12+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>It remains to observe that</p>
<p align="center"><img alt="\displaystyle \frac 1T \sum_{i=1}^T L_i (M) = \frac 1T \sum_{i=1}^T \Pr_{x\sim M} [f_i(x) = g(x) ] = \Pr_{i \sim \{1,\ldots,T\}, \ x\sim M} [ f_i (x) = g(x) ] " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cfrac+1T+%5Csum_%7Bi%3D1%7D%5ET+L_i+%28M%29+%3D+%5Cfrac+1T+%5Csum_%7Bi%3D1%7D%5ET+%5CPr_%7Bx%5Csim+M%7D+%5Bf_i%28x%29+%3D+g%28x%29+%5D+%3D+%5CPr_%7Bi+%5Csim+%5C%7B1%2C%5Cldots%2CT%5C%7D%2C+%5C+x%5Csim+M%7D+%5B+f_i+%28x%29+%3D+g%28x%29+%5D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>so we have that for every distribution <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of min-entropy at least <img alt="{\log_2 2\delta |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+2%5Cdelta+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> it holds that</p>
<p align="center"><img alt="\displaystyle \Pr_{i \sim \{1,\ldots,T\}, \ x\sim M} [ f_i (x) = g(x) ]&gt; \frac 12 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bi+%5Csim+%5C%7B1%2C%5Cldots%2CT%5C%7D%2C+%5C+x%5Csim+M%7D+%5B+f_i+%28x%29+%3D+g%28x%29+%5D%3E+%5Cfrac+12+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>which is the statement that we promised and from which the Impagliazzo Hard-Core Lemma follows.</p>
<p><b>4. Some Final Remarks </b></p>
<p>After Impagliazzo circulated a preliminary version of his paper, Nisan had the following idea: consider the game that we define above, in which a builder picks an <img alt="{f\in {\cal F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%5Cin+%7B%5Ccal+F%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, an inspector picks a distribution <img alt="{M \in {\cal K}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM+%5Cin+%7B%5Ccal+K%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the prescribed min-entropy, and the loss for the inspector is given by <img alt="{\Pr [ f(x) = g(x) ]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPr+%5B+f%28x%29+%3D+g%28x%29+%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. We can think of it as a zero-sum game if we also assign a gain <img alt="{\Pr [ f(x) = g(x)]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPr+%5B+f%28x%29+%3D+g%28x%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> to the builder.</p>
<p>If the builder plays second, there is a strategy that guarantees a gain that is at least <img alt="{1/2 + \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F2+%2B+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and so there must be a mixed strategy, that is, a distribution <img alt="{{\cal DF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+DF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> over functions in <img alt="{\cal F}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+F%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, that guarantees such a gain even if the builder plays first. In other words, for all distributions <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the prescribed min-entropy we have</p>
<p align="center"><img alt="\displaystyle \Pr_{x\sim H, f\sim {\cal DF}} [ f(x) = g(x) ] \geq \frac 12 + \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Csim+H%2C+f%5Csim+%7B%5Ccal+DF%7D%7D+%5B+f%28x%29+%3D+g%28x%29+%5D+%5Cgeq+%5Cfrac+12+%2B+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Nisan then observes that we can sample <img alt="{T = \frac 1{\epsilon^2} \log |X|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT+%3D+%5Cfrac+1%7B%5Cepsilon%5E2%7D+%5Clog+%7CX%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> functions <img alt="{f_1,\ldots,f_T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_1%2C%5Cldots%2Cf_T%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and have, with high probability</p>
<p align="center"><img alt="\displaystyle \Pr_{x\sim H, i\sim \{1,\ldots,T\}} [ f_i(x) = g(x) ] &gt; \frac 12 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPr_%7Bx%5Csim+H%2C+i%5Csim+%5C%7B1%2C%5Cldots%2CT%5C%7D%7D+%5B+f_i%28x%29+%3D+g%28x%29+%5D+%3E+%5Cfrac+12+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>and the sampling bound on <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> can be improved to order of <img alt="{\frac 1 {\epsilon^2} \log \frac 1{\epsilon \delta}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+1+%7B%5Cepsilon%5E2%7D+%5Clog+%5Cfrac+1%7B%5Cepsilon+%5Cdelta%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> with the same conclusion.</p>
<p>Basically, what we have been doing today is to come up with an algorithm that finds an approximate solution for the LP that defines the optimal mixed strategy for the game, and to design the algorithm is such a way that the solution is very sparse.</p>
<p>This is a common feature of other applications of online optimization techniques to find “sparse approximations”: one sets up an optimization problem whose objective function measures the “approximation error” of a given solution. The object we want to approximate is the optimum of the optimization problem, and we use variants of mirror descent to prove the existence of a sparse solution that is a good approximation.</p></div>
    </content>
    <updated>2021-10-20T16:49:43Z</updated>
    <published>2021-10-20T16:49:43Z</published>
    <category term="theory"/>
    <category term="Hard-Core Sets"/>
    <category term="online optimization"/>
    <category term="Russell Impagliazzo"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2021-10-20T17:37:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/20/department-chair-computer-science-and-engineering-at-nyu-tandon-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/20/department-chair-computer-science-and-engineering-at-nyu-tandon-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Department Chair, Computer Science and Engineering at NYU Tandon (apply by December 1, 2021)</title>
    <summary>NYU’s Dept. of Computer Science and Engineering within the Tandon School of Engineering is hiring a department chair. The position is open to all research areas, but applications from theory candidates are very welcome. Our department has a growing Algorithms and Foundations Group (csefoundations.engineering.nyu.edu), with several recent hires working on theory of algorithms and machine […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>NYU’s Dept. of Computer Science and Engineering within the Tandon School of Engineering is hiring a department chair. The position is open to all research areas, but applications from theory candidates are very welcome. Our department has a growing Algorithms and Foundations Group (csefoundations.engineering.nyu.edu), with several recent hires working on theory of algorithms and machine learning.</p>
<p>Website: <a href="https://apply.interfolio.com/96495">https://apply.interfolio.com/96495</a><br/>
Email: cmusco@nyu.edu</p></div>
    </content>
    <updated>2021-10-20T15:56:13Z</updated>
    <published>2021-10-20T15:56:13Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/20/assistant-professor-at-georgetown-university-apply-by-december-15-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/20/assistant-professor-at-georgetown-university-apply-by-december-15-2021/" rel="alternate" type="text/html"/>
    <title>Assistant Professor at Georgetown University (apply by December 15, 2021)</title>
    <summary>Provost’s Distinguished Faculty Fellow and Assistant Professor of Computer Science position available at Georgetown University. For information on how to apply, please visit https://cs.georgetown.edu/jobs/ Website: http://apply.interfolio.com/96143 Email: nitin.vaidya@georgetown.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Provost’s Distinguished Faculty Fellow and Assistant Professor of Computer Science position available at Georgetown University. For information on how to apply, please visit <a href="https://cs.georgetown.edu/jobs/">https://cs.georgetown.edu/jobs/</a></p>
<p>Website: <a href="http://apply.interfolio.com/96143">http://apply.interfolio.com/96143</a><br/>
Email: nitin.vaidya@georgetown.edu</p></div>
    </content>
    <updated>2021-10-20T14:45:26Z</updated>
    <published>2021-10-20T14:45:26Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://benjamin-recht.github.io/2021/10/20/highleyman/</id>
    <link href="http://benjamin-recht.github.io/2021/10/20/highleyman/" rel="alternate" type="text/html"/>
    <title>The Saga of Highleyman's Data.</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The first machine learning benchmark dates back to the late 1950s. Few used it and even fewer still remembered it by the time benchmarks became widely used in machine learning in the late 1980s.</p>

<p>In 1959 at Bell Labs, Bill Highleyman and Louis Kamenstky designed a <a href="https://dl.acm.org/doi/10.1145/1457838.1457894">scanner to evaluate character recognition techniques</a>. Their goal was “to facilitate a systematic study of character-recognition techniques and an evaluation of methods prior to actual machine development.” It was not clear at the time which part of the computations should be done in special purpose hardware and which parts should be done with more general computers. Highleyman later <a href="https://patents.google.com/patent/US2978675A/en">patented an OCR scheme</a> that we recognize today as a convolutional neural network with convolutions optically computed as part of the scanning.</p>

<p>Highleyman and Kamentsky used their scanner to create a dataset of 1800 alphanumeric characters. They gathered the 26 letters of the alphabet and 10 digits from 50 different writers. Each character in their corpus was scanned in binary at a resolution of 12 x 12 and stored on punch cards that were compatible with the <a href="https://en.wikipedia.org/wiki/IBM_704">IBM 704</a>, the GPGPU of the era.</p>

<p class="center"><img alt="A look at Highleyman&#x2019;s digits" src="http://www.argmin.net/assets/highleyman-data.png" width="95%"/></p>

<p>With the data in hand, Highleyman and Kamenstky began studying various proposed techniques for recognition. In particular, they analyzed a method of Woody Bledsoe and published an analysis claiming to be <a href="https://ieeexplore.ieee.org/document/5219829">unable to reproduce Bledsoe’s results</a>. Bledsoe found their numbers to be considerably lower than he had expected, and asked Highleyman to send him the data. Highleyman obliged, mailing the package of punch cards across the country to Sandia Labs.</p>

<p>Upon receiving the data, Bledsoe conducted a new experiment. In what may be the first implementation of a train-test split, he divided the characters up, using 40 writers for training and 10 for testing. By tuning the hyperparameters, <a href="https://ieeexplore.ieee.org/document/5219162">Bledsoe was able to achieve approximately 60% error</a>. Bledsoe also suggested that the high error rates were to be expected as Highleyman’s data was too small. Prophetically, he declared that 1000 alphabets might be needed for good performance.</p>

<p>By this point, Highleyman had also shared his data with Chao Kong “C.K.” Chow at the Burroughs Corporation (a precursor to Unisys). A pioneer of <a href="https://ieeexplore.ieee.org/document/5222035">using decision theory for pattern recognition</a>, Chow built a pattern recognition system for characters. Using the same train-test split as Bledsoe, <a href="https://ieeexplore.ieee.org/document/5219431">Chow obtained an error rate of 41.7%</a> using a convolutional neural network.</p>

<p class="center"><img alt="Chow&#x2019;s architecture" src="http://www.argmin.net/assets/chownet.png" width="75%"/></p>

<p>Highleyman made at least six additional copies of the data he had sent to Bledsoe and Chow, and many researchers remained interested. He thus decided to <a href="https://ieeexplore.ieee.org/document/4037813">publicly offer to send a copy to anyone</a> willing to pay for the duplication and shipping fees. An interested party would simply have to mail him a request. Of course, the dataset was sent by US Postal Service. Electronic transfer didn’t exist at the time, resulting in sluggish data transfer rates on the order of a few bits per minute.</p>

<p>Highleyman not only created the first machine learning benchmark. He authored the the first formal study of <a href="https://ieeexplore.ieee.org/document/6768949">train-test splits</a> and proposed <a href="https://ieeexplore.ieee.org/document/4066882">empirical risk minimization for pattern classification</a> as part of his 1961 dissertation.
By 1963, however, Highleyman had left his research position at Bell Labs and abandoned pattern recognition research.</p>

<p>We don’t know how many people requested Highleyman’s data. The total number of copies may have been less than twenty. Based on citation surveys, we determined there were at least another six copies made after Highleyman’s public offer for duplication, sent to  <a href="https://ieeexplore.ieee.org/abstract/document/1671536">CMU</a>, <a href="https://ieeexplore.ieee.org/document/1671257">Honeywell</a>, <a href="https://ieeexplore.ieee.org/document/5008873">SUNY Stony Brook</a>, <a href="https://spiral.imperial.ac.uk/bitstream/10044/1/16132/2/Ullmann-JR-1968-PhD-Thesis.pdf">Imperial College</a>, <a href="https://www.sciencedirect.com/science/article/abs/pii/0031320371900045">UW Madison</a>, and Stanford Research Institute (SRI).</p>

<p>The SRI team of John Munson, Richard Duda, and Peter Hart performed some of the most <a href="https://ieeexplore.ieee.org/document/1687355">extensive experiments with Highleyman’s data</a>. A 1-nearest-neighbors baseline achieved an error rate of 47.5%. With a more sophisticated approach, they were able to do significantly better. They used a multi-class, piecewise linear model, trained using Kesler’s multi-class version of the perceptron algorithm (what we’d now call “one-versus all classification”). Their feature vectors were 84 simple pooled edge detectors in different regions of the image at different orientations. With these features, they were able to get a test error of 31.7%, 10 percentage points better than Chow. When restricted only to digits, this method recorded 12% error. The authors concluded that they needed more data, and that the error rates were “still far too high to be practical.” They concluded that “larger and higher-quality datasets are needed for work aimed at achieving useful results.” They suggested that such datasets “may contain hundreds, or even thousands, of samples in each class.”</p>

<p>Munson, Duda, and Hart also performed informal experiments with humans to gauge the readability of Highleyman’s characters. On the full set of alphanumeric characters, they found an average error rate of 15.7%, about 2x better than their pattern recognition machine. But this rate was still quite high and suggested the data needed to be of higher quality. They (again prophetically) concluded that “an array size of at least 20X20 is needed, with an optimum size of perhaps 30X30.”</p>

<p>Decades passed until such a dataset appeared. Thirty years later, with 125 times as much training data, 28x28 resolution, and with grayscale scans, a neural net achieved 0.7% test error on the <a href="http://yann.lecun.com/exdb/mnist/">MNIST digit recognition task</a>. In fact, a similar model to Munson’s architecture consisting of kernel ridge regression trained on pooled edged detectors also achieves 0.7% error. Intuition from the 1960s proved right. The resolution was higher and the number of examples per digit was now in the thousands, just as Bledsoe, Munson, Duda, and Hart predicted would be sufficient. Reasoning heuristically that the test error should be inversely proportional to the square root of the number of training examples, we would expect an 11x improvement over Munson’s approaches. The actual recorded improvement from 12% to 0.7% was closer to 17x, not far from what the back of the envelope calculation predicts.</p>

<p>Unlike Highleyman’s data, MNIST featured only digits, no letters. Only recently, in 2017, researchers from Western Sydney University <a href="https://arxiv.org/abs/1702.05373">extracted alphanumeric characters from the NIST-19 repository</a>. The resulting <em>EMNIST_Balanced</em> dataset has 2400 examples in each of the 47 classes, with a class for all upper case letters, all digits, and some of the non-ambiguous lower case letters. Currently, the best performing <a href="https://www.mdpi.com/2076-3417/9/15/3169">model achieves a test error rate of 9.4%</a>. While the dataset is still fairly new, this is only a 3x improvement over the methods of Munson, Duda, and Hart. Applying the same naive scaling argument as above, the increase in dataset size would predict a 7x improvement if such an improvement was achievable. Considering that the SRI team observed a human-error rate of 11% on Highleyman’s data, it is quite possible that an accuracy of 90% is close to the best that we can expect for recognizing handwritten digits without context.</p>

<p>The story of Highleyman’s data foreshadows many of the later waves of machine learning research. A desire for better evaluation inspired the creation of novel data. Dissemination of the experimental results on this data led to sharing in order for researchers to be content that the evaluation was fair. Once the dataset was distributed, others requested the data to prove their methods were superior. And then the dataset itself became enshrined as a benchmark for competitive testing.  Such comparative testing led to innovations in methods, theory, and data collection and curation itself. We have seen this pattern time and time again in machine learning, from <a href="https://archive.ics.uci.edu/ml/index.php">the UCI repository</a>, to <a href="http://yann.lecun.com/exdb/mnist/">MNIST</a>, to <a href="https://www.image-net.org/">ImageNet</a>, to <a href="https://predictioncenter.org/">CASP</a>. The nearly forgotten history of Highleyman’s data marks the beginning of this pattern recognition research paradigm.</p>

<p><em>We are, as always, deeply indebted to Chris Wiggins for sending us Munson et al.’s paper after watching a talk by BR on the history of ML benchmarking. We also thank Ludwig Schmidt for pointing us to EMNIST.</em></p></div>
    </summary>
    <updated>2021-10-20T00:00:00Z</updated>
    <published>2021-10-20T00:00:00Z</published>
    <source>
      <id>http://benjamin-recht.github.io/</id>
      <author>
        <name>Ben Recht</name>
      </author>
      <link href="http://benjamin-recht.github.io/" rel="alternate" type="text/html"/>
      <link href="http://benjamin-recht.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Musings on systems, information, learning, and optimization.</subtitle>
      <title>arg min blog</title>
      <updated>2021-10-20T17:38:52Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/146</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/146" rel="alternate" type="text/html"/>
    <title>TR21-146 |  Sample-Based Proofs of Proximity | 

	Guy Goldberg, 

	Guy Rothblum</title>
    <summary>Suppose we have random sampling access to a huge object, such as a graph or a database.
Namely, we can observe the values of \emph{random} locations in the object, say random records in the database or random edges in the graph.
We cannot, however, query locations of our choice. Can we verify complex properties of the object using only this restricted sampling access?

In this work, we initiate the study of \emph{sample-based} proof systems, where the verifier is extremely constrained; Given an input, the verifier can only obtain samples of uniformly random and i.i.d. locations in the input string, together with the values at those locations. The goal is verifying complex properties in sublinear time, using only this restricted access.
Following the literature on Property Testing and on Interactive Proofs of Proximity (IPPs), we seek proof systems where the verifier accepts every input that has the property, and with high probability rejects every input that is \emph{far} from the property.

We study both interactive and non-interactive sample-based proof systems, showing:

	- On the positive side, our main result is that rich families of properties / languages have sub-linear sample-based interactive proofs of proximity (SIPPs).
	We show that every language in $\mathcal{NC}$ has a SIPP, where the sample and communication complexities, as well as the verifier's running time, are $\widetilde{O}(\sqrt{n})$, and with polylog(n) communication rounds.
	We also show that every language that can be computed in polynomial-time and bounded-polynomial space has a SIPP, where the sample and communication complexities of the protocol, as well as the verifier's running time are roughly $\sqrt{n}$, and with a constant number of rounds.
	
	This is achieved by constructing a reduction protocol from SIPPs to IPPs.
	With the aid of an untrusted prover, this reduction enables a restricted, sample-based verifier to simulate an execution of a (query-based) IPP, even though it cannot query the input.
	Applying the reduction to known query-based IPPs yields SIPPs for the families described above.
	
	- We show that every language with an adequate (query-based) property tester has a 1-round SIPP with \emph{constant} sample complexity and logarithmic communication complexity.
	One such language is equality testing, for which we give an explicit and simple SIPP.
	
	- On the negative side, we show that \emph{interaction} can be essential:
	we prove that there is no \emph{non}-interactive sample-based proof of proximity for equality testing.
	
	- Finally, we prove that \emph{private coins} can dramatically increase the power of SIPPs.
	We show a strong separation between the power of public-coin SIPPs and private-coin SIPPs for Equality Testing.</summary>
    <updated>2021-10-19T20:49:09Z</updated>
    <published>2021-10-19T20:49:09Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-10-20T17:37:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://rjlipton.wpcomstaging.com/?p=19219</id>
    <link href="https://rjlipton.wpcomstaging.com/2021/10/19/some-statistical-gamma-fun/" rel="alternate" type="text/html"/>
    <title>Some Statistical Gamma Fun</title>
    <summary>Nothing takes place in the world whose meaning is not that of some maximum or minimum. — Leonhard Euler Cantor’s Paradise page Kasper Müller is a mathematics and data science writer for Medium, where he contributes primarily to the blogs Cantor’s Paradise and Towards Data Science. He wrote a nice article last April titled, “The […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>Nothing takes place in the world whose meaning is not that of some maximum or minimum. — Leonhard Euler</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wpcomstaging.com/2021/10/19/some-statistical-gamma-fun/kaspermueller/" rel="attachment wp-att-19221"><img alt="" class="alignright wp-image-19221" height="125" src="https://i2.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2021/10/KasperMueller-150x150.jpg?resize=125%2C125&amp;ssl=1" width="125"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Cantor’s Paradise <a href="https://www.cantorsparadise.com/inventing-mathematics-a33cc9d2732b">page</a></font></td>
</tr>
</tbody>
</table>
<p>
Kasper Müller is a mathematics and data science writer for <a href="https://medium.com/">Medium</a>, where he contributes primarily to the blogs <a href="https://www.cantorsparadise.com/">Cantor’s Paradise</a> and <a href="https://towardsdatascience.com/">Towards Data Science</a>. He wrote a nice <a href="https://www.cantorsparadise.com/the-beautiful-gamma-function-and-the-genius-who-discovered-it-8778437565dc">article</a> last April titled, “The Beautiful Gamma Function and the Genius Who Discovered It.”</p>
<p>
Today we discuss the relevance of the gamma function to statistics and use statistics to suggest a new kind of estimate for it.</p>
<p>
The “Genius” that Müller refers to is Leonhard Euler. Euler proved that for all integers <img alt="{n \geq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, </p>
<p align="center"><img alt="\displaystyle  n! = \int_0^1 (-\ln s)^n = \int_0^\infty t^n e^{-t} dt, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++n%21+%3D+%5Cint_0%5E1+%28-%5Cln+s%29%5En+%3D+%5Cint_0%5E%5Cinfty+t%5En+e%5E%7B-t%7D+dt%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>where the latter equation uses the substitution <img alt="{s = e^{-t}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bs+%3D+e%5E%7B-t%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. The right-hand side produces a value for any complex number <img alt="{z = x + iy}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz+%3D+x+%2B+iy%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in place of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> provided <img alt="{x &gt; -1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%3E+-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. This leads to the formal definition </p>
<p align="center"><img alt="\displaystyle  \Gamma(z) = \int_0^\infty t^{z-1} e^{-t} dt, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5CGamma%28z%29+%3D+%5Cint_0%5E%5Cinfty+t%5E%7Bz-1%7D+e%5E%7B-t%7D+dt%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>whose analytic extension is defined everywhere except for <img alt="{z = 0, -1, -2, -3,\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz+%3D+0%2C+-1%2C+-2%2C+-3%2C%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Because <img alt="{\Gamma(z)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28z%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> has no zeroes, its reciprocal is an entire function. One neat value is <img alt="{\Gamma(\frac{1}{2}) = \sqrt{\pi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28%5Cfrac%7B1%7D%7B2%7D%29+%3D+%5Csqrt%7B%5Cpi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. We will be mainly concerned with ratios of two values of <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>
</p><p/><h2> What is Gamma For? </h2><p/>
<p/><p>
For all <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> except the non-positive integers, <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> obeys the formula </p>
<p align="center"><img alt="\displaystyle  \frac{\Gamma(z+1)}{\Gamma(z)} = z. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B%5CGamma%28z%2B1%29%7D%7B%5CGamma%28z%29%7D+%3D+z.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Of course, this follows from <img alt="{\Gamma(z) = (z-1)!}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28z%29+%3D+%28z-1%29%21%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> for positive integers <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Also </p>
<p align="center"><img alt="\displaystyle  \frac{\Gamma(z+2)}{\Gamma(z)} = \frac{\Gamma(z+2)}{\Gamma(z+1)}\cdot\frac{\Gamma(z+1)}{\Gamma(z)} = (z+1)z. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B%5CGamma%28z%2B2%29%7D%7B%5CGamma%28z%29%7D+%3D+%5Cfrac%7B%5CGamma%28z%2B2%29%7D%7B%5CGamma%28z%2B1%29%7D%5Ccdot%5Cfrac%7B%5CGamma%28z%2B1%29%7D%7B%5CGamma%28z%29%7D+%3D+%28z%2B1%29z.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>In general, for all <img alt="{a &gt; 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, <a name="approx"/></p><a name="approx">
<p align="center"><img alt="\displaystyle  \frac{\Gamma(z+a)}{\Gamma(z)} \sim z^a \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B%5CGamma%28z%2Ba%29%7D%7B%5CGamma%28z%29%7D+%5Csim+z%5Ea+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="approx"/> but there is a discrepancy. This and the lack of a simple explicit formula for <img alt="{\Gamma(z)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28z%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> at all have always made the <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> function seem opaque to me. Two notable values are <img alt="{\Gamma(\frac{1}{2}) = \sqrt{\pi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28%5Cfrac%7B1%7D%7B2%7D%29+%3D+%5Csqrt%7B%5Cpi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{\Gamma(\frac{3}{2}) = \frac{\sqrt{\pi}}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%28%5Cfrac%7B3%7D%7B2%7D%29+%3D+%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>
The <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> function is not even the only uniformly continuous interpolation of the factorial function. It is the unique one whose logarithm is a convex function. This is the first of many reasons given in Müller’s article for <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> to be <em>salient</em> and beautiful, culminating in its relation to the Riemann zeta function given by </p>
<p align="center"><img alt="\displaystyle  \frac{\Gamma(\frac{s}{2})\zeta(s)}{\pi^{s/2}} = \frac{\Gamma(\frac{1-s}{2})\zeta(1-s)}{\pi^{(1-s)/2}}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B%5CGamma%28%5Cfrac%7Bs%7D%7B2%7D%29%5Czeta%28s%29%7D%7B%5Cpi%5E%7Bs%2F2%7D%7D+%3D+%5Cfrac%7B%5CGamma%28%5Cfrac%7B1-s%7D%7B2%7D%29%5Czeta%281-s%29%7D%7B%5Cpi%5E%7B%281-s%29%2F2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Yet the log-convex uniqueness was proved only 99 years ago, and none of these tell me at a flash what the <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> function <b>is</b>. </p>
<p>
What is the simplest label for its corner of the sky? The leading example is the formula for the volume of a sphere of radius <img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> dimensions: </p>
<p align="center"><img alt="\displaystyle  V_n = \frac{\pi^{n/2}}{\Gamma(n + \frac{1}{2})}r^n. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++V_n+%3D+%5Cfrac%7B%5Cpi%5E%7Bn%2F2%7D%7D%7B%5CGamma%28n+%2B+%5Cfrac%7B1%7D%7B2%7D%29%7Dr%5En.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>But I wonder whether a different application is more fundamental. Since we are dealing with <img alt="{a = \frac{1}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba+%3D+%5Cfrac%7B1%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> already here, let us define the function </p>
<p align="center"><img alt="\displaystyle  \Gamma_{1/2}(z) = \frac{\Gamma(z+\frac{1}{2})}{\Gamma(z)}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5CGamma_%7B1%2F2%7D%28z%29+%3D+%5Cfrac%7B%5CGamma%28z%2B%5Cfrac%7B1%7D%7B2%7D%29%7D%7B%5CGamma%28z%29%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Noting <img alt="{\Gamma_{1/2}(z) \sim z^{1/2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma_%7B1%2F2%7D%28z%29+%5Csim+z%5E%7B1%2F2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> via (<a href="https://rjlipton.wpcomstaging.com/feed/#approx">1</a>), this is a tweak of the square-root function. Here are some values of it:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  \Gamma_{1/2}(1) &amp;=&amp; \frac{\Gamma(1.5)}{\Gamma(1)} = \frac{\sqrt{\pi}/2}{1} = \frac{\sqrt{\pi}}{2}\\ \Gamma_{1/2}(2) &amp;=&amp; \frac{\Gamma(2.5)}{\Gamma(2)} = \frac{3\sqrt{\pi}/4}{1} = \frac{3\sqrt{\pi}}{4}\\ \Gamma_{1/2}(3) &amp;=&amp; \frac{\Gamma(3.5)}{\Gamma(3)} = \frac{15\sqrt{\pi}/8}{2} = \frac{15\sqrt{\pi}}{16}\\ \Gamma_{1/2}(4) &amp;=&amp; \frac{\Gamma(4.5)}{\Gamma(4)} = \frac{105\sqrt{\pi}/16}{6} = \frac{35\sqrt{\pi}}{32}\\ \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%5CGamma_%7B1%2F2%7D%281%29+%26%3D%26+%5Cfrac%7B%5CGamma%281.5%29%7D%7B%5CGamma%281%29%7D+%3D+%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%2F2%7D%7B1%7D+%3D+%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%7D%7B2%7D%5C%5C+%5CGamma_%7B1%2F2%7D%282%29+%26%3D%26+%5Cfrac%7B%5CGamma%282.5%29%7D%7B%5CGamma%282%29%7D+%3D+%5Cfrac%7B3%5Csqrt%7B%5Cpi%7D%2F4%7D%7B1%7D+%3D+%5Cfrac%7B3%5Csqrt%7B%5Cpi%7D%7D%7B4%7D%5C%5C+%5CGamma_%7B1%2F2%7D%283%29+%26%3D%26+%5Cfrac%7B%5CGamma%283.5%29%7D%7B%5CGamma%283%29%7D+%3D+%5Cfrac%7B15%5Csqrt%7B%5Cpi%7D%2F8%7D%7B2%7D+%3D+%5Cfrac%7B15%5Csqrt%7B%5Cpi%7D%7D%7B16%7D%5C%5C+%5CGamma_%7B1%2F2%7D%284%29+%26%3D%26+%5Cfrac%7B%5CGamma%284.5%29%7D%7B%5CGamma%284%29%7D+%3D+%5Cfrac%7B105%5Csqrt%7B%5Cpi%7D%2F16%7D%7B6%7D+%3D+%5Cfrac%7B35%5Csqrt%7B%5Cpi%7D%7D%7B32%7D%5C%5C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>
Here is the significance:</p>
<blockquote><p><b> </b> <em> For integer <img alt="{n \geq 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/>, the expected Euclidean norm of a vector of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> independent samples from the standard Gaussian distribution is <a name="gammahalf"/></em></p><em><a name="gammahalf">
<p align="center"><img alt="\displaystyle  \sqrt{2}\cdot\Gamma_{1/2}(\frac{n}{2}). \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csqrt%7B2%7D%5Ccdot%5CGamma_%7B1%2F2%7D%28%5Cfrac%7Bn%7D%7B2%7D%29.+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a></em><p><em><a name="gammahalf"/> </em>
</p></blockquote>
<p/><p>
That’s it: Gamma gives the norm of Gaussians. The norm is of order <img alt="{\sqrt{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csqrt%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> but not exactly. The <img alt="{\Gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> function gives it <em>exactly</em>.</p>
<p>
</p><p/><h2> An Inferior But Curious Estimate </h2><p/>
<p/><p>
The norm of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> independent Gaussians is called the <a href="https://en.wikipedia.org/wiki/Chi_distribution">chi distribution</a>. Its square is the better-known <a href="https://en.wikipedia.org/wiki/Chi-squared_distribution">chi-squared distribution</a>. This idea is used in the statistical <a href="https://en.wikipedia.org/wiki/Chi-squared_test">chi-squared</a> test, but what follows is simpler.</p>
<p>
We let <img alt="{X^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> stand for the square norm divided by <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, so that <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> stands for the Euclidean norm divided by <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. From (<a href="https://rjlipton.wpcomstaging.com/feed/#gammahalf">2</a>) we have </p>
<p align="center"><img alt="\displaystyle  E[X] = \sqrt{\frac{2}{n}}\Gamma_{1/2}(\frac{n}{2}). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++E%5BX%5D+%3D+%5Csqrt%7B%5Cfrac%7B2%7D%7Bn%7D%7D%5CGamma_%7B1%2F2%7D%28%5Cfrac%7Bn%7D%7B2%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>
We will estimate <img alt="{E[X]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%5BX%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> a different way and use that to estimate <img alt="{\Gamma_{1/2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma_%7B1%2F2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. First we note that since the vector entries <img alt="{z_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> are independent and normally distributed, we have the exact values</p>
<p><br/></p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  E[X^2] &amp;=&amp; \frac{1}{n}\sum_{i=1}^n E[z_i^2] = 1\\ Var[X^2] &amp;=&amp; \frac{1}{n^2} \sum_{i=1}^n Var[z_i^2] = \frac{1}{n^2}\sum_{i=1}^n (E[z_i^4] - E[z_i]^2) = \frac{1}{n}(3 - 1) = \frac{2}{n}. \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++E%5BX%5E2%5D+%26%3D%26+%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi%3D1%7D%5En+E%5Bz_i%5E2%5D+%3D+1%5C%5C+Var%5BX%5E2%5D+%26%3D%26+%5Cfrac%7B1%7D%7Bn%5E2%7D+%5Csum_%7Bi%3D1%7D%5En+Var%5Bz_i%5E2%5D+%3D+%5Cfrac%7B1%7D%7Bn%5E2%7D%5Csum_%7Bi%3D1%7D%5En+%28E%5Bz_i%5E4%5D+-+E%5Bz_i%5D%5E2%29+%3D+%5Cfrac%7B1%7D%7Bn%7D%283+-+1%29+%3D+%5Cfrac%7B2%7D%7Bn%7D.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p/><p><br/>
Since we have <img alt="{E[X^2]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%5BX%5E2%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, computing either <img alt="{E[X]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%5BX%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> or <img alt="{Var[X]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BVar%5BX%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> suffices to get the other, by the relation <img alt="{Var[X] = E[X^2] - E[X]^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BVar%5BX%5D+%3D+E%5BX%5E2%5D+-+E%5BX%5D%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Our also having <img alt="{Var[X^2]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BVar%5BX%5E2%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> enables estimating <img alt="{Var[X]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BVar%5BX%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> via the <a href="http://www.phidot.org/software/mark/docs/book/pdf/app_2.pdf">delta</a> <a href="https://en.wikipedia.org/wiki/Delta_method">method</a>, in a particular form I noticed <a href="https://stats.stackexchange.com/questions/10337/operatornamevarx2-if-operatornamevarx-sigma2/383603">here</a>. The derivation requires no special properties of <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>: <a name="est2"/></p><a name="est2">
<p/><p align="center"><img alt="\displaystyle  Var[X^2] \approx 4E[X]^2 Var[X] - Var[X]^2. \ \ \ \ \ (3)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Var%5BX%5E2%5D+%5Capprox+4E%5BX%5D%5E2+Var%5BX%5D+-+Var%5BX%5D%5E2.+%5C+%5C+%5C+%5C+%5C+%283%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="est2"/></p><p><br/>
For our particular <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> with <img alt="{Var[X] = 1 - E[X]^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BVar%5BX%5D+%3D+1+-+E%5BX%5D%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, this yields a quadratic equation in <img alt="{y = E[X]^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By+%3D+E%5BX%5D%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>: </p>
<p align="center"><img alt="\displaystyle  \frac{2}{n} \doteq 4y(1 - y) - (1-y)^2, \quad\text{so}\quad 5y^2 - 6y + 1 + \frac{2}{n} = 0 \quad\text{so}\quad y = \frac{6 + \sqrt{16 - \frac{40}{n}}}{10}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B2%7D%7Bn%7D+%5Cdoteq+4y%281+-+y%29+-+%281-y%29%5E2%2C+%5Cquad%5Ctext%7Bso%7D%5Cquad+5y%5E2+-+6y+%2B+1+%2B+%5Cfrac%7B2%7D%7Bn%7D+%3D+0+%5Cquad%5Ctext%7Bso%7D%5Cquad+y+%3D+%5Cfrac%7B6+%2B+%5Csqrt%7B16+-+%5Cfrac%7B40%7D%7Bn%7D%7D%7D%7B10%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>This yields </p>
<p align="center"><img alt="\displaystyle  \frac{2}{n}\Gamma_{1/2}^2(\frac{n}{2}) \doteq \frac{3}{5} + \sqrt{\frac{4}{25} - \frac{2}{5n}}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B2%7D%7Bn%7D%5CGamma_%7B1%2F2%7D%5E2%28%5Cfrac%7Bn%7D%7B2%7D%29+%5Cdoteq+%5Cfrac%7B3%7D%7B5%7D+%2B+%5Csqrt%7B%5Cfrac%7B4%7D%7B25%7D+-+%5Cfrac%7B2%7D%7B5n%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>
Changing variables to <img alt="{z = \frac{n}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz+%3D+%5Cfrac%7Bn%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and rearranging, we get the estimate </p>
<p align="center"><img alt="\displaystyle  \Gamma_{1/2}(z) \doteq \sqrt{\frac{3z}{5} + \sqrt{\frac{4z^2}{25} - \frac{z}{5}}}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5CGamma_%7B1%2F2%7D%28z%29+%5Cdoteq+%5Csqrt%7B%5Cfrac%7B3z%7D%7B5%7D+%2B+%5Csqrt%7B%5Cfrac%7B4z%5E2%7D%7B25%7D+-+%5Cfrac%7Bz%7D%7B5%7D%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>
It has been traditional to estimate what we would call <img alt="{\Gamma_{1/2}(z+\frac{1}{2})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CGamma_%7B1%2F2%7D%28z%2B%5Cfrac%7B1%7D%7B2%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> instead, so putting <img alt="{x = z + \frac{1}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%3D+z+%2B+%5Cfrac%7B1%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> we finally get:</p>
<p>
<a name="estimate"/></p><a name="estimate">
<p align="center"><img alt="\displaystyle  \frac{\Gamma(x+1)}{\Gamma(x+\frac{1}{2})} \sim \sqrt{0.6x + 0.3 + 0.2\sqrt{8x^2 - 2x - 1.5}} ~. \ \ \ \ \ (4)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B%5CGamma%28x%2B1%29%7D%7B%5CGamma%28x%2B%5Cfrac%7B1%7D%7B2%7D%29%7D+%5Csim+%5Csqrt%7B0.6x+%2B+0.3+%2B+0.2%5Csqrt%7B8x%5E2+-+2x+-+1.5%7D%7D+%7E.+%5C+%5C+%5C+%5C+%5C+%284%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="estimate"/></p>
<p>
As an estimate, this is barely competitive with the simple <img alt="{\sqrt{x + 0.25}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csqrt%7Bx+%2B+0.25%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and far inferior to </p>
<p align="center"><img alt="\displaystyle  (x^2 + 0.5x + 0.125)^{1/4}, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%28x%5E2+%2B+0.5x+%2B+0.125%29%5E%7B1%2F4%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>which is the first of several estimates of the form <img alt="{p_k(x)^{1/2k}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_k%28x%29%5E%7B1%2F2k%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> <a href="https://www.sciencedirect.com/science/article/pii/S0895717710001317">given</a> by Cristinel Mortici in 2010. But it is curious that we got a formula with nested radicals and non-dyadic coefficients from a simple statistical estimate. It makes us wonder whether formulas with nested radicals can be tuned for greater accuracy, and whether this might knock back to statistical estimation.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Can vectors of Gaussian variables be leveraged to say further interesting things about the gamma function and its applications? What are your favorite properties of the gamma function?</p>
<p/></font></font></div>
    </content>
    <updated>2021-10-19T20:21:52Z</updated>
    <published>2021-10-19T20:21:52Z</published>
    <category term="All Posts"/>
    <category term="History"/>
    <category term="Ideas"/>
    <category term="Oldies"/>
    <category term="Results"/>
    <category term="approximation"/>
    <category term="distributions"/>
    <category term="Euler"/>
    <category term="gamma function"/>
    <category term="Kasper Muller"/>
    <category term="numerical estimates"/>
    <category term="statistics"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wpcomstaging.com</id>
      <logo>https://s0.wp.com/i/webclip.png</logo>
      <link href="https://rjlipton.wpcomstaging.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wpcomstaging.com" rel="alternate" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel's Lost Letter and P=NP</title>
      <updated>2021-10-20T17:37:40Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/145</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/145" rel="alternate" type="text/html"/>
    <title>TR21-145 |  Revisiting a Lower Bound on the Redundancy of Linear Batch Codes | 

	Omar Alrabiah, 

	Venkatesan Guruswami</title>
    <summary>A recent work of Li and Wootters (2021) shows a redundancy lower bound of $\Omega(\sqrt{Nk})$ for systematic linear $k$-batch codes of block length $N$ by looking at the $O(k)$ tensor power of the dual code. In this note, we present an alternate proof of their result via a linear independence argument on a collection of polynomials.</summary>
    <updated>2021-10-19T15:12:31Z</updated>
    <published>2021-10-19T15:12:31Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-10-20T17:37:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://dstheory.wordpress.com/?p=102</id>
    <link href="https://dstheory.wordpress.com/2021/10/19/thursday-oct-21st-maxim-raginsky-from-uiuc/" rel="alternate" type="text/html"/>
    <title>Thursday Oct 21st — Maxim Raginsky from UIUC</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The next Foundations of Data Science virtual talk will take place on Thursday, Oct 21st at 10:00 AM Pacific Time (13:00 Eastern Time, 18:00 Central European Time, 17:00 UTC).  Maxim Raginsky from University of Illinois, Urbana-Champaign will speak about “Neural SDEs: Deep Generative Models in the Diffusion Limit” Please register here to join the virtual talk.<a class="more-link" href="https://dstheory.wordpress.com/2021/10/19/thursday-oct-21st-maxim-raginsky-from-uiuc/">Continue reading <span class="screen-reader-text">"Thursday Oct 21st — Maxim Raginsky from UIUC"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p class="has-text-align-justify">The next <a href="https://sites.google.com/view/dstheory/home" rel="noreferrer noopener" target="_blank">Foundations of Data Science</a> virtual talk will take place on <strong>Thursday, Oct</strong> <strong>21</strong>st at <strong>10:00 AM Pacific Time</strong> (13:00 Eastern Time, 18:00 Central European Time, 17:00 UTC).  <strong><a href="http://maxim.ece.illinois.edu/" rel="noreferrer noopener" target="_blank">Maxim Raginsky </a></strong>from<strong> University of Illinois, Urbana-Champaign</strong> will speak about “Neural SDEs: Deep Generative Models in the Diffusion Limit”</p>



<p><a href="https://sites.google.com/view/dstheory" rel="noreferrer noopener" target="_blank">Please register here to join the virtual talk.</a></p>



<p class="has-text-align-justify"><strong>Abstract</strong>: In deep generative models, the latent variable is generated by a time-inhomogeneous Markov chain, where at each time step we pass the current state through a parametric nonlinear map, such as a feedforward neural net, and add a small independent Gaussian perturbation. In this talk, based on joint work with Belinda Tzen, I will discuss the diffusion limit of such models, where we increase the number of layers while sending the step size and the noise variance to zero. I will first provide a unified viewpoint on both sampling and variational inference in such generative models through the lens of stochastic control. Then I will show how we can quantify the expressiveness of diffusion-based generative models. Specifically, I will prove that one can efficiently sample from a wide class of terminal target distributions by choosing the drift of the latent diffusion from the class of multilayer feedforward neural nets, with the accuracy of sampling measured by the Kullback-Leibler divergence to the target distribution. Finally, I will briefly discuss a scheme for unbiased, finite-variance simulation in such models. This scheme can be implemented as a deep generative model with a random number of layers.</p>



<p>The series is supported by the <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=1934846&amp;HistoricalAwards=false">NSF HDR TRIPODS Grant 1934846</a>.</p></div>
    </content>
    <updated>2021-10-19T14:56:57Z</updated>
    <published>2021-10-19T14:56:57Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>dstheory</name>
    </author>
    <source>
      <id>https://dstheory.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://dstheory.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://dstheory.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://dstheory.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://dstheory.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Foundation of Data Science – Virtual Talk Series</title>
      <updated>2021-10-20T17:39:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08677</id>
    <link href="http://arxiv.org/abs/2110.08677" rel="alternate" type="text/html"/>
    <title>Algorithmic Thresholds for Refuting Random Polynomial Systems</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hsieh:Jun=Ting.html">Jun-Ting Hsieh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kothari:Pravesh_K=.html">Pravesh K. Kothari</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08677">PDF</a><br/><b>Abstract: </b>Consider a system of $m$ polynomial equations $\{p_i(x) = b_i\}_{i \leq m}$
of degree $D\geq 2$ in $n$-dimensional variable $x \in \mathbb{R}^n$ such that
each coefficient of every $p_i$ and $b_i$s are chosen at random and
independently from some continuous distribution. We study the basic question of
determining the smallest $m$ -- the algorithmic threshold -- for which
efficient algorithms can find refutations (i.e. certificates of
unsatisfiability) for such systems. This setting generalizes problems such as
refuting random SAT instances, low-rank matrix sensing and certifying
pseudo-randomness of Goldreich's candidate generators and generalizations.
</p>
<p>We show that for every $d \in \mathbb{N}$, the $(n+m)^{O(d)}$-time canonical
sum-of-squares (SoS) relaxation refutes such a system with high probability
whenever $m \geq O(n) \cdot (\frac{n}{d})^{D-1}$. We prove a lower bound in the
restricted low-degree polynomial model of computation which suggests that this
trade-off between SoS degree and the number of equations is nearly tight for
all $d$. We also confirm the predictions of this lower bound in a limited
setting by showing a lower bound on the canonical degree-$4$ sum-of-squares
relaxation for refuting random quadratic polynomials. Together, our results
provide evidence for an algorithmic threshold for the problem at $m \gtrsim
\widetilde{O}(n) \cdot n^{(1-\delta)(D-1)}$ for $2^{n^{\delta}}$-time
algorithms for all $\delta$.
</p></div>
    </summary>
    <updated>2021-10-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08669</id>
    <link href="http://arxiv.org/abs/2110.08669" rel="alternate" type="text/html"/>
    <title>Constructing Many Faces in Arrangements of Lines and Segments</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Haitao.html">Haitao Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08669">PDF</a><br/><b>Abstract: </b>We present new algorithms for computing many faces in arrangements of lines
and segments. Given a set $S$ of $n$ lines (resp., segments) and a set $P$ of
$m$ points in the plane, the problem is to compute the faces of the
arrangements of $S$ that contain at least one point of $P$. For the line case,
we give a deterministic algorithm of $O(m^{2/3}n^{2/3}\log^{2/3}
(n/\sqrt{m})+(m+n)\log n)$ time. This improves the previously best
deterministic algorithm [Agarwal, 1990] by a factor of $\log^{2.22}n$ and
improves the previously best randomized algorithm [Agarwal, Matou\v{s}ek, and
Schwarzkopf, 1998] by a factor of $\log^{1/3}n$ in certain cases (e.g., when
$m=\Theta(n)$). For the segment case, we present a deterministic algorithm of
$O(n^{2/3}m^{2/3}\log n+\tau(n\alpha^2(n)+n\log m+m)\log n)$ time, where
$\tau=\min\{\log m,\log (n/\sqrt{m})\}$ and $\alpha(n)$ is the inverse
Ackermann function. This improves the previously best deterministic algorithm
[Agarwal, 1990] by a factor of $\log^{2.11}n$ and improves the previously best
randomized algorithm [Agarwal, Matou\v{s}ek, and Schwarzkopf, 1998] by a factor
of $\log n$ in certain cases (e.g., when $m=\Theta(n)$). We also give a
randomized algorithm of $O(m^{2/3}K^{1/3}\log n+\tau(n\alpha(n)+n\log m+m)\log
n\log K)$ expected time, where $K$ is the number of intersections of all
segments of $S$. In addition, we consider the query version of the problem,
that is, preprocess $S$ to compute the face of the arrangement of $S$ that
contains any query point. We present new results that improve the previous work
for both the line and the segment cases.
</p></div>
    </summary>
    <updated>2021-10-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08483</id>
    <link href="http://arxiv.org/abs/2110.08483" rel="alternate" type="text/html"/>
    <title>Streaming Decision Trees and Forests</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xu:Haoyin.html">Haoyin Xu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dey:Jayanta.html">Jayanta Dey</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Panda:Sambit.html">Sambit Panda</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vogelstein:Joshua_T=.html">Joshua T. Vogelstein</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08483">PDF</a><br/><b>Abstract: </b>Machine learning has successfully leveraged modern data and provided
computational solutions to innumerable real-world problems, including physical
and biomedical discoveries. Currently, estimators could handle both scenarios
with all samples available and situations requiring continuous updates.
However, there is still room for improvement on streaming algorithms based on
batch decision trees and random forests, which are the leading methods in batch
data tasks. In this paper, we explore the simplest partial fitting algorithm to
extend batch trees and test our models: stream decision tree (SDT) and stream
decision forest (SDF) on three classification tasks of varying complexities.
For reference, both existing streaming trees (Hoeffding trees and Mondrian
forests) and batch estimators are included in the experiments. In all three
tasks, SDF consistently produces high accuracy, whereas existing estimators
encounter space restraints and accuracy fluctuations. Thus, our streaming trees
and forests show great potential for further improvements, which are good
candidates for solving problems like distribution drift and transfer learning.
</p></div>
    </summary>
    <updated>2021-10-19T22:40:30Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08451</id>
    <link href="http://arxiv.org/abs/2110.08451" rel="alternate" type="text/html"/>
    <title>Sum-of-Squares Geometry Processing</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marschner:Zo=euml=.html">Zoë Marschner</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Paul.html">Paul Zhang</a>, David Palmer, Justin Solomon <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08451">PDF</a><br/><b>Abstract: </b>Geometry processing presents a variety of difficult numerical problems, each
seeming to require its own tailored solution. This breadth is largely due to
the expansive list of geometric primitives, e.g., splines, triangles, and
hexahedra, joined with an ever-expanding variety of objectives one might want
to achieve with them. With the recent increase in attention toward higher-order
surfaces, we can expect a variety of challenges porting existing solutions that
work on triangle meshes to work on these more complex geometry types. In this
paper, we present a framework for solving many core geometry processing
problems on higher-order surfaces. We achieve this goal through sum-of-squares
optimization, which transforms nonlinear polynomial optimization problems into
sequences of convex problems whose complexity is captured by a single degree
parameter. This allows us to solve a suite of problems on higher-order
surfaces, such as continuous collision detection and closest point queries on
curved patches, with only minor changes between formulations and geometries.
</p></div>
    </summary>
    <updated>2021-10-19T22:52:23Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08354</id>
    <link href="http://arxiv.org/abs/2110.08354" rel="alternate" type="text/html"/>
    <title>Faster Modular Composition</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neiger:Vincent.html">Vincent Neiger</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Salvy:Bruno.html">Bruno Salvy</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schost:=Eacute=ric.html">Éric Schost</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Villard:Gilles.html">Gilles Villard</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08354">PDF</a><br/><b>Abstract: </b>A new Las Vegas algorithm is presented for the composition of two polynomials
modulo a third one, over an arbitrary field. When the degrees of these
polynomials are bounded by $n$, the algorithm uses $O(n^{1.43})$ field
operations, breaking through the $3/2$ barrier in the exponent for the first
time. The previous fastest algebraic algorithms, due to Brent and Kung in 1978,
require $O(n^{1.63})$ field operations in general, and ${n^{3/2+o(1)}}$ field
operations in the particular case of power series over a field of large enough
characteristic. If using cubic-time matrix multiplication, the new algorithm
runs in ${n^{5/3+o(1)}}$ operations, while previous ones run in $O(n^2)$
operations.
</p>
<p>Our approach relies on the computation of a matrix of algebraic relations
that is typically of small size. Randomization is used to reduce arbitrary
input to this favorable situation.
</p></div>
    </summary>
    <updated>2021-10-19T22:38:22Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08335</id>
    <link href="http://arxiv.org/abs/2110.08335" rel="alternate" type="text/html"/>
    <title>Trigger Hunting with a Topological Prior for Trojan Detection</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hu:Xiaoling.html">Xiaoling Hu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Xiao.html">Xiao Lin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cogswell:Michael.html">Michael Cogswell</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yao:Yi.html">Yi Yao</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jha:Susmit.html">Susmit Jha</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Chao.html">Chao Chen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08335">PDF</a><br/><b>Abstract: </b>Despite their success and popularity, deep neural networks (DNNs) are
vulnerable when facing backdoor attacks. This impedes their wider adoption,
especially in mission critical applications. This paper tackles the problem of
Trojan detection, namely, identifying Trojaned models -- models trained with
poisoned data. One popular approach is reverse engineering, i.e., recovering
the triggers on a clean image by manipulating the model's prediction. One major
challenge of reverse engineering approach is the enormous search space of
triggers. To this end, we propose innovative priors such as diversity and
topological simplicity to not only increase the chances of finding the
appropriate triggers but also improve the quality of the found triggers.
Moreover, by encouraging a diverse set of trigger candidates, our method can
perform effectively in cases with unknown target labels. We demonstrate that
these priors can significantly improve the quality of the recovered triggers,
resulting in substantially improved Trojan detection accuracy as validated on
both synthetic and publicly available TrojAI benchmarks.
</p></div>
    </summary>
    <updated>2021-10-19T22:42:34Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.08325</id>
    <link href="http://arxiv.org/abs/2110.08325" rel="alternate" type="text/html"/>
    <title>Minor Embedding in Broken Chimera and Pegasus Graphs is NP-complete</title>
    <feedworld_mtime>1634601600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lobe:Elisabeth.html">Elisabeth Lobe</a>, Annette Lutz <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.08325">PDF</a><br/><b>Abstract: </b>The embedding is an essential step when calculating on the D-Wave machine. In
this work we show the hardness of the embedding problem for both types of
existing hardware, represented by the Chimera and the Pegasus graphs,
containing unavailable qubits. We construct certain broken Chimera graphs,
where it is hard to find a Hamiltonian cycle. As the Hamiltonian cycle problem
is a special case of the embedding problem, this proves the general complexity
result for the Chimera graphs. By exploiting the subgraph relation between the
Chimera and the Pegasus graphs, the proof is then further extended to the
Pegasus graphs.
</p></div>
    </summary>
    <updated>2021-10-19T22:38:13Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2021-10-19T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/18/theory-group-postdoc-at-uc-berkeley-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/18/theory-group-postdoc-at-uc-berkeley-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Theory Group Postdoc at UC Berkeley (apply by December 1, 2021)</title>
    <summary>Postdoc inquiries will be viewable by all our group’s faculty. Individual faculty may then reach out in the case of matched interests. Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Postdoc inquiries will be viewable by all our group’s faculty. Individual faculty may then reach out in the case of matched interests. Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit letters to the e-mail below, with your name in the subject line.</p>
<p>Website: <a href="http://theory.cs.berkeley.edu/">http://theory.cs.berkeley.edu/</a><br/>
Email: tcs-postdoc-inquiries@lists.eecs.berkeley.edu</p></div>
    </content>
    <updated>2021-10-18T21:13:32Z</updated>
    <published>2021-10-18T21:13:32Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/17/multiple-open-tenure-track-faculty-positions-in-computer-science-and-engineering-at-the-ohio-state-university-apply-by-october-31-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/17/multiple-open-tenure-track-faculty-positions-in-computer-science-and-engineering-at-the-ohio-state-university-apply-by-october-31-2021/" rel="alternate" type="text/html"/>
    <title>Multiple Open Tenure-Track Faculty Positions in Computer Science and Engineering at The Ohio State University (apply by October 31, 2021)</title>
    <summary>The Department of Computer Science and Engineering at The Ohio State University invites applications for tenure-track faculty appointments at all ranks and in all research areas. Theory and algorithms is one of the areas with particular emphasis in this faculty search. Review of applications will continue until the positions are filled. Website: https://www.cse.ohio-state.edu/faculty-recruiting/tenuredtenure-track-faculty-positions Email: rountev.1@osu.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science and Engineering at The Ohio State University invites applications for tenure-track faculty appointments at all ranks and in all research areas. Theory and algorithms is one of the areas with particular emphasis in this faculty search. Review of applications will continue until the positions are filled.</p>
<p>Website: <a href="https://www.cse.ohio-state.edu/faculty-recruiting/tenuredtenure-track-faculty-positions">https://www.cse.ohio-state.edu/faculty-recruiting/tenuredtenure-track-faculty-positions</a><br/>
Email: rountev.1@osu.edu</p></div>
    </content>
    <updated>2021-10-17T21:18:03Z</updated>
    <published>2021-10-17T21:18:03Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-2010994775517576408</id>
    <link href="http://blog.computationalcomplexity.org/feeds/2010994775517576408/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/is-math-ready-for-pnp-is-alexandra.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/2010994775517576408" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/2010994775517576408" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/is-math-ready-for-pnp-is-alexandra.html" rel="alternate" type="text/html"/>
    <title>Is MATH Ready for P=NP? Is Alexandra Fahrenthold Ready for P=NP?</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div>(This post was inspired by Harry Lewis emailing me about his granddaughter.)</div><div><br/></div><br/><div class="separator" style="clear: both; text-align: center;"><div class="separator" style="clear: both; text-align: center;"><a href="https://1.bp.blogspot.com/-EaezFO7EQKg/YWbi3-_1hKI/AAAAAAAB-8o/S76g-orqsg48R9MHQqPf1SZi8M7GFchswCLcBGAsYHQ/s4032/pnp.jpg" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="320" src="https://1.bp.blogspot.com/-EaezFO7EQKg/YWbi3-_1hKI/AAAAAAAB-8o/S76g-orqsg48R9MHQqPf1SZi8M7GFchswCLcBGAsYHQ/s320/pnp.jpg" width="240"/></a></div><a href="https://1.bp.blogspot.com/-xlbZstxaM_0/YWbibmPgZWI/AAAAAAAB-8Y/TDBhMXf7D2sQ8ZV3M3tlyWYeaJhNzC5dACLcBGAsYHQ/s4032/singing.jpg" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" height="320" src="https://1.bp.blogspot.com/-xlbZstxaM_0/YWbibmPgZWI/AAAAAAAB-8Y/TDBhMXf7D2sQ8ZV3M3tlyWYeaJhNzC5dACLcBGAsYHQ/s320/singing.jpg" width="240"/></a><br/></div><div class="separator" style="clear: both; text-align: center;"><br/></div><div>Harry Lewis's grand daughter Alexandra Fahrenthold (see both pictures) wants information</div><div>on how to claim the Millennial prize, so she will be ready.</div><div><br/></div><div>This raises the question: How likely is it that Alexandra will resolve P vs NP (or perhaps some other Millennium problem if she wants to rebel against her grandfather)?</div><div><br/></div><div>And more seriously:</div><div><br/></div><div>1) Have we made progress on P vs NP? (I think not.)</div><div>(By <i>we</i>  I mean the community, not <i>Harry and I </i>or <i>Harry and I and Alexandra</i>,</div><div>for which the answer is a more definite NO.)</div><div><br/></div><div>2) If not then why not?</div><div><br/></div><div>3) How does this compare historically to other open problems in Math?</div><div><br/></div><div>We will refer to progress made in solving an open problem, though that is a tricky notion since only after a problem is solved can you look back and say what was progress.  One might also count subcases (e.g., n=4 case of FLT) as progress even if they don't help lead to the final proof. I quote a letter from Harry Lewis to me upon reading a first draft of this post:</div><div><blockquote><i>The one larger point I would suggest adding is to add my operational definition of progress: Progress is being made on a problem if, when the solution is published, it will cite work being published today. Of course that is “operational” only after the fact. Demillo Lipton Perlis at the end have a nice riff on this. The alchemists thought they were making progress on turning lead to gold but they weren’t, even though we know that was actually a solvable problem. Likewise jumping off of higher and higher buildings was not making progress toward heavier than air flight.</i></blockquote></div><div><br/></div><div>---------------------------------------------------------</div><div><br/></div><div><br/></div><div><div>1) Have we made progress on P vs NP?</div><div><br/></div><div>a) I tell my students that we have made progress on ruling out certain techniques.</div><div>They laugh at that, at which point I decide to<i> not </i>tell them that my PhD thesis was about that sort of thing (oracles). I could say</div><div><br/></div><div><i>Once you know what's not going to work you can concentrate one what is going to work.</i></div><div><br/></div><div>But that sounds hollow since very few people are working on techniques that</div><div>might work (The Geometric Complexity Program, see <a href="https://en.wikipedia.org/wiki/Geometric_complexity_theory">here</a>, is the only exception I know of.)</div><div><br/></div><div>b) Are there any partial results? Ryan Williams showed that SAT (and also counting mod versions of it) cannot be done in time n^c and space n^{o(1)} where c is 2cos(2pi/7) (see <a href="https://link.springer.com/content/pdf/10.1007/s00037-008-0248-y.pdf">here</a>).  That is the only concrete lower bound on SAT that I know of.  Is it progress? Sam Buss and Ryan Williams later showed (see <a href="https://link.springer.com/content/pdf/10.1007/s00037-015-0104-9.pdf">here</a>) that, using current techniques, this cannot be improved. If that inspires new techniques that push it further, that would be great. So it is progress? Hard to know now. </div><div><br/></div><div>c) There are some circuit lower bounds. One can debate if this is progress.</div><div>It will be a much better informed debate once the problem is solved.</div><div><br/></div><div>So I would say VERY LITTLE PROGRESS.</div><div><br/></div><div>------------------------------------------------</div><div>2) If not then why not?</div><div><br/></div><div>a) It's only been open for 50 years. A drop in the mathematical bucket.</div><div><i>Counterargument</i>: 50 years of 20th and 21st century mathematics is A LOT.</div><div><br/></div><div>b) Sociology: The academic computer science conference-model induces us to get out a paper in time for the next conference deadline, and not think deeply about a problem.  Carl Smith thought that P vs NP would be solved by the son of a member of the communist party in the USSR (when there was a USSR) who did not have the pressure to get tenure and grants and such. He may be right.</div><div><i>Counterargumen</i>t: there are some (1) mavericks who buck the system, and (2) people like Carl's son-of-a-party-member who are allowed to think deeply for years.</div><div><br/></div><div>c) It's just dang hard! That's the real question. Paul Erdos said of the Collatz Conjecture:</div><div>       <i> Mathematics may not be ready for such problems.</i></div><div>Is that true of P vs NP as well?</div><div><br/></div></div><div><div><br/></div><div>----------------------------------</div><div>3) History and Philosophy.</div><div>(In college I once took the following four courses in one semester: History of Philosophy, Philosophy of History, Philosophy of Philosophy, History of History.)</div><div><br/></div><div>Let's look at problems that were open and then solved:</div><div><br/></div><div>a) The Three Greek Problems of Antiquity: Squaring the circle (given a circle, construct a square with the same area), doubling the cube (given a line that is the edge of cube, construct another line that is the edge of a cube with twice the volume), trisecting an angle (given an angle, construct two lines whose angle is 1/3 of the given angle), with a straightedge and compass. (When I first heard of this problem I wondered how knowing what direction was North would help trisect an angle.) Posed in roughly 400BC. Not clear what <i>posed</i> means in this context. Did the ask for a construction OR did they ask for EITHER a construction OR a proof that there wasn't one?</div><div><br/></div><div>This might be the closest analogy to P vs NP: At the time the problem was stated</div><div> <i>MATHEMATICS WAS NOT READY FOR SUCH PROBLEMS. </i></div><div>It took lots of new math, a better notation, and a different way of looking at numbers, to show that they  could not be done: Pierre Wantzel--doubling the cube (1837),Pierre Wantzel--trisection (1837), Lindemann-Weierstrass--squaring the circle (1882).</div><div>NOTE: Some sources list a fourth problem: constructing every regular polygon. Pierre Watnzel proved, in 1837, that a regular n-gon is constructible iff n is the product of a power of 2 and distinct Fermat  primes. (Why isn't Wantzel better known?) </div><div><br/></div><div>b) Fermat's Last Theorem. Given its origin, not quite clear when it was posed but 1640's seems fair. This could not be solved when it was posed (On an episode of Dr. Who they claim that Fermat had a simple proof. Note that Dr. Who is fictional and their PhD (if they has one) is probably not in mathematics.) </div><div><i>MATHEMATICS WAS NOT READY FOR SUCH PROBLEMS</i>, </div><div>but not as much as the three Greek problems. Very steady progress on it, see  <a href="https://www.cs.umd.edu/~gasarch/BLOGPAPERS/progressflt.pdf">here</a>. One of the real milestone was connecting it to other problems in Math. And then Wiles proved it in the 1990's. While the solution was a surprise when it happened it was not that much of a surprise.</div><div><br/></div><div>QUESTION: Is P vs NP more similar to Greek3 or to FLT? </div><div><br/></div><div>c) Peano Arithmetic (and similar systems) are incomplete. Hilbert's 2nd problem (1900) asked to show the axioms of PA were consistent. Godel (1931) showed this could not be done.  Moreover, there are TRUE statements about numbers that PA cannot prove. I think people mostly thought PA was complete so one of the innovations was to think it was incomplete.  </div><div><i>MATHEMATICS WAS READY FOR SUCH PROBLEMS </i></div><div>but it took the boldness to think PA was incomplete to solve it.  The math needed was known when Hilbert posed the problem. But of course, how to put it together was still quite a challenge.</div></div><div><br/></div><div><div><br/></div><div>d) The Continuum Hypothesis, CH, is that there is no cardinality between N and R. Cantor in 1878 asked for a proof that CH was true. It was Hilbert's first problem in 1900.</div><div>When Hilbert posed this problem in 1900</div><div><i>MATHEMATICS WAS NOT QUITE  READY FOR SUCH PROBLEMS.</i></div><div>The math to solve it wasn't quite there, but wasn't so far off (of course, that's in hindsight). Godel's model L (1940) was brilliant, though Lowenhiem-Skolem had constructed models.  A model of set theory that was defined by levels was, I think, though of by Russell (though in a very diff way than L). When Cohen did a model where CH is false (1963) he invented forcing for Set Theory, though forcing had already been used in Recursion theory (The Kleene-Post construction of intermediary Turing degrees.)</div><div><br/></div><div>e) Hilbert's tenth problem (1900): Find an algorithm that will, given a poly in many variables over Z, determine if it has a solution in Z.</div><div><i>MATHEMATICS WAS ALMOST READY FOR SUCH PROBLEMS.</i></div><div>I turns out that there is no such algorithm. Similar to CH: Once it was thought that it was unsolvable, the proof that it was unsolvable just took a few decades. However, it did need  the definition of computable to be pinned down.  Davis-Putnam-Robinson outlined what was needed in the 1950's,and Matiyasevich finished it in 1970.  While it required just the right combination of ideas, and lots of cleverness, the math needed was known.</div><div>CAVEAT: There are many restrictions of H10 that are still open. My favorite: is the following solvable: given k, does x^3 + y^3 + z^3 = k have a solution in Z? (See my blog post on this problem <a href="https://blog.computationalcomplexity.org/2019/04/x-3-y-3-z-3-33-has-solution-in-z-and.html">here</a>.) For a survey of what is known about subcases see (1) my paper <a href="http://export.arxiv.org/pdf/2104.07220">here</a>, though it is has been argued that I am looking at the wrong subcases (see my blog post on this <a href="https://blog.computationalcomplexity.org/2021/05/what-is-natural-question-who-should.html">here</a>), and (2) Bogdan Grechuk's paper <a href="https://arxiv.org/abs/2108.08705">here</a></div><div>CAVEAT: Matiyasevich has suggested that Hilbert really meant to ask about equations and solutions over  Q. That problem is still open. If it is unsolvable, that might be proven reasonably soon. If it is solvable, then</div><div><i>MATHEMATICS IS NOT READY FOR SUCH PROBLEMS.</i></div><div><br/></div><div>f) The four color theorem. Posed in 1852 by Francis Guthrie, proven in 1976. Haken, Appel, and Koch (more on that last name later) did do some very impressive math to set the problem up, and the computer program to finish it off. When the problem was posed (1852) the computing power was not up to the task. So </div><div><i>COMPUTER SCIENCE WAS NOT READY FOR SUCH PROBLEMS.</i></div><div>Could the ideas to set it up have been done earlier? Maybe, but not much earlier. The result is often attributed to Haken and Appel, but actually there are two papers, and Koch is an author on the second one. Note that (1) Robertson, Sanders, Seymour, Thomas had a simpler, though still computer proof (1996), and (2) Werner Gonthier formalized the proof inside the Coq proof assistant in 2005.</div><div>CAVEAT: An open problem that is hard to state precisely is to come up with a non-computer proof.</div></div><div>CAVEAT: There is a non-computer proof that every planar graph is 4.5-colorable, see my blog post in this <a href="https://blog.computationalcomplexity.org/search?q=chromatic+number">here</a>. (No, this is not a joke. If it was I would make if funnier and claim there is a non-computer proof that every planar graph is 4 + 1/e colorable.)</div><div><br/></div><div><div>g) Poincare Conjecture. Conjectured in 1904 and solved in 2002. To bad---if it was solved in 2004 it would be exactly 100 years. There was some progress on this all along so I don't know which step was <i>the hard one </i>though probably they were all hard. This one is harder for me to speculate on. When it was solved and Darling wanted to know why it was worth $1,000,000 I told her that it says <i>if something</i> <i>tastes and smells and feels like a sphere, its a sphere</i>. She was unimpressed.  But back to our story:  in hindsight,</div><div><i>MATH WAS READY FOR SUCH PROBLEMS</i></div><div> since there was steady progress. I think of NOT READY as meaning NO progress, NO plan.</div><div><br/></div><div>h) The Erdos Distance Problem: Show that for any n points in the plane the number of distinct distances is Omega(n/\sqrt{log n}). Not quite solved, but a big milestone was Gutz and Katz proof of Omega(n/log n). For that result</div><div><i>MATH WAS READY FOR SUCH PROBLEMS</i></div><div><i>Steady progress</i>:  see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/Erd%C5%91s_distinct_distances_problem#:~:text=Erd%C5%91s%20distinct%20distances%20problem%20From%20Wikipedia%2C%20the%20free,by%20Larry%20Guth%20and%20Nets%20Katz%20in%202015.">here</a>. What's of interest to us is that there was a barrier result of Omega(n^{8/9}) by Ruzsa (apparently unpublished) that said the techniques being used could not do better-- so people, in short order, found new techniques.  Here is hoping that happens with P vs NP.</div><div><br/></div><div>--------------------------------------------------------------------------------</div><div>Let's look at problems that are open and unsolved.</div><div><br/></div><div>a) Collatz Conjecture (also called the 3x+1 conjecture). I asked</div><div>Jeff Lagarias, who is an expert on the problem:</div><div><br/></div><div><i>Is it true? When will it be resolved?</i> He said <i>Yes</i> and <i>Never</i>.</div><div><br/></div><div>I once heard there has been NO progress on this problem, though I later  heard that Terry Tao has made some progress. In any case, not much progress has been made. Maybe Erdos was right.</div><div><br/></div><div>QUESTION: Why does my spell checker think that<i> Collatz</i> is not a word? </div><div><br/></div><div>b) Small Ramsey Numbers. I asked Stanislaw Radziszowski, who is an expert on Small Ramsey Numbers (he has a dynamic survey on small Ramsey numbers <a href="https://www.combinatorics.org/files/Surveys/ds1/ds1v15-2017.pdf">here</a>) </div><div><br/></div><div><i>What is R(5)?  When will we know? </i>He said <i>43</i> and <i>Never</i>.</div><div><br/></div><div>Worse than being hard, I don't think any nice math has come out of trying to find R(5,5). Too bad. The coloring that gives the lower bound for R(4) and some (perhaps all) of the R(i,j) where i,j\le 4 can be derived from group theory. YEAH! But then connections to interesting math just... stopped. For now? Forever? Joel Spencer told me this is an example of the <i>law</i> <i>of small numbers</i>: patterns that hold for small numbers stop holding when the numbers get too big. (I've seen other things  called <i>the law of small numbers</i> as well.) </div></div><div><div><i>MATH MAY NEVER BE READY FOR SUCH PROBLEMS</i> </div><div>If no interesting math comes out of the attempt to find the exact values of the Ramsey Numbers, then it is not a good problem. </div><div><br/></div><div><i>Note:  </i>The conversations about Collatz and R(5) were within 10 minutes of each other. Depressing day!</div><div><br/></div><div>c) The Twin Primes Conjecture. Sieve methods have been used to get partial result. YEAH! Yitang Zhang showed there exists infinite x such that x and x + 70million (something like that are prime. YEAH. Its been gotten down to x, x+246 and with various assumptions x,x+12 or x, x+6). YEAH! but Sieve methods are known to NOT be able to prove the  conjecture. Dang it!</div><div><i>DO NOT KNOW IF MATH IS READY FOR SUCH PROBLEMS</i>.</div><div>I think people are kind of stuck here. Much like P vs NP, though at least they have some partial results. By contrast, with regard to P vs NP we don't even have that (unless you count Ryan's lower bound on SAT---maybe you do).</div><div><br/></div><div><i>Note</i>: I found that information <a href="https://www.britannica.com/science/twin-prime-conjecture">here</a> which seems to be an Encyclopedia Britannica  website. I would have thought that, with the web and Wikipedia, they would be out of business. Good for them to still be in business! </div><div><br/></div><div>d) I am not qualified to write about any of the Millennium prizes except P vs NP (am I even qualified for that?)  so I ask my readers to leave opinions (informed or not) about, for which of them, </div><div><i>MATH IS NOT READY FOR SUCH PROBLEMS</i></div><div>One of the people who worked on the Riemann Hypothesis said: </div><div><br/></div><div><i>I do not recommend spending half your life on the Riemann Hypothesis. </i></div><div><i><br/></i></div><div>That raises a different question: When do you give up? (topic for a different blog post). </div><div><i><br/></i></div><div>e) I am also not qualified to write about the Hilbert Problems where are still unsolved. Note that some of them are not well enough defined  to ever be resolved (H6: Make Physics rigorous) and some are either solved or unsolved depending on who you ask (H4: Construct ALL metrics where lines are geodesics-- <i>surely,</i> he didn't mean ALL metrics. Probably right, but  stop calling me <i>Shirley</i>!) For a byte more about Hilbert's problems, including a few paragraphs on H4,  see my reviews of two books on them, <a href="http://www.cs.umd.edu/~gasarch/bookrev/44-4.pdf">here</a>. Same as the last item- if you have an opinion (informed or not) about, for which of them that are though to be sort-of open, is math ready for them, leave a comment. </div><div><br/></div><div>CODA: Alexandra will be working on Collatz this summer!</div><div>Let's wish her luck!</div></div><div><br/></div><div><br/></div><div><br/></div></div>
    </content>
    <updated>2021-10-17T19:59:00Z</updated>
    <published>2021-10-17T19:59:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-20T14:39:33Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/144</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/144" rel="alternate" type="text/html"/>
    <title>TR21-144 |  Towards Uniform Certification in QBF | 

	Leroy Chew, 

	Friedrich Slivovsky</title>
    <summary>We pioneer a new technique that allows us to prove a multitude of previously open simulations in QBF proof complexity. In particular, we show that extended QBF Frege p-simulates clausal proof systems such as IR-Calculus, IRM-Calculus, Long-Distance Q-Resolution, and Merge Resolution.
  These results are obtained by taking a technique of Beyersdorff et al. (JACM 2020) that turns strategy extraction into simulation and combining it with new local strategy extraction arguments.



This approach leads to simulations that are carried out mainly in propositional logic, with minimal use of the QBF rules. Our proofs therefore provide a new, largely propositional interpretation of the simulated systems.
We argue that these results strengthen the case for uniform certification in QBF solving, since many QBF proof systems now fall into place underneath extended QBF Frege.</summary>
    <updated>2021-10-17T03:56:36Z</updated>
    <published>2021-10-17T03:56:36Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-10-20T17:37:31Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://gradientscience.org/copriors/</id>
    <link href="https://gradientscience.org/copriors/" rel="alternate" type="text/html"/>
    <title>Combining Diverse Feature Priors</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><!-- <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> -->








<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"> -->
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> -->
<!-- <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script> -->


<!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"> -->
<!-- chart.js -->


<p><a class="bbutton" href="https://arxiv.org/abs/2110.08220" style="float: left; width: 45%;">
<i class="fas fa-file-pdf"/>
    Paper
</a>
<a class="bbutton" href="https://github.com/madrylab/copriors" style="float: left; width: 45%;">
<i class="fab fa-github"/>
   Code
</a>
<br/></p>

<p><i>
    In <a href="https://arxiv.org/abs/2110.08220">our new paper</a>, we take a closer look at the design space of so-called feature priors—i.e., priors that bias the features that a model relies on. We show that models trained with diverse sets of such priors have less overlapping failure modes and can correct each other’s mistakes.
</i></p>

<p>At the core of deep learning’s success is its ability to automatically learn useful features from raw data, e.g., image pixels. Consequently, the set of such learned features has a large impact on the deep learning model’s ability to generalize, especially when the deployment conditions deviate from the training environment. For example, a model that relies heavily on the background of an image may have trouble recognizing a cow on a beach if during training it was mostly encountering cows on grass.</p>

<p>So, how can one control the features that a model relies on? This is often accomplished by changing the model’s architecture or training methodology. For example, by choosing to use a convolutional neural network a model designer biases that model towards learning a hierarchy of spatial features. Similarly, by employing data augmentation during training, one biases the model towards features that are invariant to the particular augmentations used. In fact, researchers have recently explored explicitly manipulating the set of features that a model learns, via, for example, <a href="https://arxiv.org/abs/1811.12231">suppressing texture information</a> by training on stylized inputs or by <a href="https://arxiv.org/abs/1706.06083">training with worst-case input perturbations</a> to <a href="https://arxiv.org/abs/1906.00945">avoid brittle features</a>.</p>

<p>Now, all of these design choices can be thought of as imposing feature priors, i.e., biasing a model towards learning a particular type of features. The question thus becomes: how can we explore and leverage this space of feature priors in a more systematic and purposeful manner?</p>

<h2 id="feature-priors-as-distinct-perspectives-on-data">Feature Priors as Distinct Perspectives on Data</h2>
<p>The core idea is to view different feature priors as distinct perspectives on the data. That is, since different sets of features are likely to generalize differently across inputs, by considering multiple such sets in tandem we can obtain a more holistic (and thus, hopefully, reliable) view on our data.</p>

<p><strong>Setting up our case study:</strong> Let us focus our attention on two concrete feature priors: shape and texture. These two priors arise naturally in the context of image classification and will serve as the basis of our study. We impose these priors through deliberate construction of the dataset and architecture:</p>

<ul>
  <li><strong>Shape-based priors</strong>:  We remove texture information from the images with the help of an edge detection algorithm. We use for this purpose two canonical edge detection algorithms from the computer vision literature: <a href="https://en.wikipedia.org/wiki/Canny_edge_detector">Canny</a> and <a href="https://en.wikipedia.org/wiki/Sobel_operator">Sobel</a>.</li>
  <li><strong>Texture-based priors</strong>: We use a variant of the <a href="https://arxiv.org/abs/1904.00760">BagNet</a> model, which limits the model’s receptive field to prevent the model from relying on global structures like shape.</li>
</ul>

<div>
    <div class="quarterblock">
        <div class="block">
            <img src="https://gradientscience.org/assets/copriors/original.png"/>
            <span style="text-align: center;">Original</span>
        </div>
    </div>
    <div class="quarterblock">
        <div class="block">
            <img src="https://gradientscience.org/assets/copriors/sobel.png"/>
            <span style="text-align: center;">Sobel</span>

        </div>
    </div>
    <div class="quarterblock">
        <div class="block">
            <img src="https://gradientscience.org/assets/copriors/canny.png"/>
            <span style="text-align: center;">Canny</span>
        </div>
    </div>
    <div class="quarterblock">
        <div class="block">
            <img src="https://gradientscience.org/assets/copriors/bagnet.png"/>
            <span style="text-align: center;">BagNet</span>

        </div>
    </div>
</div>

<div class="footnote">
Visualizing different feature priors. Sobel and Canny suppress texture through edge detection while BagNet suppresses shape by limiting the receptive field.
</div>

<p>Intuitively, these priors should correspond to very different sets of features. But are the views offered by these priors truly complementary? A simple way to measure this is to quantify the overlap of the failure modes of the models trained with the respective priors. Specifically, we measure the correlation of predicting the correct label for each pair of such models. We perform this analysis on a subset of CIFAR-10.</p>

<p><img class="bigimg" id="pipeline" src="https://gradientscience.org/assets/copriors/cifar_corr_table.png"/></p>
<div class="footnote"> Correlation of predictions between pairs of models with different priors on a subset of CIFAR-10. The shape-biased and texture-biased models have the least correlated predictions.
</div>

<p>It looks like these results match our intuition! Indeed, models corresponding to the same feature priors (but different random initialization) are relatively well correlated with each other. This also includes the case when we use two <em>different</em> shape biases. On the other hand, when we consider a pairing of a shape-biased model and a texture-biased model the predictions are the least correlated, that is, they make different mistakes on the test set.</p>

<h2 id="combining-feature-priors">Combining feature priors</h2>

<p>Since shape- and texture-biased models make different types of mistakes, can we leverage their diversity to improve our predictions?</p>

<h3 id="ensembles">Ensembles</h3>
<p>A natural way to examine that question is combining these models in an ensemble. This ensemble, for a given test input, evaluates both models on that input and then outputs the one prediction that is assigned the highest probability by the respective model. It turns out that, indeed, such an ensemble is significantly more accurate when we combine in this way models with different priors (as opposed to combining two models trained with the same prior, but with different initializations). Clearly, prediction diversity matters!</p>

<div id="anno"> 
<canvas height="35%" id="ensemble_bar" width="100%"/>
</div>
<div class="footnote"> The maximum accuracy achieved when using a single model, an ensemble with two models with the same prior, and an ensemble with two models with different priors on the CIFAR-10 subset. 
</div>

<h3 id="co-training">Co-Training</h3>
<p>So far, we demonstrated that models with diverse feature priors have less overlapping failure modes, and can be combined via ensembling for improved generalization performance. However, is that all? In particular, are there ways of incorporating prior diversity during training (as opposed to ensembling post hoc) in order to improve the learning process itself?</p>

<p>To answer this question, we focus on <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.664.3543">self-training</a>, a methodology often employed when the labeled data is insufficient to learn a well-generalizing model alone, but a large pool of unlabeled data is available. The key idea in self-training is to use a model trained on the labeled data to produce “pseudo-labels” for the unlabeled data and then use these labels for further training. This setting is particularly challenging since: (a) the (original) labelled data points are typically too few to learn reliable prediction rules, and (b) any incorrect prediction rules learned will be reinforced via pseudo-labelling (so-called <a href="https://arxiv.org/abs/1908.02983">“confirmation bias”</a>).</p>

<p>From this perspective, our goal is to jointly train models with different feature priors to mitigate the propagation of such incorrect prediction rules. We will do so by leveraging the well-established framework of <a href="https://www.cs.cmu.edu/~avrim/Papers/cotrain.pdf">co-training</a>, a framework designed for learning from data with multiple independent sets of features. In the context of our study, we can instantiate this framework as follows.</p>

<p>First, we train one model for each prior using the labeled data. Then, we use each of these models to pseudo-label the unlabelled data and add the examples which are assigned the highest predicted probability to a joint pseudo-labelled data pool. We then use these examples to train both models further and keep repeating this process until we eventually use all the unlabeled data for training. In the end, we combine these models into a single classifier by training a standard model from scratch on the combined pseudo-labels.</p>

<p>The intuition behind this process is that by jointly training models which rely on different features, these models can learn from each other’s predictions. If one model produces incorrect pseudo-labels, we can hope that the other model will correct them by relying on alternative prediction rules.</p>

<p>So, how well does this approach work? To evaluate it, we extract from the CIFAR-10 dataset a small, labeled part (100 examples per class) and treat the rest of this dataset unlabeled. We then compare how different training methods—specifically, self-training a model with a single prior, and co-training models with different priors—perform in this setting. (For an additional baseline, we also consider ensembling two such models with different priors together.)</p>

<div id="anno"> 
<canvas height="35%" id="summary_bar" width="100%"/>
</div>
<div class="footnote"> Test accuracy of models in pre-trained, self-trained, and co-trained settings. We consider: a single model alone, combining multiple models with the same prior, and combining models with diverse priors.  
</div>

<p>Overall, we find that co-training with shape- and texture-based priors can significantly improve the test accuracy of the final model compared to self-training with any of the priors alone. In fact, co-training models with diverse priors also improves significantly upon simply combining self-trained models in an ensemble. So these models are indeed able to take advantage of each other’s predictions during training.</p>

<h2 id="priors-and-spurious-correlations">Priors and Spurious Correlations</h2>
<p>So far, we were focused on a setting where the training and test data were all sourced from the same distribution. However, a major challenge for the real-world model deployment are spurious correlations: associations which are predictive on the training data but not valid for the actual task. For example, an image classification model may predict <a href="https://gradientscience.org/background/">an object’s class based on its location</a>, or <a href="https://www.medrxiv.org/content/10.1101/2020.09.13.20193565v2.full">rely on artifacts of the data collection process</a>.</p>

<p>How can we train models that avoid picking up such spurious correlations? For this problem to be tractable in the first place, we need to rely on some information beyond the training data. Here, we will assume that we have access to an unlabelled dataset where this correlation does not hold (e.g., cows do not always appear on grass and thus the correlation “grass”-&gt;”cow” is not always predictive). This is a rather mild assumption in settings where we can easily collect unlabelled data from a variety of sources—if a correlation is spurious, it is less likely to be uniformly present.</p>

<p>As a concrete example, let us consider a simple gender classification task based on the CelebA dataset. In this task, we will introduce a spurious correlation into the labeled data by only collecting photographs of blond females and non-blond males. This makes hair color a good predictor of gender for the labeled dataset, but will not generalize well beyond that as such correlation does not hold in the real world.</p>

<p>Our goal here will be to harness an unbiased, yet unlabelled dataset, to learn a model that avoids this correlation. We will again attempt to do so by co-training models with diverse feature priors: shape and texture. Notice that since the spurious correlation is color-based, shape-biased models are likely to ignore it. As a result, we anticipate that the prediction of the shape-biased and texture-biased models will differ on inputs where hair color disagrees with gender. Thus, during co-training, these models are intuitively providing each other with counter-examples and are thus likely to steer each other away from incorrect prediction rules.</p>

<div id="anno"> 
<canvas height="35%" id="spurious_bar" width="100%"/>
</div>
<div class="footnote"> Accuracy of models with different feature priors on the (unbiased) CelebA test set. We consider the setting of using only the (biased) labeled data, as well as self-training and co-training using the (unbiased) unlabeled dataset. (For co-training, the combined model is a standard model trained on the combined pseudo-labels of the co-trained Canny and BagNet models.) 
</div>

<p>We find that this is indeed the case! When we co-train a texture-biased model with a shape-biased one, the texture-biased model improves substantially, relying less on the hair color. Moreover, the shape-biased model also improves through co-training. This indicates that even though the texture-biased model relies heavily on the spurious correlation, it also captures non-spurious associations that, through pseudo-labeling, are useful for the shape-based model too.</p>

<h2 id="outlook-exploring-the-design-space-of-priors">Outlook: Exploring the Design Space of Priors</h2>
<p>In this post, we described how models trained with diverse feature priors can be leveraged during training to learn more reliable prediction rules (e.g., in the presence of spurious correlations). However, we view our exploration as only the first step in systematically exploring the design space of feature priors. We believe that this direction will yield an important building block of reliable training and deployment pipelines.</p></div>
    </summary>
    <updated>2021-10-17T00:00:00Z</updated>
    <published>2021-10-17T00:00:00Z</published>
    <source>
      <id>https://gradientscience.org/</id>
      <author>
        <name>Gradient Science</name>
      </author>
      <link href="https://gradientscience.org/" rel="alternate" type="text/html"/>
      <link href="https://gradientscience.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Research highlights and perspectives on machine learning and optimization from MadryLab.</subtitle>
      <title>gradient science</title>
      <updated>2021-10-19T22:53:58Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2021-10-16-the-ideal-state-machine-model-multiple-clients-and-linearizability/</id>
    <link href="https://decentralizedthoughts.github.io/2021-10-16-the-ideal-state-machine-model-multiple-clients-and-linearizability/" rel="alternate" type="text/html"/>
    <title>The Ideal State Machine Model: Multiple Clients and Linearizability</title>
    <summary>We introduced state machines and state machine replication in an earlier post. In this post, we elaborate on the exact notion of safety and liveness that can be obtained by an ideal state machine when there are multiple clients. First, these definitions highlight the challenges of serving multiple clients. Second,...</summary>
    <updated>2021-10-16T19:45:00Z</updated>
    <published>2021-10-16T19:45:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2021-10-19T22:55:26Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/10/15/linkage</id>
    <link href="https://11011110.github.io/blog/2021/10/15/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>I was interested to see a familiar-looking graph drawing as one of the answers to the prompt “multiplicity” for the first entry in Mathober 2021 (\(\mathbb{M}\)). It’s a multigraph formed by a triangle with tripled edges, and looks a lot like the drawing I made for the Wikipedia Shannon multigraph article, prettied up by making an infinitely recessing sequence of these drawings rather than just one. Good choice for multiplicity.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p>I was interested to see a familiar-looking graph drawing as one of the answers to <a href="https://fractalkitty.com/2021/10/02/mathober-2021-begins/">the prompt “multiplicity” for the first entry in Mathober 2021</a> (<a href="https://mathstodon.xyz/@11011110/107030908468774953">\(\mathbb{M}\)</a>). It’s a multigraph formed by a triangle with tripled edges, and looks a lot like <a href="https://commons.wikimedia.org/wiki/File:Multigraph-edge-coloring.svg">the drawing I made</a> for <a href="https://en.wikipedia.org/wiki/Shannon_multigraph">the Wikipedia Shannon multigraph article</a>, prettied up by making an infinitely recessing sequence of these drawings rather than just one. Good choice for multiplicity.</p>
  </li>
  <li>
    <p><a href="https://gilkalai.wordpress.com/2021/10/03/to-cheer-you-up-in-difficult-times-32-annika-heckels-guest-post-how-does-the-chromatic-number-of-a-random-graph-vary/">Non-concentration of the chromatic number of random graphs</a> (<a href="https://mathstodon.xyz/@11011110/107040518830792599">\(\mathbb{M}\)</a>). Uniformly random graphs, \(G(n,1/2)\) in the Erdős–Rényi–Gilbert model, turn out to have chromatic numbers that, for infinitely many \(n\), are spread over roughly \(\sqrt{n}\) values. But there are weird fluctuations so that, conjecturally, for some \(n\) the concentration is much tighter, more like \(n^{1/4}\).</p>
  </li>
  <li>
    <p><a href="https://www.insidehighered.com/news/2021/10/04/tenure-under-threat-georgia">University System of Georgia moves to gut tenure</a> (<a href="https://mathstodon.xyz/@11011110/107047579890149970">\(\mathbb{M}\)</a>). The proposed new policy includes procedures for removal of tenure under certain enumerated grounds, including failure to perform their jobs (this is pretty normal) but then adds a massive escape clause in which the board of regents can remove tenured faculty at any time as long as their reason for doing so is not one of the enumerated ones.</p>
  </li>
  <li>
    <p><a href="http://hyperbolic-crochet.blogspot.com/2010/07/story-about-origins-of-model-of.html">The first physical models of the hyperbolic plane, made in 1868 by Beltrami</a> (<a href="https://mathstodon.xyz/@11011110/107052024179327595">\(\mathbb{M}\)</a>, <a href="http://www.open.ac.uk/blogs/is/?p=731">via</a>), blog post by Daina Taimiņa from 2010. Maybe you could make something like this by wrapping and stretching a disk of wet paper in a roll around a pseudosphere (https://en.wikipedia.org/wiki/Pseudosphere)? The rolled-up photo of Beltrami’s model suggests that he did that. The via link shows this as a tangent to a story about triangulated polygons, frieze patterns, and the Farey tessellation.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=QFj-hF8XDQ0">Why do bees make rhombic dodecahedrons</a> (<a href="https://mathstodon.xyz/@11011110/107058516442920053">\(\mathbb{M}\)</a>)? Nice video from Matt Parker (Stand-up Maths) on why bees usually end the cells of their honeycombs with rhombic dodecahedron faces, why this isn’t the optimal solution to fitting two layers of cells together (in terms of minimum wax usage), and why it isn’t reasonable to expect bees to find exact optima for this problem. If I have to quibble with something, though, it’s his plural. It’s not wrong, but see <a href="https://books.google.com/ngrams/graph?content=dodecahedrons%2Cdodecahedra">Google ngrams</a>.</p>
  </li>
  <li>
    <p><a href="https://www.quantamagazine.org/mathematicians-prove-melting-ice-stays-smooth-20211006/">Mathematicians prove melting ice stays smooth</a> (<a href="https://mathstodon.xyz/@11011110/107064697896988128">\(\mathbb{M}\)</a>, <a href="https://en.wikipedia.org/wiki/Stefan_problem">see also</a>). The headline is a little overstated: you’re probably familiar with thin necks of ice melting to sharp points at the instant they separate. But these singularities are instantaneous: mathematical models of ice stay smooth for all but a measure-zero set of times. Original paper: “<a href="https://arxiv.org/abs/2103.13379">The singular set in the Stefan problem</a>”, Alessio Figalli, Xavier Ros-Oton, and Joaquim Serra.</p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@JordiGH/107061930434927745">Discussion of the recent meme telling programmers and mathematicians that summation notation and for loops are the same thing</a>. They’re not quite the same, though: summations don’t have an order of evaluation. But which is easier for people who don’t already know what they are to search and find out about? And why do programmers get angry at non-programming notational conventions?</p>
  </li>
  <li>
    <p><a href="http://eugeniacheng.com/wp-content/uploads/2017/02/cheng-morality.pdf">Mathematics, morally</a> (<a href="https://mathstodon.xyz/@11011110/107078314739030894">\(\mathbb{M}\)</a>, <a href="https://news.ycombinator.com/item?id=28816050">via</a>), Eugenia Cheng, 2004. Somehow I hadn’t run across this  before. It argues that much philosophy of mathematics is irrelevant to practice (“You can’t tell from somebody’s mathematics if they are a fictionalist, a rationalist, a platonist, a realist, an operationalist, a logicist, a formalist, structuralist, nominalist, intuitionist.”) and instead considerations of the right way of handling certain topics are more central.</p>
  </li>
  <li>
    <p>The SIGACT Committee for the Advancement of Theoretical Computer Science is collecting information on women in theoretical computer science (<a href="https://mathstodon.xyz/@11011110/107084102339408082">\(\mathbb{M}\)</a>). If this is you, please see <a href="https://thmatters.wordpress.com/2021/10/08/soliciting-information-about-women-in-tcs/">their announcement</a> for details of how to be counted.</p>
  </li>
  <li>
    <p><a href="https://pratt.duke.edu/about/news/rudin-squirrel-award">Cynthia Rudin wins major award with silly name</a> (<a href="https://mathstodon.xyz/@11011110/107089557928657710">\(\mathbb{M}\)</a>), for her work on machine learning systems that learn to predict behavior using simple, interpretable, and transparent formulas.</p>
  </li>
  <li>
    <p>According to the <a href="https://www.siam.org/conferences/cm/conference/soda22">SODA web site</a>, SIAM has decided that their conferences will be hybrid through July (<a href="https://mathstodon.xyz/@11011110/107090556997921608">\(\mathbb{M}\)</a>). So if (like me) you wanted to participate in SODA/SOSA/ALENEX/APOCS, but were worried about planning a trip to Virginia with another predicted winter wave of Covid, now you can stay home and conference safely. Or, if you feel hybrid conferences are problematic and organizers should do one or the other but not both, now you have another reason to be annoyed.</p>
  </li>
  <li>
    <p>Rarely is the question asked: <a href="https://blogs.ams.org/beyondreviews/2021/10/14/are-math-papers-getting-longer/">Are math papers getting longer?</a> (<a href="https://mathstodon.xyz/@11011110/107104144047349269">\(\mathbb{M}\)</a>). Following earlier work by Nick Trefethen, Edward Dunne provides some data suggesting that (for certain journals, at least, and not the ones with page limits) the answer is yes. I’m not convinced by the suggested explanation that it’s because they are taking more effort to explain “connections with other work”, though: is that really a big enough fraction of most papers?</p>
  </li>
  <li>
    <p>I haven’t been using my office desktop Mac much because I haven’t been into my office much, so it took me a while to pay attention to the fact that much of its networking had recently broken. <a href="https://eclecticlight.co/2021/09/21/el-capitan-and-older-mac-os-x-are-about-to-have-a-security-certificate-problem/">Here’s why</a> (<a href="https://mathstodon.xyz/@11011110/107107828546240163">\(\mathbb{M}\)</a>). It was still running OS X El Capitan (10.11.6) and a crucial top-level certificate expired. The machine is too old (late 2009) for the latest OS X but it looks like I can and should upgrade to High Sierra, 10.13. So much for getting anything else accomplished today…</p>
  </li>
</ul></div>
    </content>
    <updated>2021-10-15T15:43:00Z</updated>
    <published>2021-10-15T15:43:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-10-15T23:40:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-7816227323646004961</id>
    <link href="http://blog.computationalcomplexity.org/feeds/7816227323646004961/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/a-young-persons-game.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/7816227323646004961" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/7816227323646004961" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/a-young-persons-game.html" rel="alternate" type="text/html"/>
    <title>A Young Person's Game?</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>When László Babai first announced his graph isomorphism in quasipolynomial time result, I <a href="https://blog.computationalcomplexity.org/2015/11/a-primer-on-graph-isomorphism.html">wrote</a></p><blockquote><p>We think of theory as a young person's game, most of the big breakthroughs coming from researchers early in their careers. Babai is 65, having just won the Knuth Prize for his lifetime work on interactive proofs, group algorithms and communication complexity. Babai uses his extensive knowledge of combinatorics and group theory to get his algorithm. No young researcher could have had the knowledge base or maturity to be able to put the pieces together the way that Babai did.</p></blockquote><p>Babai's proof is an exceptional story, but it is exceptional. Most CS theorists have done their best work early in their career. I got myself into a <a href="https://twitter.com/fortnow/status/1447681436513882112">twitter discussion</a> on the topic. For me, I'm proud of the research I did through my forties, but I'll always be best known, research wise, for my work on interactive proofs around 1990. It would be hard to run a scientific study to determine cause and effect but here are some reasons, based on my own experiences, on why we don't see research dominated by the senior people in theory.</p><p/><b>The field changes - </b>Computation complexity has moved from a computational-based discipline to one now dominated by combinatorics, algebra and analysis. I'm not complaining, a field should evolve over time but it plays less to my strengths. It's hard to teach this old dog new tricks.<div><b>The fruit hanged lower - </b>there were important problems with easier proofs available then not available now<div><b>Responsibilities </b>- You have fewer as a PhD student, postdoc or assistant professor.</div><div><b>Family - </b>becomes more of a focus.</div><div><b>Taking on new jobs - </b>Many academics, though not all, take on administrative roles at their university or , or leave academics completely. </div><div><b>The young people have the new ideas </b>- And older people get settled in their ways</div><div><b>The thrill is gone or at least decays - </b>Your first theorem, your first talk, your first conference paper gives you a level of excitement that's hard to match.</div><div><b>Existentialism - </b>The realization that while computing has no doubt changed the world, my research, for the most part, hasn't.</div><div><b>Cognitive Decline</b> - Probably the most controversial but for me I find it hard to focus on problems like I used to. Back in the day I prided myself on knowing all the proofs of my theorems, now I can't even remember the theorems.</div><div><br/></div><div>Honestly there is just nothing wrong with taking on new roles, writing books, surveys and blogs, focusing on teaching and mentorship and service and leaving the great research to the next generation.</div><div><p/></div></div></div>
    </content>
    <updated>2021-10-15T13:32:00Z</updated>
    <published>2021-10-15T13:32:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-20T14:39:33Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/15/multiple-faculty-positions-in-theory-of-computing-at-york-university-apply-by-november-30-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/15/multiple-faculty-positions-in-theory-of-computing-at-york-university-apply-by-november-30-2021/" rel="alternate" type="text/html"/>
    <title>Multiple faculty positions in theory of computing at York University (apply by November 30, 2021)</title>
    <summary>York University in Toronto, Canada is inviting applications for five tenured or tenure-track positions in the theory of computing or data science (both broadly interpreted). The review of applications will begin on November 15, and full applications are due by November 30. Website: https://lassonde.yorku.ca/about/careers/faculty-recruitment Email: eecsjoin@yorku.ca</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>York University in Toronto, Canada is inviting applications for five tenured or tenure-track positions in the theory of computing or data science (both broadly interpreted). The review of applications will begin on November 15, and full applications are due by November 30.</p>
<p>Website: <a href="https://lassonde.yorku.ca/about/careers/faculty-recruitment">https://lassonde.yorku.ca/about/careers/faculty-recruitment</a><br/>
Email: eecsjoin@yorku.ca</p></div>
    </content>
    <updated>2021-10-15T13:01:38Z</updated>
    <published>2021-10-15T13:01:38Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2021-10-15-Nakamoto-Consensus/</id>
    <link href="https://decentralizedthoughts.github.io/2021-10-15-Nakamoto-Consensus/" rel="alternate" type="text/html"/>
    <title>Nakamoto's Longest-Chain Wins Protocol</title>
    <summary>In this post, we will cover Nakamoto’s Consensus protocol presented in the Bitcoin whitepaper. There are a lot of posts and videos that explain this seminal and simple protocol. Our goal in this post will be to intuitively piece out the need for different aspects of the protocol, such as...</summary>
    <updated>2021-10-15T04:00:00Z</updated>
    <published>2021-10-15T04:00:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2021-10-19T22:55:26Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/15/rqs-postdoctoral-fellowship-at-university-of-maryland-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/15/rqs-postdoctoral-fellowship-at-university-of-maryland-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>RQS Postdoctoral Fellowship at University of Maryland (apply by December 1, 2021)</title>
    <summary>The NSF Quantum Leap Challenge Institute for Robust Quantum Simulation (https://rqs.umd.edu) seeks exceptional candidates for the RQS Postdoctoral Fellowship. Applications should be submitted through AcademicJobsOnline at https://academicjobsonline.org/ajo/jobs/19910. Website: https://academicjobsonline.org/ajo/jobs/19910 Email: quics-coordinator@umiacs.umd.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The NSF Quantum Leap Challenge Institute for Robust Quantum Simulation (<a href="https://rqs.umd.edu">https://rqs.umd.edu</a>) seeks exceptional candidates for the RQS Postdoctoral Fellowship. Applications should be submitted through AcademicJobsOnline at <a href="https://academicjobsonline.org/ajo/jobs/19910">https://academicjobsonline.org/ajo/jobs/19910</a>.</p>
<p>Website: <a href="https://academicjobsonline.org/ajo/jobs/19910">https://academicjobsonline.org/ajo/jobs/19910</a><br/>
Email: quics-coordinator@umiacs.umd.edu</p></div>
    </content>
    <updated>2021-10-15T00:45:33Z</updated>
    <published>2021-10-15T00:45:33Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/14/assistant-professor-of-computer-science-at-california-state-university-east-bay-apply-by-october-31-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/14/assistant-professor-of-computer-science-at-california-state-university-east-bay-apply-by-october-31-2021/" rel="alternate" type="text/html"/>
    <title>Assistant Professor of Computer Science at California State University East Bay (apply by October 31, 2021)</title>
    <summary>The Department of Computer Science at CSUEB invites applications for 2 tenure-track appointments as Assistant Professor in Computer Science (considering all areas of computer science, capable of teaching in emerging areas) starting Fall 2022. Website: http://www.csueastbay.edu/oaa/jobs/csueb.html Email: cs@csueastbay.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science at CSUEB invites applications for 2 tenure-track appointments as Assistant Professor in Computer Science (considering all areas of computer science, capable of teaching in emerging areas) starting Fall 2022.</p>
<p>Website: <a href="http://www.csueastbay.edu/oaa/jobs/csueb.html">http://www.csueastbay.edu/oaa/jobs/csueb.html</a><br/>
Email: cs@csueastbay.edu</p></div>
    </content>
    <updated>2021-10-14T17:42:03Z</updated>
    <published>2021-10-14T17:42:03Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://gradientscience.org/smoothing/</id>
    <link href="https://gradientscience.org/smoothing/" rel="alternate" type="text/html"/>
    <title>Certified Patch Robustness Via Smoothed Vision Transformers (Part 1)</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><!-- <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> -->








<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"> -->
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> -->
<!-- <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script> -->


<!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"> -->
<!-- chart.js -->


<p><a class="bbutton" href="https://gradientscience.org/certivited.pdf" style="float: left; width: 45%;">
<i class="fas fa-file-pdf"/>
    Paper
</a>
<a class="bbutton" href="https://github.com/madrylab/smoothed-vit" style="float: left; width: 45%;">
<i class="fab fa-github"/>
   Code
</a>
<!-- <a class="bbutton" href="/breeds_class_hierarchy">
<i class="fa fa-tree"></i>
&nbsp;&nbsp; Hierarchies
</a> -->
<br/></p>

<p><i>In a series of two blog posts, we dive into how to build practical certified defenses against adversarial patches.
In Part I below, we give an overview of smoothing-based defenses, a popular class of certified defenses, and walk through a specific example of using de-randomized smoothing to defend against adversarial patch attacks.
In <a href="https://gradientscience.org/smoothed-vit">Part II</a>, we discuss our latest work that demonstrates how using vision transformers with de-randomized smoothing (smoothed ViTs) can significantly improve these defenses. Our approach not only provides better certified defenses against adversarial patches but also maintains standard accuracy and inference times at levels comparable to that of regular (non-robust) models. Thanks to these improvements, smoothed ViTs become a truly viable alternative to regular models.
</i></p>

<div class="container">
    <button class="rbutton" style="float: left; width: 25%; margin-left: 150px;">❮</button>
    <button class="rbutton" style="float: right; width: 25%; margin-right: 150px;">❯</button>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide12.png"/>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide7.png"/>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide8.png"/>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide9.png"/>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide10.png"/>
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/Slide11.png"/>
</div>



<p>Adversarial examples are small modifications of inputs that can induce machine learning models to misclassify those inputs. These attacks can be roughly categorized into two broad classes: small, synthetic perturbations that are visually indistinguishable from the original input, and physically realizable attacks that can break deployed machine learning systems in the wild. One popular attack in the latter category, known as adversarial patches, maliciously perturbs a bounded region in the image (typically a square).</p>

<div>
    <div class="halfblock">
        <div class="block">
            <span style="text-align: center;">Clean image</span>
            <img src="https://gradientscience.org/assets/certified-vit/images/threshold_illustration_schematic/duck_8.png"/>
            <span style="text-align: center; font-weight: 400;">Predicted class: Duck</span>
        </div>
    </div>
    <div class="halfblock">
        <div class="block">
            <span style="text-align: center;">Attacked image</span>
            <img src="https://gradientscience.org/assets/certified-vit/images/threshold_illustration_schematic/duck_attacked_largepatch_8.png"/>
            <span style="text-align: center; font-weight: 400;">Predicted class: Boat</span>
        </div>
    </div>
</div>

<div class="footnote">
An example of an adversarial patch attack. A square patch is added to the image in order to cause the classifier to misclassify the image as something else, such as a boat instead of a duck. 
</div>

<p>Adversarial patches can be used to undermine a variety of vision-based tasks—in particular, have been used to <a href="https://arxiv.org/abs/1712.09665">deceive image classifiers</a>, <a href="https://arxiv.org/abs/1906.11897">manipulate object detectors</a>, and <a href="https://arxiv.org/abs/1910.10053">disrupt optical flow estimation</a>. Such attacks tend to be relatively easy to implement too as they just require, e.g., <a href="https://arxiv.org/abs/1707.08945">printing adversarial stickers</a>, <a href="https://arxiv.org/abs/1910.14667">creating adversarial pieces of clothing</a>,or <a href="https://dl.acm.org/doi/pdf/10.1145/2976749.2978392">manufacturing adversarial glasses</a>.</p>

<p>While several heuristic defenses have been proposed to protect against adversarial patches, some of these defenses were shown to <a href="https://arxiv.org/abs/2003.06693">not be fully effective</a>. This is unfortunately <a href="https://arxiv.org/abs/2002.08347">a fairly common theme in adversarial examples research</a>.</p>

<p>Certified defenses attempt to alleviate such empirical evaluation problems by providing robustness guarantees that are provable. However, certified guarantees tend to be modest and come at a steep cost. For instance, <a href="https://arxiv.org/abs/2002.10733">recently proposed certified defenses against adversarial patches</a> can guarantee only 14%  robust accuracy on ImageNet. Furthermore, certified models are often substantially slower (by even 2-4 orders of magnitude) and significantly less accurate (in terms of standard accuracy) than non-robust models, which severely limits their practicality.</p>

<h2 id="smoothing-models-for-provable-robustness">Smoothing models for provable robustness</h2>
<p>We begin our discussion of certified defenses with an overview of smoothing, a general strategy for creating models that are provably robust to adversarial attacks. They revolve around the idea of deriving a (robust) prediction by aggregating many  variations  of the original input (e.g., ones that correspond to <a href="https://arxiv.org/abs/1902.02918">adding Gaussian noise</a>, <a href="https://arxiv.org/abs/1911.09272">masking parts of the input</a>, or <a href="https://arxiv.org/abs/2007.08450">augmenting it with generative models</a>). The underlying intuition is that while it might be easy for an adversary to attack a single input, it is much harder for them to simultaneously attack all of the input variations. Thus, instead of directly classifying the original input, we classify each of such variations of that input and then output the most frequently predicted class—if the number of variations that agree with this class is high enough then the prediction is guaranteed to be robust.</p>

<p>Let’s dive into the details! To create a smoothed classifier, we change the typical  forward pass of our classifier (often referred to as the base classifier) into a three-step procedure:</p>

<ol>
  <li>Construct variations of the input.</li>
  <li>Classify all input variations individually.</li>
  <li>Output the most frequently predicted class.</li>
</ol>

<p>Now, once we have such a smoothed classifier, how can we certify its robustness? The key assumption for certification is that an adversary can only affect a limited number of input variations. If this is true, certification amounts to a simple counting problem: if the difference between the first- and second-most frequently predicted classes is larger than what an adversary could ever change via their manipulation, then the prediction is guaranteed to be robust! Importantly, for this approach to work well, it is key that these variations remain informative of the correct class while remaining hard for the adversary to perturb many of them simultaneously. This gives rise to a natural trade-off between robustness and accuracy.</p>

<p>By choosing different types of input variations, smoothing techniques can defend against different types of adversarial attacks. For example, smoothing classifiers with random additive noise can provide certified defenses against adversarial <a href="https://arxiv.org/abs/1902.02918">L2</a> and <a href="https://arxiv.org/abs/2002.08118">L1</a> attacks. On the other hand, smoothing over “pixel flows” can provide <a href="https://arxiv.org/abs/1910.10783">certified defenses against Wasserstein perturbations</a>. One can even “smooth” the entire pipeline of both training and inference (treating it as a single module), to get robustness to <a href="https://arxiv.org/abs/2002.03018">data poisoning attacks</a>. In general, if we can construct a set of input variations so that the adversary can only affect some fraction of them, we can use smoothing to defend against the corresponding attacks!</p>

<h2 id="derandomized-smoothing-a-smoothing-defense-against-patch-attacks">Derandomized Smoothing: A Smoothing Defense against Patch Attacks</h2>

<p>How can we use smoothing to defend against adversarial patches specifically? Recall that to be able to create a smoothing defense, we need to come up with a way to generate variations of an image that limit the effect of an adversarial patch and still be indicative of the correct class label. Here, we exploit a key property of adversarial patches: they are limited to a small, contiguous region of the input image.</p>

<p>Specifically, for each variation, we mask out all of the image except for a small region. In most of these variations, the adversarial patch will be fully masked, and thus cannot affect the model’s prediction by construction. This technique was originally introduced in a certified defense known as <a href="https://arxiv.org/abs/2002.10733">derandomized smoothing (Levine &amp; Feizi, 2020)</a>. Typically, we leave a column of the image unmasked as shown in the figure below, otherwise known as a column ablation (check out the original paper for some other ablation types).</p>

<div id="ablation_figure">
    <div>
        <div class="seventhblock">
        </div>
    </div>
</div>

<div class="footnote">
    Example of column ablations for an input image. Most of the image is masked out except for a column of the image. An adversarial patch can only affect a column ablation if the patch itself is located within the ablation, thus limiting the effect of an adversary. Click on the image to see other column ablations for the same image. 
</div>

<div class="seventhblock token_column"/><img src="https://gradientscience.org/' + imgUrl + '"/>

<h2 id="certified-guarantee-against-patch-attacks">Certified guarantee against patch attacks</h2>

<p>Now that we have our smoothed classifier, how can we prove that the prediction is robust to patch attacks? Since a patch is of limited size, an adversary can only affect the few image variations that physically overlap with the patch. Consequently, if the margin of the winning prediction is large enough, then we can guarantee robustness to adversarial patches.</p>

<div>
    <div>
        <div class="thirdblock">
            <div class="rbutton block clicked sc patch_button" id="no_patch">No patch</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block sc patch_button" id="small_patch">32x32 patch</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block sc patch_button" id="large_patch">64x64 patch</div>
        </div>
    </div>
    <div>
        <div class="twofifthsblock">
            <div class="block full_div">
                <span id="full_label" style="text-align: center;"/>
                <img id="full_image" src="https://gradientscience.org/feed.xml"/>
            </div>
        </div>
        <div class="threefifthsblock">
            <div class="block">
                <span style="text-align: center;">Classified column ablations</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Boat</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="https://gradientscience.org/feed.xml"/>
                </div>
                <span class="ablation_label" style="text-align: center;">Finch</span>
            </div>
        </div>
    </div>
    <div class="block" id="ablation_container">
        <canvas height="200" id="majority_vote" width="400"/>
    </div>
</div>



<div class="footnote">
A simplified demonstration of the derandomized smoothing defense for patch robustness. Here, an image of a duck is split into column ablations (our choice of input variation), each of which are classified individually. Since 6 out of 8 column ablations are classified as duck, the smoothed model predicts that this is a duck. A 32x32 patch is only large enough to affect at most 2 column ablations, which is not enough to change the prediction. Thus, this prediction is certifiably robust to 32x32 patches. In contrast, a 64x64 patch can affect up to 3 column ablations and can potentially flip the most frequent class to boat, and so the model is not certifiably robust to 64x64 patches. 
</div>

<p>To make this more precise, let $\Delta$ be the number of ablations that a patch could simultaneously affect (in the worst case). If the winning margin is at least $2\Delta$, then the smoothing defense guarantees that the predicted class is robust to this patch size. The fraction of examples which meet this certification threshold is typically referred to as certified accuracy.</p>

<div class="footnote">
 For adversarial patch attacks of size m x m, and column ablation size $b$, we have $\Delta=m+b-1$
</div>

<h2 id="challenges-for-certified-patch-defenses">Challenges for Certified Patch Defenses</h2>

<p>Although certified patch defenses can provide guarantees against adversarial attacks, like many other certified defenses, they face several major challenges that limit their practicality:</p>

<ol>
  <li>They provide relatively modest guarantees, and can only guarantee robustness for a relatively small fraction of inputs and/or only a small patch size.</li>
  <li>The standard accuracy is typically much lower than that of a standard, non-robust model, forcing on the practitioners an unfavorable “trade-offs” between robustness and accuracy.</li>
  <li>Inference times tend to be several orders of magnitude larger than that of a standard, non-robust model, making certified defenses difficult to deploy in real-time settings.</li>
</ol>

<p>In the <a href="https://gradientscience.org/smoothed-vit">next post</a>, we discuss our latest work on making certified defenses much more practical. Specifically, we show how leveraging vision transformers (ViT) enables better handling of input variations and significant improvement of the margins for certification. With some straightforward modifications to the ViT architecture, we are also able to develop certifiably robust models that not only outperform previous certified defenses but also have practical inference times and standard accuracies.</p></div>
    </summary>
    <updated>2021-10-14T00:00:00Z</updated>
    <published>2021-10-14T00:00:00Z</published>
    <source>
      <id>https://gradientscience.org/</id>
      <author>
        <name>Gradient Science</name>
      </author>
      <link href="https://gradientscience.org/" rel="alternate" type="text/html"/>
      <link href="https://gradientscience.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Research highlights and perspectives on machine learning and optimization from MadryLab.</subtitle>
      <title>gradient science</title>
      <updated>2021-10-19T22:53:56Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://gradientscience.org/smoothed-vit/</id>
    <link href="https://gradientscience.org/smoothed-vit/" rel="alternate" type="text/html"/>
    <title>Certified Patch Robustness Via Smoothed Vision Transformers (Part 2)</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><!-- <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> -->








<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"> -->
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> -->
<!-- <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script> -->


<!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"> -->
<!-- chart.js -->


<p><a class="bbutton" href="https://gradientscience.org/certivited.pdf" style="float: left; width: 45%;">
<i class="fas fa-file-pdf"/>
    Paper
</a>
<a class="bbutton" href="https://github.com/madrylab/smoothed-vit" style="float: left; width: 45%;">
<i class="fab fa-github"/>
   Code
</a>
<!-- <a class="bbutton" href="/breeds_class_hierarchy">
<i class="fa fa-tree"></i>
&nbsp;&nbsp; Hierarchies
</a> -->
<br/></p>

<p><i>In our <a href="https://gradientscience.org/smoothing">previous post</a>, we gave an overview of smoothing-based approaches to certified defenses, and described a certified patch defense known as de-randomized smoothing. In our latest work, we show how to leverage vision transformers (ViTs) to significantly improve such certified patch defenses along all possible axes: standard accuracy, certified accuracy, and speed. In fact, with some straightforward modifications, our certified ViTs not only enable significantly better certified robustness but they also maintain standard accuracy and inference times that are comparable to that of regular (non-robust) models. This progress marks a substantial step forward for certified defenses as a practical alternative to regular models. 
</i></p>

<div class="container">
  <img class="mySlides" src="https://gradientscience.org/assets/certified-vit/schematic/vit_schematic.png"/>
</div>
<div class="footnote">
     <b>An overview of the Smoothed ViT.</b>
</div>

<p>The main appeal of certified defense is their ironclad guarantees: a certified result leaves no room for doubt and is not prone to blind-spots of empirical evaluation. However, practitioners care not only about certified performance: the accuracy and the inference speed of the model are equally important factors too. Unfortunately, nearly all certified defenses come at a severe price: (1) the standard accuracy plummets in comparison to a standard model and/or (2) inference time is orders of magnitude slower than that of a standard model.</p>

<div class="footnote">
A standard ResNet-50 can achieve about 76% accuracy on the ImageNet benchmark, and takes less than 1 second to make a prediction on a typical GPU. In contrast, top-performing certified defenses such as <a href="https://arxiv.org/abs/2002.10733">Levine &amp; Feizi (2020)</a> reports 44% standard accuracy and takes 150 seconds to make a prediction on similar hardware. 
</div>

<p>This trade-off between robustness and performance can be untenable even for safety-critical applications. For example, object detection systems deployed in autonomous vehicles need to recognize obstacles and signs quickly in real time. Consequently, in addition to being robust, these systems also need to be fast and accurate.</p>

<p>To approach this tradeoff between robustness and accuracy, we take a closer look at certified defenses from an architectural perspective. Specifically, smoothing defenses use a backbone architecture that is typically implemented using classic convolutional networks, the default choice across much of computer vision. But are these architectures really the best tool for the job?</p>

<p>In our work, we show that when moving from standard models to certified defenses, it may be worth it to rethink the core architecture behind them. Specifically, we find that smoothing-based patch defenses can drastically improve when using vision transformers (ViTs) instead of convolutional networks as their backbone. With some additional adjustments to the transformer architecture, we not only achieve superior certified accuracy to prior work but also reach standard accuracies and inference times comparable to a standard, non-robust ResNet!</p>

<h2 id="rethinking-smoothing-backbones">Rethinking smoothing backbones</h2>

<p>Recall from the <a href="https://gradientscience.org/smoothing">previous post</a> that smoothing defenses use a base classifier to make predictions on many variations of the original input. For patch defenses, this amounts to using the base classifier to classify column ablations (i.e., masked images that only reveal a small column of the original image). Consequently, the accuracy of the base classifier at classifying columns of an image directly translates into the performance of the certified defense.</p>

<p>In the light of this observation, it is crucial to realize that convolutional networks typically process complete (i.e., not masked) images. So, this type of architecture might not actually be best suited for classifying the highly masked images used in smoothing defenses.</p>

<p>Why might we expect convolutions to be suboptimal for masked images? CNNs slide filters across the image and grow the receptive field across layers of the network. This large receptive field, while usually being a strength of CNNs for standard settings, forces the network to process a large amount of masked pixels when processing ablated images. Since these pixels carry no information, the network must learn to detect and ignore these masked regions (in addition to performing unnecessary computation).</p>

<h2 id="vision-transformers-for-ablated-images">Vision transformers for ablated images</h2>

<p>Unlike CNNs, vision transformers (ViTs) use attention modules instead of convolutions as their main building block. Crucially, attention modules can ignore masked regions instead of processing them.</p>

<p>To test out this intuition, we measured the accuracy of various convolutional and ViT architectures at classifying column ablations. It turns out that ViTs are significantly better at this task—for example, on ImageNet, a ViT-S has 12% higher accuracy at classifying column ablations than a similarly sized ResNet-50.</p>

<div>
    <div>
        <div class="thirdblock">
            <div class="rbutton block sc ablation_button" id="ablation_small">Small</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block clicked sc ablation_button" id="ablation_medium">Medium</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block sc ablation_button" id="ablation_large">Large</div>
        </div>
    </div>
    <div>
        <canvas height="200" id="ablation_acc" width="400"/>
    </div>
</div>
<div class="footnote">
     <b>Ablation accuracy of ViTs vs. ResNets:</b> A comparison of the accuracy of ViTs with similarly sized ResNets at classifying image ablations.  
</div>



<p>These improvements in ablation accuracy directly boosts both the certified and standard accuracies for the smoothed model. For example, the increase in ablation accuracy improves  the certified accuracy of a smoothed ViT-S by 13% (as compared to a similarly sized ResNet-50) and the standard accuracy by 12%.</p>

<p>With some additional adjustments to the certification procedure <a href="https://gradientscience.org/certivited.pdf">described in our paper</a>, our largest certifiably robust vision transformer can reach 73% standard accuracy—only 3% off from the standard accuracy of a regular, non-robust ResNet-50, and almost 30% higher than previous versions of de-randomized smoothing!</p>

<div>
    <div>
        <div class="thirdblock">
            <div class="rbutton block sc cert_button" id="cert_small">Small</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block clicked sc cert_button" id="cert_medium">Medium</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block sc cert_button" id="cert_large">Large</div>
        </div>
    </div>
    <div>
        <canvas height="200" id="cert_acc" width="400"/>
    </div>
</div>
<div class="footnote">
     <b>Certified accuracy of ViTs vs. ResNets:</b> A comparison of the certified accuracy of smoothed ViTs/ResNets when using different ablation sizes.  
</div>



<div>
    <div>
        <div class="thirdblock">
            <div class="rbutton block sc standard_button" id="standard_small">Small</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block clicked sc standard_button" id="standard_medium">Medium</div>
        </div>
        <div class="thirdblock">
            <div class="rbutton block sc standard_button" id="standard_large">Large</div>
        </div>
    </div>
    <div>
        <canvas height="200" id="standard_acc" width="400"/>
    </div>
</div>
<div class="footnote">
     <b>Standard accuracy of ViTs vs. ResNets:</b> A comparison of the standard accuracy of smoothed ViTs/ResNets when using different ablation sizes.  
</div>



<h2 id="modifying-vits-to-speed-up-inference-time">Modifying ViTs to Speed up Inference Time</h2>

<p>Also, recall that a smoothed classifier tends to be significantly slower than a standard model because it needs to classify a large number of input variations for each input image. Indeed, <a href="https://arxiv.org/abs/1902.02918">traditional randomized smoothing approaches</a> have used upwards of 100,000 variations, resulting in a forward pass that is 4-5 orders of magnitude slower than a standard model. These costs are infeasible in scenarios where decisions need to be made in a fraction of a second, such as autonomous driving. As <a href="https://arxiv.org/abs/2002.10733">Levine &amp; Feizi</a> have shown, for patch defenses, a move towards <em>deterministic</em> smoothing (as opposed to randomized) can result in a great speed up (by reducing the number of variations needed to be classified). However, the resulting solution is still two orders of magnitude slower than standard models.</p>

<p>In order to speed up inference (much) further, we leverage the token-based nature of ViTs to gracefully handle image ablations. Specifically, note that ViTs process images as tokens, where each token represents a contiguous patch of the input image. Since the runtime of a ViT is proportional to the number of tokens, a natural approach to speed up inference is to simply drop the masked out tokens, as shown in the following figure:</p>

<div id="token_figure">
    <div>
        <div class="seventhblock">
        </div>
    </div>
</div>
<div class="footnote">
    Vision transformers split images into patches, which are processed by the transformer architecture. When processing column ablated images, we can simply pass only the tokens in the ablation to significantly reduce the computational complexity of smoothing. 
</div>
<div class="seventhblock token_column"/><img src="https://gradientscience.org/' + imgUrl + '"/>

<p>We modify the ViT architecture to drop fully masked tokens in such a manner. As expected, this significantly speeds up the inference time of the smoothed model! Indeed, with this optimization, our smoothed ViT-S is faster than a smoothed ResNet-50 by an order of magnitude. In our <a href="https://gradientscience.org/certivited.pdf">paper</a>, we discuss how additional improvements to the certification procedure can make our ViT architectures <i>another</i> order of magnitude faster. In total, our fastest smoothed ViT is actually comparable in terms of inference speed to a standard, non-robust ResNet.</p>

<h2 id="conclusion">Conclusion</h2>
<p>Smoothed ViTs present a simple but effective way to achieve state-of-the art certified accuracy. These models are also realistically deployable, as they maintain similar accuracy and inference speed as non-robust models. The key here is the vision transformer’s inherent ability to quickly and accurately process image ablations. These advancements are thus a step towards certified defenses that can be practically deployed in real-world scenarios.</p>

<!-- 
<div>
    <div class="halfblock">
        <div class="block">
            <span style="text-align:center">Clean image</span>
            <img src= "https://gradientscience.org/assets/certified-vit/images/threshold_illustration_schematic/duck_8.png" />
        </div>
    </div>
    <div class="halfblock">
        <div class="block">
            <span style="text-align:center">Attacked image</span>
            <img src= "https://gradientscience.org/assets/certified-vit/images/threshold_illustration_schematic/duck_attacked_largepatch_8.png" />
        </div>
    </div>
</div>

 -->

<!-- 
<div>
    <div>
        <div class="thirdblock">
            <div id="no_patch" class="rbutton block clicked sc patch_button">No patch</div>
        </div>
        <div class="thirdblock">
            <div id="small_patch" class="rbutton block sc patch_button">32x32 patch</div>
        </div>
        <div class="thirdblock">
            <div id="large_patch" class="rbutton block sc patch_button">64x64 patch</div>
        </div>
    </div>
    <div>
        <div class="twofifthsblock">
            <div class="block full_div">
                <span id="full_label" style="text-align:center"></span>
                <img id="full_image" src="" />
            </div>
        </div>
        <div class="threefifthsblock">
            <div class="block">
                <span style="text-align:center;">Classified column ablations</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Duck</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Pigeon</span>
            </div>
            <div class="eigthblock">
                <div class="block ablation_div">
                    <img class="ablation_column" src="" />
                </div>
                <span class="ablation_label" style="text-align:center">Finch</span>
            </div>
        </div>
    </div>
    <div class="block" id="ablation_container">
        <canvas id="majority_vote" width="400" height="200"></canvas>
    </div>
</div> -->
<!-- 
<script>
var majoritydata = {'no_patch': [6,1,1], 'small_patch': [4,3,1], 'large_patch': [3,4,1]}

var ctx = document.getElementById('majority_vote');
var patch_chart = new Chart(ctx, {
    type: 'bar', 
    data: {
        labels: ['Duck', 'Pigeon', 'Finch'],
        datasets: [{
            data: [6,1,1],

            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                scaleLabel: {
                    display: true, 
                    labelString: "Votes for class"
                },
                ticks: {
                    suggestedMax: 6, 
                    suggestedMin:0,
                    beginAtZero: true
                }
            }]
        }, 
        legend: {
            display: false
        }
    }
});

function show_patch(tgt) {
    $(".patch_button").removeClass("clicked");
    $("#" + tgt).addClass("clicked");

    data = majoritydata[tgt];
    
    patch_chart.data.datasets[0].data = data;
    patch_chart.update();

    show_adversarial(tgt);
};
function show_adversarial(tgt) {
    var prefix;
    var label;
    $(".ablation_column").css("border", "")
    $(".ablation_column").css("padding", "2px")
    switch(tgt) {
        case 'no_patch': 
            prefix = 'duck_';
            label = 'Clean image';
            $(".ablation_label:lt(3)").text("Duck")
            $(".ablation_label:eq(6)").text("Pigeon")
            $(".ablation_label:eq(7)").text("Finch")
            break;
        case 'small_patch': 
            prefix = 'duck_attacked_smallpatch_';
            label = 'Attacked image';
            $(".ablation_column:eq(1)").css("border", "2px solid red");
            $(".ablation_column:eq(2)").css("border", "2px solid red");
            $(".ablation_column:eq(1)").css("padding", "0px");
            $(".ablation_column:eq(2)").css("padding", "0px");

            $(".ablation_label:eq(0)").text("Duck")
            $(".ablation_label:eq(1)").text("Pigeon")
            $(".ablation_label:eq(2)").text("Pigeon")
            break;
        case 'large_patch':
            prefix = 'duck_attacked_largepatch_';
            label = 'Attacked image';
            $(".ablation_column:lt(3)").css("border", "2px solid red");
            $(".ablation_column:lt(3)").css("padding", "0px");

            $(".ablation_label:lt(3)").text("Pigeon")
            break;
    };

    for (var fidx=0; fidx<8; fidx++) {
        var img = "https://gradientscience.org"
             + "/assets/certified-vit/images/threshold_illustration_schematic/columns_only/" + prefix + fidx + ".png"; 
        imgObj = $(".ablation_column:eq(" + fidx + ")");
        imgObj.attr("src", img);
    };

    $("#full_label").text(label)
    var imgUrl = "https://gradientscience.org" + "/assets/certified-vit/images/threshold_illustration_schematic/" + prefix + "8.png"
    $("#full_image").attr("src", imgUrl); 

};
</script> -->

<!-- 
<div>
    <div>
        <div class="eigthblock">
            <div class="rbutton block sc clicked masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
        <div class="eigthblock">
            <div class="rbutton block sc masked_ablation_button">
                <img class="masked_ablation_img" src="" />
            </div>
        </div>
    </div>
    <div>
        <div class="halfblock">
            <span style="text-align:center">Masked column ablation</span>
            <img id="masked_image" src="" />
        </div>
        <div class="halfblock">
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
            <div class="block token_div">
                <img class="token_img" src="" />
            </div>
        </div>
    </div>
</div>
<script>
function init_masked_ablations() {
    var imgObj;
    for (var fidx=0; fidx<8; fidx++) {
        var img = "https://gradientscience.org"
             + "/assets/certified-vit/images/threshold_illustration_schematic/duck_" + fidx + ".png"; 
        imgObj = $(".masked_ablation_img:eq(" + fidx + ")");
        imgObj.attr("src", img);
    };
    imgObj = $("#masked_image");
    imgObj.attr("src", "https://gradientscience.org"
             + "/assets/certified-vit/images/threshold_illustration_schematic/duck_0.png");
}

function show_tokens(idx) {
    for (var fidx=0; fidx<7; fidx++) {
        var img = "https://gradientscience.org"
             + "/assets/certified-vit/images/main_schematic/duck_tokens_" + prefix + fidx + ".png"; 
        imgObj = $(".ablation_column:eq(" + fidx + ")");
        imgObj.attr("src", img);
    };

    $("#full_label").text(label)
    var imgUrl = "https://gradientscience.org" + "/assets/certified-vit/images/threshold_illustration_schematic/" + prefix + "8.png"
    $("#full_image").attr("src", imgUrl); 

};
</script>
 -->
<!-- 
<div id="ablation_figure">
    <div>
        <div class=seventhblock>
        </div>
    </div>
</div>
<div class="footnote">
    Example of column ablations> for an input image. Most of the image is masked out except for a column of the image. An adversarial patch can only affect a column ablation if the patch itself is located within the ablation, thus limiting the effect of an adversary. Click on the image to see other column ablations for the same image. 
</div>
<script>
for (var x=0; x<7; x++) {
    var column = $("<div class='seventhblock token_column'></div>");
    for (var y=0; y<7; y++) {
        var imgUrl = "https://gradientscience.org" + "/assets/certified-vit/images/main_schematic/duck_tokens_" + y + "_" + x + ".png"
        column = column.append('<img src="' + imgUrl + '" />');
    }
    $('#ablation_figure').append(column);
}

function show_column(index) {
    var opacity =  $(".token_column:eq("+index+") img").css("opacity")
    // if (opacity == "1") {
    //     $(".token_column img").animate({"opacity":0.5}, {"duration": 400, "queue": false});
    //     $(".token_column").removeClass('selected');
    //     // $(".token_column img").animate({"opacity":0.5});
    // } else {
    // $(".token_column img").animate({"opacity":0.2});
    // $(".token_column:eq("+index+") img").animate({"opacity":1});
    $(".token_column img").animate({"opacity":0.2}, {"duration": 400, "queue": false});
    $(".token_column").removeClass('selected');
    $(".token_column:eq("+index+") img").animate({"opacity":1}, {"duration": 400, "queue": false});
    $(".token_column:eq("+index+")").addClass('selected');
}

function init_highlight_column() {
    $(".token_column:eq(3)").click();
    $(".token_column").hover(function() {
        if (! $(this).hasClass("selected")) {
            $(this).children().animate({"opacity":0.4}, {"duration": 400, "queue": false});
        }
    }, function() {
        if (!$(this).hasClass("selected")) {
            $(this).children().animate({"opacity":0.2}, {"duration": 400, "queue": false});
            // if ($(".token_column").hasClass("selected")) {
            //     $(this).children().animate({"opacity":0}, {"duration": 400, "queue": false});
            // } else {
            //     $(this).children().animate({"opacity":0.5}, {"duration": 400, "queue": false});
            // }
        }
    });
}
</script> -->

<!-- 
<div>
    <div>
        <div class="thirdblock">
            <div id="performance_small" class="rbutton block sc ablation_button">Small</div>
        </div>
        <div class="thirdblock">
            <div id="performance_medium" class="rbutton block clicked sc ablation_button">Medium</div>
        </div>
        <div class="thirdblock">
            <div id="performance_large" class="rbutton block sc ablation_button">Large</div>
        </div>
    </div>
    <div>
        <canvas id="performance_acc" width="400" height="200"></canvas>
    </div>
</div>
<div class="footnote">
     <b>Performance of ViTs vs. ResNets:</b> A comparison of the standard and certified accuracy of ViTs with similarly sized ResNets.  
</div>
 --></div>
    </summary>
    <updated>2021-10-14T00:00:00Z</updated>
    <published>2021-10-14T00:00:00Z</published>
    <source>
      <id>https://gradientscience.org/</id>
      <author>
        <name>Gradient Science</name>
      </author>
      <link href="https://gradientscience.org/" rel="alternate" type="text/html"/>
      <link href="https://gradientscience.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Research highlights and perspectives on machine learning and optimization from MadryLab.</subtitle>
      <title>gradient science</title>
      <updated>2021-10-19T22:53:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/10/13/relevant-neighbors</id>
    <link href="https://11011110.github.io/blog/2021/10/13/relevant-neighbors.html" rel="alternate" type="text/html"/>
    <title>Relevant neighbors</title>
    <summary>I have a new preprint, “Finding Relevant Points for Nearest-Neighbor Classification”, arXiv:2110.06163, to appear in January at the SIAM Symposium on Simplicity in Algorithms (SOSA22). It’s about points in Euclidean spaces of dimension three or more, but I thought it would make a good warm-up to discuss here the one-dimensional version of the same problem, solved (together with the 2d version) by Bremner, Demaine, Erickson, Iacono, Langerman, Morin, and Toussaint in their paper “Output-sensitive algorithms for computing nearest-neighbour decision boundaries”, Discrete Comput. Geom. 2005.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I have a new preprint, <a href="https://arxiv.org/abs/2110.06163">“Finding Relevant Points for Nearest-Neighbor Classification”, arXiv:2110.06163</a>, to appear in January at the <a href="https://www.siam.org/conferences/cm/conference/sosa22">SIAM Symposium on Simplicity in Algorithms (SOSA22)</a>. It’s about points in Euclidean spaces of dimension three or more, but I thought it would make a good warm-up to discuss here the one-dimensional version of the same problem, solved (together with the 2d version) by Bremner, Demaine, Erickson, Iacono, Langerman, Morin, and Toussaint in their paper <a href="http://dx.doi.org/10.1007/s00454-004-1152-0">“Output-sensitive algorithms for computing nearest-neighbour decision boundaries”, <em>Discrete Comput. Geom.</em> 2005</a>.</p>

<p>So in this problem, you have a collection of real-valued data points with known discrete classifications (say, a finite set of colors), and you want to guess the color of new points whose color is not already given. Nearest neighbor classification means simply that, to guess the color of \(x\), you find the closest known point \(y\) and guess that \(x\) has the same color as \(y\). One easy way to do this would be to store the known points in a sorted list and use binary search. There’s lots more to say about this (for instance its use in combination with <a href="https://en.wikipedia.org/wiki/Random_projection">random projections</a> for high-dimensional approximate nearest neighbors) but for today I want to focus on the size of this sorted list. We can store a list that is potentially much smaller, but always produces the same results, by keeping only points that have a neighbor with a different classification.</p>

<p style="text-align: center;"><img alt="One-dimensional nearest neighbor classification on a full data set and the data set trimmed to its relevant points" src="https://11011110.github.io/blog/assets/2021/1d-nnc.svg"/></p>

<p>These points with differently-classified neighbors are the “relevant points” of the preprint title. Another way of describing them is that a point is relevant if deleting it would change the classification of some other (unknown) points in space that might later be queried. Among the set of decision boundaries, the ones separating parts of space with different classifications are the ones defined by relevant points. So if we store a nearest-neighbor data structure with only relevant points, we will get the same answer as if we store all known points. But because we’re storing fewer points, it will take less memory and less time (especially if the reduced memory allows it to fit into cache).</p>

<p>If you have the points given to you in sorted order, then it’s easy enough to scan through them in that order, keeping track of which pairs have different classifications, and produce a filtered sequence of the relevant ones. Here it is in Python (with apologies for the low-contrast syntax coloring):</p>

<figure class="highlight"><pre><code class="language-python"><span class="k">def</span> <span class="nf">relevant</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="n">classify</span><span class="p">):</span>
    <span class="s">"""Filter points whose classification differs from a neighbor.
    Arguments are a sequence of points, and a function to classify
    each point. The return value is an iterator for the filtered sequence."""</span>
    <span class="n">prevpoint</span> <span class="o">=</span> <span class="n">prevclass</span> <span class="o">=</span> <span class="n">prevlisted</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">seq</span><span class="p">:</span>
        <span class="n">xclass</span> <span class="o">=</span> <span class="n">classify</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">prevlisted</span> <span class="o">!=</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">xclass</span> <span class="o">!=</span> <span class="n">prevclass</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">prevlisted</span><span class="p">:</span>
                <span class="k">yield</span> <span class="n">prevpoint</span>
            <span class="k">yield</span> <span class="n">x</span>
            <span class="n">prevlisted</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">prevlisted</span> <span class="o">=</span> <span class="bp">False</span>
        <span class="n">prevpoint</span> <span class="o">=</span> <span class="n">x</span>
        <span class="n">prevclass</span> <span class="o">=</span> <span class="n">xclass</span></code></pre></figure>

<p>However, as Bremner et al observed, sorting an input to make it usable by this scan does more work than necessary, because we don’t need the sorted ordering of all the other points between the relevant ones. Instead, we can use an idea resembling <a href="https://en.wikipedia.org/wiki/Quickselect">quickselect</a>, where we modify the quicksort algorithm to stop recursing in subproblems where sorting is unnecessary. For finding relevant points, these subproblems are the homogeneous ones, in which all points have the same classification as each other. Bremner et al combined this idea with a version of quicksort that always partitions its subproblems at the exact median, in order to achieve a good worst-case time bound, but if we’re happy with expected analysis we can use the same random-pivoting idea as the more usual form of quicksort:</p>

<figure class="highlight"><pre><code class="language-python"><span class="k">def</span> <span class="nf">quickrelevant</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="n">classify</span><span class="p">):</span>
    <span class="s">"""Same output as relevant(sorted(list(seq)),classify).
    We assume the input sequence is sortable and has no repeat values."""</span>

    <span class="k">def</span> <span class="nf">supersequence</span><span class="p">():</span>
        <span class="s">"""Generate sorted supersequence of relevant points by quicksort-like
        recursive subdivision, stopping at homogeneous subproblems.
        We include the endpoints of each subproblem, even though some might
        not be relevant, so the results should be cleaned up using relevant().
        We use an explicit stack to handle the recursion, avoiding the need
        to pass yielded outputs back through a call stack."""</span>

        <span class="n">liststack</span> <span class="o">=</span> <span class="p">[</span><span class="nb">list</span><span class="p">(</span><span class="n">seq</span><span class="p">)]</span>
        <span class="k">while</span> <span class="n">liststack</span><span class="p">:</span>
            <span class="n">L</span> <span class="o">=</span> <span class="n">liststack</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
        
            <span class="c1"># Base cases of recursion: lists of zero or one item
</span>            <span class="k">if</span> <span class="ow">not</span> <span class="n">L</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">yield</span> <span class="n">L</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
                <span class="k">continue</span>
            
            <span class="c1"># Test whether L is homogeneous
</span>            <span class="c1"># and if so only generate its extreme values
</span>            <span class="n">homogeneous</span> <span class="o">=</span> <span class="bp">True</span>
            <span class="n">firstclass</span> <span class="o">=</span> <span class="n">classify</span><span class="p">(</span><span class="n">L</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">)):</span>
                <span class="k">if</span> <span class="n">firstclass</span> <span class="o">!=</span> <span class="n">classify</span><span class="p">(</span><span class="n">L</span><span class="p">[</span><span class="n">i</span><span class="p">]):</span>
                    <span class="n">homogeneous</span> <span class="o">=</span> <span class="bp">False</span>
                    <span class="k">break</span>
            <span class="k">if</span> <span class="n">homogeneous</span><span class="p">:</span>
                <span class="k">yield</span> <span class="nb">min</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
                <span class="k">yield</span> <span class="nb">max</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
                <span class="k">continue</span>
            
            <span class="c1"># Divide and conquer with random pivot
</span>            <span class="n">pivot</span> <span class="o">=</span> <span class="n">L</span><span class="p">[</span><span class="n">random</span><span class="p">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">))]</span>
            <span class="n">low</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">high</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">pivot</span><span class="p">:</span>
                    <span class="n">low</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">high</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
            <span class="n">liststack</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">high</span><span class="p">)</span>
            <span class="n">liststack</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">low</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">relevant</span><span class="p">(</span><span class="n">supersequence</span><span class="p">(),</span><span class="n">classify</span><span class="p">)</span></code></pre></figure>

<p>The time complexity of this algorithm can be analyzed much like <a href="https://11011110.github.io/blog/2007/10/09/blum-style-analysis-of.html">the analysis of quickselect</a>, by observing that the time is proportional to the number of comparisons with pivots, computing the probability that each possible comparison happens, and summing. In quicksort, two distinct elements at distance \(d\) from each other in the final sorted output are compared whenever one of them is the first to be chosen as a pivot in the interval between them, which happens with probability exactly \(2/(d+1)\). In quickrelevant, this same probability holds for pairs that are separated by one of the decision boundaries. But pairs of elements that are within the same homogeneous block are less likely to be compared, because of the possibility that the recursion will stop before it separates or compares them.</p>

<p>If a pair of elements lies within a single block, has distance \(d\) separating them, and is $e$ units from both ends of the block, then it will only be compared if one of the two elements is first to be chosen in at least one of the two intervals of length \(d+e\) extending from the two elements towards an end of their block. This happens with probability at most \(4/(d+e)\), because there are two ways of choosing which element to pick first as the pivot and two ways of choosing which extended interval it is first in.</p>

<p>If we sum up these probabilities, for pairs involving a single element that is \(e\) units from its nearest block boundary among a set of \(n\) elements, we get \(O\bigl(\log(n/e)\bigr)\) as the expected contribution to the total time for that one element. If we sum the contributions from the elements within a block, for a block of length \(\ell_i\), we get a total expected contribution from that block of \(O\bigl(\ell_i\log(n/\ell_i)\bigr)\). And if we have \(k\) relevant points and \(O(k)\) blocks, and we sum over all blocks, the total time is maximized when all the blocks are of equal size, \(\Theta(n/k)\), for which we get total time \(O(n\log k)\).</p>

<p>For quicksort and quickselect, it’s possible to be more careful in the analysis, derive exact formulas for the probability of making each comparison, and from them get an analysis of the expected number of comparisons that does not use \(O\)-notation for its leading term; see my linked post on the quickselect analysis. Probably it’s possible here too but it looks messier. Maybe it would make a good undergraduate research project. One thing to be careful of is that the comparisons are not over in the homogeneous case; finding the min and max simultaneously, in a block of length \(\ell_i\), takes roughly \(3\ell_i/2\) comparisons. But that should only be a lower-order term compared to the \(O(n\log k)\) leading term of the analysis.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/107098438066916443">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2021-10-13T23:05:00Z</updated>
    <published>2021-10-13T23:05:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-10-15T23:40:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/13/postdoc-in-theory-of-machine-learning-at-harvard-university-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/13/postdoc-in-theory-of-machine-learning-at-harvard-university-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Postdoc in Theory of Machine Learning at Harvard University (apply by December 1, 2021)</title>
    <summary>We are looking for exceptional junior scientists to work collaboratively with a group of faculty from Computer Science (Boaz Barak), Statistics (Lucas Janson), Electrical Engineering (Demba Ba) and Applied Mathematics (Cengiz Pehlevan) towards a theory of representations in artificial and natural systems. Website: https://academicpositions.harvard.edu/postings/10730 Email: theory-postdoc-apply@seas.harvard.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We are looking for exceptional junior scientists to work collaboratively with a group of faculty from Computer Science (Boaz Barak), Statistics (Lucas Janson), Electrical Engineering (Demba Ba) and Applied Mathematics (Cengiz Pehlevan) towards a theory of representations in artificial and natural systems.</p>
<p>Website: <a href="https://academicpositions.harvard.edu/postings/10730">https://academicpositions.harvard.edu/postings/10730</a><br/>
Email: theory-postdoc-apply@seas.harvard.edu</p></div>
    </content>
    <updated>2021-10-13T22:38:41Z</updated>
    <published>2021-10-13T22:38:41Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/13/rabin-postdoc-at-harvard-university-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/13/rabin-postdoc-at-harvard-university-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Rabin Postdoc at Harvard University (apply by December 1, 2021)</title>
    <summary>We are looking for junior scientists in theoretical computer science, broadly construed. The normal duration of the Rabin Fellowship is two years. Rabin Fellows will receive a generous salary as well as an allocation for research and travel expenses. While interaction with Harvard faculty, students, and visitors is encouraged, Rabin Fellows are free to pursue […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We are looking for junior scientists in theoretical computer science, broadly construed.<br/>
The normal duration of the Rabin Fellowship is two years. Rabin Fellows will receive a generous salary as well as an allocation for research and travel expenses.<br/>
While interaction with Harvard faculty, students, and visitors is encouraged, Rabin Fellows are free to pursue their own interests.</p>
<p>Website: <a href="https://academicpositions.harvard.edu/postings/10730">https://academicpositions.harvard.edu/postings/10730</a><br/>
Email: theory-postdoc-apply@seas.harvard.edu</p></div>
    </content>
    <updated>2021-10-13T22:36:20Z</updated>
    <published>2021-10-13T22:36:20Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/143</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/143" rel="alternate" type="text/html"/>
    <title>TR21-143 |  Hitting Sets For Regular Branching Programs | 

	Edward Pyne</title>
    <summary>We construct an explicit $\varepsilon$-hitting set generator (HSG) for regular ordered branching programs of length $n$ and $\textit{unbounded width}$ with a single accept state that has seed length
    \[O(\log(n)(\log\log(n)+\log(1/\varepsilon))).\]
    Previously, the best known seed length for regular branching programs of width $w$ with a single accept state was by Braverman, Rao, Raz and Yehudayoff (FOCS 2010, SICOMP 2014) and Hoza Pyne and Vadhan (ITCS 2021), which gave
    \[O(\log(n)(\log\log(n)+\min\{\log(w),\log(n)\}+\log(1/\varepsilon))).\]
    We also give a simple co-HSG for the model with optimal seed length $O(\log n)$.
    
    For the more restricted model of $\textit{permutation}$ branching programs, Hoza Pyne and Vadhan (ITCS 2021) constructed a PRG with seed length matching our HSG, and then Pyne and Vadhan (CCC 2021) developed an error-reduction procedure that gave an HSG (in fact a ``weighted PRG'') with seed length $\widetilde{O}(\log(n)\sqrt{\log(n/\varepsilon)}+\log(1/\varepsilon)).$ We show that if an analogous error-reduction result could be obtained for our HSG, there is an explicit HSG for general ordered branching programs of width $w=n$ with seed length $\widetilde{O}(\log^{3/2}n)$, improving on the $O(\log^2n)$ seed length of Nisan (Combinatorica 1992).</summary>
    <updated>2021-10-13T15:27:42Z</updated>
    <published>2021-10-13T15:27:42Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-10-20T17:37:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-events.org/2021/10/13/ideal-mini-workshop-on-statistical-and-computational-aspects-of-robustness-in-high-dimensional-estimation/</id>
    <link href="https://cstheory-events.org/2021/10/13/ideal-mini-workshop-on-statistical-and-computational-aspects-of-robustness-in-high-dimensional-estimation/" rel="alternate" type="text/html"/>
    <title>IDEAL mini-workshop on “Statistical and Computational Aspects of Robustness in High-dimensional Estimation”</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">October 19, 2021 Virtual https://www.ideal.northwestern.edu/events/mini-workshop-on-statistical-and-computational-aspects-of-robustness-in-high-dimensional-estimation/ Registration deadline: October 18, 2021 Today’s data pose unprecedented challenges to statisticians. It may be incomplete, corrupted or exposed to some unknown source of contamination or adversarial attack. Robustness is one of the revived concepts in statistics and machine learning that can accommodate such complexity and glean useful information from … <a class="more-link" href="https://cstheory-events.org/2021/10/13/ideal-mini-workshop-on-statistical-and-computational-aspects-of-robustness-in-high-dimensional-estimation/">Continue reading <span class="screen-reader-text">IDEAL mini-workshop on “Statistical and Computational Aspects of Robustness in High-dimensional Estimation”</span></a></div>
    </summary>
    <updated>2021-10-13T03:05:04Z</updated>
    <published>2021-10-13T03:05:04Z</published>
    <category term="workshop"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-events.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-events.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-events.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-events.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-events.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Aggregator for CS theory workshops, schools, and so on</subtitle>
      <title>CS Theory Events</title>
      <updated>2021-10-20T17:38:47Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://benjamin-recht.github.io/2021/10/13/prediction/</id>
    <link href="http://benjamin-recht.github.io/2021/10/13/prediction/" rel="alternate" type="text/html"/>
    <title>Machine learning is not nonparametric statistics.</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Many times in my career, I’ve been told by respected statisticians that machine learning is nothing more than nonparametric statistics. The longer I work in this field, the more I think this view is both misleading and unhelpful. Not only can I never get a consistent definition of what “nonparametric” means, but the jump from statistics to machine learning is considerably larger than most expect. Statistics is an important tool for understanding machine learning and randomness is valuable for machine learning algorithm design, but there is considerably more to machine learning than what we learn in elementary statistics.</p>

<p>Machine learning at its core is the art and science of <em>prediction</em>. By prediction, I mean the general problem of leveraging regularity of natural processes to guess the outcome of yet unseen events. As before, we can formalize the prediction problem by assuming a population of $N$ individuals with a variety of attributes. Suppose each individual has an associated variable $X$ and $Y$. The goal of prediction is to guess the value of $Y$ from $X$ that minimizes some error metric.</p>

<p>A classic prediction problem aims to find a function that makes the fewest number of incorrect predictions across the population.  Think of this function like a computer program that takes $X$ as input and outputs a prediction of $Y$. For a fixed prediction function, we can sum up all of the errors made on the population. If we divide by the size of the population, this is the mean error rate of the function.</p>

<p>A particularly important prediction problem is classification. In classification, the attribute $Y$ takes only two values: the input $X$ could be some demographic details about a person, and $Y$ would be whether or not that person was taller than 6 feet. The input $X$ could be an image, and $Y$ could be whether or not the image contains a cat. Or the input could be a set of laboratory results about a patient, and $Y$ could be whether or not the patient is afflicted by a disease. Classification is the simplest and most common prediction problem, one that forms the basis of most contemporary machine learning systems.</p>

<p>For classification problems, it is relatively straightforward to compute the best error rate achievable. First, for every possible value of the attribute $X$, collect the subgroup of individuals of the population with that value. Then, the best assignment for the prediction function is the one that correctly labels the majority of this subgroup. For example, in our height example, we could take all women, aged 30, born in the United States, and reside in California. Then the optimal label for this group would be decided based on whether there are more people in the group who are taller than 6 feet or not. (Answer: no).</p>

<p>This minimum error rule is intuitive and simple, but computing the rule exactly requires examining the entire population. What can we do if we work from a subsample? Just as was the case in experiment design, we’d like to be able to design good prediction functions from a small sample of the population so we don’t have to inspect all individuals. For a <em>fixed</em> function, we could use the same law-of-large-numbers approximations to estimate the best decision. That is, if we decide in advance upon a prediction function, we could estimate the percentage of mistakes on the population by gathering a random sample and computing the proportion of mistakes on this subset. Then we could apply a standard confidence interval analysis to extrapolate to the population.</p>

<p>However, what if we’d like to find a good predictor on the population using only a set of examples sampled from the population. We immediately run into an issue: to find the best prediction function, we needed to observe all possible values of $X$. What if we’d like to make predictions about an individual with a set of attributes that was not observed in our sample?</p>

<p>How can we build accurate population-level predictors from small subsamples? In order to solve this problem, we must make some assumptions about the relationship between predictions at related, but different values of $X$. We can restrict our attention to a set of functions that respect regularity properties that we think the predictions should have. Then, with a subsample from the population, we find the function that minimizes the error on the sample and obeys the prescribed regularity properties.</p>

<p>This optimization procedure is called <em>”empirical risk minimization”</em>  and is the core predictive algorithm of machine learning. Indeed, for all of the talk about neuromorphic deep networks with fancy widgets, most of what machine learning does is try to find computer programs that make good predictions on the data we have collected and that respect some sort of rudimentary knowledge that we have about the broader population.</p>

<p>The flexibility in defining what “knowledge” or “regularity” means complicates the solution of such empirical risk minimization problems. What does the right set of functions look like? There are three immediate concerns:</p>

<ol>
  <li>
    <p>What is the right <em>representation</em>? The set needs to contain enough functions to well approximate the true population prediction function. There are a variety of ways to express complex functions, and each expression has its own benefits and drawbacks.</p>
  </li>
  <li>
    <p>The set of functions needs to be simple to search over, so we don’t have to evaluate every function in our set as this would be too time consuming. Efficient search for high quality solutions is called <em>optimization</em>.</p>
  </li>
  <li>
    <p>How will the predictor <em>generalize</em> to the broader population? The functions cannot be too complex or else they will fail to capture the regularity and smoothness of the prediction problem (estimating functions of too high complexity is colloquially called “overfitting”).</p>
  </li>
</ol>

<p>Balancing representation, optimization, and generalization gets complicated quickly, and this is why we have a gigantic academic and industrial field devoted to the problem.</p>

<p>I’m repeating myself at this point, but I again want to pound my fist on the table and reiterate that nothing in our development here requires that the relationship between the variables $X$ and $Y$ be probabilistic. Statistical models are often the starting point of discussion in machine learning, but such models are just a convenient way to describe populations and their proportions. Prediction can be analyzed in terms of a deterministic population, and, just as we discussed in the case of randomized experiments, randomness can be introduced as a means of sampling the population to determine trends. Even generalization, which is usually studied as a statistical phenomenon, can be analyzed in terms of the randomness of the sampling procedure with no probabilistic modeling of the population.</p>

<p>On the other hand, some sort of knowledge about the population is necessary. The more we know about how prediction varies based on changes in the covariates, the better a predictor we can build. Engineering such prior knowledge into appropriate function classes and optimization algorithms form the art and science of contemporary machine learning.</p>

<p>This discussion highlights that while we <em>can</em> view prediction through the lens of statistical sampling, pigeonholing it as simply “nonparametric statistics” does not do the subject justice. While the <a href="https://www.argmin.net/2021/09/28/rct/">jump from mean estimation to causal RCTs is small</a>, the jump from mean estimation to prediction is much less immediate. And in machine learning practice, the intuitions from statistics often don’t apply. For example, conventional wisdom from statistics tells us that evaluating multiple models on the same data set amounts to multiple hypothesis testing, and will lead to overfitting on the test set. However, <a href="https://arxiv.org/abs/1902.10811">there</a> <a href="https://papers.nips.cc/paper/9117-a-meta-analysis-of-overfitting-in-machine-learning">is</a> <a href="https://arxiv.org/abs/1906.02168">more</a> <a href="https://arxiv.org/abs/2004.14444">and</a> <a href="https://proceedings.mlr.press/v119/shankar20c.html">more</a> <a href="https://arxiv.org/abs/1905.10498">evidence</a> that using a train-test split leads does not lead to overfitting. Instead, the phenomena we see is that dataset benchmarks can remain useful for decades. Another common refrain from statistics is that model complexity must be explicitly constrained in order to extrapolate to new data, but this also  <a href="https://cacm.acm.org/magazines/2021/3/250713-understanding-deep-learning-still-requires-rethinking-generalization/fulltext">does not seem to apply at all to machine learning practice</a>.</p>

<p>Prediction predates probability and statistics by centuries. As Moritz and I chronicle in the introduction to <a href="http://mlstory.org">Patterns, Predictions, and Actions</a> astronomers were using pattern matching to predict celestial motions, and the astronomer Edmund Halley realized that similar techniques could be used to predict life expectancy when pricing annuities. Moreover, even though modern machine learning embraced contemporary developments in statistics by Neyman, Pearson, and Wald, the tools quickly grew more sophisticated and separate from core statistical practice. In the next post, I’ll discuss an early example of this divergence between machine learning and statistics, describing some of the theoretical understanding of the Perceptron in the 1960s and how its analysis was decidedly different from the theory advanced by statisticians.</p></div>
    </summary>
    <updated>2021-10-13T00:00:00Z</updated>
    <published>2021-10-13T00:00:00Z</published>
    <source>
      <id>http://benjamin-recht.github.io/</id>
      <author>
        <name>Ben Recht</name>
      </author>
      <link href="http://benjamin-recht.github.io/" rel="alternate" type="text/html"/>
      <link href="http://benjamin-recht.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Musings on systems, information, learning, and optimization.</subtitle>
      <title>arg min blog</title>
      <updated>2021-10-20T17:38:52Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4566</id>
    <link href="https://lucatrevisan.wordpress.com/2021/10/12/the-khot-naor-approximation-algorithm-for-3-xor/" rel="alternate" type="text/html"/>
    <title>The Khot-Naor Approximation Algorithm for 3-XOR</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Today I would like to discuss the Khot-Naor approximation algorithm for the 3-XOR problem, and an open question related to it. In 3-XOR, we have a system of linear equations modulo 2, with three variables per equation, that might look … <a href="https://lucatrevisan.wordpress.com/2021/10/12/the-khot-naor-approximation-algorithm-for-3-xor/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Today I would like to discuss the Khot-Naor approximation algorithm for the 3-XOR problem, and an open question related to it.</p>
<p><span id="more-4566"/></p>
<p>In 3-XOR, we have a system of linear equations modulo 2, with three variables per equation, that might look something like</p>
<p align="center"><img alt="\displaystyle  \begin{array}{ll} x_1 + x_2 + x_4 &amp; \equiv 0 \pmod 2\\ x_1 + x_5 + x_6 &amp; \equiv 1 \pmod 2\\ x_2 + x_3 + x_4 &amp; \equiv 1 \pmod 2\\ x_5 + x_3 + x_6 &amp; \equiv 1 \pmod 2 \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Bll%7D+x_1+%2B+x_2+%2B+x_4+%26+%5Cequiv+0+%5Cpmod+2%5C%5C+x_1+%2B+x_5+%2B+x_6+%26+%5Cequiv+1+%5Cpmod+2%5C%5C+x_2+%2B+x_3+%2B+x_4+%26+%5Cequiv+1+%5Cpmod+2%5C%5C+x_5+%2B+x_3+%2B+x_6+%26+%5Cequiv+1+%5Cpmod+2+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>The above system is not satisfiable (if we add up the left-hand sides we get 0, if we add up the right-hand sides we get 1), but it is possible to satisfy <img alt="{3/4}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3%2F4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of the equations, for example by setting all the variables to 1. In Max 3-XOR problem (which we will simply refer to as “3-XOR” from now on), given a system of equations mod 2 with three variables per equation, we want to find an assignment that satisfies as many equations as possible.</p>
<p>Either setting all the variables to zero or setting all the variables to one will satisfy half of the equations, and the interesting question is how much better than 1/2 it is possible to do on a given instance. <a href="https://epubs.siam.org/doi/abs/10.1137/070691140">Khot and Naor</a> provide an algorithm that, given an instance in which it is possible to satisfy an <img alt="{1/2 + \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F2+%2B+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of equations, finds a solution that satisfies at least <img alt="{1/2 + \epsilon \cdot O \left( \sqrt{\frac {\log n} n} \right)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2F2+%2B+%5Cepsilon+%5Ccdot+O+%5Cleft%28+%5Csqrt%7B%5Cfrac+%7B%5Clog+n%7D+n%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> fraction of equations, where <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is the number of variables. The algorithm is randomized, it runs in polynomial time, and it succeeds with high probability. I believe that it is still the state of the art in terms of worst-case approximation guarantee.</p>
<p>Like the approximation algorithm for sparsest cut in Abelian Cayley graphs implied by the result of Bauer et al. that was the subject of the last two posts, the result of Khot and Naor <em>does not</em> prove a bound on the integrality gap of a relaxation of the problem.</p>
<p>I will describe the Khot-Naor algorithm and describe how it manages to use convex optimization to provide an approximation algorithm, but without establishing an integrality gap bound. I thank my student Lucas Pesenti for explaining the algorithm to me and for thinking together about this problem.</p>
<p>If our 3-XOR instance has <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> equations and <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> variables, then the problem of maximizing the number of satisfied equations can be rewritten as</p>
<p align="center"><img alt="\displaystyle  \frac m2 + \max_{x \in \{ -1 , +1 \}^n} \ \sum_{i,j,k} c_{i,j,k} x_i x_j x_k " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac+m2+%2B+%5Cmax_%7Bx+%5Cin+%5C%7B+-1+%2C+%2B1+%5C%7D%5En%7D+%5C+%5Csum_%7Bi%2Cj%2Ck%7D+c_%7Bi%2Cj%2Ck%7D+x_i+x_j+x_k+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> so that our goal is to approximate the combinatorial optimization problem</p>
<p align="center"><img alt="\displaystyle  \max_{x \in \{ -1 , +1 \}^n} \ \sum_{i,j,k} c_{i,j,k} x_i x_j x_k " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmax_%7Bx+%5Cin+%5C%7B+-1+%2C+%2B1+%5C%7D%5En%7D+%5C+%5Csum_%7Bi%2Cj%2Ck%7D+c_%7Bi%2Cj%2Ck%7D+x_i+x_j+x_k+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> Up to a constant factor loss in the approximation guarantee, Khot and Naor show that the above is equivalent to <a name="tensornorm"/></p>
<p><a name="tensornorm"/></p><a name="tensornorm">
<p align="center"><img alt="\displaystyle   \max_{x,y,z \in \{ -1 , +1 \}^n} \ \sum_{i,j,k} T_{i,j,k} x_i y_j z_k \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+++%5Cmax_%7Bx%2Cy%2Cz+%5Cin+%5C%7B+-1+%2C+%2B1+%5C%7D%5En%7D+%5C+%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_i+y_j+z_k+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="tensornorm"/><a name="tensornorm"/> where <img alt="{T_{i,j,k}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_%7Bi%2Cj%2Ck%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is a symmetric 3-tensor with entries in <img alt="{\{ -1,0,1\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+-1%2C0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and with <img alt="{O(m)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28m%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> non-zero entries.</p>
<p>Before continuing, let us recall that if <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is an <img alt="{n \times n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Ctimes+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> matrix, then its <img alt="{\ell_\infty}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>-to-<img alt="{\ell_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> operator norm has the characterization</p>
<p><a name="inftoone"/></p>
<p><a name="inftoone"/></p><a name="inftoone">
<p align="center"><img alt="\displaystyle  || M ||_{\infty \rightarrow 1 } = \max_{x,y \in [-1,1]^n} x^T M y = \max_{x,y \in \{ -1,1 \}^n} x^T M y \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7C%7C+M+%7C%7C_%7B%5Cinfty+%5Crightarrow+1+%7D+%3D+%5Cmax_%7Bx%2Cy+%5Cin+%5B-1%2C1%5D%5En%7D+x%5ET+M+y+%3D+%5Cmax_%7Bx%2Cy+%5Cin+%5C%7B+-1%2C1+%5C%7D%5En%7D+x%5ET+M+y+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="inftoone"/><a name="inftoone"/></p>
<p>We could also define the “Grothendieck norm” <img alt="{|| M ||_{Grot}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%7C+M+%7C%7C_%7BGrot%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of a matrix as the following natural semidefinite programming relaxation of the <img alt="{\ell_\infty}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>-to-<img alt="{\ell_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> norm:</p>
<p align="center"><img alt="\displaystyle  \begin{array}{lll} \max &amp; \sum_{i,j} M_{i,j} \langle x_i , y_j\rangle \\ {\rm s.t.}\\ &amp; || x_i ||^2 = 1 &amp; i = 1,\ldots,n\\ &amp; ||y_j ||^2 = 1 &amp; i = j,\ldots,n \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Blll%7D+%5Cmax+%26+%5Csum_%7Bi%2Cj%7D+M_%7Bi%2Cj%7D+%5Clangle+x_i+%2C+y_j%5Crangle+%5C%5C+%7B%5Crm+s.t.%7D%5C%5C+%26+%7C%7C+x_i+%7C%7C%5E2+%3D+1+%26+i+%3D+1%2C%5Cldots%2Cn%5C%5C+%26+%7C%7Cy_j+%7C%7C%5E2+%3D+1+%26+i+%3D+j%2C%5Cldots%2Cn+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> where the <img alt="{x_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{y_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> are arbitrary vectors. The Grothendieck inequality is</p>
<p align="center"><img alt="\displaystyle  || M||_{\infty \rightarrow 1 } \leq || M ||_{Grot} \leq O(1) \cdot || M ||_{\infty \rightarrow 1 }" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7C%7C+M%7C%7C_%7B%5Cinfty+%5Crightarrow+1+%7D+%5Cleq+%7C%7C+M+%7C%7C_%7BGrot%7D+%5Cleq+O%281%29+%5Ccdot+%7C%7C+M+%7C%7C_%7B%5Cinfty+%5Crightarrow+1+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> where the <img alt="{O(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is an absolute constant, known to be less than <img alt="{1.8}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Furthermore, the above inequality has a constructive proof, and it leads to a polynomial time constant factor approximation for the problem of finding values <img alt="{x_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{y_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in <img alt="{\pm 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpm+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> that maximize <a href="https://lucatrevisan.wordpress.com/feed/#inftoone">(2)</a>.</p>
<p>Basically, we can see problem <a href="https://lucatrevisan.wordpress.com/feed/#tensornorm">(1)</a> as the natural generalization of <a href="https://lucatrevisan.wordpress.com/feed/#inftoone">(2)</a> to tensors, and one would like to see a semidefinite programming relaxation of <a href="https://lucatrevisan.wordpress.com/feed/#tensornorm">(1)</a> achieving something resembling the Grothendieck inequality, but with a loss of something like <img alt="{\tilde O(\sqrt n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctilde+O%28%5Csqrt+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. As I mentioned above, this remains an open question, as far as I know.</p>
<p>The idea of Khot and Naor is the following. Suppose that we are given an instance <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of problem <a href="https://lucatrevisan.wordpress.com/feed/#tensornorm">(1)</a>, and suppose that <img alt="{x^*,y^*,z^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5E%2A%2Cy%5E%2A%2Cz%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is an optimal solution, and let us call</p>
<p align="center"><img alt="\displaystyle  \epsilon = \sum_{i,j,k} T_{i,j,k} x^*_i y^*_j z^*_k " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cepsilon+%3D+%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x%5E%2A_i+y%5E%2A_j+z%5E%2A_k+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> the value of the optimum (the algorithm will not need to know or guess <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>).</p>
<p>The key step is now to see that if we pick a <em>random</em> <img alt="{x \in \{-1,1\}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cin+%5C%7B-1%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, there is at least a <img alt="{1/n^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2Fn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> probability that</p>
<p align="center"><img alt="\displaystyle  \sum_{i,j,k} T_{i,j,k} x_i y^*_j z^*_k \geq \epsilon \cdot \Omega \left(\sqrt{\frac{\log n}{n}} \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_i+y%5E%2A_j+z%5E%2A_k+%5Cgeq+%5Cepsilon+%5Ccdot+%5COmega+%5Cleft%28%5Csqrt%7B%5Cfrac%7B%5Clog+n%7D%7Bn%7D%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> This is a bit difficult, but it is really easy to see that with <img alt="{1/n^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2Fn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> probability we have <a name="main"/></p>
<p><a name="main"/></p><a name="main">
<p align="center"><img alt="\displaystyle   \sum_{i,j,k} T_{i,j,k} x_i y^*_j z^*_k \geq \epsilon \cdot \Omega \left(\sqrt{\frac{1}{n}} \right) \ \ \ \ \ (3)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+++%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_i+y%5E%2A_j+z%5E%2A_k+%5Cgeq+%5Cepsilon+%5Ccdot+%5COmega+%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D+%5Cright%29+%5C+%5C+%5C+%5C+%5C+%283%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="main"/><a name="main"/> and we can do that by seeing that by defining a vector <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that <img alt="{w_i = \sum_{j,k} T_{i,j,k} y^*_j z^*_k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw_i+%3D+%5Csum_%7Bj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+y%5E%2A_j+z%5E%2A_k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, so that</p>
<p align="center"><img alt="\displaystyle  \langle x, w \rangle = \sum_{i,j,k} T_{i,j,k} x_i y^*_j z^*_k" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Clangle+x%2C+w+%5Crangle+%3D+%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_i+y%5E%2A_j+z%5E%2A_k&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> So we have</p>
<p align="center"><img alt="\displaystyle  \langle x^*,w \rangle = \epsilon " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Clangle+x%5E%2A%2Cw+%5Crangle+%3D+%5Cepsilon+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> which, using Cauchy-Schwarz, gives</p>
<p align="center"><img alt="\displaystyle  || w||^2 \geq \epsilon^2 /n " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7C%7C+w%7C%7C%5E2+%5Cgeq+%5Cepsilon%5E2+%2Fn+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> Now, for a random <img alt="{x\sim \{ -1,1\}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Csim+%5C%7B+-1%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, we have</p>
<p align="center"><img alt="\displaystyle  \mathop{\mathbb E} \langle x,w \rangle^2 = || w||^2 \geq \epsilon^2 /n " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmathop%7B%5Cmathbb+E%7D+%5Clangle+x%2Cw+%5Crangle%5E2+%3D+%7C%7C+w%7C%7C%5E2+%5Cgeq+%5Cepsilon%5E2+%2Fn+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> and</p>
<p align="center"><img alt="\displaystyle  \mathop{\mathbb E} \langle x,w \rangle^4 \leq n^{O(1)} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmathop%7B%5Cmathbb+E%7D+%5Clangle+x%2Cw+%5Crangle%5E4+%5Cleq+n%5E%7BO%281%29%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> so by Paley–Zygmund we have, let’s say</p>
<p align="center"><img alt="\displaystyle  \mathop{\mathbb P} \left[ \langle x,w \rangle^2 \geq \frac {\epsilon^2}{2n} \right] \geq \frac 1 {n^{O(1)}} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmathop%7B%5Cmathbb+P%7D+%5Cleft%5B+%5Clangle+x%2Cw+%5Crangle%5E2+%5Cgeq+%5Cfrac+%7B%5Cepsilon%5E2%7D%7B2n%7D+%5Cright%5D+%5Cgeq+%5Cfrac+1+%7Bn%5E%7BO%281%29%7D%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> which, together with the definition of <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and the fact that the distribution of <img alt="{\langle x, w\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clangle+x%2C+w%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is symmetric around zero, gives us the claim <a href="https://lucatrevisan.wordpress.com/feed/#main">(3)</a>.</p>
<p>Now suppose that we have been lucky and that we have found such an <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. We define the matrix</p>
<p align="center"><img alt="\displaystyle  X_{j,k} = \sum_i T_{i,j,k} x_i " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++X_%7Bj%2Ck%7D+%3D+%5Csum_i+T_%7Bi%2Cj%2Ck%7D+x_i+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> and we see that our claim can be written as</p>
<p align="center"><img alt="\displaystyle  y^{*T} X z^* \geq \epsilon \cdot \Omega \left(\sqrt{\frac{1}{n}} \right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++y%5E%7B%2AT%7D+X+z%5E%2A+%5Cgeq+%5Cepsilon+%5Ccdot+%5COmega+%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> At this point we just apply the algorithm implied by the Grothendieck inequality to the matrix <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and we find <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in <img alt="{\{ -1,1 \}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+-1%2C1+%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> such that</p>
<p align="center"><img alt="\displaystyle  y^T X z \geq \epsilon \cdot \Omega \left(\sqrt{\frac{1}{n}} \right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++y%5ET+X+z+%5Cgeq+%5Cepsilon+%5Ccdot+%5COmega+%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D+%5Cright%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p> meaning that</p>
<p align="center"><img alt="\displaystyle  \sum_{i,j,k} T_{i,j,k} x_i y_j z_k \geq \epsilon \cdot \Omega \left(\sqrt{\frac{1}{n}}\right) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_i+y_j+z_k+%5Cgeq+%5Cepsilon+%5Ccdot+%5COmega+%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>Summarizing, our algorithm is to pick a random vector <img alt="{x\sim \{-1,1\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Csim+%5C%7B-1%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and to find a constant-factor approximation for the problem <a name="xfixed"/></p>
<p><a name="xfixed"/></p><a name="xfixed">
<p align="center"><img alt="\displaystyle   \max_{y,z \in \{-1,1\}^n} \ \sum_{i,j,k} T_{i,j,k} x_iy_jz_k \ \ \ \ \ (4)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+++%5Cmax_%7By%2Cz+%5Cin+%5C%7B-1%2C1%5C%7D%5En%7D+%5C+%5Csum_%7Bi%2Cj%2Ck%7D+T_%7Bi%2Cj%2Ck%7D+x_iy_jz_k+%5C+%5C+%5C+%5C+%5C+%284%29&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
</a><p><a name="xfixed"/><a name="xfixed"/> using semidefinite programming. We do that <img alt="{n^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> times, and take the best solution.</p>
<p>The analysis can be turned into an upper bound certificate in the following way. For the (suboptimal) analysis using Paley-Zygmund, we only need the entries of the random <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> to be 4-wise independent, and there are distributions on <img alt="{\{-1,1\}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B-1%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> where the entries are unbiased and 4-wise independent, and such that the sample space is of size polynomial in <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Thus, one could write an SDP relaxation of <a href="https://lucatrevisan.wordpress.com/feed/#xfixed">(4)</a> for each <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in the support of such a distribution, and then take the maximum of these SDPs, multiply it by <img alt="{O(\sqrt n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>, and it would be a certified upper bound. Such an upper bound, however, would not come from a relaxation of the 3-XOR problem, and I find it really strange that it is not clear how to turn these ideas into a proof that, say, the standard degree-4 sum-of-squares semidefinite programming relaxation of 3-XOR has an integrality gap at most <img alt="{\tilde O(\sqrt n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctilde+O%28%5Csqrt+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p></div>
    </content>
    <updated>2021-10-12T12:55:04Z</updated>
    <published>2021-10-12T12:55:04Z</published>
    <category term="theory"/>
    <category term="3-XOR"/>
    <category term="approximation algorithms"/>
    <category term="semidefinite programming"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2021-10-20T17:37:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/11/lecturer-in-optimisation-at-queen-mary-university-of-london-apply-by-november-3-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/11/lecturer-in-optimisation-at-queen-mary-university-of-london-apply-by-november-3-2021/" rel="alternate" type="text/html"/>
    <title>Lecturer in Optimisation at Queen Mary University of London (apply by November 3, 2021)</title>
    <summary>The School of Mathematical Sciences at Queen Mary University of London is seeking to appoint a permanent faculty member in the area of optimisation, with a focus on applying rigorous research methods to address emerging problems in the general field of combinatorial optimisation. We especially welcome applicants who would complement existing expertise in the School’s […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The School of Mathematical Sciences at Queen Mary University of London is seeking to appoint a permanent faculty member in the area of optimisation, with a focus on applying rigorous research methods to address emerging problems in the general field of combinatorial optimisation. We especially welcome applicants who would complement existing expertise in the School’s Combinatorics group.</p>
<p>Website: <a href="https://webapps2.is.qmul.ac.uk/jobs/job.action?jobID=5954">https://webapps2.is.qmul.ac.uk/jobs/job.action?jobID=5954</a><br/>
Email: r.johnson@qmul.ac.uk</p></div>
    </content>
    <updated>2021-10-11T16:34:53Z</updated>
    <published>2021-10-11T16:34:53Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T17:37:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/11/faculty-at-williams-college-apply-by-november-15-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/11/faculty-at-williams-college-apply-by-november-15-2021/" rel="alternate" type="text/html"/>
    <title>Faculty at Williams College (apply by November 15, 2021)</title>
    <summary>The Department of Computer Science at Williams College invites applications for two faculty positions beginning July 1,2022. One is a tenure-track position at the rank of assistant professor with a three-year initial term. The other is an open rank position with a preference for more advanced candidates. That position will have terms commensurate with prior […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science at Williams College invites applications for two faculty positions beginning July 1,2022. One is a tenure-track position at the rank of assistant professor with a three-year initial term. The other is an open rank position with a preference for more advanced candidates. That position will have terms commensurate with prior experience.</p>
<p>Website: <a href="https://apply.interfolio.com/91229">https://apply.interfolio.com/91229</a><br/>
Email: hiring@cs.williams.edu</p></div>
    </content>
    <updated>2021-10-11T14:51:15Z</updated>
    <published>2021-10-11T14:51:15Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-10-20T15:37:39Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-4680987113771618016</id>
    <link href="http://blog.computationalcomplexity.org/feeds/4680987113771618016/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/i-have-book-out-on-muffins-you-prob.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/4680987113771618016" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/4680987113771618016" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/i-have-book-out-on-muffins-you-prob.html" rel="alternate" type="text/html"/>
    <title>I have a book out on muffins (you prob already know that)</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><i>Lance</i>: How come you haven't blogged on your muffin book? You've blogged about two books by Harry Lewis (see <a href="https://blog.computationalcomplexity.org/2021/10/how-have-computers-changed-society.html">here</a> and <a href="https://blog.computationalcomplexity.org/2021/08/what-are-most-important-46-papers-in.html">here</a>) one book by the lesswrong community (see <a href="https://blog.computationalcomplexity.org/2021/09/review-of-blog-book-based-on-less-wrong.html">here</a>), and you even did a mashup of a post by two different Scott A's (see <a href="https://blog.computationalcomplexity.org/2021/08/combing-two-posts-blankface-scott-aa.html">here</a>),  but not on your own work.</p><p><i>Bill</i>: I thought I did a post on my muffin book.</p><p><i>Lance</i>: No. You have blogged <i>about </i>the muffin problem, and sometimes you <i>mention</i> either the book or the problem in passing, but you haven't had a post that says</p><p><i><b>HEY, I wrote a book!</b></i></p><p>And this is all the more strange since you asked me to have the book on our blog page. </p><p><i>Bill: </i>(Searches blog with keyword muffin and finds no ref to muffin book). Well pierce my ears and call be drafty! I have not posted on the muffin book! Do you recall my thoughts on when to tell people you are working on a book?</p><p><i>Lance</i>: No</p><p><i>Bill</i>:  I had a college roommate who was an aspiring science fiction writer who told me there are two kinds of people: Those who talk about writing a book, and those who write a book. I have adapted this to:</p><p><i><b>Do not tell people you are writing a book until you are picking out the cover art.</b></i></p><p><i>Lance: </i>I posted about my book when I hadn't even decided on <a href="https://blog.computationalcomplexity.org/2012/06/name-my-book.html">the title</a>. But your cover art is picked out (see <a href="https://www.amazon.com/Mathematical-Muffin-Morsels-Problem-Mathematics/dp/9811215170">here</a>).  And, by the way, its very nice, though it makes me hungry. So I think you can begin talking about the book.</p><p><i>Bill</i>: Indeed! I will!</p><p>------------------------------------------------------------------------------------</p><p><b>Hey I have a book! (See <a href="https://www.amazon.com/Mathematical-Muffin-Morsels-Problem-Mathematics/dp/9811215170">here</a> to buy it on amazon.) </b></p><p><b>Title: Mathematical Muffin Morsels: Nobody Wants a Small Piece</b></p><p><b>by Gasarch, Metz, Prinz, Smolyak</b></p><p><b>(The other authors were undergraduates when we wrote the book. Prinz and Smolyak are now grad students in CS, Metz is in Finance.) </b></p><p><b>Origin: </b></p><p><a href="https://en.wikipedia.org/wiki/Martin_Gardner">Martin Gardner</a> wrote a Mathematics Recreational column for Scientific American for many years, starting in 1956 and ending in the early 1980s. For many STEM people of my generation (Using my <a href="https://blog.computationalcomplexity.org/2020/10/nature-vs-nurture-close-to-my-birthday.html">fake birthday</a> of Oct 1, 1960, I am 62 years old) Martin Gardner's columns were both an inspiration and an early exposure to mathematics. His columns also made the line between Mathematical Recreation and so-called serious mathematics thin or nonexistent. (See <a href="http://www.cs.umd.edu/~gasarch/bookrev/FRED/gardner.pdf">here</a> for a review of Martin Gardner in the 21st century, a book about the kind of math Gardner wrote of. The book makes a mockery of the distinction between recreational and serious mathematics.) He passed away in 2010 at the age of 95.</p><p>There is a gathering in his honor that is hold roughly every 2 years, called <a href="https://www.gathering4gardner.org/">Gathering For Gardner</a>. (It was cancelled in Spring 2020 and Spring 2021 because of COVID- though its in Atlanta where the CDC is, so they could have had it as an experiment and told the CDC the results). You have to be invited to goto it. I got an invite for 2016 from my contact at World Scientific who published my previous book, <i>Problems with a Point: Exploring Math and Computer Science co-authored with Clyde Kruskal </i> (I had two blogs on it, <a href="https://blog.computationalcomplexity.org/2019/02/problems-with-point-exploring-math-and.html">here</a> and <a href="https://blog.computationalcomplexity.org/2019/04/problems-with-point-not-plug-just-some.html">here</a>, and you can buy it on amazon <a href="https://www.amazon.com/Problems-Point-Exploring-Computer-Science/dp/9813279974">here</a>.) I did three posts on G4G-2016 (<a href="https://blog.computationalcomplexity.org/2016/04/some-short-bits-from-gathering-for.html">here</a>, <a href="https://blog.computationalcomplexity.org/2016/05/some-more-bits-from-gathering-for.html">here</a>, and <a href="https://blog.computationalcomplexity.org/search?q=Gathering">here</a>).</p><p>Aside from seeing some great talks that I understood and liked, I also picked up a pamphlet titled:</p><p><b>The Julia Robinson Math Festival</b></p><p><b>A Sample of Mathematical Puzzles</b></p><p><b>Compiled By Nancy Blackman</b></p><p>One of the problems, credited to Alan Frank, was</p><p>How can you divide and distribute 5 muffins for 3 students so that everyone gets 5/3 and the smallest piece is as big as possible?</p><p>They had some other values for muffins and students as well. </p><p>I solved the (5,3) problem and the other ones as well. That was fun. </p><p>When I got home I began looking at the problem for m muffins and s students. I let f(m,s) be the biggest smallest piece possible for giving out m muffins to s students. I proved a general theorem, called the <i>Floor-Ceiling theorem</i>, that always gives an upper bound, FC(m,s) on f(m,s). I worked out formulas for </p><p>f(m,1) (trivial), </p><p>f(m,2) (trivial), </p><p>f(m,3) (its always FC(m,3),</p><p> f(m,4) (its always FC(m,4)).</p><p>While working on f(m,5) I found that  f(m,5) was always FC(m,5) EXCEPT for m=11. So what's up with f(11,5)?  </p><p>By the Floor Ceiling theorem f(11,5) \le 11/25. We (at that point several ugrads and HS students had joined the project)  were unable to find a protocol that would show f(11,5)\ge 11/25. Personally I thought there WAS such an protocol but perhaps it was more complicated than the ones we had found (We were finding them by hand using some easy linear algebra.) Perhaps a computer program was needed. We did find a protocol for f(11,5)\ge 13/30, which surely was not optimal. </p><p>While on an Amtrak I began working out the following train of thought: The protocol for f(11,5)\le 11/25 MUST have </p><p>(1) every muffin cut into two pieces,</p><p>(2) 3 students get 4 pieces, </p><p>(3) 2 students get 5 pieces. </p><p>While working on getting a protocol for f(11,5)\le 11/25 with these properties I found that... <i>there could be no such protocol</i>! Then by reworking what I did I found that f(11,5)\le 13/30. So it was done! and we had a new technique, which we call <i>The Half Method. </i>To see the full proof see my slides <a href="http://www.cs.umd.edu/~gasarch/MUFFINS/muffintalkGen.pdf">here</a></p><p>The story above is typical: We get f(m,k) for all 1\le k\le SOMETHING, we get stuck, and then we find ANOTHER technique to show upper bounds (which in this case are limits on how well we can do). This happened about 8 times depending on how you count.  After a while we realized that this could not just be an article, this was a book! World Scienfiic agreed to publish it, and its out now.</p><p>Misc Notes</p><p>1) I got a conference paper out of it, in the Fun with Algorithms Conference, with some of the co-authors on the book, and some other people. <a href="https://drops.dagstuhl.de/opus/frontdoor.php?source_opus=8806">here is the conf paper</a>.</p><p>2) Early on we realized that f(m,s) = (m/s)f(s,m) so we only had to look at the m&gt;s case.</p><p>3) The fact that f(m,s) exists and is rational is not obvious, but is true. In fact, f(m,s) can be found by a mixed-int program. </p><p>4) Late on in the process I found that there was a by-invite-only math newsgroup that had discussed the problem, and in fact was where Alan Frank first posted it. I obtained their materials and found that they had already shown f(m,s)=(m/s)f(s,m) and also that the answer is always rational and exists. Aside from that our results did not overlap.</p><p>5) Even later in the process Scott Huddleston emailed me (out of the blue) that he had a program that solved the muffin problem quickly. I was skeptical at first, but he did indeed have a whole new way to look at the problem and his code was very fast (I had Jacob Prinz, one of the co-authors on the book, recode it). Later Richard Chatwin (see <a href="https://arxiv.org/abs/1907.08726">here</a>) seems to have proven that Scott's method always works. The approach of Scott and Richard is where to go if you want to do serious further research on Muffins. My book is where you want to go if you want to learn some easy and fun math (a HS student could read it). </p><p>6) I co-authored a column with Scott H, Erik Metz, Jacob Prinz on Muffins, featuring his technique, in Lane's complexity column, <a href="http://www.cs.umd.edu/~gasarch/papers/sigmuffins.pdf">here</a>.</p><p>7) I had an REU student, Stephanie Warman, write a muffin package based on the book.</p><p>8) I gave a talk an invited talk on The Muffin Problem  at a Joint AMS-MAA meeting. </p><p>9) I gave a talk at Gathering for Gardner 2018 on The Muffin Problem. </p><p>10) I often give talks on it to groups of High School students.</p><p>11) When I teach Discrete Math Honors I talk about it and assign problems on it- it really is part of the course. As such its a good way to reinforce the pigeon hole principle. </p><p>12) I contacted Alan Frank about my work. We arranged to meet at an MIT combinatorics seminar where I was to give a talk on muffins. He brought 11 muffins, with 1 cut (1/2,1/2), 2 cut (14/30,16/30),</p><p>and 8 cut (13/30,17/30) so that the 11 of us could each get 11/5 with smallest piece 13/30. </p><p>13) Coda: </p><p>Why did I keep working on this problem?  I kept working on it because I kept hitting barriers and (with co-authors) breaking them with new techniques that were interesting.  If early on a barrier was not breakable then I would have stopped. If (say) Floor-ceiling solved everything than I might have gotten a paper out of  this, but surely not a book.</p><p>Lesson for all of us: look around you! Its not clear what is going to inspire a project!</p><p>Lasting effect: I am reluctant to throw out old math magazines and pamphlets since you never know when one will lead to a book.</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p></div>
    </content>
    <updated>2021-10-11T01:18:00Z</updated>
    <published>2021-10-11T01:18:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-20T14:39:33Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=5868</id>
    <link href="https://www.scottaaronson.com/blog/?p=5868" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=5868#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=5868" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Gaussian BosonSampling, higher-order correlations, and spoofing: An update</title>
    <summary xml:lang="en-US">In my last post, I wrote (among other things) about an ongoing scientific debate between the group of Chaoyang Lu at USTC in China, which over the past year has been doing experiments that seek to demonstrate quantum supremacy via Gaussian BosonSampling; and the group of Sergio Boixo at Google, which had a recent paper […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>In my <a href="https://www.scottaaronson.com/blog/?p=5859">last post</a>, I wrote (among other things) about an ongoing scientific debate between the group of Chaoyang Lu at USTC in China, which over the past year has been doing experiments that seek to demonstrate quantum supremacy via Gaussian BosonSampling; and the group of Sergio Boixo at Google, which had a <a href="https://arxiv.org/abs/2109.11525">recent paper</a> on a polynomial-time classical algorithm to sample approximately from the same distributions.  I reported the facts as I understood them at the time.  Since then, though, a long call with the Google team gave me a new and different understanding, and I feel duty-bound to share that here.</p>



<p>A week ago, I considered it obvious that if, using a classical spoofer, you could beat the USTC experiment on a metric like total variation distance from the ideal distribution, then you would’ve completely destroyed USTC’s claim of quantum supremacy.  The reason I believed <em>that</em>, in turn, is a proposition that I hadn’t given a name but needs one, so let me call it <strong>Hypothesis H</strong>:</p>



<blockquote class="wp-block-quote"><p>The only way a classical algorithm to spoof BosonSampling can possibly do well in total variation distance, is by correctly reproducing the high-order correlations (correlations among the occupation numbers of large numbers of modes) — because that’s where the complexity of BosonSampling lies (if it lies anywhere).</p></blockquote>



<p>Hypothesis H had important downstream consequences.  Google’s algorithm, by the Google team’s own admission, does not reproduce the high-order correlations.  Furthermore, because of limitations on both samples and classical computation time, Google’s paper calculates the total variation distance from the ideal distribution only on the marginal distribution on roughly 14 out of 144 modes.  On that marginal distribution, Google’s algorithm does do better than the experiment in total variation distance.  Google presents a claimed extrapolation to the full 144 modes, but eyeballing the graphs, it was far from clear to me what would happen: like, maybe the spoofing algorithm would continue to win, but maybe the experiment would turn around and win; who knows?</p>



<p>Chaoyang, meanwhile, made a clear prediction that the experiment would turn around and win, because of</p>



<ol><li>the experiment’s success in reproducing the high-order correlations,</li><li>the admitted failure of Google’s algorithm in reproducing the high-order correlations, and</li><li>the seeming impossibility of doing well on BosonSampling <em>without</em> reproducing the high-order correlations (Hypothesis H).</li></ol>



<p>Given everything my experience told me about the central importance of high-order correlations for BosonSampling, I was inclined to agree with Chaoyang.</p>



<p>Now for the kicker: it seems that Hypothesis H is false.  A classical spoofer could beat a BosonSampling experiment on total variation distance from the ideal distribution, without even bothering to reproduce the high-order correlations correctly.</p>



<p>This is true because of a combination of two facts about the existing noisy BosonSampling experiments.  The first fact is that the contribution from the order-k correlations falls off like 1/exp(k).  The second fact is that, due to calibration errors and the like, the experiments already show significant deviations from the ideal distribution on the order-1 and order-2 correlations.</p>



<p>Put these facts together and what do you find?  Well, suppose your classical spoofing algorithm takes care to get the low-order contributions to the distribution exactly right.  Just for that reason alone, it could already win over a noisy BosonSampling experiment, as judged by benchmarks like total variation distance from the ideal distribution, or for that matter linear cross-entropy.  Yes, the experiment will beat the classical simulation on the higher-order correlations.  But because those higher-order correlations are exponentially attenuated anyway, they won’t be enough to make up the difference.  The experiment’s lack of perfection on the low-order correlations will swamp everything else.</p>



<p>Granted, I still don’t know for sure that this <em>is</em> what happens — that depends on whether I believe Sergio or Chaoyang about the extrapolation of the variation distance to the full 144 modes (my own eyeballs having failed to render a verdict!).  But I now see that it’s logically possible, maybe even plausible.</p>



<p>So, let’s imagine for the sake of argument that Google’s simulation wins on variation distance, even though the experiment wins on the high-order correlations.  In that case, what would be our verdict: would USTC have achieved quantum supremacy via BosonSampling, or not?</p>



<p>It’s clear what each side could say.</p>



<p>Google could say: by a metric that Scott Aaronson, the coinventor of BosonSampling, thought was perfectly adequate as late as last week — namely, total variation distance from the ideal distribution — we won.  We achieved lower variation distance than USTC’s experiment, and we did it using a fast classical algorithm.  End of discussion.  No moving the goalposts after the fact.</p>



<p>Google could even add: BosonSampling is a <em>sampling</em> task; it’s right there in the name!  The only purpose of any benchmark — whether Linear XEB or high-order correlation — is to give evidence about whether you are or aren’t sampling from a distribution close to the ideal one.  But that means that, if you accept that we <em>are</em> doing the latter better than the experiment, then there’s nothing more to argue about.</p>



<p>USTC could respond: even if Scott Aaronson <em>is</em> the coinventor of BosonSampling, he’s extremely far from an infallible oracle.  In the case at hand, his lack of appreciation for the sources of error in realistic experiments caused him to fixate inappropriately on variation distance as the success criterion.  If you want to see the quantum advantage in our system, you have to deliberately subtract off the low-order correlations and look at the high-order correlations.</p>



<p>USTC could add: from the very beginning, the whole point of quantum supremacy experiments was to demonstrate a clear speedup on <em>some</em> benchmark — we never particularly cared which one!  That horse is out of the barn as soon as we’re talking about quantum supremacy at all — something the Google group, which itself reported the first quantum supremacy experiment in Fall 2019, again for a completely artificial benchmark — knows as well as anyone else.  (The Google team even has experience with adjusting benchmarks: when, for example, <a href="https://arxiv.org/abs/2103.03074">Pan and Zhang</a> pointed out that Linear XEB as originally specified is pretty easy to spoof for random 2D circuits, the most cogent rejoinder was: OK, fine then, add an extra check that the returned samples are sufficiently different from one another, which kills Pan and Zhang’s spoofing strategy.)  In that case, then, why isn’t a benchmark tailored to the high-order correlations as good as variation distance or linear cross-entropy or any other benchmark?</p>



<p>Both positions are reasonable and have merit — though I confess to somewhat greater sympathy for the one that appeals to my doofosity rather than my supposed infallibility!</p>



<p>OK, but suppose, again for the sake of argument, that we accepted the second position, and we said that USTC gets to declare quantum supremacy as long as its experiment does better than any known classical simulation at reproducing the high-order correlations.  We’d still face the question: does the USTC experiment, in fact, do better on that metric?  It would be awkward if, having won the right to change the rules in its favor, USTC still lost even under the new rules.</p>



<p>Sergio tells me that USTC directly reported experimental data only for up to order-7 correlations, and at least individually, the order-7 correlations are easy to reproduce on a laptop (although <em>sampling</em> in a way that reproduces the order-7 correlations might still be hard—a point that Chaoyang confirms, and where further research would be great).  OK, but USTC also reported that their experiment seems to reproduce up to order-19 correlations.  And order-19 correlations, the Google team agrees, are hard to sample consistently with on a classical computer by any currently known algorithm.</p>



<p>So then, why don’t we have direct data for the order-19 correlations?  The trouble is simply that it would’ve taken USTC an astronomical amount of computation time.  So instead, they relied on a statistical extrapolation from the observed strength of the lower-order correlations — there we go again with the extrapolations!  Of course, if we’re going to let Google rest its case on an extrapolation, then maybe it’s only sporting to let USTC do the same.</p>



<p>You might wonder: why didn’t we have to worry about any of this stuff with the <em>other</em> path to quantum supremacy, the one via random circuit sampling with superconducting qubits?  The reason is that, with random circuit sampling, all the correlations except the highest-order ones are completely trivial — or, to say it another way, the reduced state of any small number of output qubits is exponentially close to the maximally mixed state.  This is a real difference between BosonSampling and random circuit sampling—and even 5-6 years ago, we knew that this represented an advantage for random circuit sampling, although I now have a deeper appreciation for just how great of an advantage it is.  For it means that, with random circuit sampling, it’s easier to place a “sword in the stone”: to say, for example, <em>here</em> is the Linear XEB score achieved by the trivial classical algorithm that outputs random bits, and lo, our experiment achieves a higher score, and lo, we challenge anyone to invent a fast classical spoofing method that achieves a similarly high score.</p>



<p>With BosonSampling, by contrast, we have various metrics with which to judge performance, but so far, for none of those metrics do we have a plausible hypothesis that says “<em>here’s</em> the best that any polynomial-time classical algorithm can possibly hope to do, and it’s completely plausible that even a noisy current or planned BosonSampling experiment can do better than that.”</p>



<p>In the end, then, I come back to the exact same three goals I would’ve recommended a week ago for the future of quantum supremacy experiments, but with all of them now even more acutely important than before:</p>



<ol><li>Experimentally, to increase the fidelity of the devices (with BosonSampling, for example, to observe a larger contribution from the high-order correlations) — a much more urgent goal, from the standpoint of evading classical spoofing algorithms, than further increasing the dimensionality of the Hilbert space.</li><li>Theoretically, to design better ways to verify the results of sampling-based quantum supremacy experiments classically — ideally, even ways that could be applied via polynomial-time tests.</li><li>For Gaussian BosonSampling in particular, to get a better understanding of the plausible limits of classical spoofing algorithms, and exactly how good a noisy device needs to be before it exceeds those limits.</li></ol>



<p>Thanks so much to Sergio Boixo and Ben Villalonga for the conversation, and to Chaoyang Lu and Jelmer Renema for comments on this post.  Needless to say, any remaining errors are my own.</p></div>
    </content>
    <updated>2021-10-10T18:13:03Z</updated>
    <published>2021-10-10T18:13:03Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Complexity"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Embarrassing Myself"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Quantum"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog/?feed=atom</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="http://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2021-10-12T13:12:34Z</updated>
    </source>
  </entry>
</feed>
