<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-10-28T19:22:09Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry>
    <id>https://differentialprivacy.org/tpdp2020/</id>
    <link href="https://differentialprivacy.org/tpdp2020/" rel="alternate" type="text/html"/>
    <title>Conference Digest - TPDP 2020</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://tpdp.journalprivacyconfidentiality.org/2020/">TPDP 2020</a> is a workshop focused on differential privacy. As such, it’s a great place to learn about recent developments in the DP research community.
It will be held on 13 November and is co-located with <a href="https://www.sigsac.org/ccs/CCS2020/">CCS</a>, but, of course, it’s virtual this year. <a href="https://www.sigsac.org/ccs/CCS2020/registration.html">Registration is only US$35 if you register by Friday, 30 October.</a> Check out the 8 excellent talks and 71 posters below – wow, the workshop has grown!</p>

<p>Please let us know if there are any errors or omissions.</p>

<h2 id="invited-talks">Invited Talks</h2>

<ul>
  <li>
    <p>OpenDP: A Community Effort to Build Trustworthy Differential Privacy Software.<br/>
 <a href="https://salil.seas.harvard.edu/">Salil Vadhan</a></p>
  </li>
  <li>
    <p><a href="https://cilvento.org/">Christina Ilvento</a></p>
  </li>
</ul>

<h2 id="contributed-talks">Contributed Talks</h2>

<ul>
  <li>
    <p><a href="https://arxiv.org/abs/2009.09052">Private Reinforcement Learning with PAC and Regret Guarantees</a><br/>
 Giuseppe Vietri, Borja Balle, Akshay Krishnamurthy, Z. Steven Wu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.07709">Auditing Differentially Private Machine Learning: How Private is Private SGD?</a><br/>
 Matthew Jagielski, Jonathan Ullman, Alina Oprea</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.06783">Characterizing Private Clipped Gradient Descent on Convex Generalized Linear Problems</a><br/>
 Shuang Song, Om Thakkar, Abhradeep Thakurta</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.10941">Private Query Release Assisted by Public Data</a><br/>
 Raef Bassily, Albert Cheu, Shay Moran, Aleksandar Nikolov, Jonathan Ullman, Z. Steven Wu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2003.00563">An Equivalence Between Private Classification and Online Prediction</a><br/>
 Mark Bun, Roi Livni, Shay Moran</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.09745">Differentially Private Set Union</a><br/>
Sivakanth Gopi, Pankaj Gulhane, Janardhan Kulkarni, Judy Hanwen Shen, Milad Shokouhi, Sergey Yekhanin</p>
  </li>
</ul>

<h2 id="posters">Posters</h2>

<ul>
  <li>
    <p><a href="https://arxiv.org/abs/2004.00010">The Discrete Gaussian for Differential Privacy</a><br/>
Clément Canonne, Gautam Kamath, Thomas Steinke</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.09465">Locally Private Hypothesis Selection</a><br/>
 Sivakanth Gopi, Gautam Kamath, Janardhan Kulkarni, Aleksandar Nikolov, Z. Steven Wu, Huanyu Zhang</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.05839">LinkedIn’s Audience Engagements API: A Privacy Preserving Data Analytics System at Scale</a><br/>
 Ryan Rogers, Subbu Subramaniam, Sean Peng, David Durfee, Seunghyun Lee, Santosh Kumar Kancha, Shraddha Sahay, Parvez Ahammad</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2005.14717">Differentially Private Decomposable Submodular Maximization</a><br/>
 Anamay Chaturvedi, Huy Nguyen, Lydia Zakynthinou</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.11934">Private Post-GAN Boosting</a><br/>
 Marcel Neunhoeffer, Z. Steven Wu, Cynthia Dwork</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.01100">Efficient, Noise-Tolerant, and Private Learning via Boosting</a><br/>
 Marco Carmosino, Mark Bun, Jessica Sorrell</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2003.04509">Closure Properties for Private Classification and Online Prediction</a><br/>
by Noga Alon, Amos Beimel, Shay Moran, Uri Stemmer</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.12018">Overlook: Differentially Private Exploratory Visualization for Big Data</a><br/>
Pratiksha Thaker, Mihai Budiu, Parikshit Gopalan, Udi Wieder, Matei Zaharia</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.01980">On the Equivalence between Online and Private Learnability beyond Binary Classification</a><br/>
Young Hun Jung, Baekjin Kim and Ambuj Tewari</p>
  </li>
  <li>
    <p><a href="https://dettanym.github.io/files/tpdp20_workshop_paper.pdf">Cache Me If You Can: Accuracy-Aware Inference Engine for Differentially Private Data Exploration</a><br/>
 Miti Mazmudar, Thomas Humphries, Matthew Rafuse, Xi He</p>
  </li>
  <li>
    <p><a href="https://drops.dagstuhl.de/opus/volltexte/2020/12026/">Bounded Leakage Differential Privacy</a><br/>
Katrina Ligett, Charlotte Peale, Omer Reingold</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1909.06322">A Knowledge Transfer Framework for Differentially Private Sparse Learning</a><br/>
Lingxiao Wang, Quanquan Gu</p>
  </li>
  <li>
    <p>Consistent Integer, Non-Negative, Hierarchical Histograms without Integer Programming<br/>
 Cynthia Dwork, Christina Ilvento</p>
  </li>
  <li>
    <p><a href="https://www.microsoft.com/en-us/research/uploads/prod/2020/03/intrinsic_privacy_tpdp.pdf">An Empirical Study on the Intrinsic Privacy of Stochastic Gradient Descent</a><br/>
Stephanie Hyland, Shruti Tople</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2001.03618">Encode, Shuffle, Analyze Privacy Revisited: Formalizations and Empirical Evaluation</a><br/>
Úlfar Erlingsson, Vitaly Feldman, Ilya Mironov, Ananth Raghunathan, Shuang Song, Kunal Talwar, Abhradeep Thakurta</p>
  </li>
  <li>
    <p>Improving Sparse Vector Technique with Renyi Differential Privacy<br/>
 Yuqing Zhu and Yu-Xiang Wang</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.11707">Breaking the Communication-Privacy-Accuracy Trilemma</a><br/>
Wei-Ning Chen, Peter Kairouz, Ayfer Özgür</p>
  </li>
  <li>
    <p>Budget Sharing for Multi-Analyst Differential Privacy<br/>
 David Pujol, Yikai Wu, Brandon Fain, Ashwin Machanavajjhala</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1908.07643">AdaCliP: Adaptive Clipping for Private SGD</a><br/>
 Venkatadheeraj Pichapati, Ananda Theertha Suresh, Felix X. Yu, Sashank J. Reddi, Sanjiv Kumar</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.01181">Private Optimization Without Constraint Violation</a><br/>
 Andrés Muñoz Medina, Umar Syed, Sergei Vassilvitskii, Ellen Vitercik</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1912.06015">Efficient Per-Example Gradient Computations in Convolutional Neural Networks</a><br/>
 Gaspar Rochette, Andre Manoel, Eric Tramel</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.12674">Controlling Privacy Loss in Survey Sampling</a><br/>
 Audra McMillan, Mark Bun, Marco Gaboardi, Joerg Drechsler</p>
  </li>
  <li>
    <p>Privacy-Preserving Community Detection under the Stochastic Block Model<br/>
 Jonathan Hehir, Aleksandra Slavkovic, Xiaoyue Niu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.10129">Smoothed Analysis of Differentially Private and Online Learning</a><br/>
 Nika Haghtalab, Tim Roughgarden, Abhishek Shetty</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.09464">Private Mean Estimation for Heavy-Tailed Distributions</a><br/>
 Gautam Kamath, Vikrant Singhal, Jonathan Ullman</p>
  </li>
  <li>
    <p><a href="https://link.springer.com/chapter/10.1007%2F978-3-030-57521-2_23">Private Posterior Inference Consistent with Public Information: a Case Study in Small Area Estimation from Synthetic Census Data</a><br/>
 Jeremy Seeman, Aleksandra Slavkovic, Matthew Reimherr</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2001.09122">Reasoning About Generalization via Conditional Mutual Information</a><br/>
 Thomas Steinke, Lydia Zakynthinou</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.15429">Understanding Gradient Clipping in Private SGD: A Geometric Perspective</a><br/>
 Xiangyi Chen, Z. Steven Wu, Mingyi Hong</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.06605">Privacy Amplification via Random Check-Ins</a><br/>
 Borja Balle, Peter Kairouz, Brendan McMahan, Om Thakkar, Abhradeep Thakurta</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2010.12603">Permute-and-flip: a new mechanism for differentially-private selection</a><br/>
 Ryan McKenna, Daniel Sheldon</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.02923">Descent-to-Delete: Gradient-Based Methods for Machine Unlearning</a><br/>
 Seth Neel, Aaron Roth, Saeed Sharifi-Malvajerdi</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2008.06529">A Better Bound Gives a Hundred Rounds: Enhanced Privacy Guarantees via f-Divergences</a><br/>
Shahab Asoodeh, Jiachun Liao, Flavio Calmon, Oliver Kosut, Lalitha Sankar</p>
  </li>
  <li>
    <p><a href="https://sites.tufts.edu/vrdi/files/2020/07/Slides-DP-Bhushan-Suwal-JN-Matthews-et-al.pdf">Census TopDown and the Redistricting Use Case</a><br/>
 Aloni Cohen, Moon Duchin, JN Matthews, Bhushan Suwal, Peter Wayner</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1911.04014">Interaction is Necessary for Distributed Learning with Privacy or Communication Constraints</a><br/>
Yuval Dagan, Vitaly Feldman</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2005.10783">Fisher information under local differential privacy</a><br/>
 Leighton Barnes, Wei-Ning Chen, Ayfer Ozgur</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.06830">Differentially Private Assouad, Fano, and Le Cam</a><br/>
 Jayadev Acharya, Ziteng Sun, Huanyu Zhang</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.13660">Learning discrete distributions: user vs item-level privacy</a><br/>
 Yuhan Liu, Ananda Theertha Suresh, Felix Yu, Sanjiv Kumar, Michael Riley</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1910.13659">Efficient Privacy-Preserving Stochastic Nonconvex Optimization</a><br/>
 Lingxiao Wang, Bargav Jayaraman, David Evans, Quanquan Gu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.03813">Bypassing the Ambient Dimension: Private SGD with Gradient Subspace Identification</a><br/>
 Yingxue Zhou, Zhiwei Steven Wu, Arindam Banerjee</p>
  </li>
  <li>
    <p>Differentially private partition selection<br/>
 Damien Desfontaines, Bryant Gipson, Chinmoy Mandayam, James Voss</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2008.08007">Differentially Private Clustering: Tight Approximation Ratios</a><br/>
 Badih Ghazi, Ravi Kumar, Pasin Manurangsi</p>
  </li>
  <li>
    <p>Let’s not make a fuzz about it<br/>
 Elisabet Lobo Vesga, Alejandro Russo, Marco Gaboardi</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.12321">PAPRIKA: Private Online False Discovery Rate Control</a><br/>
 Wanrong Zhang, Gautam Kamath, Rachel Cummings</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2009.13689">Oblivious Sampling Algorithms for Private Data Analysis</a><br/>
 Sajin Sasy, Olga Ohrimenko</p>
  </li>
  <li>
    <p>SOGDB-epsilon: Secure Outsourced Growing Database with Differentially Private Record Update<br/>
 Chenghong Wang, Kartik Nayak, Ashwin Machanavajjhala</p>
  </li>
  <li>
    <p><a href="https://invertibleworkshop.github.io/accepted_papers/pdfs/41.pdf">Differentially Private Normalizing Flows for Privacy-Preserving Density Estimation</a><br/>
 Chris Waites, Rachel Cummings</p>
  </li>
  <li>
    <p><a href="https://cs.uwaterloo.ca/~hsivasub/pub/TPDP2020.pdf">Differentially Private Sublinear Average Degree Approximation</a><br/>
 Harry Sivasubramaniam, Haonan Li, Xi He</p>
  </li>
  <li>
    <p><a href="https://chong-l.github.io/MAPL_TNC_FL_ICML_2020.pdf">Revisiting Model-Agnostic Private Learning: Faster Rates and Active Learning</a><br/>
 Chong Liu, Yuqing Zhu, Kamalika Chaudhuri, Yu-Xiang Wang</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.06618">CoinPress: Practical Private Mean and Covariance Estimation</a><br/>
 Sourav Biswas, Yihe Dong, Gautam Kamath, Jonathan Ullman</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.09481">Connecting Robust Shuffle Privacy and Pan-Privacy</a><br/>
 Victor Balcer, Albert Cheu, Matthew Joseph, Jieming Mao</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.11204">Differentially Private Variational Autoencoders with Term-wise Gradient Aggregation</a><br/>
 Tsubasa Takahashi, Shun Takagi, Hajime Ono, Tatsuya Komatsu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.07490">Understanding Unintended Memorization in Federated Learning</a><br/>
 Om Thakkar, Swaroop Ramaswamy, Rajiv Mathews, Francoise Beaufays</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2005.10630">Near Instance-Optimality in Differential Privacy</a><br/>
 Hilal Asi, John Duchi</p>
  </li>
  <li>
    <p><a href="https://drive.google.com/file/d/1okHAkjNENiS2WfSKdkUo8B29yE8-Qfof/view">Implementing differentially private integer partitions via the exponential mechanism</a> and <a href="https://drive.google.com/file/d/1OytgB24d1n-xPIWrrKCsVQQdS7rV3tjn/view">Implementing Sparse Vector</a><br/>
 Christina Ilvento</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.05157">Differentially Private Simple Linear Regression</a><br/>
 Audra McMillan, Daniel Alabi, Jayshree Sarathy, Adam Smith, Salil Vadhan</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.05453">New Oracle-Efficient Algorithms for Private Synthetic Data Release</a><br/>
 Giuseppe Vietri, Grace Tian, Mark Bun, Thomas Steinke, Z. Steven Wu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.07749">General-Purpose Differentially-Private Confidence Intervals</a><br/>
 Cecilia Ferrando, Shufan Wang, Daniel Sheldon</p>
  </li>
  <li>
    <p>Central Limit Theorem and Uncertainty Principles for Differentially Private Query Answering<br/>
 Jinshuo Dong, Linjun Zhang, Weijie Su</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.13501">Private Stochastic Non-Convex Optimization: Adaptive Algorithms and Tighter Generalization Bounds</a><br/>
 Yingxue Zhou, Xiangyi Chen, Mingyi Hong, Z. Steven Wu, Arindam Banerjee</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1905.10335">Minimax Rates of Estimating Approximate Differential Privacy</a><br/>
Xiyang Liu, Sewoong Oh</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.07740">Really Useful Synthetic Data – A Framework to Evaluate the Quality of Differentially Private Synthetic Data</a><br/>
 Christian Arnold, Marcel Neunhoeffer</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1911.10541">PAC learning with stable and private predictions</a><br/>
 Yuval Dagan, Vitaly Feldman</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.04656">Computing Local Sensitivities of Counting Queries with Joins</a><br/>
 Yuchao Tao, Xi He, Ashwin Machanavajjhala, Sudeepa Roy</p>
  </li>
  <li>
    <p>Efficient Reductions for Differentially Private Multi-objective Regression<br/>
 Julius Adebayo, Daniel Alabi</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2010.06667">The Pitfalls of Differentially Private Prediction in Healthcare</a><br/>
 Vinith Suriyakumar, Nicolas Papernot, Anna Goldenberg, Marzyeh Ghassemi</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.14191">Tempered Sigmoid Activations for Deep Learning with Differential Privacy</a><br/>
 Nicolas Papernot, Abhradeep Thakurta, Shuang Song, Steve Chien, Úlfar Erlingsson</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2005.10881">Revisiting Membership Inference Under Realistic Assumptions</a><br/>
 Bargav Jayaraman, Lingxiao Wang, David Evans, Quanquan Gu</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2009.04013">Attribute Privacy: Framework and Mechanisms</a><br/>
 Wanrong Zhang, Olga Ohrimenko, Rachel Cummings</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2010.10664">DuetSGX: Differential Privacy with Secure Hardware</a><br/>
 Phillip Nguyen, Alex Silence, David Darais, Joseph Near</p>
  </li>
  <li>
    <p><a href="https://pdfs.semanticscholar.org/4319/65b3c5a47cf8bfd30f1c30cd044382e98d68.pdf">A Programming Framework for OpenDP</a><br/>
 Marco Gaboardi, Michael Hay, Salil Vadhan</p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.09352">A One-Pass Private Sketch for Most Machine Learning Tasks</a><br/>
 Benjamin Coleman, Anshumali Shrivastava</p>
  </li>
  <li>
    <p>Model-Agnostic Private Learning with Domain Adaptation<br/>
 Yuqing Zhu, Chong Liu, Yu-Xiang Wang</p>
  </li>
</ul></div>
    </summary>
    <updated>2020-10-28T00:01:00Z</updated>
    <published>2020-10-28T00:01:00Z</published>
    <author>
      <name>Thomas Steinke</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-10-28T19:22:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14487</id>
    <link href="http://arxiv.org/abs/2010.14487" rel="alternate" type="text/html"/>
    <title>Improved Guarantees for k-means++ and k-means++ Parallel</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Makarychev:Konstantin.html">Konstantin Makarychev</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Reddy:Aravind.html">Aravind Reddy</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shan:Liren.html">Liren Shan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14487">PDF</a><br/><b>Abstract: </b>In this paper, we study k-means++ and k-means++ parallel, the two most
popular algorithms for the classic k-means clustering problem. We provide novel
analyses and show improved approximation and bi-criteria approximation
guarantees for k-means++ and k-means++ parallel. Our results give a better
theoretical justification for why these algorithms perform extremely well in
practice. We also propose a new variant of k-means++ parallel algorithm
(Exponential Race k-means++) that has the same approximation guarantees as
k-means++.
</p></div>
    </summary>
    <updated>2020-10-28T01:24:34Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14464</id>
    <link href="http://arxiv.org/abs/2010.14464" rel="alternate" type="text/html"/>
    <title>Dynamic Boundary Time Warping for Sub-sequence Matching with Few Examples</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Łukasz Borchmann, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jurkiewicz:Dawid.html">Dawid Jurkiewicz</a>, Filip Graliński, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/G=oacute=recki:Tomasz.html">Tomasz Górecki</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14464">PDF</a><br/><b>Abstract: </b>The paper presents a novel method of finding a fragment in a long temporal
sequence similar to the set of shorter sequences. We are the first to propose
an algorithm for such a search that does not rely on computing the average
sequence from query examples. Instead, we use query examples as is, utilizing
all of them simultaneously. The introduced method based on the Dynamic Time
Warping (DTW) technique is suited explicitly for few-shot query-by-example
retrieval tasks. We evaluate it on two different few-shot problems from the
field of Natural Language Processing. The results show it either outperforms
baselines and previous approaches or achieves comparable results when a low
number of examples is available.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14367</id>
    <link href="http://arxiv.org/abs/2010.14367" rel="alternate" type="text/html"/>
    <title>Simultaenous Sieves: A Deterministic Streaming Algorithm for Non-Monotone Submodular Maximization</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kuhnle:Alan.html">Alan Kuhnle</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14367">PDF</a><br/><b>Abstract: </b>In this work, we present a combinatorial, deterministic single-pass streaming
algorithm for the problem of maximizing a submodular function, not necessarily
monotone, with respect to a cardinality constraint (SMCC). In the case the
function is monotone, our algorithm reduces to the optimal streaming algorithm
of Badanidiyuru et al. (2014). In general, our algorithm achieves ratio $\alpha
/ (1 + \alpha) - \varepsilon$, for any $\varepsilon &gt; 0$, where $\alpha$ is the
ratio of an offline (deterministic) algorithm for SMCC used for
post-processing. Thus, if exponential computation time is allowed, our
algorithm deterministically achieves nearly the optimal $1/2$ ratio. These
results nearly match those of a recently proposed, randomized streaming
algorithm that achieves the same ratios in expectation. For a deterministic,
single-pass streaming algorithm, our algorithm achieves in polynomial time an
improvement of the best approximation factor from $1/9$ of previous literature
to $\approx 0.2689$.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14338</id>
    <link href="http://arxiv.org/abs/2010.14338" rel="alternate" type="text/html"/>
    <title>On Minimum Generalized Manhattan Connections</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Antoniadis:Antonios.html">Antonios Antoniadis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Capretto:Margarita.html">Margarita Capretto</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chalermsook:Parinya.html">Parinya Chalermsook</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Damerius:Christoph.html">Christoph Damerius</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kling:Peter.html">Peter Kling</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/N=ouml=lke:Lukas.html">Lukas Nölke</a>, Nidia Obscura, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Spoerhase:Joachim.html">Joachim Spoerhase</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14338">PDF</a><br/><b>Abstract: </b>We consider minimum-cardinality Manhattan connected sets with arbitrary
demands: Given a collection of points $P$ in the plane, together with a subset
of pairs of points in $P$ (which we call demands), find a minimum-cardinality
superset of $P$ such that every demand pair is connected by a path whose length
is the $\ell_1$-distance of the pair. This problem is a variant of three
well-studied problems that have arisen in computational geometry, data
structures, and network design: (i) It is a node-cost variant of the classical
Manhattan network problem, (ii) it is an extension of the binary search tree
problem to arbitrary demands, and (iii) it is a special case of the directed
Steiner forest problem. Since the problem inherits basic structural properties
from the context of binary search trees, an $O(\log n)$-approximation is
trivial. We show that the problem is NP-hard and present an $O(\sqrt{\log
n})$-approximation algorithm. Moreover, we provide an $O(\log\log
n)$-approximation algorithm for complete bipartite demands as well as improved
results for unit-disk demands and several generalizations. Our results
crucially rely on a new lower bound on the optimal cost that could potentially
be useful in the context of BSTs.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14316</id>
    <link href="http://arxiv.org/abs/2010.14316" rel="alternate" type="text/html"/>
    <title>Computation of Large Asymptotics of 3-Manifold Quantum Invariants</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Maria:Cl=eacute=ment.html">Clément Maria</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rouill=eacute=:Owen.html">Owen Rouillé</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14316">PDF</a><br/><b>Abstract: </b>Quantum topological invariants have played an important role in computational
topology, and they are at the heart of major modern mathematical conjectures.
In this article, we study the experimental problem of computing large $r$
values of Turaev-Viro invariants $\mathrm{TV}_r$. We base our approach on an
optimized backtracking algorithm, consisting of enumerating combinatorial data
on a triangulation of a 3-manifold. We design an easily computable parameter to
estimate the complexity of the enumeration space, based on lattice point
counting in polytopes, and show experimentally its accuracy. We apply this
parameter to a preprocessing strategy on the triangulation, and combine it with
multi-precision arithmetics in order to compute the Turaev-Viro invariants. We
finally study the improvements brought by these optimizations compared to
state-of-the-art implementations, and verify experimentally Chen and Yang's
volume conjecture on a census of closed 3-manifolds.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14189</id>
    <link href="http://arxiv.org/abs/2010.14189" rel="alternate" type="text/html"/>
    <title>Jiffy: A Fast, Memory Efficient, Wait-Free Multi-Producers Single-Consumer Queue</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Adas:Dolev.html">Dolev Adas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Friedman:Roy.html">Roy Friedman</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14189">PDF</a><br/><b>Abstract: </b>In applications such as sharded data processing systems, data flow
programming and load sharing applications, multiple concurrent data producers
are feeding requests into the same data consumer. This can be naturally
realized through concurrent queues, where each consumer pulls its tasks from
its dedicated queue. For scalability, wait-free queues are often preferred over
lock based structures.
</p>
<p>The vast majority of wait-free queue implementations, and even lock-free
ones, support the multi-producer multi-consumer model. Yet, this comes at a
premium, since implementing wait-free multi-producer multi-consumer queues
requires utilizing complex helper data structures. The latter increases the
memory consumption of such queues and limits their performance and scalability.
Additionally, many such designs employ (hardware) cache unfriendly memory
access patterns.
</p>
<p>In this work we study the implementation of wait-free multi-producer
single-consumer queues. Specifically, we propose Jiffy, an efficient memory
frugal novel wait-free multi-producer single-consumer queue and formally prove
its correctness. We then compare the performance and memory requirements of
Jiffy with other state of the art lock-free and wait-free queues. We show that
indeed Jiffy can maintain good performance with up to 128 threads, delivers up
to 50% better throughput than the next best construction we compared against,
and consumes ~90% less memory.
</p></div>
    </summary>
    <updated>2020-10-28T01:25:37Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14181</id>
    <link href="http://arxiv.org/abs/2010.14181" rel="alternate" type="text/html"/>
    <title>Impossibility Results for Grammar-Compressed Linear Algebra</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Abboud:Amir.html">Amir Abboud</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Backurs:Arturs.html">Arturs Backurs</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bringmann:Karl.html">Karl Bringmann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/K=uuml=nnemann:Marvin.html">Marvin Künnemann</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14181">PDF</a><br/><b>Abstract: </b>To handle vast amounts of data, it is natural and popular to compress vectors
and matrices. When we compress a vector from size $N$ down to size $n \ll N$,
it certainly makes it easier to store and transmit efficiently, but does it
also make it easier to process?
</p>
<p>In this paper we consider lossless compression schemes, and ask if we can run
our computations on the compressed data as efficiently as if the original data
was that small. That is, if an operation has time complexity
$T(\rm{inputsize})$, can we perform it on the compressed representation in time
$T(n)$ rather than $T(N)$? We consider the most basic linear algebra
operations: inner product, matrix-vector multiplication, and matrix
multiplication. In particular, given two compressed vectors, can we compute
their inner product in time $O(n)$? Or perhaps we must decompress first and
then multiply, spending $\Omega(N)$ time?
</p>
<p>The answer depends on the compression scheme. While for simple ones such as
Run-Length-Encoding (RLE) the inner product can be done in $O(n)$ time, we
prove that this is impossible for compressions from a richer class: essentially
$n^2$ or even larger runtimes are needed in the worst case (under complexity
assumptions). This is the class of grammar-compressions containing most popular
methods such as the Lempel-Ziv family. These schemes are more compressing than
the simple RLE, but alas, we prove that performing computations on them is much
harder.
</p></div>
    </summary>
    <updated>2020-10-28T01:20:24Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.14058</id>
    <link href="http://arxiv.org/abs/2010.14058" rel="alternate" type="text/html"/>
    <title>Heterogeneous Graphlets</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rossi:Ryan_A=.html">Ryan A. Rossi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ahmed:Nesreen_K=.html">Nesreen K. Ahmed</a>, Aldo Carranza, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Arbour:David.html">David Arbour</a>, Anup Rao, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kim:Sungchul.html">Sungchul Kim</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Koh:Eunyee.html">Eunyee Koh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.14058">PDF</a><br/><b>Abstract: </b>In this paper, we introduce a generalization of graphlets to heterogeneous
networks called typed graphlets. Informally, typed graphlets are small typed
induced subgraphs. Typed graphlets generalize graphlets to rich heterogeneous
networks as they explicitly capture the higher-order typed connectivity
patterns in such networks. To address this problem, we describe a general
framework for counting the occurrences of such typed graphlets. The proposed
algorithms leverage a number of combinatorial relationships for different typed
graphlets. For each edge, we count a few typed graphlets, and with these counts
along with the combinatorial relationships, we obtain the exact counts of the
other typed graphlets in o(1) constant time. Notably, the worst-case time
complexity of the proposed approach matches the time complexity of the best
known untyped algorithm. In addition, the approach lends itself to an efficient
lock-free and asynchronous parallel implementation. While there are no existing
methods for typed graphlets, there has been some work that focused on computing
a different and much simpler notion called colored graphlet. The experiments
confirm that our proposed approach is orders of magnitude faster and more
space-efficient than methods for computing the simpler notion of colored
graphlet. Unlike these methods that take hours on small networks, the proposed
approach takes only seconds on large networks with millions of edges. Notably,
since typed graphlet is more general than colored graphlet (and untyped
graphlets), the counts of various typed graphlets can be combined to obtain the
counts of the much simpler notion of colored graphlets. The proposed methods
give rise to new opportunities and applications for typed graphlets.
</p></div>
    </summary>
    <updated>2020-10-28T01:27:16Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.13949</id>
    <link href="http://arxiv.org/abs/2010.13949" rel="alternate" type="text/html"/>
    <title>KFC: A Scalable Approximation Algorithm for $k$-center Fair Clustering</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Harb:Elfarouk.html">Elfarouk Harb</a>, Ho Shan Lam <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.13949">PDF</a><br/><b>Abstract: </b>In this paper, we study the problem of fair clustering on the $k-$center
objective. In fair clustering, the input is $N$ points, each belonging to at
least one of $l$ protected groups, e.g. male, female, Asian, Hispanic. The
objective is to cluster the $N$ points into $k$ clusters to minimize a
classical clustering objective function. However, there is an additional
constraint that each cluster needs to be fair, under some notion of fairness.
This ensures that no group is either "over-represented" or "under-represented"
in any cluster. Our work builds on the work of Chierichetti et al. (NIPS 2017),
Bera et al. (NeurIPS 2019), Ahmadian et al. (KDD 2019), and Bercea et al.
(APPROX 2019). We obtain a randomized $3-$approximation algorithm for the
$k-$center objective function, beating the previous state of the art
($4-$approximation). We test our algorithm on real datasets, and show that our
algorithm is effective in finding good clusters without over-representation or
under-representation, surpassing the current state of the art in runtime speed,
clustering cost, while achieving similar fairness violations.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.13888</id>
    <link href="http://arxiv.org/abs/2010.13888" rel="alternate" type="text/html"/>
    <title>Unifying Matrix Data Structures: Simplifying and Speeding up Iterative Algorithms</title>
    <feedworld_mtime>1603843200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Brand:Jan_van_den.html">Jan van den Brand</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.13888">PDF</a><br/><b>Abstract: </b>Many algorithms use data structures that maintain properties of matrices
undergoing some changes. The applications are wide-ranging and include for
example matchings, shortest paths, linear programming, semi-definite
programming, convex hull and volume computation. Given the wide range of
applications, the exact property these data structures must maintain varies
from one application to another, forcing algorithm designers to invent them
from scratch or modify existing ones. Thus it is not surprising that these data
structures and their proofs are usually tailor-made for their specific
application and that maintaining more complicated properties results in more
complicated proofs.
</p>
<p>In this paper we present a unifying framework that captures a wide range of
these data structures. The simplicity of this framework allows us to give short
proofs for many existing data structures regardless of how complicated the to
be maintained property is. We also show how the framework can be used to speed
up existing iterative algorithms, such as the simplex algorithm.
</p>
<p>More formally, consider any rational function $f(A_1,...,A_d)$ with input
matrices $A_1,...,A_d$. We show that the task of maintaining $f(A_1,...,A_d)$
under updates to $A_1,...,A_d$ can be reduced to the much simpler problem of
maintaining some matrix inverse $M^{-1}$ under updates to $M$. The latter is a
well studied problem called dynamic matrix inverse. By applying our reduction
and using known algorithms for dynamic matrix inverse we can obtain fast data
structures and iterative algorithms for much more general problems.
</p></div>
    </summary>
    <updated>2020-10-28T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-28T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/27/tenure-track-faculty-positions-in-computer-science-and-in-the-theory-of-quantum-information-and-computation-at-harvard-university-apply-by-december-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/27/tenure-track-faculty-positions-in-computer-science-and-in-the-theory-of-quantum-information-and-computation-at-harvard-university-apply-by-december-15-2020/" rel="alternate" type="text/html"/>
    <title>Tenure-track Faculty Positions in Computer Science and in the Theory of Quantum Information and Computation at Harvard University (apply by December 15, 2020)</title>
    <summary>For the CS position, we invite applications in all areas. Areas of special interest include (but are not limited to) both ML and algorithms (broadly construed). For the position in the theory of quantum information and/or computation, areas of interest include but are not limited to quantum algorithms, communication, complexity, control, cryptography, and information processing. […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>For the CS position, we invite applications in all areas. Areas of special interest include (but are not limited to) both ML and algorithms (broadly construed). For the position in the theory of quantum information and/or computation, areas of interest include but are not limited to quantum algorithms, communication, complexity, control, cryptography, and information processing.</p>
<p>Website: <a href="https://www.seas.harvard.edu/office-faculty-affairs/open-academic-positions">https://www.seas.harvard.edu/office-faculty-affairs/open-academic-positions</a><br/>
Email: jmileski@g.harvard.edu</p></div>
    </content>
    <updated>2020-10-27T23:42:09Z</updated>
    <published>2020-10-27T23:42:09Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/27/theory-group-postdoc-at-uc-berkeley-apply-by-december-1-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/27/theory-group-postdoc-at-uc-berkeley-apply-by-december-1-2020/" rel="alternate" type="text/html"/>
    <title>Theory Group Postdoc at UC Berkeley (apply by December 1, 2020)</title>
    <summary>Postdoc inquiries will be viewable by all our group’s faculty. Individual faculty may then reach out in the case of matched interests. Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Postdoc inquiries will be viewable by all our group’s faculty. Individual faculty may then reach out in the case of matched interests. Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit letters to the e-mail below, with your name in the subject line.</p>
<p>Website: <a href="http://theory.cs.berkeley.edu/postdoc.html">http://theory.cs.berkeley.edu/postdoc.html</a><br/>
Email: tcs-postdoc-inquiries@lists.eecs.berkeley.edu</p></div>
    </content>
    <updated>2020-10-27T21:11:08Z</updated>
    <published>2020-10-27T21:11:08Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/27/tenure-track-tenured-position-in-quantum-computing-at-university-of-california-davis-apply-by-december-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/27/tenure-track-tenured-position-in-quantum-computing-at-university-of-california-davis-apply-by-december-15-2020/" rel="alternate" type="text/html"/>
    <title>Tenure-track/tenured position in Quantum Computing at University of California, Davis (apply by December 15, 2020)</title>
    <summary>The University of California, Davis, seeks an Assistant Professor specifically in the area of quantum computing; exceptional candidates at the Associate and Full ranks may be considered. Applicants should consider applying as well to our open position in theoretical computer science. Website: https://recruit.ucdavis.edu/JPF03853 Email: greg@math.ucdavis.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The University of California, Davis, seeks an Assistant Professor specifically in the area of quantum computing; exceptional candidates at the Associate and Full ranks may be considered. Applicants should consider applying as well to our open position in theoretical computer science.</p>
<p>Website: <a href="https://recruit.ucdavis.edu/JPF03853">https://recruit.ucdavis.edu/JPF03853</a><br/>
Email: greg@math.ucdavis.edu</p></div>
    </content>
    <updated>2020-10-27T17:18:00Z</updated>
    <published>2020-10-27T17:18:00Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17726</id>
    <link href="https://rjlipton.wordpress.com/2020/10/26/a-vast-and-tiny-breakthrough/" rel="alternate" type="text/html"/>
    <title>A Vast and Tiny Breakthrough</title>
    <summary>Christofides bound beaten by an epsilon’s idea of epsilon src1, src2, src3 Anna Karlin, Nathan Klein, and Shayan Oveis Gharan have made a big splash with the number           No that is not the amount of the US debt, or the new relief bill. It is the fraction by which the hallowed 44-year-old upper bound […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>Christofides bound beaten by an epsilon’s idea of epsilon</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2020/10/26/a-vast-and-tiny-breakthrough/karlinkleinoveisgharan/" rel="attachment wp-att-17728"><img alt="" class="alignright wp-image-17728" height="107" src="https://rjlipton.files.wordpress.com/2020/10/karlinkleinoveisgharan.jpg?w=216&amp;h=107" width="216"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2"><a href="https://www.seattletimes.com/education-lab/yes-women-can-and-do-want-to-code-uw-professors-and-alumnae-say/">src1</a>, <a href="https://homes.cs.washington.edu/~nwklein/">src2</a>, <a href="https://www.engr.washington.edu/facresearch/newfaculty/2013/shayanoveisgharan.html">src3</a></font></td>
</tr>
</tbody>
</table>
<p>
Anna Karlin, Nathan Klein, and Shayan Oveis Gharan have made a big splash with the number </p>
<p>         <img alt="~~~~~~\frac{1}{1,000,000,000,000,000,000,000,000,000,000,000,000}. " class="latex" src="https://s0.wp.com/latex.php?latex=%7E%7E%7E%7E%7E%7E%5Cfrac%7B1%7D%7B1%2C000%2C000%2C000%2C000%2C000%2C000%2C000%2C000%2C000%2C000%2C000%2C000%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="~~~~~~\frac{1}{1,000,000,000,000,000,000,000,000,000,000,000,000}. "/></p>
<p>No that is not the amount of the US debt, or the new relief bill. It is the fraction by which the hallowed 44-year-old upper bound of <img alt="{1.5}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.5}"/> on the approximation ratio of the metric Traveling Salesperson Problem has been improved. With the help of randomization, we hasten to add.</p>
<p>
Today we discuss the larger meaning of their tiny breakthrough. </p>
<p>
The abstract of their <a href="https://arxiv.org/abs/2007.01409">paper</a> is as pithy as can be:</p>
<blockquote><p><b> </b> <em> For some <img alt="{\epsilon &gt; 10^{-36}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E+10%5E%7B-36%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\epsilon &gt; 10^{-36}}"/> we give a <img alt="{3/2 - \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3%2F2+-+%5Cepsilon%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{3/2 - \epsilon}"/> approximation algorithm for metric TSP. </em>
</p></blockquote>
<p/><p>
Metric TSP means that the cost of the tour <img alt="{(v_1,v_2,\dots,v_n,v_1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28v_1%2Cv_2%2C%5Cdots%2Cv_n%2Cv_1%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(v_1,v_2,\dots,v_n,v_1)}"/> is the sum of the distances of the edges </p>
<p align="center"><img alt="\displaystyle  \mu(v_1,v_2) + \mu(v_2,v_3) + \cdots + \mu(v_{n-1},v_n) + \mu(v_n,v_1) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmu%28v_1%2Cv_2%29+%2B+%5Cmu%28v_2%2Cv_3%29+%2B+%5Ccdots+%2B+%5Cmu%28v_%7Bn-1%7D%2Cv_n%29+%2B+%5Cmu%28v_n%2Cv_1%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  \mu(v_1,v_2) + \mu(v_2,v_3) + \cdots + \mu(v_{n-1},v_n) + \mu(v_n,v_1) "/></p>
<p>according to a given metric <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu}"/>. When the points are in <img alt="{\mathbb{R}^m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BR%7D%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mathbb{R}^m}"/> with the Euclidean metric, an <img alt="{n^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n^{O(1)}}"/>-time algorithm can come within a factor <img alt="{(1+\delta)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281%2B%5Cdelta%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(1+\delta)}"/> of the optimal cost for any prescribed <img alt="{\delta &gt; 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\delta &gt; 0}"/>. Sanjeev Arora and Joseph Mitchell jointly won the 2002 Gödel Prize for their randomized algorithms doing exactly that. The rub is the constant in the “<img alt="{O(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{O(1)}"/>” depends on <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\delta}"/>—indeed, nobody knows how to make it scale less than linearly in <img alt="{\frac{1}{\delta}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B1%7D%7B%5Cdelta%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{1}{\delta}}"/>. But for general metrics, getting within a factor of <img alt="{(1+\delta)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281%2B%5Cdelta%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(1+\delta)}"/> is known to be <img alt="{\mathsf{NP}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mathsf{NP}}"/>-hard for <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\delta}"/> up to <img alt="{\frac{1}{122}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B1%7D%7B122%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{1}{122}}"/>.</p>
<p>
Some intermediate cases of metrics had <a href="https://arxiv.org/abs/1201.1870">allowed</a> getting within a factor of <img alt="{1.4}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.4}"/>, but for general metrics the <img alt="{1.5}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.5}"/> factor <a href="https://apps.dtic.mil/dtic/tr/fulltext/u2/a025602.pdf">found</a> in 1976 by the <a href="https://www.imperial.ac.uk/news/196798/obituary-nicos-christofides-1942-2019/">late</a> Nicos Christofides, and <a href="http://nas1.math.nsc.ru/aim/journals/us/us17/us17_007.pdf">concurrently</a> by Anatoliy Serdyukov, stood like a brick wall. Well, we didn’t expect it to be a brick wall at first. Let me tell a story.</p>
<p>
</p><p/><h2> A Proof in a Pub </h2><p/>
<p/><p>
Soon after starting as a graduate student at Oxford in 1981, I went with a bunch of dons and fellow students down to London for a one-day workshop where Christofides was among the speakers and presented his result along with newer work. I’d already heard it spoken of as a combinatorial gem and perfect motivator for a graduate student to appreciate the power of combining simplicity and elegance:</p>
<ol>
<li>
Calculate the (or a) minimum spanning tree <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> of the <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> given points. <p/>
</li><li>
Take <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{A}"/> to be the leaves and any other odd-degree nodes of <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> and calculate a minimum matching <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{M}"/> of them. <p/>
</li><li>
The graph <img alt="{T+M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%2BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T+M}"/> has all nodes of even degree so it has an easily-found Eulerian cycle <img alt="{C_E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_E}"/>. <p/>
</li><li>
The cycle <img alt="{C_E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_E}"/> may repeat vertices, but by the triangle inequality for the distance metric <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu}"/>, we can bypass repeats to create a Hamilton cycle <img alt="{C_H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_H%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_H}"/> giving <img alt="{\mu(C_H) \leq \mu(C_E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%28C_H%29+%5Cleq+%5Cmu%28C_E%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu(C_H) \leq \mu(C_E)}"/>.
</li></ol>
<p>
Now any optimal TSP tour <img alt="{C_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_O}"/> arises as a spanning tree plus an edge, so <img alt="{\mu(T) &lt; \mu(C_O)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%28T%29+%3C+%5Cmu%28C_O%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu(T) &lt; \mu(C_O)}"/>. And <img alt="{C_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_O}"/> can be partitioned into two sets of paths with endpoints in <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{A}"/>. One of those sets has weight at most <img alt="{\frac{1}{2}\mu(C_O)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B1%7D%7B2%7D%5Cmu%28C_O%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{1}{2}\mu(C_O)}"/> and yet matches all pairs of <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{A}"/>. Thus <img alt="{\mu(M) \leq \frac{1}{2}\mu(C_O)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%28M%29+%5Cleq+%5Cfrac%7B1%7D%7B2%7D%5Cmu%28C_O%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu(M) \leq \frac{1}{2}\mu(C_O)}"/>. It follows that <img alt="{\mu(C_H) \leq \mu(T) + \mu(M) &lt; \mu(C_0) + \frac{1}{2}\mu(C_0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%28C_H%29+%5Cleq+%5Cmu%28T%29+%2B+%5Cmu%28M%29+%3C+%5Cmu%28C_0%29+%2B+%5Cfrac%7B1%7D%7B2%7D%5Cmu%28C_0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu(C_H) \leq \mu(T) + \mu(M) &lt; \mu(C_0) + \frac{1}{2}\mu(C_0)}"/> and we’re done.</p>
<p>
My memory of what we did after the workshop is hazy but I’m quite sure we must have gone to a pub for dinner and drinks before taking the train back up to Oxford. My point is, the above proof is <em>the kind that can be told and discussed in a pub</em>. It combines several greatest hits of the field: minimum spanning tree, perfect matching, Euler tour, Hamiltonian cycle, triangle inequality. The proof needs no extensive calculation; maybe a napkin to draw <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{A}"/> on <img alt="{C_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_0}"/> and the partition helps. </p>
<p>
The conversation would surely have gone to the question,</p>
<blockquote><p><b> </b> <em> Can the <img alt="{1.5\;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.5%5C%3B%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.5\;}"/> factor be beaten? </em>
</p></blockquote>
<p/><p>
A perfect topic for mathematical pub conversation. Let’s continue as if that’s what happened next—I wish I could recall it.</p>
<p>
</p><p/><h2> Trees That Snake Around </h2><p/>
<p/><p>
Note that the proof already “beats” it in the sense of there being a strict inequality, and it really shows </p>
<p align="center"><img alt="\displaystyle  \mu(C_H) \leq (1.5 - \frac{1}{n})\mu(C_0). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cmu%28C_H%29+%5Cleq+%281.5+-+%5Cfrac%7B1%7D%7Bn%7D%29%5Cmu%28C_0%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  \mu(C_H) \leq (1.5 - \frac{1}{n})\mu(C_0). "/></p>
<p>The advantage <img alt="{\frac{1}{n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B1%7D%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{1}{n}}"/> shrinks to zero as <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> grows, however. Moreover, examples where Christofides’s algorithm does no better than approach <img alt="{1.5}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.5}"/> are easy to draw. Pub walls are often covered with emblems of local organizations, and if one has a <a href="https://en.wikipedia.org/wiki/Caduceus">caduceus</a> symbol it can serve as the drawing:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/10/26/a-vast-and-tiny-breakthrough/caduceus/" rel="attachment wp-att-17729"><img alt="" class="aligncenter wp-image-17729" height="184" src="https://rjlipton.files.wordpress.com/2020/10/caduceus.png?w=154&amp;h=184" width="154"/></a></p>
<p/><p><br/>
The staff is a path <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> nodes while the snakes alternate edges of weight <img alt="{1 + \gamma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1+%2B+%5Cgamma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1 + \gamma}"/> between nodes two apart on the path. Going up one snake and down the other gives an optimal tour of weight <img alt="{(1 + \gamma)(n-2) + 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281+%2B+%5Cgamma%29%28n-2%29+%2B+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(1 + \gamma)(n-2) + 2}"/> (using the two outermost path edges to switch between the snakes), which <img alt="{\sim (1 + \gamma)n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csim+%281+%2B+%5Cgamma%29n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\sim (1 + \gamma)n}"/>. The snake edges don’t change the path’s being the minimum spanning tree, and for <img alt="{C_H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_H%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_H}"/> this costs <img alt="{n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n-1}"/> plus the weight required to match the path’s endpoints. The extra weight is reckoned as the length of one snake, which <img alt="{\sim n\frac{1+\gamma}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csim+n%5Cfrac%7B1%2B%5Cgamma%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\sim n\frac{1+\gamma}{2}}"/>, so the ratio approaches <img alt="{\frac{3}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B3%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{3}{2}}"/> as <img alt="{\gamma \rightarrow 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgamma+%5Crightarrow+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\gamma \rightarrow 0}"/> and <img alt="{n \rightarrow \infty}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Crightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n \rightarrow \infty}"/>. Here are some tantalizing aspects:</p>
<ul>
<li>
The <img alt="{n-2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n-2}"/> snake edges, plus one path edge to connect them, make a <em>maximum</em>-weight spanning tree <img alt="{T'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T'}"/> in the graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{G}"/> formed by the two kinds of edges. Yet <img alt="{T'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T'}"/> followed by the same steps 2–4 of Christofides’s algorithm would yield and optimum tour. <p/>
</li><li>
When one is given only the <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> points plus the <em>graph metric</em> <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu}"/> induced by <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{G}"/>, not <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{G}"/> itself, then there are much worse spanning trees. The single edge connecting the endpoints <img alt="{(v_1,v_n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28v_1%2Cv_n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(v_1,v_n)}"/> of the previous path has weight <img alt="{\mu(v_1,v_n) \approx \frac{n}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%28v_1%2Cv_n%29+%5Capprox+%5Cfrac%7Bn%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu(v_1,v_n) \approx \frac{n}{2}}"/>. <p/>
</li><li>
Thus <img alt="{T'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T'}"/> has relatively low weight compared to these possible other trees. And its weight approaches that of <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> as <img alt="{\gamma \rightarrow 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgamma+%5Crightarrow+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\gamma \rightarrow 0}"/>. This means that small changes in the size of the tree yield large changes in the quality of the induced tour. <p/>
</li><li>
The advantage of <img alt="{T'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T'}"/> is that its odd-valence nodes have small distance under <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu}"/>. As a path it snakes around so that its ends are near each other, unlike those of the minimum spanning tree <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/>. This raises the question of weighting spanning trees according to a slightly different measure <img alt="{\mu'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\mu'}"/> that incorporates a term for “<em>odd-closeness</em>.”
</li></ul>
<p>
In 1981, we would not have known about Arora’s and Mitchell’s results, so we would have felt fully on the frontier by embedding the points in the plane and sketching spanning trees and cycles on a piece of paper. After a couple pints of ale we might have felt sure that a simple proof with such evident slack ought to yield to a more sophisticated attack. </p>
<p>
</p><p/><h2> Helpful Trees </h2><p/>
<p/><p>
There is one idea that we might have come up with in a pub. The motivation for choosing <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> to be a minimum spanning tree is that many of its edges go into the Euler tour <img alt="{C_E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_E}"/> and those bound the final <img alt="{C_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_O}"/> even if <img alt="{C_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{C_O}"/> shortcuts them. So making the total edge weight of <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> minimum seems to be the best way to help at that stage. We might have wondered, however, whether there is a way to create <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> to have a stronger direct relation to good tours, if not to the optimal tour. </p>
<p>
Oveis Gharan did have such an idea jointly with a different group of authors a decade ago, in the <a href="https://homes.cs.washington.edu/~shayan/atsp.pdf">best paper</a> of SODA 2010. We cannot seem to get our hands on the optimal tour, nor even a “good” tour if that means a better than <img alt="{1.5}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1.5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1.5}"/> factor approximation—that is what we are trying to find to begin with. But there is another “tour” <img alt="{O^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{O^*}"/> that we <em>can</em> compute. This is an optimum of the <em>linear programming relaxation</em> of TSP, whose relation to the exact-TSP methods of Michael Held and Dick Karp we <a href="https://rjlipton.wordpress.com/2012/05/08/inexact-remarks-on-exact-tsp-algorithms/">covered</a> long back. <img alt="{O^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{O^*}"/> is not a single tour but rather an ensemble of “fractional tours” where each edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{e}"/> has a rational number <img alt="{z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{z_e}"/> representing its contribution to the LP solution. The higher <img alt="{z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{z_e}"/>, the more helpful the edge.</p>
<p>
The objective then becomes to design distributions <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/> of spanning trees <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> so that:</p>
<ol>
<li>
Sampling <img alt="{T \leftarrow {\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT+%5Cleftarrow+%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T \leftarrow {\cal T}}"/> is polynomial-time efficient. <p/>
</li><li>
For every edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{e}"/>, <img alt="{\Pr_{T \leftarrow {\cal T}}[e \in T] \propto (1 + \delta_n) z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPr_%7BT+%5Cleftarrow+%7B%5Ccal+T%7D%7D%5Be+%5Cin+T%5D+%5Cpropto+%281+%2B+%5Cdelta_n%29+z_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\Pr_{T \leftarrow {\cal T}}[e \in T] \propto (1 + \delta_n) z_e}"/> where <img alt="{\delta_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\delta_n}"/> is tiny. <p/>
</li><li>
The distribution <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/> promotes trees <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> with fewer leaves and odd-valence interior nodes.
</li></ol>
<p>
The algorithmic strategy this fits into is to sample <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> from <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/>, plug <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T}"/> into the first step of the Christofides algorithm, and continue as before.</p>
<p>
</p><p/><h2> The Proof and the Pudding </h2><p/>
<p/><p>
The first two conditions are solidly defined. Considerable technical details in the SODA 2010 paper and another <a href="https://homes.cs.washington.edu/~shayan/tsp.pdf">paper</a> at FOCS 2011 that was joint with Amin Saberi and Mohit Singh are devoted to them. A third desideratum is that the distribution <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/> not be over-constrained but rather have maximum entropy, so that for efficiently computable numbers <img alt="{\lambda_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clambda_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\lambda_e}"/> approaching <img alt="{z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{z_e}"/> one has also: </p>
<p align="center"><img alt="\displaystyle  \Pr_{\cal T}(T) \propto \prod_{e \in T}\lambda_e. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5CPr_%7B%5Ccal+T%7D%28T%29+%5Cpropto+%5Cprod_%7Be+%5Cin+T%7D%5Clambda_e.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  \Pr_{\cal T}(T) \propto \prod_{e \in T}\lambda_e. "/></p>
<p>The third condition, however, follows the <a href="https://www.phrases.org.uk/meanings/proof-of-the-pudding.html">maxim</a>,</p>
<blockquote><p><b> </b> <em> “the proof of the pudding is in the eating.” </em>
</p></blockquote>
<p/><p>
As our source makes clear, this does not refer to American-style dessert pudding, but rather savory British pub fare going back to 1605 at least. The point is that we ultimately know a choice of <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/> is good by proving it gives a better approximation factor than <img alt="{\frac{3}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B3%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{3}{2}}"/>.</p>
<p>
In America, we tend to say the maxim a different way:</p>
<blockquote><p><b> </b> <em> “the proof is in the pudding.” </em>
</p></blockquote>
<p/><p>
The new paper uses the “pudding” from the 2011 paper but needed to deepen the proof. Here is where we usually say to refer to the <a href="https://arxiv.org/abs/2007.01409">paper</a> for the considerable details. But in this case we find that a number of the beautiful concepts laid out in the paper’s introduction, such as <em>real stability</em> and <em>strong Rayleigh distributions</em>, are more accessibly described in the notes for the first half of a <a href="https://homes.cs.washington.edu/~shayan/courses/polynomials/">course</a> taught last spring by Oveis Gharan with Klein as TA. One nub is that if a set of complex numbers all have positive imaginary part, then any product <img alt="{z = z_1 z_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz+%3D+z_1+z_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{z = z_1 z_2}"/> of two of the numbers has real part less than the product of the real parts, and if the latter product is positive, then <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{z}"/> is not a real number.  This rules out assignments drawn from the set from being solutions to certain polynomials as well as setting up odd/even parity properties elsewhere.</p>
<p>
</p><p/><h2> Rigidity of the TSP Universe </h2><p/>
<p/><p>
I’ll close instead with some remarks while admitting that my own limited time—I have been <a href="https://www.cbc.ca/radio/asithappens/as-it-happens-tuesday-edition-1.5769434">dealing</a> with more chess <a href="https://www.theguardian.com/sport/2020/oct/16/chesss-cheating-crisis-paranoia-has-become-the-culture">cases</a>—prevents them from being fully informed. </p>
<p>
The main remark is to marvel that the panoply of polynomial properties and deep analysis buy such a tiny improvement. It is hard to believe that the true space of TSP approximation methods is so <em>rigid</em>. In this I am reminded of Scott Aaronson’s <a href="https://www.scottaaronson.com/blog/?p=2651">calculations</a> that a collision of two stellar black holes a mere 3,000 miles away would stretch space near you by only a millimeter. There is considerable belief that the approximation factor ought to be improvable at least as far as <img alt="{\frac{4}{3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B4%7D%7B3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{4}{3}}"/>.</p>
<p>
It strikes me that the maximum-entropy condition, while facilitating the analysis, works against the objective of making the trees more special. It cannot come near the kind of snaky tree <img alt="{T_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T_O}"/> obtained by deleting any edge from a good tour <img alt="{O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{O}"/>, such that plugging <img alt="{T_O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_O%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{T_O}"/> into step 1 yields <img alt="{O}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{O}"/> back again. The theory of polynomials and distributions that they develop has a plug-and-play element, so that they can condition the distributions <img alt="{{\cal T}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Ccal+T%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{{\cal T}}"/> toward the third objective using the parity properties. But their framework has inflexibility represented by needing to postulate a real-valued function on the optimum edges whose expectation is of order the <em>square</em> of a parameter <img alt="{\eta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ceta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\eta}"/> already given the tiny value <img alt="{10^{-12}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B10%5E%7B-12%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{10^{-12}}"/>. Of the requirement that <img alt="{\eta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ceta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\eta}"/> be a small fraction of their governing epsilon parameter, they say in section 3:</p>
<blockquote><p><b> </b> <em> This forces us to take <img alt="{\eta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ceta%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\eta}"/> very small, which is why we get only a “very slightly” improved approximation algorithm for TSP. Furthermore, since we use OPT edges in our construction, we don’t get a new upper bound on the integrality gap. We leave it as an open problem to find a reduction to the “cactus” case that doesn’t involve using a slack vector for OPT (or a completely different approach). </em>
</p></blockquote>
<p/><p>
What may be wanting is a better way of getting the odd-valence tree nodes to be closer, not just fewer in number. To be sure, ideas for “closer” might wind up presupposing a metric topology on the <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> given points, leading to cases that have already been improved by other means.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Will the tiny but fixed wedge below <img alt="{\frac{3}{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac%7B3%7D%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\frac{3}{2}}"/> become a lever by which to find better approximations?</p>
<p>
There is also the kvetch that the algorithm is randomized, whereas the original by Christofides and Serdyukov is deterministic. Can the new methods be derandomized?</p>
<p/><p><br/>
[fixed = to + sign at end of Christofides proof; fixed wording of “nub” at end of pudding section]</p></font></font></div>
    </content>
    <updated>2020-10-27T04:42:37Z</updated>
    <published>2020-10-27T04:42:37Z</published>
    <category term="algorithms"/>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="News"/>
    <category term="Proofs"/>
    <category term="Results"/>
    <category term="Anna Karlin"/>
    <category term="approximation"/>
    <category term="breakthrough"/>
    <category term="linear programming"/>
    <category term="Nathan Klein"/>
    <category term="Nicos Christofides"/>
    <category term="polynomials"/>
    <category term="Shayan Oveis Gharan"/>
    <category term="spanning tree"/>
    <category term="Traveling Salesman"/>
    <category term="TSP"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-10-28T19:20:43Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/diffix-attack/</id>
    <link href="https://differentialprivacy.org/diffix-attack/" rel="alternate" type="text/html"/>
    <title>Reconstruction Attacks in Practice</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This is the second of two posts describing the theory and practice of reconstruction attacks.  To read the first post, which covers the theoretical basis of such attacks, <a href="https://differentialprivacy.org/reconstruction-theory/">[click here]</a>.</p>

<hr/>

<p>In the <a href="https://differentialprivacy.org/reconstruction-theory/">last post</a>, we discussed how an attacker can use noisy answers to questions about a database to reconstruct private information in the database. The reconstruction attack framework was:</p>

<ol>
  <li>The attacker submits sufficiently random queries that link prior information (which the attacker already knows) to private data (which the attacker wants to learn).</li>
  <li>The attacker receives noisy answers to these queries and writes them down as constraints for a linear program to solve for the private bits.</li>
  <li>The attacker solves the linear program and rounds the result to recover most of the bits.</li>
</ol>

<p>Our last post discussed some of this attack’s nice theoretical guarantees, and this post matches that with real-world performance. More specifically, we’ll cover two successful applications of this attack against a piece of anonymizing SQL software called Diffix which, despite the name, is not differentially private.</p>

<h3 id="what-is-diffix">What is Diffix?</h3>
<p>Diffix is a system designed by the startup Aircloak for answering statistical queries over a private database. It is described by its creators as an “anonymizing SQL interface [that] sits in front of your data and enables you to conduct ad hoc analytics — fully privacy preserving and GDPR-compliant.”<sup id="fnref:1"><a class="footnote" href="https://differentialprivacy.org/feed.xml#fn:1">1</a></sup>  Aircloak’s approach is to develop targeted defenses for known vulnerabilities, but to otherwise privilege utility over protecting against unknown vulnerabilities.  They combine this approach with a serious effort to actually find vulnerabilities in Diffix through periodic bug bounties that offer monetary prizes for participants who mount successful attacks.  While this post is critical of the design of Diffix itself, we commend Aircloak for their genuine openness to scrutiny. Indeed, the attacks described in this post were carried out as a part of these bug bounty programs and led to the discovery of several vulnerabilities in the software that have since been addressed. The first attack we describe was carried out by Aloni Cohen and Kobbi Nissim in the first bug bounty program in late 2017 and early 2018.  The second was run by Travis Dick, Matthew Joseph, and Zachary Schutzman in the second bug bounty program during the summer of 2020.</p>

<p>Before diving into the details of the attacks, we’ll first introduce the basic functionality of Diffix and how it purports to defend against vulnerabilities, including linear reconstruction attacks.  The goal of Diffix is to answer SQL queries, such as:</p>
<pre><code class="language-SQL">SELECT COUNT(*) FROM loans
WHERE loanStatus = 'C'
AND clientId BETWEEN 2000 and 3000
</code></pre>
<p>on a database while preventing the disclosure of record-level data.<br/>
A challenge for a system like Diffix is to answer such counting queries while preventing an adversarial user—the attacker—from learning record-level information. As you might remember from the last post, such a system must not provide exact answers to arbitrary queries. Otherwise the attacker could mount a <em>differencing attack</em>. For example, an attacker who knows that Billy Joel’s <code class="language-plaintext highlighter-rouge">clientID</code> is 2744 could learn the status of the singer’s loan by comparing the answer to the previous query with the answer to:</p>

<pre><code class="language-SQL">SELECT COUNT(*) FROM loans
WHERE loanStatus = 'C'
AND clientId BETWEEN 2000 and 3000
AND clientId != 2744
</code></pre>

<p>An intuitive defense is to add noise to the answer—say, Gaussian noise sampled from \(N(0,10)\).
Now the difference \(\Delta\) in the responses to the two queries is a random variable sampled from \(N(1,20)\) or \(N(0,20)\) depending on whether Joel’s <code class="language-plaintext highlighter-rouge">loanStatus</code> is or isn’t <code class="language-plaintext highlighter-rouge">C</code>.
With just one sample, the distributions are hard to distinguish.</p>

<p>Still, this scheme is easily thwarted by <em>averaging attacks</em>.
If the noise is sampled anew each time a query is made, then repeatedly making the same pair of queries generates many independent samples from \(N(1,20)\) or \(N(0,20)\), and enough queries would make it possible to distinguish these distributions easily.</p>

<p>As before, there is an intuitive defense: use the same noise for repeated queries.  This defense introduces its own new attacks by making many syntactically-distinct but semantically-equivalent queries.  Those attacks in turn suggest new defenses which suggest new attacks, and so on.  Diffix is, in a sense, the result of this hypothetical arms race.</p>

<p>From a technical perspective, Diffix consists of three components, which together are intended to thwart these attacks.  First, Diffix only accepts a limited subset of SQL and will categorically reject any query that does not fit this subset.  These restrictions—including tight restrictions on <code class="language-plaintext highlighter-rouge">JOIN</code>s and on the number of mathematical functions in a single expression—limit the ability of an adversary to use the full power of SQL to access the database.  The second component is a collection of data-dependent ad-hoc methods to prevent leaking information about individuals or very small subsets of users, including suppressing answers to queries about small numbers of users and flattening outliers.</p>

<p>The final component is Diffix’s layered noise.  This noise is comprised of two individual noise terms added together: a <em>data-dependent</em> term whose variance is constant<sup id="fnref:2"><a class="footnote" href="https://differentialprivacy.org/feed.xml#fn:2">2</a></sup> and a <em>query-dependent</em> term whose variance depends on the complexity of the query. The data-dependent noise prevents naïve averaging attacks. It is a pseudorandom error where the seed of the pseudorandom function depends on individual data records that contribute to the query result. Semantically equivalent queries using different syntax will nonetheless share this error, so simply averaging the responses will not remove this noise.</p>

<p>The query-dependent noise prevents a naïve Dinur–Nissim style reconstruction attacks. A noise term of magnitude \(\Omega(1)\) is generated deterministically for each condition in the <code class="language-plaintext highlighter-rouge">WHERE</code> or <code class="language-plaintext highlighter-rouge">HAVING</code> clause of the SQL query, and the terms are added together.  A Dinur–Nissim query is a random subset of the dataset that contains \(\Omega(n)\) records. The straightforward way of specifying such a query is to enumerate the subset record by record using \(\Omega(n)\) conditions:<sup id="fnref:3"><a class="footnote" href="https://differentialprivacy.org/feed.xml#fn:3">3</a></sup></p>

<pre><code class="language-SQL">SELECT COUNT(*) FROM loans
WHERE loanStatus = 'C'
AND (clientId = 2007
OR clientId = 2018
...
OR clientId = 2991)

</code></pre>

<p>A query with \(\Omega(n)\) conditions is answered with noise with standard deviation \(\Omega(\sqrt{n})\), enough to thwart efficient reconstruction algorithms.</p>

<h3 id="carrying-out-reconstruction">Carrying out reconstruction</h3>
<p>The additional noise per SQL condition  is the main obstacle to running a successful reconstruction attack on a database behind Diffix.  As described above, the noise prevents the naive implementation of the reconstruction algorithm from receiving accurate enough answers to reconstruct the database using a reasonable number of queries.<br/>
A natural approach is to use very few SQL conditions—ideally, just one—to make random-enough queries, each identifying a subset of the records in the dataset.
So the challenge is to formulate a large family of such queries that are accepted by Diffix’s restricted subset of SQL, using as few conditions as possible.</p>

<h4 id="the-cohennissim-attack">The Cohen–Nissim Attack</h4>

<p>Instead of specifying each row with a separate condition, the Cohen–Nissim attack<a href="https://arxiv.org/abs/1810.05692">[CN18]</a> uses an ad hoc <em>hash function</em> to extract entropy from the data itself in order to systematically choose the needed subsets.<br/>
Suppose we have a list of the values in the database’s  <code class="language-plaintext highlighter-rouge">clientId</code> column, and we want to recover the <code class="language-plaintext highlighter-rouge">loanStatus</code> secret bit. Rather than explicitly enumerating the <code class="language-plaintext highlighter-rouge">clientId</code>s for a random subset of the rows to include in each query, we can write a boolean-valued function which evaluates to true on about half of the <code class="language-plaintext highlighter-rouge">clientId</code>s and ask Diffix to include only the rows for which the condition is true.  In this way, instead of first choosing a subset of rows and then asking Diffix about those rows, we choose this function and use its evaluation to specify our random subset.</p>

<p>After some experimentation with the language restrictions, Cohen and Nissim settled on the following:</p>
<pre><code class="language-SQL">...
WHERE FLOOR(100 * ((clientId * 2)^0.7))
   = FLOOR(100 * ((clientId * 2)^0.7) + 0.5)
</code></pre>

<p>Let’s see what this does. Let \(d=d_0.d_1 d_2 d_3 d_4 \dots \) be the decimal representation of the value \(d = (\mathtt{clientID}\cdot 2)^{0.7}\), which appears on both sides of the equality.
The expression is true if and only if \(d_3 &lt; 5\).<br/>
To see this, the left hand side evaluates to \(d_{0}d_{1}d_{2} = \lfloor 100d \rfloor\); the right hand side evaluates to \(d_{0}d_{1}d_{2}\) if \(d_3 &lt; 5\)  or \(d_{0}d_{1}d_{2}+1\) if \(d_3 \geq 5\). In the former case, the equality condition evaluates to ‘true’, and in the latter case it evaluates to ‘false’. Replacing 100 with other powers of 10 changes which digit in the decimal expansion is checked.</p>

<p>By varying the constants in the SQL query, this single expression yields a whole family of conditions, albeit a very ad-hoc one.  The hope was that, for different primes \(q\) and fractional exponents \(p\), the individual digits of the decimal representations of \((\mathtt{clientID}*q)^p\) would be random enough for reconstruction to work.
The complete attack queries looked like this:</p>

<pre><code class="language-SQL">
SELECT COUNT(clientId) FROM loans
WHERE FLOOR(100 * ((clientId * 2)^.7))  
    = FLOOR(100 * ((clientId * 2)^.7) + 0.5)
AND clientId BETWEEN 2000 and 3000
AND loanStatus = 'C'

</code></pre>

<p>The range condition at the end simply selects a subset of the data which is small enough for the attack to run quickly on a personal computer but large enough to satisfy the requirements of the Diffix bounty program.  This family of queries allows for a linear program to reconstruct the secret <code class="language-plaintext highlighter-rouge">loanStatus</code> bits with high accuracy.</p>

<p>In the course of verifying the attack for the Diffix bounty program, reconstruction was carried out on 4 different ranges of <code class="language-plaintext highlighter-rouge">clientId</code>s containing 455 records. For each record, the attack correctly determined whether or not the corresponding <code class="language-plaintext highlighter-rouge">loanStatus</code> was <code class="language-plaintext highlighter-rouge">C</code>.</p>

<p>Aircloak’s response to this attack was to further restrict the queries allowed by Diffix.  Columns like <code class="language-plaintext highlighter-rouge">clientId</code>, where most of the values correspond to a single user, are tagged as ‘isolating’, and mathematical functions can no longer be used on such columns.  The hope was that this modification would prevent the extraction of entropy from an identifying column via hashing.</p>

<h4 id="the-dickjosephschutzman-attack">The Dick–Joseph–Schutzman Attack</h4>

<p>Without the ability to directly use a uniquely identifying column from the database itself, we need another way to single out rows of the database.  We can use an idea that’s been around since the 1990s, when  Latanya Sweeney showed<sup id="fnref:4"><a class="footnote" href="https://differentialprivacy.org/feed.xml#fn:4">4</a></sup> that almost 90 percent of Americans could be identified with only a date of birth, ZIP code, and gender, but of course each of these alone is nowhere near sufficient to isolate a single individual.  We can use this idea and try to evade the modification to Diffix by choosing multiple non-isolating columns which, when taken together, can isolate rows in the database.</p>

<p>This modified attack uses the <code class="language-plaintext highlighter-rouge">pickup_latitude</code> column in the <code class="language-plaintext highlighter-rouge">taxi</code> data set as the source of entropy, which is non-isolating, in part because there are a large number of rows where the value is recorded as zero.  We can combine this column with the <code class="language-plaintext highlighter-rouge">trip_distance</code> column and run queries of the following form:</p>

<pre><code class="language-SQL">
SELECT COUNT(*) FROM rides
WHERE FLOOR(pickup_latitude ^  8.789 + 0.5)
    = FLOOR(pickup_latitude ^  8.789)
AND trip_distance IN (0.87, 1.97, 2.75)
AND payment_type = 'CSH'

</code></pre>

<p>This example query is part of an attack to recover the <code class="language-plaintext highlighter-rouge">payment_type</code> column, which (for the purposes of this attack) is a binary column containing two values: <code class="language-plaintext highlighter-rouge">CRD</code> (for credit card payments) and <code class="language-plaintext highlighter-rouge">CSH</code> (for cash payments).  The <code class="language-plaintext highlighter-rouge">IN (0.87, 1.97, 2.75)</code> restricts to a subset of the data with about 450 rows, each with a distinct value for <code class="language-plaintext highlighter-rouge">pickup_latitude</code>.  However, because across the whole database, very few rows have a distinct value in this column, Diffix does not consider it ‘isolating’ and it can be used as Cohen–Nissim used <code class="language-plaintext highlighter-rouge">clientId</code>.  The values in <code class="language-plaintext highlighter-rouge">pickup_latitude</code> are recorded to six decimal places of precision and the least significant four of them are essentially random digits.  By choosing an appropriate range for the exponent and using the same trick as in the Cohen–Nissim attack, allows the construction of a Diffix-accepted query which includes around half of the rows in the targeted subset. Using different values for the exponent leads to a large family of queries which allow the attack to be carried out as before with similarly high accuracy of over 95 percent.</p>

<p>Dick–Joseph–Schutzman additionally extends this attack to recover <em>numerical</em> rather than just binary secret data.  By using queries of the form</p>

<pre><code class="language-SQL">SELECT SUM(passenger_count) FROM rides ...

</code></pre>
<p>Diffix will return return noisy sums over the specified subset for a numeric column like <code class="language-plaintext highlighter-rouge">passenger_count</code>.  Then, a similar linear program can reconstruct estimates for these values with high accuracy.  For numeric columns like <code class="language-plaintext highlighter-rouge">passenger_count</code> which take on relatively few distinct values, the attack recovers the exact values with accuracy above 75 percent.  Due to limitations in the Diffix bounty program rules which require perfect reconstruction of a value to be considered ‘accurate’, we didn’t evaluate the performance of the attack on numeric columns with richer values, such as <code class="language-plaintext highlighter-rouge">dropoff_latitude</code>.</p>

<p>Finally, this attack extends to one used to reconstruct string data character-by-character.  A U.S. social security number consists of a string formatted like <code class="language-plaintext highlighter-rouge">xxx-xx-xxxx</code> with none unknown digits in three blocks separated by dashes.  There are potentially one billion different strings that could appear in this column.  However, by exploiting the structure of the data, a separate attack can be run to recover each digit individually using the summation attack, since there are only ten different values each digit could take.  Queries of the form</p>

<pre><code class="language-SQL">
SELECT SUM(CAST(SUBSTRING(ssn, 3, 1) AS integer)) FROM rides ....

</code></pre>

<p>can be used to recover the 3rd digit from each row’s social security number.  Running this attack for each digit then aggregating the individual guesses to construct a guess for each user’s entire social security number allows the attack to achieve perfect reconstruction on about 90 percent of the values.  A similar attack worked on the <code class="language-plaintext highlighter-rouge">pickup_datetime</code> and <code class="language-plaintext highlighter-rouge">dropoff_datetime</code> columns, with separate attacks on the value in the seconds position, the minutes position, and so on, and finally piecing these together to correctly reconstruct about 85 percent of the values.</p>

<p>Again, Aircloak’s response was to restrict the query language.  Both of the successful attacks relied on the use of some arithmetic inside of  a <code class="language-plaintext highlighter-rouge">FLOOR</code> function to check whether or not a row is included in a particular query. Diffix now forbids the use of arithmetic with <em>bucketing functions</em> such as <code class="language-plaintext highlighter-rouge">FLOOR</code>, <code class="language-plaintext highlighter-rouge">CEIL</code>, <code class="language-plaintext highlighter-rouge">ROUND</code>, etc.  This defeats strategies which choose random-ish subsets via this kind of hashing, but does not necessarily preclude the extraction of entropy from the data in other ways.</p>

<h4 id="whats-next">What’s Next?</h4>

<p>We’d again like to thank Aircloak for opening their system to attacks and critiques through the Diffix bounty program.  By being so willing to expose their product in this way, they have provided a test bed for us to bridge the gap between theory and application and demonstrate how a linear reconstruction attack might work in practice.  Vulnerability to these and other attacks are a potential threat to any data privacy system which does not account for the cumulative threat to privacy that may result from many seemingly-innocuous queries, not just Diffix. The attacks we describe here only require the attacker have access to some subset of the data with a sufficient amount of entropy, and while more entropy allows for more complete reconstruction, it may be possible to use something potentially very accessible like a list of users’ email addresses in this kind of attack to reconstruct a non-trivial amount of the secret data using queries against a system that adds independent noise to each query.  Systems like this fall into the trap of the classic arms race, where a designer builds a system to protect against certain attacks, then a clever and determined adversary defeats the system, and the designer is forced to make revisions.  This cycle may never terminate, leaving us perpetually unsure of when we can be confident that a system is secure enough to trust with sensitive data.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Descriptions of Diffix and Aircloak are based on <a href="https://www.aircloak.com">https://www.aircloak.com</a>, <a href="https://arxiv.org/pdf/1806.02075.pdf">https://arxiv.org/pdf/1806.02075.pdf</a>, <a href="https://demo.aircloak.com/docs/">https://demo.aircloak.com/docs/</a>, and the authors’ participation in the Aircloak bounty program. <a class="reversefootnote" href="https://differentialprivacy.org/feed.xml#fnref:1">↩</a></p>
    </li>
    <li id="fn:2">
      <p>The variance is proportional to the largest effect any single user has on the output. For <code class="language-plaintext highlighter-rouge">COUNT</code> queries, this largest contribution is 1, and for <code class="language-plaintext highlighter-rouge">SUM</code> queries, it’s roughly the magnitude of the largest value in the column. <a class="reversefootnote" href="https://differentialprivacy.org/feed.xml#fnref:2">↩</a></p>
    </li>
    <li id="fn:3">
      <p>Note that Diffix’s syntax restrictions don’t allow disjunctions (using <code class="language-plaintext highlighter-rouge">OR</code>s). An equivalent way of writing this that is allowed by Diffix would use <code class="language-plaintext highlighter-rouge">...WHERE ... AND clientId IN (2007, 2018,...)</code>. For such conditions, Diffix adds a noise layer for each element of the <code class="language-plaintext highlighter-rouge">IN</code> condition. <a class="reversefootnote" href="https://differentialprivacy.org/feed.xml#fnref:3">↩</a></p>
    </li>
    <li id="fn:4">
      <p>Sweeney, Latanya. “Simple demographics often identify people uniquely.” Health (San Francisco) 671.2000 (2000): 1-34. <a class="reversefootnote" href="https://differentialprivacy.org/feed.xml#fnref:4">↩</a></p>
    </li>
  </ol>
</div></div>
    </summary>
    <updated>2020-10-27T04:11:38Z</updated>
    <published>2020-10-27T04:11:38Z</published>
    <author>
      <name>Jonathan Ullman</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-10-28T19:22:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.12928</id>
    <link href="http://arxiv.org/abs/2010.12928" rel="alternate" type="text/html"/>
    <title>Drawing Two Posets</title>
    <feedworld_mtime>1603756800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Br=uuml=ckner:Guido.html">Guido Brückner</a>, Vera Chekan <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.12928">PDF</a><br/><b>Abstract: </b>We investigate the problem of drawing two posets of the same ground set so
that one is drawn from left to right and the other one is drawn from the bottom
up. The input to this problem is a directed graph $G = (V, E)$ and two sets $X,
Y$ with $X \cup Y = E$, each of which can be interpreted as a partial order of
$V$. The task is to find a planar drawing of $G$ such that each directed edge
in $X$ is drawn as an $x$-monotone edge, and each directed edge in $Y$ is drawn
as a $y$-monotone edge. Such a drawing is called an $xy$-planar drawing.
</p>
<p>Testing whether a graph admits an $xy$-planar drawing is NP-complete in
general. We consider the case that the planar embedding of $G$ is fixed and the
subgraph of $G$ induced by the edges in $Y$ is a connected spanning subgraph of
$G$ whose upward embedding is fixed. For this case we present a linear-time
algorithm that determines whether $G$ admits an $xy$-planar drawing and, if so,
produces an $xy$-planar polyline drawing with at most three bends per edge.
</p></div>
    </summary>
    <updated>2020-10-27T23:26:55Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-10-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.12918</id>
    <link href="http://arxiv.org/abs/2010.12918" rel="alternate" type="text/html"/>
    <title>On Testing of Samplers</title>
    <feedworld_mtime>1603756800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Meel:Kuldeep_S=.html">Kuldeep S. Meel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pote:Yash.html">Yash Pote</a>, Sourav Chakraborty <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.12918">PDF</a><br/><b>Abstract: </b>Given a set of items $\mathcal{F}$ and a weight function $\mathtt{wt}:
\mathcal{F} \mapsto (0,1)$, the problem of sampling seeks to sample an item
proportional to its weight. Sampling is a fundamental problem in machine
learning. The daunting computational complexity of sampling with formal
guarantees leads designers to propose heuristics-based techniques for which no
rigorous theoretical analysis exists to quantify the quality of generated
distributions.
</p>
<p>This poses a challenge in designing a testing methodology to test whether a
sampler under test generates samples according to a given distribution. Only
recently, Chakraborty and Meel (2019) designed the first scalable verifier,
called Barbarik1, for samplers in the special case when the weight function
$\mathtt{wt}$ is constant, that is, when the sampler is supposed to sample
uniformly from $\mathcal{F}$ . The techniques in Barbarik1, however, fail to
handle general weight functions.
</p>
<p>The primary contribution of this paper is an affirmative answer to the above
challenge: motivated by Barbarik1 but using different techniques and analysis,
we design Barbarik2 an algorithm to test whether the distribution generated by
a sampler is $\varepsilon$-close or $\eta$-far from any target distribution. In
contrast to black-box sampling techniques that require a number of samples
proportional to $|\mathcal{F}|$ , Barbarik2 requires only
$\tilde{O}(tilt(\mathtt{wt},\varphi)^2/\eta(\eta - 6\varepsilon)^3)$ samples,
where the $tilt$ is the maximum ratio of weights of two satisfying assignments.
Barbarik2 can handle any arbitrary weight function. We present a prototype
implementation of Barbarik2 and use it to test three state-of-the-art samplers.
</p></div>
    </summary>
    <updated>2020-10-27T23:24:32Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.12816</id>
    <link href="http://arxiv.org/abs/2010.12816" rel="alternate" type="text/html"/>
    <title>Differentially Private Online Submodular Maximization</title>
    <feedworld_mtime>1603756800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Perez=Salazar:Sebastian.html">Sebastian Perez-Salazar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cummings:Rachel.html">Rachel Cummings</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.12816">PDF</a><br/><b>Abstract: </b>In this work we consider the problem of online submodular maximization under
a cardinality constraint with differential privacy (DP). A stream of $T$
submodular functions over a common finite ground set $U$ arrives online, and at
each time-step the decision maker must choose at most $k$ elements of $U$
before observing the function. The decision maker obtains a payoff equal to the
function evaluated on the chosen set, and aims to learn a sequence of sets that
achieves low expected regret. In the full-information setting, we develop an
$(\varepsilon,\delta)$-DP algorithm with expected $(1-1/e)$-regret bound of
$\mathcal{O}\left( \frac{k^2\log |U|\sqrt{T \log k/\delta}}{\varepsilon}
\right)$. This algorithm contains $k$ ordered experts that learn the best
marginal increments for each item over the whole time horizon while maintaining
privacy of the functions. In the bandit setting, we provide an
$(\varepsilon,\delta+ O(e^{-T^{1/3}}))$-DP algorithm with expected
$(1-1/e)$-regret bound of $\mathcal{O}\left( \frac{\sqrt{\log
k/\delta}}{\varepsilon} (k (|U| \log |U|)^{1/3})^2 T^{2/3} \right)$. Our
algorithms contains $k$ ordered experts that learn the best marginal item to
select given the items chosen her predecessors, while maintaining privacy of
the functions. One challenge for privacy in this setting is that the payoff and
feedback of expert $i$ depends on the actions taken by her $i-1$ predecessors.
This particular type of information leakage is not covered by post-processing,
and new analysis is required. Our techniques for maintaining privacy with
feedforward may be of independent interest.
</p></div>
    </summary>
    <updated>2020-10-27T23:23:06Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.12633</id>
    <link href="http://arxiv.org/abs/2010.12633" rel="alternate" type="text/html"/>
    <title>Low-rank on Graphs plus Temporally Smooth Sparse Decomposition for Anomaly Detection in Spatiotemporal Data</title>
    <feedworld_mtime>1603756800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sofuoglu:Seyyid_Emre.html">Seyyid Emre Sofuoglu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aviyente:Selin.html">Selin Aviyente</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.12633">PDF</a><br/><b>Abstract: </b>Anomaly detection in spatiotemporal data is a challenging problem encountered
in a variety of applications including hyperspectral imaging, video
surveillance, and urban traffic monitoring. Existing anomaly detection methods
are most suited for point anomalies in sequence data and cannot deal with
temporal and spatial dependencies that arise in spatiotemporal data. In recent
years, tensor-based methods have been proposed for anomaly detection to address
this problem. These methods rely on conventional tensor decomposition models,
not taking the structure of the anomalies into account, and are supervised or
semi-supervised. We introduce an unsupervised tensor-based anomaly detection
method that takes the sparse and temporally continuous nature of anomalies into
account. In particular, the anomaly detection problem is formulated as a robust
lowrank + sparse tensor decomposition with a regularization term that minimizes
the temporal variation of the sparse part, so that the extracted anomalies are
temporally persistent. We also approximate rank minimization with graph total
variation minimization to reduce the complexity of the optimization algorithm.
The resulting optimization problem is convex, scalable, and is shown to be
robust against missing data and noise. The proposed framework is evaluated on
both synthetic and real spatiotemporal urban traffic data and compared with
baseline methods.
</p></div>
    </summary>
    <updated>2020-10-27T23:25:39Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-10-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2010.12629</id>
    <link href="http://arxiv.org/abs/2010.12629" rel="alternate" type="text/html"/>
    <title>Degree vs. Approximate Degree and Quantum Implications of Huang's Sensitivity Theorem</title>
    <feedworld_mtime>1603756800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aaronson:Scott.html">Scott Aaronson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Ben=David:Shalev.html">Shalev Ben-David</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kothari:Robin.html">Robin Kothari</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rao:Shravas.html">Shravas Rao</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tal:Avishay.html">Avishay Tal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2010.12629">PDF</a><br/><b>Abstract: </b>Based on the recent breakthrough of Huang (2019), we show that for any total
Boolean function $f$,
</p>
<p>$\bullet \quad \mathrm{deg}(f) = O(\widetilde{\mathrm{deg}}(f)^2)$: The
degree of $f$ is at most quadratic in the approximate degree of $f$. This is
optimal as witnessed by the OR function.
</p>
<p>$\bullet \quad \mathrm{D}(f) = O(\mathrm{Q}(f)^4)$: The deterministic query
complexity of $f$ is at most quartic in the quantum query complexity of $f$.
This matches the known separation (up to log factors) due to Ambainis, Balodis,
Belovs, Lee, Santha, and Smotrovs (2017).
</p>
<p>We apply these results to resolve the quantum analogue of the
Aanderaa--Karp--Rosenberg conjecture. We show that if $f$ is a nontrivial
monotone graph property of an $n$-vertex graph specified by its adjacency
matrix, then $\mathrm{Q}(f)=\Omega(n)$, which is also optimal. We also show
that the approximate degree of any read-once formula on $n$ variables is
$\Theta(\sqrt{n})$.
</p></div>
    </summary>
    <updated>2020-10-27T23:20:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-10-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/158</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/158" rel="alternate" type="text/html"/>
    <title>TR20-158 |  A Note on Hardness under Projections for Graph Isomorphism and Time-Bounded Kolmogorov Complexity | 

	Eric Allender, 

	Azucena Garvia Bosshard, 

	Amulya Musipatla</title>
    <summary>This paper focuses on a variant of the circuit minimization problem (MCSP), denoted MKTP, which studies resource-bounded Kolmogorov complexity in place of circuit size. MCSP is not known to be hard for any complexity class under any kind of m-reducibility, but recently MKTP was shown to be hard for DET under m-reductions computable in NC0, by presenting an AC0 reduction from the rigid graph isomorphism problem to MKTP, and combining that with a theorem of Toran, showing that DET AC0-reduces to the rigid graph isomorphism problem, and then appealing to the "Gap Theorem" of [Agrawal, Allender, Rudich]. Here, we show that these reductions can be accomplished by means of projections. Thus MKTP is hard for DET under projections, and the rigid graph isomorphism problem is hard for DET under uniform projections.</summary>
    <updated>2020-10-26T21:00:01Z</updated>
    <published>2020-10-26T21:00:01Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-10-28T19:20:36Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/10/26/graphs-whose-cycles</id>
    <link href="https://11011110.github.io/blog/2020/10/26/graphs-whose-cycles.html" rel="alternate" type="text/html"/>
    <title>Graphs whose cycles all touch</title>
    <summary>An interesting recent question on MathOverflow asks about graphs in which all cycles touch. Here, touching is meant in the same sense as a bramble in graph structure theory: every two cycles either share a vertex or contain the two endpoints of an edge from one cycle to the other. The graphs with this property include all the complete graphs (girth 3), complete bipartite graphs (girth 4), and theta graphs (arbitrarily high girth but very simple structure). As originally phrased, it asked whether there exists \(g\) such that graphs of girth \(\ge g\) with all cycles touching have bounded treewidth. Partial results given there by Tony Huynh and me show that the condition of bounded treewidth can be replaced by bounded vertex cover number or a bounded number of vertex-disjoint cycles without changing the answer.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>An interesting recent question on MathOverflow asks about <a href="https://mathoverflow.net/q/374793/440">graphs in which all cycles touch</a>. Here, touching is meant in the same sense as a <a href="https://en.wikipedia.org/wiki/Bramble_(graph_theory)">bramble</a> in graph structure theory: every two cycles either share a vertex or contain the two endpoints of an edge from one cycle to the other. The graphs with this property include all the complete graphs (girth 3), complete bipartite graphs (girth 4), and theta graphs (arbitrarily high girth but very simple structure). As originally phrased, it asked whether there exists \(g\) such that graphs of girth \(\ge g\) with all cycles touching have bounded treewidth. Partial results given there by Tony Huynh and me show that the condition of bounded treewidth can be replaced by bounded vertex cover number or a bounded number of vertex-disjoint cycles without changing the answer.</p>

<p>This led me to look for graphs that have high girth, all cycles touching, and as many vertex-disjoint cycles as I could construct. So far, the best I have found is four vertex-disjoint cycles, as shown in graphs of the following form:</p>

<p style="text-align: center;"><img alt="A graph with four vertex-disjoint long cycles, and all cycles touching" src="https://11011110.github.io/blog/assets/2020/4-disjoint-touching-cycles.svg"/></p>

<p>It consists of four theta graphs (the pairs of blue vertices connected by multiple long paths of yellow vertices, with the eight blue pole vertices of the theta graphs connected into two four-vertex paths. I’ve drawn it with yellow paths of length 16, and three paths per theta, but these numbers are arbitrary. One can easily find four vertex-disjoint cycles, within each of the four thetas, ignoring the edges between the pole vertices.</p>

<p>There is no cycle using only the blue pole vertices, so every cycle in the overall graph must include at least one complete yellow path connecting its two poles. Therefore, every cycle is at least as long as this yellow path length. These paths can be made arbitrarily long, so the graphs constructed in this way can have arbitrarily large girth.</p>

<p>The six edges of the two four-vertex paths between the pole vertices include an edge between each of the six pairs of pole vertices. But each cycle uses at least one pair of pole vertices, so this implies that every two cycles touch, either by sharing a pole vertex or by each containing one endpoint of one of these path edges.</p>

<p>Therefore the graphs constructed in this way have arbitrarily large girth, have all cycles touching, and contain four vertex-disjoint cycles. It also has feedback vertex number four. The MathOverflow question asks whether the four vertex-disjoint cycles can be replaced by an arbitrarily large number of cycles, or equivalently whether the feedback vertex number can be increased, but at this point I don’t even know whether either number can be replaced by five.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/105103937279022043">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2020-10-26T16:16:00Z</updated>
    <published>2020-10-26T16:16:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-10-27T00:34:33Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-9110359134467856278</id>
    <link href="https://blog.computationalcomplexity.org/feeds/9110359134467856278/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/10/do-not-become-obsessed-with-polls-unless.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/9110359134467856278" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/9110359134467856278" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/10/do-not-become-obsessed-with-polls-unless.html" rel="alternate" type="text/html"/>
    <title>Do not become obsessed with the Polls unless...</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I know someone who checks the polls 3 times a day to see who looks like they will be elected prez. She cares A LOT about the election. It is irrelevant to this post who she supports. <div><br/></div><div>I've asked her `if you find out that, say, Biden is up  8 points instead of 9 in Penn. or that Georgia is looking pretty safe for Trump, or that Texas is in play (really?) how will that change your life? What will YOU do differently?'</div><div><br/></div><div>She had no answer. Unfortunately she is still a poll-watcher (I know that means something else usually, but you know what I mean.)</div><div><br/></div><div>So who should be poll-watching or poll-obsessing?</div><div><br/></div><div>1) To be fair to my friend, she might decide to GIVE MORE to her candidate if the polls are saying that he will lose (whoops- by saying `he' I gave away that her candidate is NOT Jo Jorgenson- Libertarian).  I doubt my friend could say to the campaign `I want to you to spend it in state X since I read that its close there' (I read that some big donors in 2016 demanded more say in where the money was spend. I doubt that's a good idea since I suspect the party knows more about how to best spend the money then the donor does.) </div><div><br/></div><div>2) The Biden and the Trump Campaigns SHOULD be poll-watching to decide where to put their efforts. And I suspect they are doing just that.</div><div><br/></div><div>3) A really big donor (my friend is not one of those) MIGHT want to poll watch to decide if the candidate they want needs money. (I wonder if EITHER candidate needs money since they get so much free media.)</div><div><br/></div><div>4) Nate Silver-being a poll-watcher is kind-of his job. And of course writing columns about them and making predictions based on what he sees. My friend is not Nate Silver. </div><div><br/></div><div>5) Other people who have Nate Silver's job. I can't name any- is Nate Silver the most famous... Gee, not sure what job title he has... SO this is now two questions: What is his job title, call it X, and is he the most famous person who does X?</div><div><br/></div><div><br/></div><div>SO- my point- DO NOT be a poll-obsessive unless the information you get will lead to an action you can take. And I suspect that mostly it does not. </div><div><br/></div><div>The primaries are different: If a poll says A can beat X but B cannot beat X, that might guide who you vote for. </div><div><br/></div><div>Misc thought: </div><div><br/></div><div> I've heard the phrase `democratic pollster' and `republican pollster' These terms do not make sense. Would I call myself a `democratic Muffin Mathematician' ? My political leanings do not affect my search for truth about mathematical Muffins. Similarly, one would think that a pollster wants to find the TRUTH, even if its bad news for their employer, ESPECIALLY if its bad news for their employer, so they can help their employer fix it. The phrase `pollster employed by the X party' would make more sense-- however, whenever they are on TV they seem to always say that their candidate is doing well, even when they are not. </div><div><br/></div><div>ADDED LATER: Lance had a great tweet about this post: <i>do not obsess about polls, but DO obsess bout prediction markets. </i>I think in the past prediction markets have been better predictors but some group-think has set in so its no longer clear. (I could be wrong- but thats why I have heard.) </div></div>
    </content>
    <updated>2020-10-25T20:36:00Z</updated>
    <published>2020-10-25T20:36:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-10-27T15:22:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/157</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/157" rel="alternate" type="text/html"/>
    <title>TR20-157 |  Batch Verification and Proofs of Proximity with Polylog Overhead | 

	Guy Rothblum, 

	Ron Rothblum</title>
    <summary>Suppose Alice wants to convince Bob of the correctness of k NP statements. Alice could send k witnesses to Bob, but as k grows the communication becomes prohibitive. Is it possible to convince Bob using smaller communication (without making cryptographic assumptions or bounding the computational power of a malicious Alice)? This is the question of batch verification for NP statements.

Our main result is a new interactive proof protocol for verifying the correctness of k UP statements (NP statements with a unique witness) using communication that is poly-logarithmic in k (and a fixed polynomial in the length of a single witness).

This result is obtained by making progress on a different question in the study of interactive proofs. Suppose Alice wants to convince Bob that a huge dataset has some property. Can this be done if Bob can't even read the entire input? In other words, what properties can be verified in sublinear time? An Interactive Proof of Proximity guarantees that Bob accepts if the input has the property, and rejects if the input is far (say in Hamming distance) from having the property. Two central complexity measures of such a protocol are the query and communication complexities (which should both be sublinear). For every query parameter $q$, and for every language in logspace uniform NC, we construct an interactive proof of proximity with query complexity $q$ and communication complexity $(n/q) \cdot \polylog(n)$.

Both results are optimal up to poly-logarithmic factors, under reasonable complexity-theoretic or cryptographic assumptions. The second result, which is our main technical contribution, builds on a distance amplification technique introduced in a beautiful recent work of Ben-Sasson, Kopparty and Saraf [CCC 2018].</summary>
    <updated>2020-10-25T10:51:48Z</updated>
    <published>2020-10-25T10:51:48Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-10-28T19:20:36Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/24/tenure-track-tenured-position-at-university-of-california-davis-apply-by-december-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/24/tenure-track-tenured-position-at-university-of-california-davis-apply-by-december-15-2020/" rel="alternate" type="text/html"/>
    <title>Tenure-Track/Tenured position at University of California, Davis (apply by December 15, 2020)</title>
    <summary>The University of California, Davis, seeks an Assistant Professor in any area of theoretical computer science; exceptional candidates at the Associate and Full ranks may be considered. Website: https://recruit.ucdavis.edu/JPF03838?utm_campaign=google_jobs_apply&amp;utm_source=google_jobs_apply&amp;utm_medium=organic Email: amenta@cs.ucdavis.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The University of California, Davis, seeks an Assistant Professor in any area of theoretical computer science; exceptional candidates at the Associate and Full ranks may be considered.</p>
<p>Website: <a href="https://recruit.ucdavis.edu/JPF03838?utm_campaign=google_jobs_apply&amp;utm_source=google_jobs_apply&amp;utm_medium=organic">https://recruit.ucdavis.edu/JPF03838?utm_campaign=google_jobs_apply&amp;utm_source=google_jobs_apply&amp;utm_medium=organic</a><br/>
Email: amenta@cs.ucdavis.edu</p></div>
    </content>
    <updated>2020-10-24T16:11:09Z</updated>
    <published>2020-10-24T16:11:09Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/24/simons-berkeley-research-fellowships-for-fall-2021-and-spring-2022-at-the-simons-institute-for-the-theory-of-computing-apply-by-december-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/24/simons-berkeley-research-fellowships-for-fall-2021-and-spring-2022-at-the-simons-institute-for-the-theory-of-computing-apply-by-december-15-2020/" rel="alternate" type="text/html"/>
    <title>Simons-Berkeley Research Fellowships for Fall 2021 and Spring 2022 at The Simons Institute for the Theory of Computing (apply by December 15, 2020)</title>
    <summary>The Simons Institute invites applications for Simons-Berkeley Postdoctoral Fellowships and Simons-Berkeley Research Fellowships, to collaborate with UC Berkeley faculty and to participate in the semester-long programs in Fall 2021 and Spring 2022: “Computational Complexity of Statistical Inference”, “Geometric Methods in Optimization and Sampling”, “Causality”, and “Learning and Games”. Website: https://simons.berkeley.edu Email: simonsvisitorservices@berkeley.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Simons Institute invites applications for Simons-Berkeley Postdoctoral Fellowships and Simons-Berkeley Research Fellowships, to collaborate with UC Berkeley faculty and to participate in the semester-long programs in Fall 2021 and Spring 2022: “Computational Complexity of Statistical Inference”, “Geometric Methods in Optimization and Sampling”, “Causality”, and “Learning and Games”.</p>
<p>Website: <a href="https://simons.berkeley.edu">https://simons.berkeley.edu</a><br/>
Email: simonsvisitorservices@berkeley.edu</p></div>
    </content>
    <updated>2020-10-24T01:25:11Z</updated>
    <published>2020-10-24T01:25:11Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17707</id>
    <link href="https://rjlipton.wordpress.com/2020/10/23/can-we-solve-it/" rel="alternate" type="text/html"/>
    <title>Can We Solve It?</title>
    <summary>It is a Friday James Maynard is a number theorist. He attended Cambridge as an undergrad and then moved to do his grad work at Oxford at Balliol College. He is now a professor at Oxford. He is one of the world experts on prime density type theorems. Today, since it is Friday, I thought […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>It is a Friday</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2020/10/23/can-we-solve-it/maynard/" rel="attachment wp-att-17709"><img alt="" class="alignright size-full wp-image-17709" src="https://rjlipton.files.wordpress.com/2020/10/maynard.jpg?w=600"/></a>
</td>
</tr>
<tr>
</tr>
</tbody>
</table>
<p>
James Maynard is a number theorist. He attended Cambridge as an undergrad and then moved to do his grad work at Oxford at Balliol College. He is now a professor at Oxford. He is one of the world experts on prime density type theorems. </p>
<p/><p>
Today, since it is Friday, I thought we would discuss a <em>timely</em> idea of Maynard. Not an idea about time complexity or time in physics, but involving the use of time.<br/>
<span id="more-17707"/></p>
<p>
</p><p/><h2> Decimal Digits </h2><p/>
<p/><p>
No it’s not a technical idea of his. He has had many ideas, for instance, that shed light on the beautiful structure of primes. For example, he <a href="https://arxiv.org/abs/1604.01041">proved</a> in 2016 that</p>
<blockquote><p><b>Theorem 1</b> <em> For each decimal digit <img alt="{d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{d}"/>, there are infinitely many prime numbers that do not have <img alt="{d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{d}"/> in their decimal expansion. </em>
</p></blockquote>
<p/><p>
This is not known for all digit systems: For binary, our favorite system as complexity theorists, this is still an open problem. Of course a binary prime with only <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1}"/>‘s must be of the form: 	</p>
<p align="center"><img alt="\displaystyle  2^{p} - 1 = 111\dots 1, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++2%5E%7Bp%7D+-+1+%3D+111%5Cdots+1%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  2^{p} - 1 = 111\dots 1, "/></p>
<p>where <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{p}"/> must be a prime.</p>
<p>These are the famous <a href="https://en.wikipedia.org/wiki/Mersenne_prime">Mersenne primes</a> named for Marin Mersenne. The largest prime is <img alt="{2^{82,589,933} - 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5E%7B82%2C589%2C933%7D+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{2^{82,589,933} - 1}"/> as of today—at least I believe this is true. For further discussion, see a 2001 <a href="https://projecteuclid.org/euclid.em/999188636">paper</a> by Samuel Wagstaff titled, “Prime Numbers with a Fixed Number of One Bits or Zero Bits in Their Binary Representation.” </p>
<p/><h2> Maynard’s Friday Rule </h2><p/>
<p/><p>
Maynard’s idea is based on his quest to understand whether known techniques can solve some problem. Of course the best way to understand this is to solve the problem. His above theorem is a perfect example of this. In the abstract he says: </p>
<blockquote><p><b> </b> <em> The proof is an application of the Hardy-Littlewood circle method to a binary problem, and rests on obtaining suitable `Type I’ and `Type II’ arithmetic information for use in Harman’s sieve to control the minor arcs. </em>
</p></blockquote>
<p>The proof may be based on known techniques, but is still very hard. He needs <img alt="{70}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B70%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{70}"/> pages to make it work. </p>
<p>
Maynard’s idea is to set aside time to remind himself why existing techniques have not worked against math’s biggest open problems.</p>
<blockquote><p><b> </b> <em> I often spend Friday afternoons just thinking about trying to directly attack some famous problem. This is much less because I think there’s a realistic way of solving the problem, but more because I think it’s important for me to understand where plausible techniques fail. </em>
</p></blockquote>
<p/><p>
One can imagine that he had a Friday afternoon think. During it he asked himself:</p>
<blockquote><p><b> </b> <em> Suppose I try to show that there are primes without some particular digit. This is a density type theorem. Well could I use the Hardy-Littlewood method. But it cannot work because <img alt="{\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\dots}"/> Wait here is a possible way around the roadblock. Hmmm. </em>
</p></blockquote>
<p/><p>
Maybe he looked at Terence Tao’s blog post on this very <a href="https://terrytao.wordpress.com/2012/05/20/heuristic-limitations-of-the-circle-method/">issue</a>. It helped that Maynard is an expert on the Hardy-Littlewood method, but perhaps thinking why it could not work helped him figure out how it could work. </p>
<p>
</p><p/><h2> Our Friday Rule </h2><p/>
<p/><p>
Today is Friday, so I though what should I think about? What problems and what techniques? Here is a possible example. Let’s look at the <a href="https://rjlipton.wordpress.com/2019/09/08/separating-words-by-automata/">On Lower Bounds for the Separating Word Problem</a>. </p>
<p>
An approach is based on the following. Let <img alt="{F(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BF%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{F(n)}"/> be the set of all <img alt="{f(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{f(x)}"/> degree <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{n}"/> polynomials, with coefficients <img alt="{-1,0,+1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{-1,0,+1}"/>. Let <img alt="{\epsilon&gt;0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\epsilon&gt;0}"/> be a constant. Our hypothesis <strong>H</strong><img alt="{(\epsilon)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cepsilon%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(\epsilon)}"/> is: For every polynomial <img alt="{f(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{f(x)}"/> in <img alt="{F(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BF%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{F(n)}"/>, there is some prime <img alt="{p \le Cn^{\epsilon}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp+%5Cle+Cn%5E%7B%5Cepsilon%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{p \le Cn^{\epsilon}}"/>, so that for some <img alt="{1 \le k \le n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1+%5Cle+k+%5Cle+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{1 \le k \le n}"/> 	</p>
<p align="center"><img alt="\displaystyle  f(k) \not\equiv 0 \bmod p. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%28k%29+%5Cnot%5Cequiv+0+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="\displaystyle  f(k) \not\equiv 0 \bmod p. "/></p>
<p>How small can <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\epsilon}"/> be so that <strong>H</strong><img alt="{(\epsilon)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cepsilon%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(\epsilon)}"/> is true? What are the methods that we should think about? What methods can we see that cannot prove H<img alt="{(\epsilon)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cepsilon%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{(\epsilon)}"/>? Can we, for example, show that we can use a random argument? Can we should that they are not enough primes <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{p}"/> in the range? Hmmm <img alt="{\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{\dots}"/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Do you like Maynard’s Friday rule? What problems and what techniques would you think about? </p>
<p/></font></font></div>
    </content>
    <updated>2020-10-23T19:56:51Z</updated>
    <published>2020-10-23T19:56:51Z</published>
    <category term="Ideas"/>
    <category term="People"/>
    <category term="Proofs"/>
    <category term="density"/>
    <category term="twin primes"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-10-28T19:20:43Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/23/3-postdocs-at-university-of-lyon-apply-by-january-6-2021/</id>
    <link href="https://cstheory-jobs.org/2020/10/23/3-postdocs-at-university-of-lyon-apply-by-january-6-2021/" rel="alternate" type="text/html"/>
    <title>3 postdocs at University of Lyon (apply by January 6, 2021)</title>
    <summary>The Excellence Laboratory Milyon (Labex Milyon) opens the 2021 campaign of postdoctoral researchers in Lyon–Saint-Etienne in Mathematics, Computer Science and their interactions (including some aspects of theoretical physics). Milyon offers three postdoctoral positions of two years with no teaching load for 2021–2023. The application is open to all research areas of labex Milyon. Website: https://milyon.universite-lyon.fr/postdoctoral-positions-2021-2023–130160.kjsp?RH=1571748911317 […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Excellence Laboratory Milyon (Labex Milyon) opens the 2021 campaign of postdoctoral researchers in Lyon–Saint-Etienne in Mathematics, Computer Science and their interactions (including some aspects of theoretical physics).</p>
<p>Milyon offers three postdoctoral positions of two years with no teaching load for 2021–2023. The application is open to all research areas of labex Milyon.</p>
<p>Website: <a href="https://milyon.universite-lyon.fr/postdoctoral-positions-2021-2023--130160.kjsp?RH=1571748911317">https://milyon.universite-lyon.fr/postdoctoral-positions-2021-2023–130160.kjsp?RH=1571748911317</a><br/>
Email: sabot@math.univ-lyon1.fr</p></div>
    </content>
    <updated>2020-10-23T19:35:35Z</updated>
    <published>2020-10-23T19:35:35Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7831</id>
    <link href="https://windowsontheory.org/2020/10/23/full-replica-symmetry-breaking-based-algorithms-for-dummies/" rel="alternate" type="text/html"/>
    <title>Full-replica-symmetry-breaking based algorithms for dummies</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">One of the fascinating lines of research in recent years has been a convergence between the statistical physics and theoretical computer science points of view on optimization problems.`This blog post is mainly a note to myself (i.e., I’m the “dummy” 😃), trying to work out some basic facts in some of this line of work. … <a class="more-link" href="https://windowsontheory.org/2020/10/23/full-replica-symmetry-breaking-based-algorithms-for-dummies/">Continue reading <span class="screen-reader-text">Full-replica-symmetry-breaking based algorithms for dummies</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of the fascinating lines of research in recent years has been a convergence between the statistical physics and theoretical computer science points of view on optimization problems.<br/>`<br/>This blog post is mainly a note to myself (i.e., I’m the “dummy” <img alt="&#x1F603;" class="wp-smiley" src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f603.png" style="height: 1em;"/>), trying to work out some basic facts in some of this line of work. it was inspired by this <a href="https://simons.berkeley.edu/talks/breaking-1rsb-random-max-nae-sat">excellent talk of Eliran Subag</a>, itself part of a great <a href="https://simons.berkeley.edu/workshops/schedule/14243">Simons institute workshop</a> which I am still planning to watch the talks of. I am posting this in case it’s useful for others, but this is quite rough, missing many references, and I imagine I have both math mistakes as well as inaccuracies in how I refer to the literature – would be grateful for comments!</p>



<figure class="wp-block-image size-large"><a href="https://windowsontheory.files.wordpress.com/2020/10/ekkarv2xiaam8jw.png"><img alt="" class="wp-image-7833" src="https://windowsontheory.files.wordpress.com/2020/10/ekkarv2xiaam8jw-e1603479127948.png"/></a>Screen shot from <a href="https://simons.berkeley.edu/talks/breaking-1rsb-random-max-nae-sat">Eliran Subag’s talk</a> demonstrating the difference between “easy” and “hard” instances.</figure>



<p>In computer science, <em>optimization</em> is the task of finding an assignment <img alt="x_1,\ldots,x_n" class="latex" src="https://s0.wp.com/latex.php?latex=x_1%2C%5Cldots%2Cx_n&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_1,\ldots,x_n"/> that minimizes some function <img alt="J(x_1,\ldots,x_n)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x_1%2C%5Cldots%2Cx_n%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x_1,\ldots,x_n)"/>. In statistical physics we think of <img alt="x_1,\ldots,x_n" class="latex" src="https://s0.wp.com/latex.php?latex=x_1%2C%5Cldots%2Cx_n&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_1,\ldots,x_n"/> as the states of <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n"/> particles, and <img alt="J(x_1,\ldots,x_n)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x_1%2C%5Cldots%2Cx_n%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x_1,\ldots,x_n)"/> as the <em>energy</em> of this state. Finding the minimum assignment corresponds to finding the <em>ground state</em>, and another computational problem is sampling from the <em>Gibbs distribution</em> where the probability of <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> is proportional to <img alt="\exp(-\beta J(x))" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cexp%28-%5Cbeta+J%28x%29%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\exp(-\beta J(x))"/> for some <img alt="\beta&gt;0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbeta%3E0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\beta&gt;0"/>.</p>



<p>Two prototypical examples of such problems are:</p>



<ol><li>Random 3SAT – in this case <img alt="x\in { \pm 1 }^n" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Cin+%7B+%5Cpm+1+%7D%5En&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x\in { \pm 1 }^n"/> and <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/> is the number of clauses violated by the assignment <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> for a random formula.</li><li>Sherrington-Kirpatrick model – in this case <img alt="x \in { \pm 1 }^n" class="latex" src="https://s0.wp.com/latex.php?latex=x+%5Cin+%7B+%5Cpm+1+%7D%5En&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x \in { \pm 1 }^n"/> and <img alt="J(x)= \sum_{i,j} J_{i,j}x_ix_j" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29%3D+%5Csum_%7Bi%2Cj%7D+J_%7Bi%2Cj%7Dx_ix_j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)= \sum_{i,j} J_{i,j}x_ix_j"/> where <img alt="J_{i,j}" class="latex" src="https://s0.wp.com/latex.php?latex=J_%7Bi%2Cj%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J_{i,j}"/> are independent normal variables with variance <img alt="1/n" class="latex" src="https://s0.wp.com/latex.php?latex=1%2Fn&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1/n"/> for <img alt="i\neq j" class="latex" src="https://s0.wp.com/latex.php?latex=i%5Cneq+j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i\neq j"/> and variance <img alt="2/n" class="latex" src="https://s0.wp.com/latex.php?latex=2%2Fn&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="2/n"/> for <img alt="i=j" class="latex" src="https://s0.wp.com/latex.php?latex=i%3Dj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i=j"/>. (Another way to say it is that <img alt="J" class="latex" src="https://s0.wp.com/latex.php?latex=J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J"/> is the matrix <img alt="A+A^\top" class="latex" src="https://s0.wp.com/latex.php?latex=A%2BA%5E%5Ctop&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A+A^\top"/> where <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A"/>‘s entries are chosen i.i.d from <img alt="N(0,\tfrac{1}{2n}))" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C%5Ctfrac%7B1%7D%7B2n%7D%29%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,\tfrac{1}{2n}))"/>.)</li></ol>



<p>The physics and CS intuition is that these two problems have very different computational properties. For random 3SAT (of the appropriate density), it is believed that the set of solutions is “shattered” in the sense that it is partitioned to exponentially many clusters, separated from one another by large distance. It is conjectured that in this setting the problem will be computationally hard. Similarly from the statistical physics point of view, it is conjectured that if we were to start with the uniform distribution (i.e., a “hot” system) and “lower the temperature” (increase <img alt="\beta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbeta&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\beta"/>) at a rate that is not exponentially slow then we will get “stuck” at a “metastable” state. This is analogous how when we heat up sand and then cool it quickly then rather than returning to its original state, the sand will get stuck at the metastable state of glass.</p>



<p>In contrast for the Sherrington-Kirpatrick (SK) model, the geometry is more subtle, but interestingly this enables better algorithms. The SK model is extermely widely studied, with hundreds of papers, and was the inspiration for the simulated annealing algorithm. If memory serves me right, Sherrington and Kirpatrick made the wrong conjecture on the energy of the ground state, and then Parisi came up in 1979 with a wonderful and hugely influential way to compute this value. Parisi’s calculation was heuristic, but about 30 years later, first Talagrand and later Panchenko proved rigorously many of Parisi’s conjectures. (See this <a href="https://arxiv.org/abs/1211.1094v1">survey of Panchenko</a>.)</p>



<p>Recently <a href="https://arxiv.org/abs/1812.10897">Montanari</a> gave a polynomial time algorithm to find a state with energy that is arbitrarily close to the ground state’s. The algorithm relies on Parisi’s framework and in particular on the fact that the solution space has a property known as “full replica symmetry breaking (RSB)” / “ultrametricity”. Parisi’s derivations (and hence also Montanari’s analysis) are highly elaborate and I admit that I have not yet been able to fully follow it. The nice thing is that (as we’ll see) it is possible to describe at least some of the algorithmic results without going into this theory. In the end of the post I will discuss a bit some of the relation to this theory, which is the underlying inspiration for Subag’s results described here.</p>



<p><strong>Note:</strong> These papers and this blog post deal with the <em>search problem</em> of finding a solution that minimizes the objective. The <em>refutation problem</em> of certifying that this minimum is at least <img alt="-C" class="latex" src="https://s0.wp.com/latex.php?latex=-C&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-C"/> for some <img alt="C" class="latex" src="https://s0.wp.com/latex.php?latex=C&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="C"/> has often been studied. The computational complexity of these problems need not be identical. In particular there are cases where the search problem has an efficient algorithm achieving value <img alt="-C^*" class="latex" src="https://s0.wp.com/latex.php?latex=-C%5E%2A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-C^*"/> but the best refutation algorithm can only certify that the value is at most <img alt="-C'" class="latex" src="https://s0.wp.com/latex.php?latex=-C%27&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-C'"/> for <img alt="C' \gg C^*" class="latex" src="https://s0.wp.com/latex.php?latex=C%27+%5Cgg+C%5E%2A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="C' \gg C^*"/>.</p>



<h2>Analysis of a simpler setting</h2>



<p>Luckily, there is a similar computational problem, for which the analysis of analogous algorithm, which was <a href="https://arxiv.org/abs/1812.04588">discovered by Subag</a> and was the partial inspiration for Montanari’s work, is much simpler. Specifically, we consider the case where <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> is an element of the unit sphere, and <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/> is a degree <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d"/> polynomial with random Gaussian coefficients. Specifically, for every vector <img alt="\gamma = (\gamma_2,\ldots,\gamma_d)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma+%3D+%28%5Cgamma_2%2C%5Cldots%2C%5Cgamma_d%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma = (\gamma_2,\ldots,\gamma_d)"/>, we let <img alt="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3} + \cdots + \gamma_d J^d \cdot x^{\otimes p}" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%3D+%5Cgamma_2+J%5E2+%5Ccdot+x%5E%7B%5Cotimes+2%7D+%2B+%5Cgamma_3+J%5E3+%5Ccdot+x%5E%7B%5Cotimes+3%7D+%2B+%5Ccdots+%2B+%5Cgamma_d+J%5Ed+%5Ccdot+x%5E%7B%5Cotimes+p%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3} + \cdots + \gamma_d J^d \cdot x^{\otimes p}"/> where for every <img alt="p \in {2,\ldots, d }" class="latex" src="https://s0.wp.com/latex.php?latex=p+%5Cin+%7B2%2C%5Cldots%2C+d+%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p \in {2,\ldots, d }"/>, <img alt="J_p" class="latex" src="https://s0.wp.com/latex.php?latex=J_p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J_p"/> is a random tensor of order <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p"/> whose <img alt="n^p" class="latex" src="https://s0.wp.com/latex.php?latex=n%5Ep&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n^p"/> coefficients are all chosen i.i.d in <img alt="N(0,1/n)" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C1%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,1/n)"/>. (We assume that polynomial does not have constant or linear components.)</p>



<p>Depending on <img alt="\gamma" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma"/>, the computational and geometrical properties of this problem can vary considerably. The case that <img alt="\gamma = (1,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma+%3D+%281%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma = (1,0,\ldots,0)"/> (i.e., only <img alt="J^2" class="latex" src="https://s0.wp.com/latex.php?latex=J%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J^2"/> has a non-zero coeffiecent) corresponds to finding the unit vector <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> minimizing <img alt="x^\top J x" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%5Ctop+J+x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^\top J x"/> for a random matrix <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/>, which of course corresponds to the efficiently solveable minimum eigenvector problem. In contrast, the case <img alt="\gamma = (0,1,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma+%3D+%280%2C1%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma = (0,1,0,\ldots,0)"/> corresponds to finding a rank one component of a random three-tensor, which is believed to be computationally difficult. The Parisi calculations give a precise condition <img alt="P" class="latex" src="https://s0.wp.com/latex.php?latex=P&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P"/> on the vector <img alt="\gamma" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma"/> such that if <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> holds then the solution space has the “full RSB” property (and hence the problem is computationally easy) and if <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> does not hold then the solution space does not have this property (and potentially the problem is hard).</p>



<p>These calculations also give rise to the following theorem:</p>



<p><strong>Theorem (<a href="https://arxiv.org/abs/1512.08492">Chen and Sen, Proposition 2</a>):</strong> If <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> holds then in the limit <img alt="n \rightarrow \infty" class="latex" src="https://s0.wp.com/latex.php?latex=n+%5Crightarrow+%5Cinfty&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n \rightarrow \infty"/>, <img alt="\min_{x : |x|=1} J(x) = -\int_0^1 \sqrt{\nu''(q)} dq" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmin_%7Bx+%3A+%7Cx%7C%3D1%7D+J%28x%29+%3D+-%5Cint_0%5E1+%5Csqrt%7B%5Cnu%27%27%28q%29%7D+dq&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\min_{x : |x|=1} J(x) = -\int_0^1 \sqrt{\nu''(q)} dq"/>, where <img alt="\nu(q) = \sum_{p \geq 2} \gamma_p^2 q^p" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnu%28q%29+%3D+%5Csum_%7Bp+%5Cgeq+2%7D+%5Cgamma_p%5E2+q%5Ep&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nu(q) = \sum_{p \geq 2} \gamma_p^2 q^p"/>. (That is, <img alt="\nu''" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnu%27%27&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nu''"/> is the second derivative of this univariate polynomial)</p>



<p>We will not discuss the proof of this theorem, but rather how, taking it as a black box, it leads to an algorithm for minimizing <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/> that achieves a near-optimal value (assuming <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> holds).</p>



<p>It is a nice exercise to show that for every two vectors <img alt="x,x'\in\mathbb{R}^n" class="latex" src="https://s0.wp.com/latex.php?latex=x%2Cx%27%5Cin%5Cmathbb%7BR%7D%5En&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x,x'\in\mathbb{R}^n"/>, <img alt="\mathbb{E}_J [J(x)J(x')] = \nu(\langle x,x' \rangle)/n" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathbb%7BE%7D_J+%5BJ%28x%29J%28x%27%29%5D+%3D+%5Cnu%28%5Clangle+x%2Cx%27+%5Crangle%29%2Fn&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\mathbb{E}_J [J(x)J(x')] = \nu(\langle x,x' \rangle)/n"/>. Hence for any unit vector <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/>, <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/> is a random variable with mean zero and standard deviation <img alt="\sqrt{\nu(1)/n}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt%7B%5Cnu%281%29%2Fn%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\sqrt{\nu(1)/n}"/>. Since (after some coarsening) the number of unit vectors of dimension <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n"/> can be thought of as <img alt="c^n" class="latex" src="https://s0.wp.com/latex.php?latex=c%5En&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="c^n"/> for some <img alt="c&gt;1" class="latex" src="https://s0.wp.com/latex.php?latex=c%3E1&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="c&gt;1"/>, and we expect the probability of deviating <img alt="t" class="latex" src="https://s0.wp.com/latex.php?latex=t&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="t"/> standard deviations to be <img alt="\exp(-c' t^2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cexp%28-c%27+t%5E2%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\exp(-c' t^2)"/>, the minimum value of <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/> should be <img alt="-c'' \sqrt{\nu(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=-c%27%27+%5Csqrt%7B%5Cnu%281%29%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-c'' \sqrt{\nu(1)}"/> for some constant <img alt="c''" class="latex" src="https://s0.wp.com/latex.php?latex=c%27%27&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="c''"/>. However determining this constant is non trivial and is the result of the Parisi theory.</p>



<p>To get a better sense for the quantity <img alt="-\int_0^1 \sqrt{\nu''(q)} dq" class="latex" src="https://s0.wp.com/latex.php?latex=-%5Cint_0%5E1+%5Csqrt%7B%5Cnu%27%27%28q%29%7D+dq&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\int_0^1 \sqrt{\nu''(q)} dq"/>, let’s consider two simple cases:</p>



<ul><li>If <img alt="\gamma = (1,0,\ldots)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma+%3D+%281%2C0%2C%5Cldots%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma = (1,0,\ldots)"/> (i.e., <img alt="J(x) = \sum_{i,j}M_{i,j}x_ix_j" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%3D+%5Csum_%7Bi%2Cj%7DM_%7Bi%2Cj%7Dx_ix_j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) = \sum_{i,j}M_{i,j}x_ix_j"/> for random matrix <img alt="M" class="latex" src="https://s0.wp.com/latex.php?latex=M&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="M"/>) then <img alt="\nu(q)= q^2" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnu%28q%29%3D+q%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nu(q)= q^2"/> and <img alt="\nu''(q) = 2" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnu%27%27%28q%29+%3D+2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nu''(q) = 2"/>, meaning that <img alt="-\int_0^1 \sqrt{\nu''(q)} dq = -\sqrt{2}" class="latex" src="https://s0.wp.com/latex.php?latex=-%5Cint_0%5E1+%5Csqrt%7B%5Cnu%27%27%28q%29%7D+dq+%3D+-%5Csqrt%7B2%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\int_0^1 \sqrt{\nu''(q)} dq = -\sqrt{2}"/>. This turns out to be the actual minimum value. Indeed in this case <img alt="\min_{|x|^2=1} J(x) = \tfrac{1}{2} \lambda_{min}(M + M^\top)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmin_%7B%7Cx%7C%5E2%3D1%7D+J%28x%29+%3D+%5Ctfrac%7B1%7D%7B2%7D+%5Clambda_%7Bmin%7D%28M+%2B+M%5E%5Ctop%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\min_{|x|^2=1} J(x) = \tfrac{1}{2} \lambda_{min}(M + M^\top)"/>. But the matrix <img alt="A=\tfrac{1}{2}(M+M^\top)" class="latex" src="https://s0.wp.com/latex.php?latex=A%3D%5Ctfrac%7B1%7D%7B2%7D%28M%2BM%5E%5Ctop%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A=\tfrac{1}{2}(M+M^\top)"/>‘s non diagonal entries are distributed like <img alt="N(0,\tfrac{1}{2n})" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C%5Ctfrac%7B1%7D%7B2n%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,\tfrac{1}{2n})"/> and the diagonal entries like <img alt="N(0,\tfrac{1}{n})" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C%5Ctfrac%7B1%7D%7Bn%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,\tfrac{1}{n})"/> which means that <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A"/> is distributed as <img alt="\tfrac{1}{\sqrt{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\tfrac{1}{\sqrt{2}}"/> times a random matrix <img alt="B" class="latex" src="https://s0.wp.com/latex.php?latex=B&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="B"/> from the <em>Gaussian Orthogonal Ensemble (GOE)</em> where <img alt="B_{i,j} \sim N(0,1/n)" class="latex" src="https://s0.wp.com/latex.php?latex=B_%7Bi%2Cj%7D+%5Csim+N%280%2C1%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="B_{i,j} \sim N(0,1/n)"/> for off diagonal entries and <img alt="B_{i,i} \sim N(0,2/n)" class="latex" src="https://s0.wp.com/latex.php?latex=B_%7Bi%2Ci%7D+%5Csim+N%280%2C2%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="B_{i,i} \sim N(0,2/n)"/> for diagonal entries. The minimum eigenvalue of such matrices is known to be <img alt="-2\pm o(1)" class="latex" src="https://s0.wp.com/latex.php?latex=-2%5Cpm+o%281%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-2\pm o(1)"/> with high probability.<br/></li><li>If <img alt="\gamma = (0,\ldots,1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma+%3D+%280%2C%5Cldots%2C1%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma = (0,\ldots,1)"/> (i.e. <img alt="J(x) = T \cdot x^{\otimes d}" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%3D+T+%5Ccdot+x%5E%7B%5Cotimes+d%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) = T \cdot x^{\otimes d}"/> for a random <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d"/>-tensor <img alt="T" class="latex" src="https://s0.wp.com/latex.php?latex=T&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="T"/>) then <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> does not hold. Indeed, in this case the value <img alt="-\int_0^1 \sqrt{\nu''(q)} dq = - \int_0^1 \sqrt{d (d-1)q^{d-2}} dq = - \sqrt{d(d-1)}\tfrac{1}{d/2-1} \approx -2" class="latex" src="https://s0.wp.com/latex.php?latex=-%5Cint_0%5E1+%5Csqrt%7B%5Cnu%27%27%28q%29%7D+dq+%3D+-+%5Cint_0%5E1+%5Csqrt%7Bd+%28d-1%29q%5E%7Bd-2%7D%7D+dq+%3D+-+%5Csqrt%7Bd%28d-1%29%7D%5Ctfrac%7B1%7D%7Bd%2F2-1%7D+%5Capprox+-2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\int_0^1 \sqrt{\nu''(q)} dq = - \int_0^1 \sqrt{d (d-1)q^{d-2}} dq = - \sqrt{d(d-1)}\tfrac{1}{d/2-1} \approx -2"/> for large <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d"/>. However I believe (though didn’t find the reference) that the actual minimum tends to <img alt="-\infty" class="latex" src="https://s0.wp.com/latex.php?latex=-%5Cinfty&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\infty"/> with <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d"/>. </li></ul>



<p>While the particular form of the property <img alt="P(\gamma)" class="latex" src="https://s0.wp.com/latex.php?latex=P%28%5Cgamma%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="P(\gamma)"/> is not important for this post, there are several equivalent ways to state it, see Proposition 1 in <a href="https://arxiv.org/abs/1812.04588">Subag’s paper</a>. One of them is that the function <img alt="\nu''(t)^{-1/2}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnu%27%27%28t%29%5E%7B-1%2F2%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nu''(t)^{-1/2}"/> (note the negative exponent) is concave on the interval <img alt="(0,1]" class="latex" src="https://s0.wp.com/latex.php?latex=%280%2C1%5D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="(0,1]"/>.<br/>It can be shown that this condition cannot be satisfied if <img alt="\gamma_2 = 0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_2+%3D+0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_2 = 0"/>, and that for every setting of <img alt="\gamma_3,\ldots,\gamma_d" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_3%2C%5Cldots%2C%5Cgamma_d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_3,\ldots,\gamma_d"/>, if <img alt="\gamma_2" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_2"/> is large enough then it will be satisfied.</p>



<p>The central result of Subag’s paper is the following:</p>



<p><strong>Theorem:</strong> For every <img alt="\epsilon&gt;0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cepsilon%3E0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\epsilon&gt;0"/>, there is a polynomial-time algorithm <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A"/> such that on input random <img alt="J" class="latex" src="https://s0.wp.com/latex.php?latex=J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J"/> chosen according to the distribution above, with high probability <img alt="A(J)=x" class="latex" src="https://s0.wp.com/latex.php?latex=A%28J%29%3Dx&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="A(J)=x"/> such that <img alt="J(x) \leq -\int_0^1 \sqrt{\nu''(q)} dq + \epsilon" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%5Cleq+-%5Cint_0%5E1+%5Csqrt%7B%5Cnu%27%27%28q%29%7D+dq+%2B+%5Cepsilon&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) \leq -\int_0^1 \sqrt{\nu''(q)} dq + \epsilon"/>.</p>



<p>The algorithm itself, and the idea behind the analysis are quite simple. In some sense it’s the second algorithm you would think of (or at least the second algorithm according to some ordering).</p>



<p>The first algorithm one would think of is gradient descent. We start at some initial point <img alt="x^0" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^0"/>, and repeat the transformation <img alt="x^{t+1} \leftarrow x^t - \eta \nabla J(x^t)" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7Bt%2B1%7D+%5Cleftarrow+x%5Et+-+%5Ceta+%5Cnabla+J%28x%5Et%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{t+1} \leftarrow x^t - \eta \nabla J(x^t)"/> for some small <img alt="\eta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\eta"/> (and normalizing the norm). Unfortunately, we will generally run into <em>saddle points</em> when we do so, with the gradient being zero. In fact, for simplicity, below we will always make the pessimistic assumption that we are constantly on a saddle point. (This assumption turns out to be true in the actual algorithm, and if it was not then we can always use gradient descent until we hit a saddle.)</p>



<p>The second algorithm one could think of would be to use the Hessian instead of the gradient. That is, repeat the transformation <img alt="x^{t+1} \leftarrow x^t - \eta u" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7Bt%2B1%7D+%5Cleftarrow+x%5Et+-+%5Ceta+u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{t+1} \leftarrow x^t - \eta u"/> where <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/> is the minimal eigenvector of <img alt="\nabla^2 J(x^t)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J%28x%5Et%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J(x^t)"/> (i.e., the Hessian matrix <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="H"/> such that <img alt="H_{i,j} = \tfrac{\partial J(x^t)}{\partial x_i \partial x_j}" class="latex" src="https://s0.wp.com/latex.php?latex=H_%7Bi%2Cj%7D+%3D+%5Ctfrac%7B%5Cpartial+J%28x%5Et%29%7D%7B%5Cpartial+x_i+%5Cpartial+x_j%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="H_{i,j} = \tfrac{\partial J(x^t)}{\partial x_i \partial x_j}"/> ). By the Taylor approximation <img alt="J(x - \eta u) \approx J(x) - \eta \nabla J(x) \cdot u + \tfrac{1}{2} \eta^2 u^\top \nabla^2 J(x) u" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x+-+%5Ceta+u%29+%5Capprox+J%28x%29+-+%5Ceta+%5Cnabla+J%28x%29+%5Ccdot+u+%2B+%5Ctfrac%7B1%7D%7B2%7D+%5Ceta%5E2+u%5E%5Ctop+%5Cnabla%5E2+J%28x%29+u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x - \eta u) \approx J(x) - \eta \nabla J(x) \cdot u + \tfrac{1}{2} \eta^2 u^\top \nabla^2 J(x) u"/> (and since we assume the gradient is zero) the change in the objective will be roughly <img alt="\tfrac{1}{2} \eta^2 \lambda_{min}(\nabla^2 J(x^t))" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctfrac%7B1%7D%7B2%7D+%5Ceta%5E2+%5Clambda_%7Bmin%7D%28%5Cnabla%5E2+J%28x%5Et%29%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\tfrac{1}{2} \eta^2 \lambda_{min}(\nabla^2 J(x^t))"/>. (Because we assume the gradient vanishes, it will not make a difference whether we update with <img alt="-\eta u " class="latex" src="https://s0.wp.com/latex.php?latex=-%5Ceta+u+&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\eta u "/> or <img alt="+\eta u" class="latex" src="https://s0.wp.com/latex.php?latex=%2B%5Ceta+u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="+\eta u"/>, but we use <img alt="-\eta" class="latex" src="https://s0.wp.com/latex.php?latex=-%5Ceta&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-\eta"/> for consistency with gradient descent.)</p>



<p>The above approach is promising, but we still need some control over the norm. The way that Subag handles this is that he starts with <img alt="x^0 = 0" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E0+%3D+0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^0 = 0"/>, and at each step takes a step in an orthogonal direction, and so within <img alt="1/\eta^2" class="latex" src="https://s0.wp.com/latex.php?latex=1%2F%5Ceta%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1/\eta^2"/> steps he will get to a unit norm vector. That is, the algorithm is as follows:</p>



<p><strong>Algorithm:</strong></p>



<p><strong>Input:</strong> <img alt="J:\mathbb{R}^n \rightarrow \mathbb{R}" class="latex" src="https://s0.wp.com/latex.php?latex=J%3A%5Cmathbb%7BR%7D%5En+%5Crightarrow+%5Cmathbb%7BR%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J:\mathbb{R}^n \rightarrow \mathbb{R}"/>.</p>



<p><strong>Goal:</strong> Find unit <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> approximately minimizing <img alt="J(x)" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x)"/></p>



<ol><li>Initialize <img alt="x^0 = 0^n" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E0+%3D+0%5En&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^0 = 0^n"/></li><li>For <img alt="t=0,\ldots,1/\eta^2-1" class="latex" src="https://s0.wp.com/latex.php?latex=t%3D0%2C%5Cldots%2C1%2F%5Ceta%5E2-1&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="t=0,\ldots,1/\eta^2-1"/>: i. Let <img alt="u^t" class="latex" src="https://s0.wp.com/latex.php?latex=u%5Et&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u^t"/> be a unit vector <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/> such that <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/> is orthogonal to <img alt="u^0,\ldots,u^{t-1}" class="latex" src="https://s0.wp.com/latex.php?latex=u%5E0%2C%5Cldots%2Cu%5E%7Bt-1%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u^0,\ldots,u^{t-1}"/> and <img alt="u^\top \nabla^2 J(x^t) u \approx \lambda_{min}(\nabla^2 J(x^t))" class="latex" src="https://s0.wp.com/latex.php?latex=u%5E%5Ctop+%5Cnabla%5E2+J%28x%5Et%29+u+%5Capprox+%5Clambda_%7Bmin%7D%28%5Cnabla%5E2+J%28x%5Et%29%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u^\top \nabla^2 J(x^t) u \approx \lambda_{min}(\nabla^2 J(x^t))"/>. (Since the bottom eigenspace of <img alt="\nabla^2 J(x^t)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J%28x%5Et%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J(x^t)"/> has large dimention, we can find a vector <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/> that is not only nearly minimal eigenvector but also orthogonal to all prior ones. Also, as mentioned, we assume that <img alt="\nabla \cdot u \approx 0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla+%5Ccdot+u+%5Capprox+0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla \cdot u \approx 0"/>.) ii. Set <img alt="x^{t+1} \leftarrow x^t - \eta u^t" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7Bt%2B1%7D+%5Cleftarrow+x%5Et+-+%5Ceta+u%5Et&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{t+1} \leftarrow x^t - \eta u^t"/>.</li><li>Output <img alt="x^{1/\eta^2} = -\eta\sum_{t=0}^{1/\eta^2-1} u^t" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7B1%2F%5Ceta%5E2%7D+%3D+-%5Ceta%5Csum_%7Bt%3D0%7D%5E%7B1%2F%5Ceta%5E2-1%7D+u%5Et&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{1/\eta^2} = -\eta\sum_{t=0}^{1/\eta^2-1} u^t"/></li></ol>



<p>(The fact that the number of steps is <img alt="1/\eta^2" class="latex" src="https://s0.wp.com/latex.php?latex=1%2F%5Ceta%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1/\eta^2"/> and not <img alt="1/\eta" class="latex" src="https://s0.wp.com/latex.php?latex=1%2F%5Ceta&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1/\eta"/> is absolutely crucial for the algorithm’s success; without it we would not have been able to use the second order contribution that arise from the Hessian.)</p>



<p>If we define <img alt="\lambda_t" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clambda_t&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\lambda_t"/> to be the minimum eigenvalue at time <img alt="t" class="latex" src="https://s0.wp.com/latex.php?latex=t&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="t"/>, we get that the final objective value achieved by the algorithm satisfies</p>



<p><img alt="VAL = \sum_{t=1}^{1/\eta^2} \tfrac{1}{2} \eta^2 \lambda_t" class="latex" src="https://s0.wp.com/latex.php?latex=VAL+%3D+%5Csum_%7Bt%3D1%7D%5E%7B1%2F%5Ceta%5E2%7D+%5Ctfrac%7B1%7D%7B2%7D+%5Ceta%5E2+%5Clambda_t&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="VAL = \sum_{t=1}^{1/\eta^2} \tfrac{1}{2} \eta^2 \lambda_t"/></p>



<p>Now due to rotation invariance, the distribution of <img alt="\nabla^2 J" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J"/> at the point <img alt="x^t" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Et&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^t"/> is the same as <img alt="\nabla^2J" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2J"/> at the point <img alt="(|x^t|,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%28%7Cx%5Et%7C%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="(|x^t|,0,\ldots,0)"/>. Using concentration of measure arguments, it can be shown that the minimum eigenvalue of <img alt="\nabla^2 J(x^t)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J%28x%5Et%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J(x^t)"/> will be close with high probability to the minimum eigenvalue of <img alt="\nabla^2 J(|x^t|,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J%28%7Cx%5Et%7C%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J(|x^t|,0,\ldots,0)"/>.<br/>Since <img alt="\|x^t\|^2 = \eta^2 t" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7Cx%5Et%5C%7C%5E2+%3D+%5Ceta%5E2+t&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\|x^t\|^2 = \eta^2 t"/> we can write</p>



<p><img alt="VAL = \sum_{t=1}^{1/\eta^2} \tfrac{1}{2} \eta^2 \lambda(\sqrt{\eta^2 t})" class="latex" src="https://s0.wp.com/latex.php?latex=VAL+%3D+%5Csum_%7Bt%3D1%7D%5E%7B1%2F%5Ceta%5E2%7D+%5Ctfrac%7B1%7D%7B2%7D+%5Ceta%5E2+%5Clambda%28%5Csqrt%7B%5Ceta%5E2+t%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="VAL = \sum_{t=1}^{1/\eta^2} \tfrac{1}{2} \eta^2 \lambda(\sqrt{\eta^2 t})"/></p>



<p>where <img alt="\lambda(q)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clambda%28q%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\lambda(q)"/> is the minimum eigenvalue of <img alt="\nabla^2 J" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J"/> at the point <img alt="(q,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%28q%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="(q,0,\ldots,0)"/>.<br/>Taking <img alt="\eta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\eta"/> to zero, we get that (approximately) the value of the solution output by the algorithm will satisfy</p>



<p><img alt="VAL = \int_0^1 \tfrac{1}{2} \lambda(\sqrt{q}) dq" class="latex" src="https://s0.wp.com/latex.php?latex=VAL+%3D+%5Cint_0%5E1+%5Ctfrac%7B1%7D%7B2%7D+%5Clambda%28%5Csqrt%7Bq%7D%29+dq&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="VAL = \int_0^1 \tfrac{1}{2} \lambda(\sqrt{q}) dq"/></p>



<p>and hence the result will be completed by showing that</p>



<p><img alt="\lambda(\sqrt{q}) = 2 \sqrt{\nu''(q)}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clambda%28%5Csqrt%7Bq%7D%29+%3D+2+%5Csqrt%7B%5Cnu%27%27%28q%29%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\lambda(\sqrt{q}) = 2 \sqrt{\nu''(q)}"/></p>



<p>To do this, let’s recall the definition of <img alt="J" class="latex" src="https://s0.wp.com/latex.php?latex=J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J"/>:</p>



<p><img alt="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3} + \cdots + \gamma_d J^d \cdot x^{\otimes p}" class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%3D+%5Cgamma_2+J%5E2+%5Ccdot+x%5E%7B%5Cotimes+2%7D+%2B+%5Cgamma_3+J%5E3+%5Ccdot+x%5E%7B%5Cotimes+3%7D+%2B+%5Ccdots+%2B+%5Cgamma_d+J%5Ed+%5Ccdot+x%5E%7B%5Cotimes+p%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3} + \cdots + \gamma_d J^d \cdot x^{\otimes p}"/> where for every <img alt="p \in {2,\ldots, d }" class="latex" src="https://s0.wp.com/latex.php?latex=p+%5Cin+%7B2%2C%5Cldots%2C+d+%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p \in {2,\ldots, d }"/>, <img alt="J_p" class="latex" src="https://s0.wp.com/latex.php?latex=J_p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J_p"/> is a random tensor of order <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p"/> whose <img alt="n^p" class="latex" src="https://s0.wp.com/latex.php?latex=n%5Ep&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n^p"/> coefficients are all chosen i.i.d in <img alt="N(0,1/n)" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C1%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,1/n)"/>.</p>



<p>For simplicity, let’s assume that <img alt="d=3" class="latex" src="https://s0.wp.com/latex.php?latex=d%3D3&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d=3"/> and hence</p>



<p><img alt="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3}\;." class="latex" src="https://s0.wp.com/latex.php?latex=J%28x%29+%3D+%5Cgamma_2+J%5E2+%5Ccdot+x%5E%7B%5Cotimes+2%7D+%2B+%5Cgamma_3+J%5E3+%5Ccdot+x%5E%7B%5Cotimes+3%7D%5C%3B.&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J(x) = \gamma_2 J^2 \cdot x^{\otimes 2} + \gamma_3 J^3 \cdot x^{\otimes 3}\;."/></p>



<p>(The calculations in the general case are similar)</p>



<p>The <img alt="i,j" class="latex" src="https://s0.wp.com/latex.php?latex=i%2Cj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i,j"/> entry of <img alt="\nabla^2 J(\sqrt{q},0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2+J%28%5Csqrt%7Bq%7D%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2 J(\sqrt{q},0,\ldots,0)"/> equals <img alt="\tfrac{\partial J(q,0,\ldots,0)}{\partial x_i \partial x_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctfrac%7B%5Cpartial+J%28q%2C0%2C%5Cldots%2C0%29%7D%7B%5Cpartial+x_i+%5Cpartial+x_j%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\tfrac{\partial J(q,0,\ldots,0)}{\partial x_i \partial x_j}"/>. The contribution of the <img alt="J^2" class="latex" src="https://s0.wp.com/latex.php?latex=J%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J^2"/> component to this term only arises from the terms corresponding to either <img alt="x_ix_j" class="latex" src="https://s0.wp.com/latex.php?latex=x_ix_j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_ix_j"/> or <img alt="x_jx_i" class="latex" src="https://s0.wp.com/latex.php?latex=x_jx_i&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_jx_i"/> and hence for <img alt="i\neq j" class="latex" src="https://s0.wp.com/latex.php?latex=i%5Cneq+j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i\neq j"/> it equals <img alt="\gamma_2 (J_{i,j}+J_{j,i})" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_2+%28J_%7Bi%2Cj%7D%2BJ_%7Bj%2Ci%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_2 (J_{i,j}+J_{j,i})"/> which is distributed like <img alt="\gamma_2 N(0,\tfrac{2}{n}) = N(0, \tfrac{2\gamma_2^2}{n})" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_2+N%280%2C%5Ctfrac%7B2%7D%7Bn%7D%29+%3D+N%280%2C+%5Ctfrac%7B2%5Cgamma_2%5E2%7D%7Bn%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_2 N(0,\tfrac{2}{n}) = N(0, \tfrac{2\gamma_2^2}{n})"/>. For <img alt="i=j" class="latex" src="https://s0.wp.com/latex.php?latex=i%3Dj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i=j"/>, since <img alt="(x_i^2)'' = 2" class="latex" src="https://s0.wp.com/latex.php?latex=%28x_i%5E2%29%27%27+%3D+2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="(x_i^2)'' = 2"/>, the contributioon equals <img alt="2 \gamma_2 J_{i,i}" class="latex" src="https://s0.wp.com/latex.php?latex=2+%5Cgamma_2+J_%7Bi%2Ci%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="2 \gamma_2 J_{i,i}"/> which is distributed like <img alt="N(0,\tfrac{4\gamma_2^2}{n})" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C%5Ctfrac%7B4%5Cgamma_2%5E2%7D%7Bn%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,\tfrac{4\gamma_2^2}{n})"/>.</p>



<p>The contribution from the <img alt="J^3" class="latex" src="https://s0.wp.com/latex.php?latex=J%5E3&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J^3"/> component comes (in the case <img alt="i\neq j" class="latex" src="https://s0.wp.com/latex.php?latex=i%5Cneq+j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i\neq j"/>) from all the <img alt="6=3!" class="latex" src="https://s0.wp.com/latex.php?latex=6%3D3%21&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="6=3!"/> terms involving <img alt="1,i,j" class="latex" src="https://s0.wp.com/latex.php?latex=1%2Ci%2Cj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1,i,j"/> that is, <img alt="\gamma_3 (J_{1,i,j}\sqrt{q} + J_{1,j,i}\sqrt{q} + J_{i,1,j}\sqrt{q}+J_{j,1,i}\sqrt{q}+J_{i,j,1}\sqrt{q}+J_{j,i,1})\sqrt{q}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_3+%28J_%7B1%2Ci%2Cj%7D%5Csqrt%7Bq%7D+%2B+J_%7B1%2Cj%2Ci%7D%5Csqrt%7Bq%7D+%2B+J_%7Bi%2C1%2Cj%7D%5Csqrt%7Bq%7D%2BJ_%7Bj%2C1%2Ci%7D%5Csqrt%7Bq%7D%2BJ_%7Bi%2Cj%2C1%7D%5Csqrt%7Bq%7D%2BJ_%7Bj%2Ci%2C1%7D%29%5Csqrt%7Bq%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_3 (J_{1,i,j}\sqrt{q} + J_{1,j,i}\sqrt{q} + J_{i,1,j}\sqrt{q}+J_{j,1,i}\sqrt{q}+J_{i,j,1}\sqrt{q}+J_{j,i,1})\sqrt{q}"/> which is distributed like <img alt="\gamma_3 N(0, \tfrac{6}{n}) = N(0, \tfrac{6\gamma_3^2 q}{n})" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cgamma_3+N%280%2C+%5Ctfrac%7B6%7D%7Bn%7D%29+%3D+N%280%2C+%5Ctfrac%7B6%5Cgamma_3%5E2+q%7D%7Bn%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\gamma_3 N(0, \tfrac{6}{n}) = N(0, \tfrac{6\gamma_3^2 q}{n})"/>. For <img alt="i=j" class="latex" src="https://s0.wp.com/latex.php?latex=i%3Dj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i=j"/> the contribution will be from the <img alt="3" class="latex" src="https://s0.wp.com/latex.php?latex=3&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="3"/> terms involving <img alt="1,i" class="latex" src="https://s0.wp.com/latex.php?latex=1%2Ci&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="1,i"/>, with each yielding a contribution of <img alt="2\sqrt{q}" class="latex" src="https://s0.wp.com/latex.php?latex=2%5Csqrt%7Bq%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="2\sqrt{q}"/>, and hence the result will be distributed like <img alt="N(0,\tfrac{12 \gamma_3^2 q}{n})" class="latex" src="https://s0.wp.com/latex.php?latex=N%280%2C%5Ctfrac%7B12+%5Cgamma_3%5E2+q%7D%7Bn%7D%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="N(0,\tfrac{12 \gamma_3^2 q}{n})"/>.</p>



<p>(More generally, for larger <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p"/>, the number of terms for distinct <img alt="i,j" class="latex" src="https://s0.wp.com/latex.php?latex=i%2Cj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i,j"/> is <img alt="p(p-1)" class="latex" src="https://s0.wp.com/latex.php?latex=p%28p-1%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p(p-1)"/>, each contributing a Gaussian of standard deviation <img alt="(\sqrt{q})^{p-2}\gamma_p/\sqrt{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Csqrt%7Bq%7D%29%5E%7Bp-2%7D%5Cgamma_p%2F%5Csqrt%7Bn%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="(\sqrt{q})^{p-2}\gamma_p/\sqrt{n}"/>, while for <img alt="i=j" class="latex" src="https://s0.wp.com/latex.php?latex=i%3Dj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i=j"/> we have <img alt="p(p-1)/2" class="latex" src="https://s0.wp.com/latex.php?latex=p%28p-1%29%2F2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p(p-1)/2"/> terms, each contributing a Gaussian of standard deviation <img alt="2(\sqrt{q})^{p-2}\gamma_p/\sqrt{n}" class="latex" src="https://s0.wp.com/latex.php?latex=2%28%5Csqrt%7Bq%7D%29%5E%7Bp-2%7D%5Cgamma_p%2F%5Csqrt%7Bn%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="2(\sqrt{q})^{p-2}\gamma_p/\sqrt{n}"/>.)</p>



<p>Since the sum of Gaussians is a Gaussian we get that <img alt="\nabla^2J(q,0,\ldots,0){i,j}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2J%28q%2C0%2C%5Cldots%2C0%29%7Bi%2Cj%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2J(q,0,\ldots,0){i,j}"/> is distributed like a Gaussian with variance <img alt="\sum \gamma_p^2 p(p-1)q^{p-2}/n = \nu''(q)/n" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum+%5Cgamma_p%5E2+p%28p-1%29q%5E%7Bp-2%7D%2Fn+%3D+%5Cnu%27%27%28q%29%2Fn&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\sum \gamma_p^2 p(p-1)q^{p-2}/n = \nu''(q)/n"/> for <img alt="i\neq j" class="latex" src="https://s0.wp.com/latex.php?latex=i%5Cneq+j&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i\neq j"/>, and twice that for <img alt="i=j" class="latex" src="https://s0.wp.com/latex.php?latex=i%3Dj&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="i=j"/>. This means that the minimum eigenvalue of <img alt="\nabla^2J(q,0,\ldots,0)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cnabla%5E2J%28q%2C0%2C%5Cldots%2C0%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\nabla^2J(q,0,\ldots,0)"/> equals <img alt="\sqrt{\nu''(q)}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csqrt%7B%5Cnu%27%27%28q%29%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\sqrt{\nu''(q)}"/> times the minimum eigenvalue of a random matrix <img alt="M" class="latex" src="https://s0.wp.com/latex.php?latex=M&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="M"/> from the Gaussian Orthogonal Ensemble (i.e. <img alt="M" class="latex" src="https://s0.wp.com/latex.php?latex=M&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="M"/> is sampled via <img alt="M{i,j} \sim N(0,1/n)" class="latex" src="https://s0.wp.com/latex.php?latex=M%7Bi%2Cj%7D+%5Csim+N%280%2C1%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="M{i,j} \sim N(0,1/n)"/>, <img alt="M_{i,i} \sim N(0,2/n)" class="latex" src="https://s0.wp.com/latex.php?latex=M_%7Bi%2Ci%7D+%5Csim+N%280%2C2%2Fn%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="M_{i,i} \sim N(0,2/n)"/>). As mentioned above, it is known that this minimum eigenvalue is <img alt="-2+o(1)" class="latex" src="https://s0.wp.com/latex.php?latex=-2%2Bo%281%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="-2+o(1)"/>, and in fact by the semi-circle law, for every <img alt="\epsilon&gt;0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cepsilon%3E0&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\epsilon&gt;0"/>, the number of eigenvalues of value <img alt="\leq -2+\epsilon" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleq+-2%2B%5Cepsilon&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\leq -2+\epsilon"/> is <img alt="\Omega(n)" class="latex" src="https://s0.wp.com/latex.php?latex=%5COmega%28n%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\Omega(n)"/>, and so we can also pick one that is orthogonal to the previous directions. QED</p>



<h2>Full replica symmetry breaking and ultra-metricity</h2>



<p>The point of this blog post is that at least in the “mixed <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="p"/> spin” case considered by Subag, we can understand what the algorithm does and the value that it achieves without needing to go into the theory of the geometry of the solution space, but let me briefly discuss some of this theory. (As I mentioned, I am still reading through this, and so this part should be read with big grains of salt.)</p>



<p>The key object studied in this line of work is the probability distribution <img alt="\xi" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cxi&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\xi"/> of the dot product <img alt="\langle x,x' \rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clangle+x%2Cx%27+%5Crangle&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\langle x,x' \rangle"/> for <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x"/> and <img alt="x'" class="latex" src="https://s0.wp.com/latex.php?latex=x%27&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x'"/> sampled independently from the Gibbs distribution induced by <img alt="J" class="latex" src="https://s0.wp.com/latex.php?latex=J&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="J"/>. (This probability distribution will depend on the number of dimensions <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n"/>, but we consider the case that <img alt="n \rightarrow \infty" class="latex" src="https://s0.wp.com/latex.php?latex=n+%5Crightarrow+%5Cinfty&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="n \rightarrow \infty"/>.)</p>



<p>Intuitively, there are several ways this probability distribution can behave, depending on how the solution space is “clustered”:</p>



<ul><li>If all solutions are inside a single “cluster”, in the sense that they are all of the form <img alt="x = x_* + e" class="latex" src="https://s0.wp.com/latex.php?latex=x+%3D+x_%2A+%2B+e&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x = x_* + e"/> where <img alt="x_*" class="latex" src="https://s0.wp.com/latex.php?latex=x_%2A&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_*"/> is the “center” of the cluster and <img alt="e" class="latex" src="https://s0.wp.com/latex.php?latex=e&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="e"/> is some random vector, then <img alt="\langle x,x' \rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clangle+x%2Cx%27+%5Crangle&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\langle x,x' \rangle"/> will be concentrated on the point <img alt="\| x_*\|^2" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7C+x_%2A%5C%7C%5E2&amp;bg=eeeeee&amp;fg=666666&amp;s=0&amp;c=20201002" title="\| x_*\|^2"/>.<br/></li><li>If the solutions are inside a finite number <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="k"/> of clusters, with centers <img alt="x_1,\ldots,x_k" class="latex" src="https://s0.wp.com/latex.php?latex=x_1%2C%5Cldots%2Cx_k&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_1,\ldots,x_k"/>, then the support of the distribution will be on the <img alt="k^2" class="latex" src="https://s0.wp.com/latex.php?latex=k%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="k^2"/> points <img alt="\{ \langle x_i,x_j \rangle \}_{i,j \in [k]}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B+%5Clangle+x_i%2Cx_j+%5Crangle+%5C%7D_%7Bi%2Cj+%5Cin+%5Bk%5D%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\{ \langle x_i,x_j \rangle \}_{i,j \in [k]}"/>.<br/></li><li>Suppose that the solutions are inside a <em>hierarchy</em> of clusters. That is, suppose we have some rooted tree <img alt="\mathcal{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathcal%7BT%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\mathcal{T}"/> (e.g., think of a depth <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d"/> full binary tree), and we associate a vector <img alt="x_v" class="latex" src="https://s0.wp.com/latex.php?latex=x_v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_v"/> with every vertex <img alt="v" class="latex" src="https://s0.wp.com/latex.php?latex=v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="v"/> of <img alt="\mathcal{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathcal%7BT%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\mathcal{T}"/>, with the property that <img alt="x_v" class="latex" src="https://s0.wp.com/latex.php?latex=x_v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_v"/> is orthogonal to all vectors associated with <img alt="v" class="latex" src="https://s0.wp.com/latex.php?latex=v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="v"/>‘s ancestors on the tree. Now imagine that the distribution is obtained by taking a random leaf <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/> of <img alt="\mathcal{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathcal%7BT%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\mathcal{T}"/> and outputting <img alt="\sum x_v" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum+x_v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\sum x_v"/> for all vertices <img alt="v" class="latex" src="https://s0.wp.com/latex.php?latex=v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="v"/> on the path from the root to <img alt="u" class="latex" src="https://s0.wp.com/latex.php?latex=u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="u"/>. In such a case the dot product of <img alt="x_u" class="latex" src="https://s0.wp.com/latex.php?latex=x_u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_u"/> and <img alt="x_{u'}" class="latex" src="https://s0.wp.com/latex.php?latex=x_%7Bu%27%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_{u'}"/> will be <img alt="\sum_v \|x_v\|^2" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_v+%5C%7Cx_v%5C%7C%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\sum_v \|x_v\|^2"/> taken over all the common ancestors of <img alt="v" class="latex" src="https://s0.wp.com/latex.php?latex=v&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="v"/>. As the dimension and depth of the tree goes to infinity, the distribution over dot product can have continuous support, and it is this setting (specifically when the support is an interval <img alt="[0,q)" class="latex" src="https://s0.wp.com/latex.php?latex=%5B0%2Cq%29&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="[0,q)"/>) that is known as <em>full replica symmetry breaking</em>. Because the dot product is determined by common ancestor, for every three vectors <img alt="x_u,x_v,x_w" class="latex" src="https://s0.wp.com/latex.php?latex=x_u%2Cx_v%2Cx_w&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x_u,x_v,x_w"/> in the support of the distribution <img alt="\langle x_v,x_w \rangle \geq \min \{ \langle x_u,x_v \rangle, \langle x_u,x_w \rangle \}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clangle+x_v%2Cx_w+%5Crangle+%5Cgeq+%5Cmin+%5C%7B+%5Clangle+x_u%2Cx_v+%5Crangle%2C+%5Clangle+x_u%2Cx_w+%5Crangle+%5C%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\langle x_v,x_w \rangle \geq \min \{ \langle x_u,x_v \rangle, \langle x_u,x_w \rangle \}"/> or <img alt="\| x_v - x_w \| \leq \max \{ \|x_u - x_v \|, \|x_u -x_w \|\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7C+x_v+-+x_w+%5C%7C+%5Cleq+%5Cmax+%5C%7B+%5C%7Cx_u+-+x_v+%5C%7C%2C+%5C%7Cx_u+-x_w+%5C%7C%5C%7D&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="\| x_v - x_w \| \leq \max \{ \|x_u - x_v \|, \|x_u -x_w \|\}"/>. It is this condition that known as <em>ultra-metricity</em>.</li></ul>



<p>In Subag’s algorithm, as mentioned above, at any given step we could make an update of either <img alt="x^{t+1} \leftarrow x^t - \eta u" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7Bt%2B1%7D+%5Cleftarrow+x%5Et+-+%5Ceta+u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{t+1} \leftarrow x^t - \eta u"/> or <img alt="x^{t+1} \leftarrow x^t + \eta u" class="latex" src="https://s0.wp.com/latex.php?latex=x%5E%7Bt%2B1%7D+%5Cleftarrow+x%5Et+%2B+%5Ceta+u&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="x^{t+1} \leftarrow x^t + \eta u"/>. If we think of all the possible choices for the signs in the <img alt="d=1/\eta^2" class="latex" src="https://s0.wp.com/latex.php?latex=d%3D1%2F%5Ceta%5E2&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="d=1/\eta^2"/> of the algorithms, we see that the algorithm does not only produce a single vector but actually <img alt="2^d" class="latex" src="https://s0.wp.com/latex.php?latex=2%5Ed&amp;bg=ffffff&amp;fg=666666&amp;s=0&amp;c=20201002" title="2^d"/> such vectors that are arranged in an ultrametric tree just as above. Indeed, this ultrametric structure was the inspiration for the algorithm and is the reason why the algorithm produces the correct result precisely in the full replica symmetry breaking regime.</p>



<p><strong>Acknowledgements:</strong> Thanks to Tselil Schramm for helpful comments.</p></div>
    </content>
    <updated>2020-10-23T19:01:17Z</updated>
    <published>2020-10-23T19:01:17Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-10-28T19:21:21Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/22/tenure-track-assistant-professor-at-rutgers-university-apply-by-january-15-2021/</id>
    <link href="https://cstheory-jobs.org/2020/10/22/tenure-track-assistant-professor-at-rutgers-university-apply-by-january-15-2021/" rel="alternate" type="text/html"/>
    <title>Tenure-Track Assistant Professor at Rutgers University (apply by January 15, 2021)</title>
    <summary>The Computer Science Department at Rutgers University invites applications for a Tenure-Track Assistant Professor position in Theoretical Computer Science. We welcome candidates working on computational complexity theory but outstanding applicants in all areas of TCS will be considered. Website: http://jobs.rutgers.edu/postings/120527 Email: martin@farach-colton.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Computer Science Department at Rutgers University invites applications for a Tenure-Track Assistant Professor position in Theoretical Computer Science. We welcome candidates working on computational complexity theory but outstanding applicants in all areas of TCS will be considered.</p>
<p>Website: <a href="http://jobs.rutgers.edu/postings/120527">http://jobs.rutgers.edu/postings/120527</a><br/>
Email: martin@farach-colton.com</p></div>
    </content>
    <updated>2020-10-22T18:10:24Z</updated>
    <published>2020-10-22T18:10:24Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/22/professorship-chair-at-tu-hamburg-apply-by-november-29-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/22/professorship-chair-at-tu-hamburg-apply-by-november-29-2020/" rel="alternate" type="text/html"/>
    <title>Professorship/Chair at TU Hamburg (apply by November 29, 2020)</title>
    <summary>TU Hamburg invites applications for a full professorship (chair) in Hardware-aware Combinatorial Optimization, at its School of Electrical Engineering, Computer Science and Mathematics. Our goal is to establish a group that excels at developing and implementing state-of-the-art optimization techniques on modern computing architectures at hardware level. The chair is endowed by Fujitsu. Website: https://stellenportal.tuhh.de/jobposting/4e98d49c7dee223203482d1e1316990eac777fe1 Email: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>TU Hamburg invites applications for a full professorship (chair) in Hardware-aware Combinatorial Optimization, at its School of Electrical Engineering, Computer Science and Mathematics. Our goal is to establish a group that excels at developing and implementing state-of-the-art optimization techniques on modern computing architectures at hardware level. The chair is endowed by Fujitsu.</p>
<p>Website: <a href="https://stellenportal.tuhh.de/jobposting/4e98d49c7dee223203482d1e1316990eac777fe1">https://stellenportal.tuhh.de/jobposting/4e98d49c7dee223203482d1e1316990eac777fe1</a><br/>
Email: berufungen@tuhh.de</p></div>
    </content>
    <updated>2020-10-22T16:13:33Z</updated>
    <published>2020-10-22T16:13:33Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17694</id>
    <link href="https://rjlipton.wordpress.com/2020/10/22/vaccines-are-not-developing/" rel="alternate" type="text/html"/>
    <title>Vaccines are Not Developing</title>
    <summary>The search for a vaccine—is not a development. Edward Jenner was an English physician who created the first vaccine, one for smallpox. In 1798 he used the weak cox-pox to fool our immune system to create a protection against the deadly small-pox. Jenner is said to have saved more lives than any other human. Today […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><span style="color: #0044cc;"><br/>
<em>The search for a vaccine—is not a development.</em><br/>
</span></p>
<p>Edward Jenner was an English physician who created the first vaccine, one for smallpox.<br/>
<a href="https://rjlipton.wordpress.com/jenner/"><img alt="" class="alignright size-full wp-image-17696" src="https://rjlipton.files.wordpress.com/2020/10/jenner.jpg?w=600"/></a><br/>
In 1798 he used the weak cox-pox to fool our immune system to create a protection against the deadly small-pox. Jenner is said to have <i>saved more lives than any other human.</i></p>
<p>Today there is an attempt to create a vaccine against our small-pox of the 21st century.</p>
<p>In his day small-pox killed 10% or more of populations. In our day there is a similar threat. and thus the immense interest in the development of a vaccine. However, there is a misunderstanding about vaccines for COVID-19 that is pervasive. Read the New York Times or watch cable news—CNN, FOX, MSNBC—where “experts” explain how AstraZeneca, Johnson &amp; Johnson, Novavax, and other drug companies are developing a vaccine. What developing means could potentially affect all of us, and a better understanding could save millions of lives.</p>
<p>They are not currently <i>developing</i> the vaccines, they are <i>testing</i> them.  The point we want to emphasize is:</p>
<blockquote>
<p><b> </b> <em> <i>The development of a vaccine does not change the vaccine. The vaccine is the same at the start of its testing trials, and remains the same throughout.</i> </em></p>
</blockquote>
<p>The Oxford vaccine AZD1222 is the same today as it was months ago when it was created. The same is true for the other vaccines currently being tested around the world.</p>
<p>A vaccine is <b>not</b> developed in the usual sense. Drug companies can modify: how the drug is made, how it is stored, how it is given, how many doses are needed, and so on. Drug companies cannot modify the vaccine without starting over—the vaccine must remain the same. Trials can lead to a vaccine being adopted, or it can cause the vaccine to be abandoned. In the later case the drug company can try again, but with a different vaccine.</p>
<h2>Not Development</h2>
<p>Think of the what development means elsewhere.</p>
<ul>
<li>In programming an app: We build a version and try it out. We find bugs and fix them. We use version numbers. Note, there is no AZD1222 version 3.</li>
<li>In writing a book: We make a draft. We have people read the draft. We fix typos and inaccuracies. Our quantum book’s <img alt="{2^{nd}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5E%7Bnd%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002" title="{2^{nd}}"/> edition is on version 11.</li>
<li>In engineering a product: You get the idea.</li>
</ul>
<p>Here is a sample explaining vaccine <a href="https://www.rivm.nl/en/novel-coronavirus-covid-19/vaccine-against-covid-19">development</a>:</p>
<ul>
<li>Phase I: The vaccine is given to healthy volunteers to see whether it is safe and what dosage (quantity) is most effective.</li>
<li>Phase II: The vaccine is given to target groups that would be vaccinated to see what dosage (quantity) is most effective and how well the immune system responds to it.</li>
<li>Phase III: The vaccine is given to an even larger group, consisting of thousands of people, to see how well the vaccine works to prevent COVID-19. People who do receive the vaccine are then compared with people who did not receive the vaccine.Note: there is no step that modifies the vaccine.
</li></ul>
<h2>Consequences</h2>
<p>There are several consequences from this insight about vaccines. For one it makes sense to order millions of doses of a vaccine, even one that has not yet been proved to be safe and effective. For example,</p>
<blockquote>
<p><b> </b> <em> The European Commission has placed its first advance order for a coronavirus vaccine, snapping up 300 million doses of AstraZeneca’s AZD1222 candidate developed by the University of Oxford, with an option on another 100 million. </em></p>
</blockquote>
<p>Note we would never order a large number of copies of a book before all editing and typos were fixed. This is a “proof” that the vaccine is the same.</p>
<p>Actually it may make sense to even begin to take the vaccine. Especially for high risk people. In the past inventors of vaccines have often taken their own new vaccine, even before they were sure they worked.</p>
<h2>Open Problems</h2>
<p>I am a computer scientist with no experience in vaccines. In 1954 I did help test the Jonas Salk polio vaccine. My help was in the form supplying an arm that got a shot of the Salk polio vaccine, I was nine years old then. But I have a math view of vaccines—a viewpoint that sheds light on this misunderstanding.</p>

</div>
    </content>
    <updated>2020-10-22T15:50:23Z</updated>
    <published>2020-10-22T15:50:23Z</published>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-10-28T19:20:43Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=499</id>
    <link href="https://tcsplus.wordpress.com/2020/10/22/tcs-talk-wednesday-october-28-omar-montasser-ttic/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, October 28 — Omar Montasser, TTIC</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, October 28th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 18:00 Central European Time, 17:00 UTC). Omar Montasser from TTIC will speak about “Adversarially Robust Learnability: Characterization and Reductions” (abstract below). You can reserve a spot as an individual or a group to join […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, October 28th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 18:00 Central European Time, 17:00 UTC). <strong>Omar Montasser</strong> from TTIC will speak about “<em>Adversarially Robust Learnability: Characterization and Reductions</em>” (abstract below).</p>



<p>You can reserve a spot as an individual or a group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk/live-seat-reservation">the online form</a>. Due to security concerns, <em>registration is required</em> to attend the interactive talk. As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>



<p class="wp-block-quote">Abstract: We study the question of learning an adversarially robust predictor from uncorrupted samples. We show that any VC class <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002" title="H"/> is robustly PAC learnable, but we also show that such learning must sometimes be improper (i.e. use predictors from outside the class), as some VC classes are not robustly properly learnable.  In particular, the popular robust empirical risk minimization approach (also known as adversarial training), which is proper, cannot robustly learn all VC classes.  After establishing learnability, we turn to ask whether having a tractable non-robust learning algorithm is sufficient for tractable robust learnability and give a reduction algorithm for robustly learning any hypothesis class <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002" title="H"/> using a non-robust PAC learner for <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002" title="H"/>, with nearly-optimal oracle complexity.<br/>This is based on joint work with Steve Hanneke and Nati Srebro, available at <a href="https://arxiv.org/abs/1902.04217">https://arxiv.org/abs/1902.04217</a>.</p></div>
    </content>
    <updated>2020-10-22T14:48:14Z</updated>
    <published>2020-10-22T14:48:14Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2020-10-28T19:21:39Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/22/computer-science-tenured-tenure-track-at-nyu-shanghai-apply-by-february-1-2021/</id>
    <link href="https://cstheory-jobs.org/2020/10/22/computer-science-tenured-tenure-track-at-nyu-shanghai-apply-by-february-1-2021/" rel="alternate" type="text/html"/>
    <title>Computer Science, Tenured/Tenure-track at NYU Shanghai (apply by February 1, 2021)</title>
    <summary>NYU Shanghai is currently inviting applications for a Tenured or Tenure-track position in Computer Science Theory. The search is not restricted to any rank. We invite candidates with a strong research record in CS theory to apply, including research in algorithms, data structures, computational complexity, cryptography, learning theory, and so on. Website: https://apply.interfolio.com/80168 Email: shanghai.faculty.recruitment@nyu.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>NYU Shanghai is currently inviting applications for a Tenured or Tenure-track position in Computer Science Theory. The search is not restricted to any rank. We invite candidates with a strong research record in CS theory to apply, including research in algorithms, data structures, computational complexity, cryptography, learning theory, and so on.</p>
<p>Website: <a href="https://apply.interfolio.com/80168">https://apply.interfolio.com/80168</a><br/>
Email: shanghai.faculty.recruitment@nyu.edu</p></div>
    </content>
    <updated>2020-10-22T13:41:49Z</updated>
    <published>2020-10-22T13:41:49Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/156</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/156" rel="alternate" type="text/html"/>
    <title>TR20-156 |  Codes over integers, and the singularity of random matrices with large entries | 

	Sankeerth Rao Karingula, 

	Shachar Lovett</title>
    <summary>The prototypical construction of error correcting codes is based on linear codes over finite fields. In this work, we make first steps in the study of codes defined over integers. We focus on Maximum Distance Separable (MDS) codes, and show that MDS codes with linear rate and distance can be realized over the integers with a constant alphabet size. This is in contrast to the situation over finite fields, where a linear size finite field is needed.

The core of this paper is a new result on the singularity probability of random matrices. We show that for a random $n \times n$ matrix with entries chosen independently from the range $\{-m,\ldots,m\}$, the probability that it is singular is at most $m^{-cn}$ for some absolute constant $c&gt;0$.</summary>
    <updated>2020-10-22T05:36:16Z</updated>
    <published>2020-10-22T05:36:16Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-10-28T19:20:36Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://offconvex.github.io/2020/10/21/intrinsicLR/</id>
    <link href="http://offconvex.github.io/2020/10/21/intrinsicLR/" rel="alternate" type="text/html"/>
    <title>Mismatches between Traditional Optimization Analyses and Modern Deep Learning</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>You may remember our <a href="http://www.offconvex.org/2020/04/24/ExpLR1/">previous blog post</a> showing that it is possible to do state-of-the-art deep learning with learning rate that increases exponentially during training.  It was meant to be a dramatic illustration that what we learned in optimization classes and books isn’t always a good fit for modern deep learning, specifically, <em>normalized nets</em>, which is our term for nets that use any one of popular normalization schemes,e.g. <a href="https://arxiv.org/abs/1502.03167">BatchNorm (BN)</a>, <a href="https://arxiv.org/abs/1803.08494">GroupNorm (GN)</a>, <a href="https://arxiv.org/abs/1602.07868">WeightNorm (WN)</a>. Today’s post (based upon <a href="https://arxiv.org/abs/2010.02916">our paper</a> with Kaifeng Lyu at NeurIPS20)  identifies other surprising incompatibilities between normalized nets and traditional analyses. We hope this will change the way you teach and think about deep learning!</p>

<p>Before diving into the results, we recall that normalized nets  are typically trained with weight decay (aka $\ell_2$ regularization). Thus the $t$th iteration of Stochastic Gradient Descent (SGD) is:</p>

\[w_{t+1} \gets (1-\eta_t\lambda)w_t - \eta_t \nabla \mathcal{L}(w_t; \mathcal{B}_t),\]

<p>where $\lambda$ is the weight decay (WD) factor (or $\ell_2$-regularization coefficient),  $\eta_t$ the learning rate, $\mathcal{B}_t$ the batch, and $\nabla \mathcal{L}(w_t,\mathcal{B}_t)$ the batch gradient.</p>

<p>As sketched in our previous blog post, under fairly mild assumptions (namely, fixing the top layer during random initialization —which empirically does not hurt final accuracy) the loss function for training such normalized nets is <em>scale invariant</em>, which means $\mathcal{L}(w _ t; \mathcal{B}_ t)=\mathcal{L}(cw _ t; \mathcal{B} _ t)$, $\forall c&gt;0$.</p>

<p>A consequence of scale invariance is that the $ \nabla _ w \mathcal{L} \vert _ {w = w _ 0} = c \nabla _ w \mathcal{L}\vert _  {w = cw _ 0}$ and $\nabla ^ 2 _ w \mathcal{L} \vert _ {w = w _ 0} = c ^ 2 \nabla ^ 2 _ w \mathcal{L} \vert _  {w = cw _ 0}$, for any $c&gt;0$.</p>

<h2 id="some-conventional-wisdoms-cws">Some Conventional Wisdoms (CWs)</h2>

<p>Now we briefly describe some conventional wisdoms. Needless to say, by the end of this post these will turn out to be very very suspect! Possibly they were OK in earlier days of deep learning, and with shallower nets.</p>

<blockquote>
  <p>CW 1) As we reduce LR to zero, optimization dynamic converges to a deterministic path (Gradient Flow) along which training loss strictly decreases.</p>
</blockquote>

<p>Recall that in traditional explanation of (deterministic) gradient descent, if LR is smaller than roughly the inverse of the smoothness of the loss function, then each step reduces the loss. SGD, being stochastic, has a distribution over possible paths. But very tiny LR can be thought of as full-batch Gradient Descent (GD), which in the limit of infinitesimal step size approaches Gradient Flow (GF).</p>

<p>The above reasoning shows very small LR is guaranteed to decrease the loss at least, as well as any higher LR, can. Of course, in deep learning, we care not only about optimization but also generalization. Here small LR is believed to hurt.</p>

<blockquote>
  <p>CW 2) To achieve the best generalization the LR must be large initially for quite a few epochs.</p>
</blockquote>

<p>This is primarily an empirical finding: using too-small learning rates or too-large batch sizes from the start (all other hyper-parameters being fixed) is known to lead to worse generalization (<a href="https://arxiv.org/pdf/1206.5533.pdf">Bengio, 2012</a>; <a href="https://arxiv.org/abs/1609.04836">Keskar et al., 2017</a>).</p>

<p>A popular explanation for this phenomenon is  that the noise in gradient estimation during SGD is beneficial for generalization. (As noted, this noise tends to average out when LR is very small.)  Many authors have suggested that the noise helps becauses it keeps the trajectory away from sharp minima which are believed to generalize worse, although there is some difference of opinion here (<a href="http://www.bioinf.jku.at/publications/older/3304.pdf">Hochreiter&amp;Schmidhuber, 1997</a>; <a href="https://arxiv.org/abs/1609.04836">Keskar et al., 2017</a>; <a href="https://arxiv.org/abs/1712.09913">Li et al., 2018</a>; <a href="https://arxiv.org/abs/1803.05407">Izmailov et al., 2018</a>; <a href="https://arxiv.org/pdf/1902.00744.pdf">He et al., 2019</a>). <a href="https://arxiv.org/abs/1907.04595">Li et al., 2019</a> also gave an example (a simple two-layer net) where this observation of worse generalization due to small LR is mathematically proved and also experimentally verified.</p>

<blockquote>
  <p>CW 3) Modeling SGD via a Stochastic Differential Equation (SDE) in the continuous-time limit with a fixed Gaussian noise. Namely, think of SGD as a diffusion process that <strong>mixes</strong>  to some Gibbs-like distribution on trained nets.</p>
</blockquote>

<p>This is the usual approach to  formal understanding of CW 2 (<a href="https://arxiv.org/abs/1710.06451">Smith&amp;Le, 2018</a>; <a href="https://arxiv.org/abs/1710.11029">Chaudhari&amp;Soatto, 2018</a>; <a href="https://arxiv.org/abs/2004.06977">Shi et al., 2020</a>). The idea is that SGD is gradient descent with a noise term, which has a continuous-time approximation as a diffusion process described as</p>

\[dW_t = - \eta_t \lambda W_t dt - \eta_t \nabla \mathcal{L}(W_t) dt + \eta_t \Sigma_{W_t}^{1/2} dB_t,\]

<p>where �$\sigma_{W_t}$ is the covariance of stochastic gradient $ \nabla \mathcal{L}(w_t; \mathcal{B}_t)$,  and $B_t$ denotes Brownian motion of the appropriate dimension. Several works have adopted this SDE view and given some rigorous analysis of the effect of noise.</p>

<p>In this story, SGD turns into a geometric random walk in the landscape, which can in principle explore the landscape more thoroughly, for instance by occasionally making loss-increasing steps. While an appealing view, rigorous analysis is difficult because we lack a mathematical description of the loss landscape.  Various papers assume the noise in SDE is isotropic Gaussian, and then derive an expression for the stationary distribution of the random walk in terms of the familiar Gibbs distribution. This view gives intuitively appealing explanation of some deep learning phenomena since the magnitude of noise (which is related to LR and batch size) controls the convergence speed and other properties. For instance it’s well-known that this SDE approximation implies the well-known <em>linear scaling rule</em> (Goyal et. al., 2017](https://arxiv.org/pdf/1706.02677.pdf)).</p>

<p>Which raises the question: <em>does SGD really behave like a diffusion process that mixes in the loss landscape?</em></p>

<!--[A few lines explaining for why noise term has this form? e.g., show one step discretization]!-->

<h2 id="conventional-wisdom-challenged">Conventional Wisdom challenged</h2>

<p>We now describe the actual discoveries for normalized nets, which show that the above CW’s are quite off.</p>

<blockquote>
  <p>(Against CW1): Full batch gradient descent $\neq$ gradient flow.</p>
</blockquote>

<p>It’s well known that if LR is smaller than the inverse of the smoothness, then the trajectory of gradient descent will be close to that of gradient flow. But for normalized networks, the loss function is scale-invariant and thus provably non-smooth (i.e., smoothness becomes unbounded)  around the origin (<a href="https://arxiv.org/abs/1910.07454">Li&amp;Arora, 2019</a>). We show that this non-smoothness issue is very real and makes training unstable and even chaotic for full batch SGD with any nonzero learning rate. This occurs both empirically and provably so with some toy losses.</p>

<div style="text-align: center;">
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/gd_not_gf.png" style="width: 60%;"/>
</div>

<p><strong>Figure 1.</strong> WD makes GD on scale-invariant loss unstable and chaotic.
(a) Toy model with scale-invariant loss $L(x,y) = \frac{x^2}{x^2+y^2}$  (b)(c) Convergence never truly happens for  ResNet trained on sub-sampled
CIFAR10 containing 1000 images with full-batch GD (without momentum).  ResNet
can easily get to 100% training accuracy but then veers off.  When WD is turned off at epoch 30000 it converges.</p>

<p>Note that WD plays a crucial role in this effect since without WD the parameter norm increases monotonically 
 (<a href="https://arxiv.org/abs/1812.03981">Arora et al., 2018</a>) which implies SGD moves away from the origin at all times.</p>

<p>Savvy readers might wonder whether using a smaller LR could fix this issue. Unfortunately, getting close to the origin is unavoidable because once the gradient gets small,  WD will dominate the dynamics and decrease the norm at a geometric rate, causing the gradient to rise again due to the scale invariance! (This happens so long as the gradient gets arbitrarily small, but not actually zero, as is the case in practice.)</p>

<p>In fact, this is an excellent (and rare) place where early stopping is necessary even for correct optimization of the loss.</p>

<blockquote>
  <p>(Against CW 2) Small LR can generalize equally well as large LR.</p>
</blockquote>

<p>This actually was a prediction of the new theoretical analysis we came up with. We ran extensive experiments to test this prediction and found that initial large LR is <strong>not necessary</strong> to match the best performance, even when <em>all the other hyperparameters are fixed</em>. See Figure 2.</p>

<div style="text-align: center;">
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/blog_sgd_8000_test_acc.png" style="width: 300px;"/>
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/blog_sgd_8000_train_acc.png" style="width: 300px;"/>
</div>

<p><strong>Figure 2</strong>. ResNet trained on CIFAR10 with SGD with normal LR schedule (baseline) as well as a schedule with 100 times smaller initial LR.  The latter matches performance of baseline after one more LR decay!  Note it needs  5000 epochs which is 10x higher! See our paper for details. (Batch size is 128, WD is 0.0005, and LR is divided by 10 for each decay.)</p>

<p>Note the  surprise here is that generalization was not hurt from drastically smaller LR even  <em>when no other hyperparameter changes</em>.  It is known empirically as well as rigorously (Lemma 2.4 in <a href="https://arxiv.org/abs/1910.07454">Li&amp;Arora, 2019</a>)  that it is possible to compensate for small LR by other hyperparameter changes.</p>

<blockquote>
  <p>(Against Wisdom 3) Random walk/SDE view of SGD is way off. There is no evidence of mixing as  traditionally understood, at least within normal training times.</p>
</blockquote>

<p>Actually the evidence against global mixing exists already via the phenomenon of Stochastic Weight Averaging (SWA) (<a href="https://arxiv.org/abs/1803.05407">Izmailov et al., 2018</a>). Along the trajectory of SGD, if  the network parameters from two different epochs are averaged, then the average has test loss lower than either.  Improvement via averaging continues to  work for run times 10X longer  than usual as shown in Figure 3. However, the accuracy improvement doesn’t happen for SWA between two solutions obtained from different initialization.  Thus checking whether SWA holds distinguishes between  pairs of solutions drawn from the same trajectory and pairs drawn from different trajectories, which  shows the diffusion process hasn’t mixed to stationary distribution within normal training times. (This is not surprising, since the theoretical analysis of mixing does not suggest it happens rapidly at all.)</p>

<div style="text-align: center;">
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/swa_sgd_test_acc.png" style="width: 300px;"/>
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/swa_sgd_dist.png" style="width: 300px;"/>
</div>

<p><strong>Figure 3</strong>. Stochastic Weight Averaging improves the test accuracy of ResNet trained with
SGD on CIFAR10. <strong>Left:</strong> Test accuracy. <strong>Right:</strong> Pairwise distance between parameters from different epochs.</p>

<p>Actually <a href="https://arxiv.org/abs/1803.05407">Izmailov et al., 2018</a> already noticed the implication that SWA rules out that SGD is a diffusion process which mixes to a unique global equilibrium. They suggested instead that perhaps the trajectory of SGD could be well-approximated by a multivariate Ornstein-Uhlenbeck (OU) process around the <em>local minimizer</em> $W^ * $, assuming the loss surface is locally strongly convex. As the corresponding stationary is multi-dimensional Gaussian, $N(W^ *, \Sigma)$, around the local minimizer, $W^ *$, this explains why SWA helps to reduce the training loss.</p>

<p>However, we note that (<a href="https://arxiv.org/abs/1803.05407">Izmailov et al., 2018</a>)’s suggestion is also refuted by the fact that we can show $\ell_2$ distance between weights from epochs $T$ and $T+\Delta$ monotonically increases with $\Delta$ for every $T$ (See Figure 3), while $ \mathbf{E} [ | W_ T-W_ {T+\Delta} |^2]$ should converge to the constant $2Tr[\Sigma]$ as $T, \Delta \to +\infty$ in the OU process. This suggests that all these weights are correlated, unlike the hypothesized OU process.</p>

<h2 id="so-whats-really-going-on">So what’s really going on?</h2>

<p>We develop a new theory (some parts rigorously proved and others supported by experiments) suggesting that <strong>LR doesn’t play the role assumed in most discussions.</strong></p>

<p>It’s widely believed that LR $\eta$ controls the convergence rate of SGD and affects the generalization via changing the magnitude of noise because LR $\eta$ adjusts the magnitude of gradient update per step. 
 <!--It's also worth noting that for vanilla SGD, changing LR is equivalent to rescaling the loss function. -->
 However, for normalized networks trained with SGD + WD, the effect of LR is more subtle as now it has two roles: (1). the multiplier before the gradient of the loss. (2). the multiplier before WD. Intuitively, one imagines the WD part is  useless since the loss function is scale-invariant, and thus the first role must be more important. But surprisingly, this intuition is completely wrong and it turns out that the second role is way more important than the first one. 
Further analysis shows that a better measure of speed of learning is   $\eta \lambda$, which we call the <em>intrinsic learning rate</em> or <em>intrinsic LR</em>, denoted $\lambda_e$.</p>

<p>While previous papers have noticed qualitatively that LR and WD have a close interaction, our ExpLR paper   <a href="https://arxiv.org/abs/1910.07454">Li&amp;Arora, 2019</a>)  gave mathematical proof that <em>if WD* LR, i.e., $\lambda\eta$ is fixed, then the effect of changing LR on the dynamics is equivalent to rescaling the initial parameters</em>.  As far as we can tell, performance of SGD on modern architectures is quite robust to (indeed usually independent of) scale of the initialization, so the effect of changing initial LR while keeping intrinsic LR fixed is also negligible.</p>

<p>Our paper gives insight into the role of intrinsic LR $\lambda_e$ by giving a new SDE-style analysis of SGD for normalized nets, leading to the following conclusion (which rests in part on experiments):</p>

<blockquote>
  <p>In normalized nets SGD does indeed lead to rapid mixing, but in <strong>function space</strong> (i.e., input-output behavior of the net). Mixing happens after $O(1/\lambda_e)$ iterations, in contrast to the exponentially slow mixing guaranteed in the parameter space by traditional analysis of diffusion walks.</p>
</blockquote>

<p>To explain the meaning of mixing in function space, let’s view SGD (carried out for a fixed number of steps) as a way to sample a trained net from a  distribution over trained nets. Thus the end result of SGD from a fixed initialization can be viewed as a probabilistic classifier whose output on any datapoint is the $K$-dimenstional vector whose $i$th coordinate is the probability of outputting label $i$. (Here $K$ is the total number of labels.) Now if two different initializations both cause SGD to produce classifiers with error $5$ percent on heldout datapoints, then  <em>a priori</em> one would imagine that  on a given held-out datapoint the classifier from the first distribution <strong>disagrees</strong>  with the classifier from the second distribution with roughly $2 * 5 =10$ percent probability. (More precisely, $2 * 5 * (1-0.05) = 9.5$ percent.) However, convergence to an equilibrium distribution in function space means that the probability of disagreement is almost $0$, i.e., the distribution is almost the same regardless of the initialization! This is indeed what we experimentally find, to our big surprise. Our theory is built around this new phenomenon.</p>

<div style="text-align: center;">
<img src="https://www.cs.princeton.edu/~zl4/small_lr_blog_images/additional_blog_image/conjecture.png" style="width: 500px;"/>
</div>
<p><strong>Figure 4</strong>: A simple 4-layer normalized CNN trained on MNIST with three schedules converge to the same equilibrium after intrinsic LRs become equal at epoch 81. We use Monte Carlo ($500$ trials) to estimate $\ell_1$ distances between distributions.</p>

<p>In the next post, we will explain our new theory and the partial new analysis of SDEs arising from SGD in normalized nets.</p></div>
    </summary>
    <updated>2020-10-21T22:00:00Z</updated>
    <published>2020-10-21T22:00:00Z</published>
    <source>
      <id>http://offconvex.github.io/</id>
      <author>
        <name>Off the Convex Path</name>
      </author>
      <link href="http://offconvex.github.io/" rel="alternate" type="text/html"/>
      <link href="http://offconvex.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Algorithms off the convex path.</subtitle>
      <title>Off the convex path</title>
      <updated>2020-10-27T23:29:27Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/21/tenure-track-faculty-at-portland-state-university-apply-by-december-31-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/21/tenure-track-faculty-at-portland-state-university-apply-by-december-31-2020/" rel="alternate" type="text/html"/>
    <title>Tenure-track faculty at Portland State University (apply by December 31, 2020)</title>
    <summary>The Department of Computer Science at Portland State University invites applications for several Assistant Professor positions. Exceptional candidates will also be considered for appointment at the rank of Associate Professor. Candidates in all areas of Computer Science will be considered including theoretical computer science. Website: https://www.pdx.edu/computer-science/open-faculty-position Email: cssearch@pdx.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science at Portland State University invites applications for several Assistant Professor positions. Exceptional candidates will also be considered for appointment at the rank of<br/>
Associate Professor. Candidates in all areas of Computer Science will be considered including theoretical computer science.</p>
<p>Website: <a href="https://www.pdx.edu/computer-science/open-faculty-position">https://www.pdx.edu/computer-science/open-faculty-position</a><br/>
Email: cssearch@pdx.edu</p></div>
    </content>
    <updated>2020-10-21T16:42:54Z</updated>
    <published>2020-10-21T16:42:54Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-28T19:21:05Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/reconstruction-theory/</id>
    <link href="https://differentialprivacy.org/reconstruction-theory/" rel="alternate" type="text/html"/>
    <title>The Theory of Reconstruction Attacks</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We often see people asking whether or not differential privacy might be overkill.  Why do we need strong privacy protections like differential privacy when we’re only releasing approximate, aggregate statistical information about a dataset?  Is it really possible to extract information about specific users from releasing these statistics?  The answer turns out to be a resounding yes!  The textbook by Dwork and Roth <a href="https://www.cis.upenn.edu/~aaroth/privacybook.html">[DR14]</a> calls this phenomenon the Fundamental Law of Information Recovery:</p>

<blockquote>
  <p>Giving overly accurate answers to too many questions will inevitably destroy privacy.</p>
</blockquote>

<p>So what exactly does this fundamental law mean precisely, and how can we prove it?  We can formalize and prove the law via <em>reconstruction attacks</em>, where an attacker can recover secret information from nearly every user in the dataset, simply by observing noisy answers to a modestly large number of (surprisingly simple) queries on the dataset. Reconstruction attacks were introduced in a seminal paper by Dinur and Nissim in 2003 <a href="https://dl.acm.org/doi/10.1145/773153.773173">[DN03]</a>.  Although this paper predates differential privacy by a few years, the discovery of reconstruction attacks directly led to the definition of differential privacy, and shaped a lot of the early research on the topic. We now know that differentially private algorithms can, in some cases, match the limitations on accuracy implied by reconstruction attacks. When this is the case, we have a remarkably sharp transition from a blatant privacy violation when the accuracy is high enough to enable a reconstruction attack, to the strong protection given by differential privacy at the cost of only slightly lower accuracy.</p>

<p>Aside from the theoretical importance of reconstruction attacks, one may wonder if they can be carried out in practice, or if the attack model is unrealistic and can be avoided with some simple workarounds?  In this series of posts, we argue that reconstruction attacks can be quite practical.  In particular, we describe successful attacks by some of this post’s authors on a family of systems called <em>Diffix</em>, that attempt to prevent reconstruction without introducing as much noise as the reconstruction attacks suggest is necessary. To the best of our knowledge, these attacks represent the first successful attempt to reconstruct data from a commercial statistical-database system that is specifically designed to protect the privacy of the underlying data.  A larger and much more significant demonstration of the practical power of reconstruction attacks was carried out by the US Census Bureau in 2018, motivating the Bureau’s adoption of differential privacy for data products derived from the 2020 decennial census <a href="https://queue.acm.org/detail.cfm?ref=rss&amp;id=3295691">[GAM18]</a>.</p>

<p>This series will come in two parts: In this post, we will review the theory of reconstruction attacks, and present a model for reconstruction attacks that corresponds more directly to real attacks than the one that is typically presented.  In the second post, we will describe attacks that were launched against various iterations of the <em>Diffix</em> system. \(
\newcommand{\uni}{\mathcal{X}} % The universe
\newcommand{\usize}{T} % Universe size
\newcommand{\elem}{x} % Generic universe element. 
\newcommand{\pbs}{z} %Non-secret bits
\newcommand{\pbsuni}{\mathcal{Z}}
\renewcommand{\sb}{b} % Secret bit
\newcommand{\pds}{Z} %non-secret part of the data set
\newcommand{\ddim}{d} % Data dimension
\newcommand{\queries}{Q} % A set/workload of queries
\newcommand{\qmat}{\mat{Q}} % Query matrix
\newcommand{\qent}{w} % Entry of the query matrix
\newcommand{\hist}{h} % Histogram vector
\newcommand{\mech}{\mathcal{M}} % Generic Mechanism
\newcommand{\query}{q}
\newcommand{\queryfunc}{\varphi}
\newcommand{\ans}{a} % query answer
\newcommand{\qsize}{k}
\newcommand{\ds}{X}
\newcommand{\dsrow}{\elem} % same as elem above
\newcommand{\dsize}{n}
\newcommand{\priv}{\eps}
\newcommand{\privd}{\delta}
\newcommand{\acc}{\alpha}
\newcommand{\from}{:}
\newcommand{\set}[1]{\left{#1\right}}
\newcommand{\R}{\mathbb{R}}
\newcommand{\N}{\mathbb{N}}
\newcommand{\Z}{\mathbb{Z}}
\newcommand{\E}{\mathbb{E}}
\newcommand{\var}{\mathrm{Var}}
\newcommand{\I}{\mathbb{I}}
\newcommand{\tr}{\mathrm{Tr}}
\newcommand{\eps}{\varepsilon}
\newcommand{\pmass}{\mathbbm{1}}
\newcommand{\zo}{\{0,1\}}
\newcommand{\mat}[1]{#1} % matrix notation: for now nothing
\)</p>
<h3 id="a-model-of-reconstruction-attacks">A Model of Reconstruction Attacks</h3>

<p>This part presents the basic theory of reconstruction attacks.  We’ll introduce a model of reconstruction attacks that is a little different from what you would see if you read the papers, and then describe the main results of Dinur and Nissim.  At the end we will briefly mention some variations that have been considered in the nearly two decades since.</p>

<p>Let us fix a dataset model, so that we can describe the attack precisely. (These attacks are very flexible and the ideas can usually be adapted to new models, as we’ll see at the end of this part.) We take the dataset to be a collection of \(\dsize\) records \(\ds = \{\elem_1,\dots,\elem_n\}\), each corresponding to the data of a single person.  The attacker’s goal is to learn some piece of secret information about as many individuals as possible, so we think of each record as having the form \(\elem_i = (\pbs_i,\sb_i)\) where \(\pbs_i\) is some identifying information, and \(\sb_i \in \zo\) is some secret. We assume that the secret is binary, although this aspect of the model can be generalized. We can visualize such a dataset as a matrix \([\pds \mid \sb]\) with two blocks as follows:
\[ \left[ \begin{array}{c|c} \pbs_1 &amp; \sb_1 \\ \vdots &amp; \vdots \\ \pbs_n &amp; \sb_n \end{array} \right] \]
For a concrete example, suppose each element in the dataset contains \(d\) binary attributes, and the attacker’s goal is to learn the last attribute of each user.  In this case we would write each element as a pair \((\pbs_i, \sb_i)\) where \(\pbs_i \in \zo^{d-1}\) and \(\sb_i \in \zo\).</p>

<p>Note that this distinction between \(\pbs_i\) and \(\sb_i\) is only in the mind of the attacker, who has some prior information about the users, but is trying to learn some specific secret information.  In order to make the attack simpler to describe, we will also assume that the attacker knows \(\pbs_1,\dots,\pbs_\dsize\), which is everything about the dataset except the secret bits, although this assumption can also be relaxed to a large extent. As a shorthand, we will refer to \(\pbs_1, \ldots, \pbs_\dsize\) as the prior information, and to \(\sb_1, \ldots,\sb_\dsize\) as the secret bits.</p>

<p>Our goal is to understand whether asking aggregate queries defined by the prior information can allow an attacker to learn non-trivial information about the secret bits.  Perhaps the most basic type of aggregate query we can ask is a <em>counting query</em>, which is a query that asks what number of the data points satisfy a given property. The Dinur-Nissim attacks assume that the attacker can get approximate answers to a type of counting queries that ask how many data points satisfy some property defined in terms of the prior information, and also have the sensitive bit set to \(1\).  Let us use the notation \(\pbsuni\) for the set of all possible values that the prior information can take. For the purposes of the attack, each query \(\query\) will be specified by a function \(\queryfunc \from \pbsuni \to \zo\) and have the specific form
\[
\query(\ds) = \sum_{j=1}^{\dsize} \queryfunc(\pbs_j) \cdot \sb_j.
\]
This is a good time to make one absolutely crucial point about this model, which is that</p>
<blockquote>
  <p>all the users are treated completely symmetrically by the queries, and the attacker cannot issue a query that targets a specific user \(x_i\) by name or a specific subset of users.  The different users are distinguished only by their data.  Nonetheless, we will see how to learn information about specific users from the answers to these queries.</p>
</blockquote>

<p>Returning to our example with binary attributes, consider the very natural set of queries that asks for the inner product of the secret bits with each attribute in the prior information, which is a measure of the correlation between these two attributes.  Then each query takes the form \(\query_i(\ds) = \sum_{j=1}^{n} \pbs_{j,i} \cdot \sb_{j}\).</p>

<p>The nice thing about this type of query is that we can express the answers to a set of queries \({\query_1,\dots,\query_\qsize}\) defined by \(\queryfunc_1, \ldots, \queryfunc_\qsize\) as the following matrix-vector product \(\qmat_{\pds}\cdot \mat{b}\):
\[ \left[ \begin{array}{c}\query_1(\ds) \\ \vdots  \\ \query_\qsize(\ds) \end{array} \right] = \left[ \begin{array}{ccc} \queryfunc_1(\pbs_1) &amp; \dots &amp; \queryfunc_1(\pbs_\dsize) \\ \vdots &amp;  \ddots  &amp; \vdots \\ \queryfunc_\qsize(\pbs_1) &amp;   \dots &amp; \queryfunc_k(\pbs_\dsize)  \end{array} \right] \left[ \begin{array}{c} \sb_1 \\ \vdots  \\ \sb_n  \end{array} \right]
\]
so we can study this model using tools from linear algebra.</p>

<h3 id="an-inefficient-attack">An Inefficient Attack</h3>

<p>Exact answers to such queries are clearly revealing, because, the attacker can use the predicates \[ \queryfunc_i(z) = \begin{cases} 1 &amp; \textrm{if } \pbs = \pbs_i  \\ 0 &amp;  \textrm{otherwise} \end{cases} \] to single out a specific user and receive their bit \(\sb_i\).  It is less obvious, however, that an attacker can learn a lot about the private bits even given noisy answers to the queries.</p>

<p>The first Dinur-Nissim attack shows that this is indeed possible—if the attacker can ask an unbounded number of counting queries, and each query is answered with, for example, 5% error, then the attacker can reconstruct 80% of the secret bits.  This attack requires exponentially many queries to run, making it somewhat impractical, but it is a proof of concept that an attack can reconstruct a large amount of private information even from very noisy statistics. Later we will see how to scale down the attack to use fewer queries at the cost of requiring more accurate answers.</p>

<p>The attack itself is quite simple:</p>

<ul>
  <li>
    <p>For simplicity, assume all the \(\pbs_1, \ldots, \pbs_\dsize\) are distinct so that each user is uniquely identified by the prior information.</p>
  </li>
  <li>
    <p>The attacker chooses the queries \(\query_1, \ldots, \query_\qsize\) so that the matrix \(\qmat_\pds\) has as its rows all of \(\zo^\dsize\). Namely, \(\qsize=2^\dsize\) and the functions \(\queryfunc_1, \ldots, \queryfunc_\qsize\) defining the queries take all possible values on \(\pbs_1, \ldots, \pbs_\dsize\).</p>
  </li>
  <li>
    <p>The attacker receives a vector \(\ans\) of noisy answers to the queries, where \( |\query_{i}(\ds) - \ans_{i}| &lt; \acc \dsize \) for each query \( \query_i \).  In matrix notation, this means \[ \max_{i = 1}^\qsize  |(\qmat_\pds\cdot {\sb})_i -\ans_i|= \| \qmat_\pds \cdot \sb -\ans\|_\infty  \leq \alpha \dsize. \]
  Note that, for \(\{0,1\}\)-valued queries, the answers range from \(0\) to \(\dsize\), so answers with additive error \(\pm 5\%\) corresponds to \(\acc = 0.05\).</p>
  </li>
  <li>
    <p>Finally, the attacker outputs any guess \(\hat{\sb} = (\hat{\sb}_{1}, \ldots, \hat{\sb}_{n})\) of the private bits vector that is consistent with the answers and the additive error bound \(\acc\). In other words, \(\hat{\sb}\) just needs to satisfy \[\max_{i = 1}^\qsize |\ans_i - (\qmat_\pds\cdot \hat{\sb})_i|= \| \qmat_\pds \cdot \hat\sb - a \|_{\infty} \leq \alpha \dsize \]
  Note that a solution always exists, since the true private bits \(\sb\) will do.</p>
  </li>
</ul>

<p>Our claim is that any such guess \(\hat{b}\) in fact agrees with the true private bits \(b\) for all but \(4\acc \dsize\) of the users. The reason is that if \(\hat{\sb}\) disagreed with more than \(4\acc \dsize\) of the secret bits, then the answer to some query would have eliminated \(\hat{\sb}\) from contention.  To see this, fix some \(\hat{\sb}\in \zo^\dsize\), and let \[ S_{01} = \{j: \hat{\sb}_j = 0,  \sb_j = 1\} \textrm{ and } S_{10} = \{j: \hat{\sb}_j = 1,  \sb_j = 0\}\] 
If \(\hat{\sb}\) and \(\sb\) disagree on more than \(4\acc \dsize\) bits, then at least one of these two sets has size larger than \(2\acc \dsize\). Let us assume that this set is \(S_{01}\), and we’ll deal with the other case by symmetry.  Suppose that the \(i\)-th row of \(\qmat_\pds\) is the indicator vector of \(S_{01}\), i.e., \[(\qmat_\pds)_{i,j} = 1 \iff j \in S_{01}.\] We then have
\[
|(\qmat_{\pds}\cdot {\sb})_i - (\qmat_{\pds}\cdot \hat{\sb})_i|= |S_{01}| &gt; 2 \acc \dsize,
\]
but, at the same time, if \(\hat{\sb}\) were output by the attacker, we would have
\[
|(\qmat_{\pds}\cdot {\sb})_i - (\qmat_{\pds}\cdot \hat{\sb})_i| \le |\ans_i - (\qmat_\pds\cdot \hat{\sb})_i| + |(\qmat_\pds \cdot \sb)_i - \ans_{i}| \le 2\acc \dsize, \]
which is a contradiction. An important point to note is that the attacker does not need to know the set \(S_{10}\), or the corresponding \(i\)-th row of \(\qmat_\pds\) and query \(\query_i\). Since the attacker asks all possible queries determined by the prior information, we can be sure \(\query_i\) is one of these queries, and an accurate answer to it rules out this particular bad choice of \(\hat{\sb}\).  To give you something concrete to cherish, we can summarize this discussion in the following theorem.</p>

<blockquote>
  <p><strong>Theorem <a href="https://dl.acm.org/doi/10.1145/773153.773173">[DN03]</a>:</strong> There is a reconstruction attack that issues \(2^n\) queries to a dataset of \(n\) users, obtains answers with error \(\alpha n\), and reconstructs the secret bits of all but \(4 \alpha n\) users.</p>
</blockquote>

<h3 id="an-efficient-attack">An Efficient Attack</h3>

<p>The exponential Dinur-Nissim attack is quite powerful, as it recovers 80% of the secret bits even from answers with 5% error, but it has the drawback that it requires asking \(2^\dsize\) queries to a dataset with \(\dsize\) users.  Note that this is inherent to some extent.  Suppose we randomly subsample 50% of the dataset and answer the queries using only this subset by rescaling appropriately.  Although this random subsampling does not guarantee any meaningful privacy, clearly no attacker can reconstruct 75% of the secret bits, since some of them are effectively deleted.  However, the guarantees of random sampling tell us that any set of \(\qsize\) queries will be answered with maximum error \( \acc n =  O(\sqrt{n \log \qsize})\), so we can answer \( 2^{\Omega(n)} \) queries with \(5\%\) error while provably preventing this sort of reconstruction.</p>

<p>However, Dinur and Nissim showed that if we obtain <em>highly accurate</em> answers—still noisy, but with error smaller than the sampling error—then we can reconstruct the dataset to high accuracy.  We can also make the reconstruction process computationally efficient by using linear programming to replace the exhaustive search over all \(2^\dsize\) possible vectors of secrets.  Specifically, we change the attack as follows:</p>

<ul>
  <li>
    <p>The attacker now chooses \(\qsize\) <em>randomly chosen</em> functions \( \varphi_i \from \pbsuni \to \{0,1\} \) for a much smaller \(\qsize = O(\dsize) \).</p>
  </li>
  <li>
    <p>Upon receiving an answer vector \(\ans\), the attacker now searches for a <em>real-valued</em> \( \tilde{b} \in [0,1]^{\dsize} \) such that \( \| \ans - \qmat_\pds \cdot \tilde{b} \|_{\infty} \leq \acc n \).  Note that this vector can be found efficiently via linear programming.  The attacker then rounds each \( \tilde{b}_{i} \) to the nearest \( \hat{b}_{i} \in \{0,1\}\).</p>
  </li>
</ul>

<p>It’s now much trickier to analyze this attack and show that it achieves low reconstruction error, and we won’t go into details in this post.  However, the key idea is that, because the queries are chosen randomly, \( \qmat_\pds \) is a random matrix with entries in \( \{0,1\} \), and we can use the statistical properties of this random matrix to argue that, with high probability,
\[
\|\qmat_\pds \cdot \sb - \qmat_\pds \cdot \tilde{\sb}\|_\infty^2 \gtrsim |{i: \sb_i \neq \hat{\sb}_i}|.
\]
By the way we chose \(\tilde{\sb}\), we have 
\[
\|\qmat_\pds \cdot \sb - \qmat_\pds \cdot \tilde{\sb}\|_\infty \le \|\qmat_\pds \cdot \sb - \ans\|_\infty + \| \ans - \qmat_\pds \cdot \tilde{b} \|_{\infty} \leq 2\acc n,
\]
so, by combining the inequalities we get that the reconstruction error is about \( O(\alpha^2 n^2) \). Note that, in order to reconstruct 80% of the secret bits using this attack, we now need the error to be \( \alpha n  \ll \sqrt{n} \), but as long as this condition on the error is satisfied, we will have a highly accurate reconstruction.  Let’s add this theorem to your goodie bags:</p>

<blockquote>
  <p><strong>Theorem <a href="https://dl.acm.org/doi/10.1145/773153.773173">[DN03]</a>:</strong> There is an efficient reconstruction attack that issues \(O(n)\) random queries to a dataset of \(n\) users, obtains answer with error \(\alpha n\), and, with high probability, reconstructs the secret bits of all but \( O(\alpha^2 n^2)\) users.</p>
</blockquote>

<p>Although we modeled the queries, and thus the matrix \(\qmat_\pds\) as uniformly random, it’s important to note that we really only relied on the fact that 
\[
\|\qmat_\pds \cdot \sb - \qmat_\pds \cdot \tilde{\sb}\|_\infty^2 \gtrsim
|\{i: \sb_i \neq \hat{\sb}_i\}|,
\]
and we can reconstruct while tolerating the same \(\Omega(\sqrt{n})\) error for any family of queries that gives rise to a matrix with this property.  Intuitively, any <em>random-enough</em> family of queries will have this property.  More specifically, the property is satisfied by any matrix with no small singular values <a href="https://dl.acm.org/doi/10.1007/978-3-540-85174-5_26">[DY08]</a> or with large discrepancy <a href="https://arxiv.org/abs/1203.5453">[MN12]</a>.  There is a large body of work showing that many specific families of queries lead to reconstruction. For example, we can perform reconstruction using <em>conjunction queries</em> that ask for the marginal distribution of small subsets of the attributes <a href="https://dl.acm.org/doi/abs/10.1145/1806689.1806795">[KLSU10]</a>.  That is, queries of the form “count the number of people with blue eyes and brown hair and a birthday in August.”  In fairness, there are also families of queries that do not satisfy the property, or only satisfy quantitatively weaker versions of it, such as histograms and threshold queries, and for these queries it is indeed possible to achieve differential privacy with \( \ll \sqrt{n} \) error.</p>

<h3 id="conclusion">Conclusion</h3>

<p>This is going to be the end of our technical discussion, but before signing off, let’s mention some of the important extensions of this theorem that have been developed over the years:</p>

<ul>
  <li>
    <p>We can allow the secret information \(\sb\) to be integers or real numbers, rather than bits. The queries still return \(\qmat_\pds\cdot \sb\). The exponential attack then guarantees that, given answers with error \(\acc n\), the reconstruction \(\hat{\sb}\) satisfies \(\|\hat{\sb}-\sb\|_1 \le 4\acc n\). This means, for example, that the reconstructed secrets of all but \(4\alpha n\) users are within \(\pm 1\) of the true secrets. The efficient attack guarantees that \(\|\hat{\sb}-\sb\|_2^2 \le O(\acc^2 n^2)\), which means that the reconstructed secrets are within \(\pm 1\) for all but \(O(\acc^2 n^2)\) users.</p>
  </li>
  <li>
    <p>It’s not crucial that <em>every</em> query be answered with error \( \ll \sqrt{n} \).  If we are willing to settle 
  for an inefficient attack, then we can reconstruct even if only 51% of the queries have small error.  If at least 75% have small error, then we can reconstruct efficiently <a href="https://dl.acm.org/doi/10.1145/1250790.1250804">[DMT07]</a>.</p>
  </li>
  <li>
    <p>The reconstruction attacks still apply to the seemingly more general data model in which the private 
  dataset \(\ds\) is a subset of some arbitrary (but public) data universe \(\uni\).  To see this, note that we can take \(\uni = \{\pbs_1, \ldots, \pbs_\dsize\}\), and we can interpret the secret bits \(\sb_i\) to indicate whether \(\pbs_i\) is an element of \(\ds\). Then the reconstruction attacks allow us to determine, up to some error, which elements of \(\uni\) are contained in \(\ds\). In the setting, the attack is sometimes called <em>membership inference</em>.</p>
  </li>
  <li>
    <p>The fact that the efficient Dinur-Nissim reconstruction attack fails when the error is \( \gg \sqrt{n} \) 
  does not mean it’s easy to achieve privacy with error of that magnitude.  As we mentioned earlier, we can achieve non-trivial error guarantees for a large number of queries simply by using a random subsample of half of the dataset, which is not a private algorithm in any reasonable sense of the word, as it can reveal everything about the chosen subset.  As this example shows,</p>

    <blockquote>
      <p>preventing reconstruction attacks does not mean preserving privacy.</p>
    </blockquote>

    <p>In particular, there are membership-inference attacks that succeed in violating privacy even when the queries are answered with \( \gg \sqrt{n}\) error. We refer the reader to the survey <a href="https://privacytools.seas.harvard.edu/publications/exposed-survey-attacks-private-data">[DSSU17]</a> for a somewhat more in-depth survey of reconstruction and membership-inference attacks.</p>
  </li>
</ul>

<p>Many types of queries give rise to the conditions under which reconstruction is possible.  Stay tuned for our next post, where we show how to generate those types of queries in practice against a family of systems known as <em>Diffix</em> that are specifically designed to thwart reconstruction.</p></div>
    </summary>
    <updated>2020-10-21T16:30:00Z</updated>
    <published>2020-10-21T16:30:00Z</published>
    <author>
      <name>Jonathan Ullman</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-10-28T19:22:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/10/21/assistant-and-associate-professors-to-contribute-to-the-future-of-the-department-of-computer-science-at-department-of-computer-science-aarhus-university-apply-by-january-11-2020/</id>
    <link href="https://cstheory-jobs.org/2020/10/21/assistant-and-associate-professors-to-contribute-to-the-future-of-the-department-of-computer-science-at-department-of-computer-science-aarhus-university-apply-by-january-11-2020/" rel="alternate" type="text/html"/>
    <title>Assistant and Associate Professors to contribute to the future of the Department of Computer Science at Department of Computer Science, Aarhus University (apply by January 11, 2020)</title>
    <summary>Aarhus University – an international top-100 University – has made an ambitious strategic investment in a 5-year recruitment plan to radically expand the Department of Computer Science. We expect to hire four candidates this year. Therefore, we invite applications from candidates that are driven by excellence in research and teaching as well as external collaboration […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Aarhus University – an international top-100 University – has made an ambitious strategic investment in a 5-year recruitment plan to radically expand the Department of Computer Science. We expect to hire four candidates this year. Therefore, we invite applications from candidates that are driven by excellence in research and teaching as well as external collaboration on societal challenges.</p>
<p>Website: <a href="https://au.career.emply.com/ad/aarhus-university-is-hiring-assistant-and-associate-professors-to-contribute-to-t/lqwlj1/en">https://au.career.emply.com/ad/aarhus-university-is-hiring-assistant-and-associate-professors-to-contribute-to-t/lqwlj1/en</a><br/>
Email: kgronbak@cs.au.dk</p></div>
    </content>
    <updated>2020-10-21T07:02:53Z</updated>
    <published>2020-10-21T07:02:53Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-10-27T23:27:50Z</updated>
    </source>
  </entry>
</feed>
