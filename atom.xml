<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-09-03T13:21:44Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/09/03/post-doc-at-basic-algorithms-research-copenhagen-at-it-university-of-copenhagen-apply-by-october-26-2020/</id>
    <link href="https://cstheory-jobs.org/2020/09/03/post-doc-at-basic-algorithms-research-copenhagen-at-it-university-of-copenhagen-apply-by-october-26-2020/" rel="alternate" type="text/html"/>
    <title>Post-doc at Basic Algorithms Research Copenhagen at IT University of Copenhagen (apply by October 26, 2020)</title>
    <summary>The BARC Center for Basic Algorithms Research Copenhagen (barc.ku.dk) is seeking a postdoc employed at IT University of Copenhagen (ITU). The ideal candidate will have proven their research ability through an outstanding PhD thesis, and by publishing in leading international venues for algorithms theory. Website: https://candidate.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=181207&amp;DepartmentId=3439&amp;MediaId=5 Email: pagh@itu.dk</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The BARC Center for Basic Algorithms Research Copenhagen (barc.ku.dk) is seeking a postdoc employed at IT University of Copenhagen (ITU).</p>
<p>The ideal candidate will have proven their research ability through an outstanding PhD thesis, and by publishing in leading international venues for algorithms theory.</p>
<p>Website: <a href="https://candidate.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=181207&amp;DepartmentId=3439&amp;MediaId=5">https://candidate.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=181207&amp;DepartmentId=3439&amp;MediaId=5</a><br/>
Email: pagh@itu.dk</p></div>
    </content>
    <updated>2020-09-03T08:36:42Z</updated>
    <published>2020-09-03T08:36:42Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/09/03/phd-student-at-basic-algorithms-research-copenhagen-at-it-university-of-copenhagen-apply-by-september-28-2020/</id>
    <link href="https://cstheory-jobs.org/2020/09/03/phd-student-at-basic-algorithms-research-copenhagen-at-it-university-of-copenhagen-apply-by-september-28-2020/" rel="alternate" type="text/html"/>
    <title>PhD student at Basic Algorithms Research Copenhagen at IT University of Copenhagen (apply by September 28, 2020)</title>
    <summary>The BARC Center for Basic Algorithms Research Copenhagen (barc.ku.dk) is seeking a PhD student, to be employed at IT University of Copenhagen. The ideal candidate will have proven potential through e.g.: 1) an outstanding MSc thesis, 2) publishing in leading international venues for algorithms theory, or 3) successful participation in international competitions in informatics or […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The BARC Center for Basic Algorithms Research Copenhagen (barc.ku.dk) is seeking a PhD student, to be employed at IT University of Copenhagen.</p>
<p>The ideal candidate will have proven potential through e.g.: 1) an outstanding MSc thesis, 2) publishing in leading international venues for algorithms theory, or 3) successful participation in international competitions in informatics or mathematics.</p>
<p>Website: <a href="https://candidate.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=181206&amp;DepartmentId=3439&amp;MediaId=1282">https://candidate.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=181206&amp;DepartmentId=3439&amp;MediaId=1282</a><br/>
Email: pagh@itu.dk</p></div>
    </content>
    <updated>2020-09-03T08:35:16Z</updated>
    <published>2020-09-03T08:35:16Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-8890204.post-4174113397967272312</id>
    <link href="http://mybiasedcoin.blogspot.com/feeds/4174113397967272312/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://www.blogger.com/comment.g?blogID=8890204&amp;postID=4174113397967272312" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/8890204/posts/default/4174113397967272312" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/8890204/posts/default/4174113397967272312" rel="self" type="application/atom+xml"/>
    <link href="http://mybiasedcoin.blogspot.com/2020/09/broad-testing-thank-you.html" rel="alternate" type="text/html"/>
    <title>Broad Testing Thank You</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p> I have a loose association with the Broad Institute, an institute created so that "complementary expertise of the genomic scientists and the chemical biologists across MIT and Harvard be brought together in one place to drive the transformation of medicine with molecular knowledge."  (See <a href="https://www.broadinstitute.org/history">https://www.broadinstitute.org/history</a> )</p><p>They recently passed an amazing milestone, having performed over 1 million Covid tests.  They weren't set up to be a Covid testing lab, but the converted their institute space to respond to the Covid crisis.  (See <a href="https://covid19-testing.broadinstitute.org/">https://covid19-testing.broadinstitute.org/</a> )  </p><p>In short, they stepped up.  They certainly didn't have to, but they did.  Maybe it will help them do good science, now and in the future.  But my understanding is that they saw a clear societal need (lots of <a href="https://www.amazon.com/gp/product/B07DFZ12KV/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;tag=michaelmitzen-20&amp;creative=9325&amp;linkCode=as2&amp;creativeASIN=B07DFZ12KV&amp;linkId=5a5c250c33b2ba71012ff577c69e1a77">outbreak specialists there</a> ) and they realized they had the expertise and equipment to do good that went beyond science.  I just wanted to give a shout out to the Broad for their good works, scientific and societal.  </p></div>
    </content>
    <updated>2020-09-03T00:32:00Z</updated>
    <published>2020-09-03T00:32:00Z</published>
    <author>
      <name>Michael Mitzenmacher</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/02161161032642563814</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-8890204</id>
      <category term="conferences"/>
      <category term="research"/>
      <category term="society"/>
      <category term="algorithms"/>
      <category term="administration"/>
      <category term="teaching"/>
      <category term="Harvard"/>
      <category term="papers"/>
      <category term="graduate students"/>
      <category term="funding"/>
      <category term="talks"/>
      <category term="blogs"/>
      <category term="codes"/>
      <category term="jobs"/>
      <category term="reviews"/>
      <category term="personal"/>
      <category term="travel"/>
      <category term="undergraduate students"/>
      <category term="books"/>
      <category term="open problems"/>
      <category term="PCs"/>
      <category term="consulting"/>
      <category term="randomness"/>
      <category term="CCC"/>
      <category term="blog book project"/>
      <category term="research labs"/>
      <category term="ISIT"/>
      <category term="tenure"/>
      <category term="comments"/>
      <category term="recommendations"/>
      <category term="outreach"/>
      <category term="students"/>
      <author>
        <name>Michael Mitzenmacher</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06738274256402616703</uri>
      </author>
      <link href="http://mybiasedcoin.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/8890204/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://mybiasedcoin.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/8890204/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">My take on computer science -- <br/> 
algorithms, networking, information theory -- <br/> 
and related items.</div>
      </subtitle>
      <title>My Biased Coin</title>
      <updated>2020-09-03T00:32:41Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.01220</id>
    <link href="http://arxiv.org/abs/2009.01220" rel="alternate" type="text/html"/>
    <title>Differentially private $k$-means clustering via exponential mechanism and max cover</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chaturvedi:Anamay.html">Anamay Chaturvedi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nguyen:Huy.html">Huy Nguyen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xu:Eric.html">Eric Xu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.01220">PDF</a><br/><b>Abstract: </b>We introduce a new $(\epsilon_p, \delta_p)$-differentially private algorithm
for the $k$-means clustering problem. Given a dataset in Euclidean space, the
$k$-means clustering problem requires one to find $k$ points in that space such
that the sum of squares of Euclidean distances between each data point and its
closest respective point among the $k$ returned is minimised. Although there
exist privacy-preserving methods with good theoretical guarantees to solve this
problem [Balcan et al., 2017; Kaplan and Stemmer, 2018], in practice it is seen
that it is the additive error which dictates the practical performance of these
methods. By reducing the problem to a sequence of instances of maximum coverage
on a grid, we are able to derive a new method that achieves lower additive
error then previous works. For input datasets with cardinality $n$ and diameter
$\Delta$, our algorithm has an $O(\Delta^2 (k \log^2 n
\log(1/\delta_p)/\epsilon_p + k\sqrt{d \log(1/\delta_p)}/\epsilon_p))$ additive
error whilst maintaining constant multiplicative error. We conclude with some
experiments and find an improvement over previously implemented work for this
problem.
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.01161</id>
    <link href="http://arxiv.org/abs/2009.01161" rel="alternate" type="text/html"/>
    <title>Near-Quadratic Lower Bounds for Two-Pass Graph Streaming Algorithms</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Assadi:Sepehr.html">Sepehr Assadi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Raz:Ran.html">Ran Raz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.01161">PDF</a><br/><b>Abstract: </b>We prove that any two-pass graph streaming algorithm for the $s$-$t$
reachability problem in $n$-vertex directed graphs requires near-quadratic
space of $n^{2-o(1)}$ bits. As a corollary, we also obtain near-quadratic space
lower bounds for several other fundamental problems including maximum bipartite
matching and (approximate) shortest path in undirected graphs.
</p>
<p>Our results collectively imply that a wide range of graph problems admit
essentially no non-trivial streaming algorithm even when two passes over the
input is allowed. Prior to our work, such impossibility results were only known
for single-pass streaming algorithms, and the best two-pass lower bounds only
ruled out $o(n^{7/6})$ space algorithms, leaving open a large gap between
(trivial) upper bounds and lower bounds.
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.01145</id>
    <link href="http://arxiv.org/abs/2009.01145" rel="alternate" type="text/html"/>
    <title>On the existence of hidden machines in computational time hierarchies</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Abrah=atilde=o:Felipe_S=.html">Felipe S. Abrahão</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wehmuth:Klaus.html">Klaus Wehmuth</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Ziviani:Artur.html">Artur Ziviani</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.01145">PDF</a><br/><b>Abstract: </b>Challenging the standard notion of totality in computable functions, one has
that, given any sufficiently expressive formal axiomatic system, there are
total functions that, although computable and "intuitively" understood as being
total, cannot be proved to be total. In this article we show that this implies
the existence of an infinite hierarchy of time complexity classes whose
representative members are hidden from (or unknown by) the respective formal
axiomatic systems. Although these classes contain total computable functions,
there are some of these functions for which the formal axiomatic system cannot
recognize as belonging to a time complexity class. This leads to incompleteness
results regarding formalizations of computational complexity.
</p></div>
    </summary>
    <updated>2020-09-03T01:23:04Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.01139</id>
    <link href="http://arxiv.org/abs/2009.01139" rel="alternate" type="text/html"/>
    <title>Circuit Satisfiability Problem for circuits of small complexity</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Matdinov:Marsel.html">Marsel Matdinov</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.01139">PDF</a><br/><b>Abstract: </b>The following problem is considered. A Turing machine $M$, that accepts a
string of fixed length $t$ as input, runs for a time not exceeding a fixed
value $n$ and is guaranteed to produce a binary output, is given. It's required
to find a string $X$ such that $M(X) = 1$ effectively in terms of $t$, $n$, the
size of the alphabet of $M$ and the number of states of $M$. The problem is
close to the well-known Circuit Satisfiability Problem. The difference from
Circuit Satisfiability Problem is that when reduced to Circuit Satisfiability
Problem, we get circuits with a rich internal structure (in particular, these
are circuits of small Kolmogorov complexity). The proof system, operating with
potential proofs of the fact that, for a given machine $M$, the string $X$ does
not exist, is provided, its completeness is proved and the algorithm guaranteed
to find a proof of the absence of the string $X$ in the case of its actual
absence is presented (in the worst case, the algorithm is exponential, but in a
wide class of interesting cases it works in polynomial time). We present an
algorithm searching for the string $X$, for which its efficiency was neither
tested, nor proven, and it may require serious improvement in the future, so it
can be regarded as an idea. We also discuss first steps towards solving a more
complex problem similar to this one: a Turing machine $M$, that accepts two
strings $X$ and $Y$ of fixed length and running for a time that does not exceed
a fixed value, is given; it is required to build an algorithm $N$ that builds a
string $Y = N(X)$ for any string $X$, such that $M(X, Y) = 1$ (details in the
introduction).
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.01012</id>
    <link href="http://arxiv.org/abs/2009.01012" rel="alternate" type="text/html"/>
    <title>Reconstructing the Dynamic Sea Surface Using Optimal Data-Dependent Triangulations</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Alina Nitzke, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Niedermann:Benjamin.html">Benjamin Niedermann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fenoglio=Marc:Luciana.html">Luciana Fenoglio-Marc</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kusche:J=uuml=rgen.html">Jürgen Kusche</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Haunert:Jan=Henrik.html">Jan-Henrik Haunert</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.01012">PDF</a><br/><b>Abstract: </b>Data dependent triangulations are triangulations of point sets in the plane
that are computed under consideration not only of the points' $x$- and
$y$-coordinates but also of additional data (e.g., elevation). In particular,
min-error criteria have been suggested to compute triangulations that
approximate a given surface. In this article, we show how data dependent
triangulations with min-error criteria can be used to reconstruct a dynamic
surface over a longer time period if height values are continuously monitored
at a sparse set of stations and, additionally for few epochs or a single one an
accurate reference surface is given. The basic idea is to learn an
height-optimal triangulation based on the available reference data and to use
the learned triangulation to compute piece-wise linear surface models for
epochs in which only the observations of the monitoring stations are given. In
addition, we combine our approach of height-optimal triangulation with
$k$-order Delaunay triangulation to stabilize the triangles geometrically. We
consider these approaches particularly useful for reconstructing the historical
evolution of a sea surface by combining tide-gauge measurements with data of
modern satellite altimetry. We show how to learn a height-optimal triangulation
and a $k$-order height-optimal triangulation using an exact algorithm based on
integer linear programming and evaluate our approaches both with respect to its
running times and the quality of the reconstructions in contrast to a solution
by a Delaunay triangulation which has earlier been used for sea-surface
modeling. For existing data of the North Sea we show that we can better
reconstruct the dynamic sea surface for about 156 months back in time using the
height-optimal triangulation than the Delaunay triangulation and even for about
180 months using the $k$-order height-optimal triangulation for $k=2$.
</p></div>
    </summary>
    <updated>2020-09-03T01:27:10Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00836</id>
    <link href="http://arxiv.org/abs/2009.00836" rel="alternate" type="text/html"/>
    <title>Nearest Neighbor Search for Hyperbolic Embeddings</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wu:Xian.html">Xian Wu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Charikar:Moses.html">Moses Charikar</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00836">PDF</a><br/><b>Abstract: </b>Embedding into hyperbolic space is emerging as an effective representation
technique for datasets that exhibit hierarchical structure. This development
motivates the need for algorithms that are able to effectively extract
knowledge and insights from datapoints embedded in negatively curved spaces. We
focus on the problem of nearest neighbor search, a fundamental problem in data
analysis. We present efficient algorithmic solutions that build upon
established methods for nearest neighbor search in Euclidean space, allowing
for easy adoption and integration with existing systems. We prove theoretical
guarantees for our techniques and our experiments demonstrate the effectiveness
of our approach on real datasets over competing algorithms.
</p></div>
    </summary>
    <updated>2020-09-03T01:35:07Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00811</id>
    <link href="http://arxiv.org/abs/2009.00811" rel="alternate" type="text/html"/>
    <title>Isotopic Arrangement of Simple Curves: an Exact Numerical Approach based on Subdivision</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lien:Jyh=Ming.html">Jyh-Ming Lien</a>, Vikram Sharma, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vegter:Gert.html">Gert Vegter</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yap:Chee.html">Chee Yap</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00811">PDF</a><br/><b>Abstract: </b>This paper presents the first purely numerical (i.e., non-algebraic)
subdivision algorithm for the isotopic approximation of a simple arrangement of
curves. The arrangement is "simple" in the sense that any three curves have no
common intersection, any two curves intersect transversally, and each curve is
non-singular. A curve is given as the zero set of an analytic function
$f:\mathbb{R}^2\rightarrow \mathbb{R}^2$, and effective interval forms of $f,
\frac{\partial{f}}{\partial{x}}, \frac{\partial{f}}{\partial{y}}$ are
available. Our solution generalizes the isotopic curve approximation algorithms
of Plantinga-Vegter (2004) and Lin-Yap (2009).
</p>
<p>We use certified numerical primitives based on interval methods. Such
algorithms have many favorable properties: they are practical, easy to
implement, suffer no implementation gaps, integrate topological with geometric
computation, and have adaptive as well as local complexity.
</p>
<p>A version of this paper without the appendices appeared in Lien et al.
(2014).
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00809</id>
    <link href="http://arxiv.org/abs/2009.00809" rel="alternate" type="text/html"/>
    <title>Towards constant-factor approximation for chordal / distance-hereditary vertex deletion</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ahn:Jungho.html">Jungho Ahn</a>, Eun Jung Kim, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lee:Euiwoong.html">Euiwoong Lee</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00809">PDF</a><br/><b>Abstract: </b>For a family of graphs $\mathcal{F}$, Weighted $\mathcal{F}$-Deletion is the
problem for which the input is a vertex weighted graph $G=(V,E)$ and the goal
is to delete $S\subseteq V$ with minimum weight such that $G\setminus
S\in\mathcal{F}$. Designing a constant-factor approximation algorithm for large
subclasses of perfect graphs has been an interesting research direction. Block
graphs, 3-leaf power graphs, and interval graphs are known to admit
constant-factor approximation algorithms, but the question is open for chordal
graphs and distance-hereditary graphs.
</p>
<p>In this paper, we add one more class to this list by presenting a
constant-factor approximation algorithm when $F$ is the intersection of chordal
graphs and distance-hereditary graphs. They are known as ptolemaic graphs and
form a superset of both block graphs and 3-leaf power graphs above. Our proof
presents new properties and algorithmic results on inter-clique digraphs as
well as an approximation algorithm for a variant of Feedback Vertex Set that
exploits this relationship (named Feedback Vertex Set with Precedence
Constraints), each of which may be of independent interest.
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00808</id>
    <link href="http://arxiv.org/abs/2009.00808" rel="alternate" type="text/html"/>
    <title>Structural Iterative Rounding for Generalized $k$-Median Problems</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gupta:Anupam.html">Anupam Gupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moseley:Benjamin.html">Benjamin Moseley</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhou:Rudy.html">Rudy Zhou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00808">PDF</a><br/><b>Abstract: </b>This paper considers approximation algorithms for generalized $k$-median
problems. This class of problems can be informally described as $k$-median with
a constant number of extra constraints, and includes $k$-median with outliers,
and knapsack median. Our first contribution is a pseudo-approximation algorithm
for generalized $k$-median that outputs a $6.387$-approximate solution, with a
constant number of fractional variables. The algorithm builds on the iterative
rounding framework introduced by Krishnaswamy, Li, and Sandeep for $k$-median
with outliers. The main technical innovation is allowing richer constraint sets
in the iterative rounding and taking advantage of the structure of the
resulting extreme points.
</p>
<p>Using our pseudo-approximation algorithm, we give improved approximation
algorithms for $k$-median with outliers and knapsack median. This involves
combining our pseudo-approximation with pre- and post-processing steps to round
a constant number of fractional variables at a small increase in cost. Our
algorithms achieve approximation ratios $6.994 + \epsilon$ and $6.387 +
\epsilon$ for $k$-median with outliers and knapsack median, respectively. These
improve on the best-known approximation ratio $7.081 + \epsilon$ for both
problems \cite{DBLP:conf/stoc/KrishnaswamyLS18}.
</p></div>
    </summary>
    <updated>2020-09-03T01:39:11Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00800</id>
    <link href="http://arxiv.org/abs/2009.00800" rel="alternate" type="text/html"/>
    <title>Fully-Dynamic Submodular Cover with Bounded Recourse</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gupta:Anupam.html">Anupam Gupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Levin:Roie.html">Roie Levin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00800">PDF</a><br/><b>Abstract: </b>In submodular covering problems, we are given a monotone, nonnegative
submodular function $f: 2^N \rightarrow\mathbb{R}_+$ and wish to find the
min-cost set $S\subseteq N$ such that $f(S)=f(N)$. This captures SetCover when
$f$ is a coverage function. We introduce a general framework for solving such
problems in a fully-dynamic setting where the function $f$ changes over time,
and only a bounded number of updates to the solution (recourse) is allowed. For
concreteness, suppose a nonnegative monotone submodular function $g_t$ is added
or removed from an active set $G^{(t)}$ at each time $t$. If
$f^{(t)}=\sum_{g\in G^{(t)}} g$ is the sum of all active functions, we wish to
maintain a competitive solution to SubmodularCover for $f^{(t)}$ as this active
set changes, and with low recourse.
</p>
<p>We give an algorithm that maintains an $O(\log(f_{max}/f_{min}))$-competitive
solution, where $f_{max}, f_{min}$ are the largest/smallest marginals of
$f^{(t)}$. The algorithm guarantees a total recourse of $O(\log(c_{max}/
c_{min})\cdot\sum_{t\leq T}g_t(N))$, where $c_{max},c_{min}$ are the
largest/smallest costs of elements in $N$. This competitive ratio is best
possible even in the offline setting, and the recourse bound is optimal up to
the logarithmic factor. For monotone submodular functions that also have
positive mixed third derivatives, we show an optimal recourse bound of
$O(\sum_{t\leq T}g_t(N))$. This structured class includes set-coverage
functions, so our algorithm matches the known $O(\log n)$-competitiveness and
$O(1)$ recourse guarantees for fully-dynamic SetCover. Our work simultaneously
simplifies and unifies previous results, as well as generalizes to a
significantly larger class of covering problems. Our key technique is a new
potential function inspired by Tsallis entropy. We also extensively use the
idea of Mutual Coverage, which generalizes the classic notion of mutual
information.
</p></div>
    </summary>
    <updated>2020-09-03T01:31:49Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00755</id>
    <link href="http://arxiv.org/abs/2009.00755" rel="alternate" type="text/html"/>
    <title>Turning machines</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kostitsyna:Irina.html">Irina Kostitsyna</a>, Cai Wood, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Woods:Damien.html">Damien Woods</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00755">PDF</a><br/><b>Abstract: </b>Molecular robotics is challenging, so it seems best to keep it simple. We
consider an abstract molecular robotics model based on simple folding
instructions that execute asynchronously. Turning Machines are a simple 1D to
2D folding model, also easily generalisable to 2D to 3D folding. A Turning
Machine starts out as a line of connected monomers in the discrete plane, each
with an associated turning number. A monomer turns relative to its neighbours,
executing a unit-distance translation that drags other monomers along with it,
and through collective motion the initial set of monomers eventually folds into
a programmed shape. We fully characterise the ability of Turning Machines to
execute line rotations, and to do so efficiently: computing an almost-full line
rotation of $5\pi/3$ radians is possible, yet a full $2\pi$ rotation is
impossible. We show that such line-rotations represent a fundamental primitive
in the model, by using them to efficiently and asynchronously fold arbitrarily
large zig-zag-rastered squares and $y$-monotone shapes.
</p></div>
    </summary>
    <updated>2020-09-03T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00697</id>
    <link href="http://arxiv.org/abs/2009.00697" rel="alternate" type="text/html"/>
    <title>Simpler and Stronger Approaches for Non-Uniform Hypergraph Matching and the F\"uredi, Kahn, and Seymour Conjecture</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Anegg:Georg.html">Georg Anegg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Angelidakis:Haris.html">Haris Angelidakis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zenklusen:Rico.html">Rico Zenklusen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00697">PDF</a><br/><b>Abstract: </b>A well-known conjecture of F\"uredi, Kahn, and Seymour (1993) on non-uniform
hypergraph matching states that for any hypergraph with edge weights $w$, there
exists a matching $M$ such that the inequality $\sum_{e\in M} g(e) w(e) \geq
\mathrm{OPT}_{\mathrm{LP}}$ holds with $g(e)=|e|-1+\frac{1}{|e|}$, where
$\mathrm{OPT}_{\mathrm{LP}}$ denotes the optimal value of the canonical LP
relaxation.
</p>
<p>While the conjecture remains open, the strongest result towards it was very
recently obtained by Brubach, Sankararaman, Srinivasan, and Xu
(2020)---building on and strengthening prior work by Bansal, Gupta, Li, Mestre,
Nagarajan, and Rudra (2012)---showing that the aforementioned inequality holds
with $g(e)=|e|+O(|e|\exp(-|e|))$.
</p>
<p>Actually, their method works in a more general sampling setting, where, given
a point $x$ of the canonical LP relaxation, the task is to efficiently sample a
matching $M$ containing each edge $e$ with probability at least
$\frac{x(e)}{g(e)}$.
</p>
<p>We present simpler and easy-to-analyze procedures leading to improved
results. More precisely, for any solution $x$ to the canonical LP, we introduce
a simple algorithm based on exponential clocks for Brubach et al.'s sampling
setting achieving $g(e)=|e|-(|e|-1)x(e)$.
</p>
<p>Apart from the slight improvement in $g$, our technique may open up new ways
to attack the original conjecture.
</p>
<p>Moreover, we provide a short and arguably elegant analysis showing that a
natural greedy approach for the original setting of the conjecture shows the
inequality for the same $g(e)=|e|-(|e|-1)x(e)$ even for the more general
hypergraph $b$-matching problem.
</p></div>
    </summary>
    <updated>2020-09-03T01:25:15Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00672</id>
    <link href="http://arxiv.org/abs/2009.00672" rel="alternate" type="text/html"/>
    <title>Document Similarity from Vector Space Densities</title>
    <feedworld_mtime>1599091200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rushkin:Ilia.html">Ilia Rushkin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00672">PDF</a><br/><b>Abstract: </b>We propose a computationally light method for estimating similarities between
text documents, which we call the density similarity (DS) method. The method is
based on a word embedding in a high-dimensional Euclidean space and on kernel
regression, and takes into account semantic relations among words. We find that
the accuracy of this method is virtually the same as that of a state-of-the-art
method, while the gain in speed is very substantial. Additionally, we introduce
generalized versions of the top-k accuracy metric and of the Jaccard metric of
agreement between similarity models.
</p></div>
    </summary>
    <updated>2020-09-03T01:31:16Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-03T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=20194</id>
    <link href="https://gilkalai.wordpress.com/2020/09/02/alef-corner-math-collaboration-2/" rel="alternate" type="text/html"/>
    <title>Alef’s Corner: Math Collaboration 2</title>
    <summary>Other Alef’s corner posts</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://gilkalai.files.wordpress.com/2020/09/alef.jpg"><img alt="alef-math-collaboration" class="alignnone size-full wp-image-20202" src="https://gilkalai.files.wordpress.com/2020/09/alef-math-collaboration.jpg?w=640"/></a></p>
<p>Other <a href="https://gilkalai.wordpress.com/tag/alefs-corner/">Alef’s corner</a> posts</p></div>
    </content>
    <updated>2020-09-02T13:32:45Z</updated>
    <published>2020-09-02T13:32:45Z</published>
    <category term="Art"/>
    <category term="Combinatorics"/>
    <category term="Geometry"/>
    <category term="What is Mathematics"/>
    <category term="Alef's corner"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-09-03T13:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00425</id>
    <link href="http://arxiv.org/abs/2009.00425" rel="alternate" type="text/html"/>
    <title>An algorithm for dividing quaternions</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cariow:Aleksandr.html">Aleksandr Cariow</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cariowa:Galina.html">Galina Cariowa</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00425">PDF</a><br/><b>Abstract: </b>In this work, a rationalized algorithm for calculating the quotient of two
quaternions is presented which reduces the number of underlying real
multiplications. Hardware for fast multiplication is much more expensive than
hardware for fast addition. Therefore, reducing the number of multiplications
in VLSI processor design is usually a desirable task. The performing of a
quaternion division using the naive method takes 16 multiplications, 15
additions, 4 squarings and 4 divisions of real numbers while the proposed
algorithm can compute the same result in only 8 multiplications (or multipliers
in hardware implementation case), 31 additions, 4 squaring and 4 division of
real numbers.
</p></div>
    </summary>
    <updated>2020-09-02T23:20:20Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00384</id>
    <link href="http://arxiv.org/abs/2009.00384" rel="alternate" type="text/html"/>
    <title>Obtuse Lattice Bases</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Kanav Gupta, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Raddum:H=aring=vard.html">Håvard Raddum</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00384">PDF</a><br/><b>Abstract: </b>A lattice reduction is an algorithm that transforms the given basis of the
lattice to another lattice basis such that problems like finding a shortest
vector and closest vector become easier to solve. We define a class of bases
called obtuse bases and show that any lattice basis can be transformed to an
obtuse basis. A shortest vector $\mathbf{s}$ can be written as
$\mathbf{s}=v_1\mathbf{b}_1+\dots+v_n\mathbf{b}_n$ where
$\mathbf{b}_1,\dots,\mathbf{b}_n$ are the input basis vectors and
$v_1,\dots,v_n$ are integers. When the input basis is obtuse, all these
integers can be chosen to be positive for a shortest vector. This property of
obtuse bases makes the lattice enumeration algorithm for finding a shortest
vector exponentially faster. We have implemented the algorithm for making bases
obtuse, and tested it some small bases.
</p></div>
    </summary>
    <updated>2020-09-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00188</id>
    <link href="http://arxiv.org/abs/2009.00188" rel="alternate" type="text/html"/>
    <title>On the computational tractability of a geographic clustering problem arising in redistricting</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cohen=Addad:Vincent.html">Vincent Cohen-Addad</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Klein:Philip_N=.html">Philip N. Klein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marx:D=aacute=niel.html">Dániel Marx</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00188">PDF</a><br/><b>Abstract: </b>Redistricting is the problem of dividing a state into a number $k$ of
regions, called districts. Voters in each district elect a representative. The
primary criteria are: each district is connected, district populations are
equal (or nearly equal), and districts are "compact". There are multiple
competing definitions of compactness, usually minimizing some quantity.
</p>
<p>One measure that has been recently promoted by Duchin and others is number of
cut edges. In redistricting, one is given atomic regions out of which each
district must be built. The populations of the atomic regions are given.
Consider the graph with one vertex per atomic region (with weight equal to the
region's population) and an edge between atomic regions that share a boundary.
A districting plan is a partition of vertices into $k$ parts, each connnected,
of nearly equal weight. The districts are considered compact to the extent that
the plan minimizes the number of edges crossing between different parts.
</p>
<p>Consider two problems: find the most compact districting plan, and sample
districting plans under a compactness constraint uniformly at random. Both
problems are NP-hard so we restrict the input graph to have branchwidth at most
$w$. (A planar graph's branchwidth is bounded by its diameter.) If both $k$ and
$w$ are bounded by constants, the problems are solvable in polynomial time.
Assume vertices have weight~1. One would like algorithms whose running times
are of the form $O(f(k,w) n^c)$ for some constant $c$ independent of $k$ and
$w$, in which case the problems are said to be fixed-parameter tractable with
respect to $k$ and $w$). We show that, under a complexity-theoretic assumption,
no such algorithms exist. However, we do give algorithms with running time
$O(c^wn^{k+1})$. Thus if the diameter of the graph is moderately small and the
number of districts is very small, our algorithm is useable.
</p></div>
    </summary>
    <updated>2020-09-02T23:20:36Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00116</id>
    <link href="http://arxiv.org/abs/2009.00116" rel="alternate" type="text/html"/>
    <title>On Polyhedral Realization with Isosceles Triangles</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eppstein:David.html">David Eppstein</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00116">PDF</a><br/><b>Abstract: </b>Answering a question posed by Joseph Malkevitch, we prove that there exists a
polyhedral graph, with triangular faces, such that every realization of it as
the graph of a convex polyhedron includes at least one face that is a scalene
triangle. Our construction is based on Kleetopes, and shows that there exists
an integer $i$ such that all convex $i$-iterated Kleetopes have a scalene face.
However, we also show that all Kleetopes of triangulated polyhedral graphs have
non-convex non-self-crossing realizations in which all faces are isosceles. We
answer another question of Malkevitch by observing that a spherical tiling of
Dawson (2005) leads to a fourth infinite family of convex polyhedra in which
all faces are congruent isosceles triangles, adding one to the three families
previously known to Malkevitch. We prove that the graphs of convex polyhedra
with congruent isosceles faces have bounded diameter and have dominating sets
of bounded size.
</p></div>
    </summary>
    <updated>2020-09-02T23:25:08Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00098</id>
    <link href="http://arxiv.org/abs/2009.00098" rel="alternate" type="text/html"/>
    <title>Sorting an Array Using the Topological Sort of a Corresponding Comparison Graph</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Balaram Behera <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00098">PDF</a><br/><b>Abstract: </b>The quest for efficient sorting is ongoing, and we will explore a graph-based
stable sorting strategy, in particular employing comparison graphs. We use the
topological sort to map the comparison graph to a linear domain, and we can
manipulate our graph such that the resulting topological sort is the sorted
array. By taking advantage of the many relations between Hamiltonian paths and
topological sorts in comparison graphs, we design a Divide-and-Conquer
algorithm that runs in the optimal $O(n \log n)$ time. In the process, we
construct a new merge process for graphs with relevant invariant properties for
our use. Furthermore, this method is more space-efficient than the famous {\sc
MergeSort} since we modify our fixed graph only.
</p></div>
    </summary>
    <updated>2020-09-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2009.00083</id>
    <link href="http://arxiv.org/abs/2009.00083" rel="alternate" type="text/html"/>
    <title>Localized Topological Simplification of Scalar Data</title>
    <feedworld_mtime>1599004800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lukasczyk:Jonas.html">Jonas Lukasczyk</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Garth:Christoph.html">Christoph Garth</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Maciejewski:Ross.html">Ross Maciejewski</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tierny:Julien.html">Julien Tierny</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2009.00083">PDF</a><br/><b>Abstract: </b>This paper describes a localized algorithm for the topological simplification
of scalar data, an essential pre-processing step of topological data analysis
(TDA). Given a scalar field f and a selection of extrema to preserve, the
proposed localized topological simplification (LTS) derives a function g that
is close to f and only exhibits the selected set of extrema. Specifically, sub-
and superlevel set components associated with undesired extrema are first
locally flattened and then correctly embedded into the global scalar field,
such that these regions are guaranteed -- from a combinatorial perspective --
to no longer contain any undesired extrema. In contrast to previous global
approaches, LTS only and independently processes regions of the domain that
actually need to be simplified, which already results in a noticeable speedup.
Moreover, due to the localized nature of the algorithm, LTS can utilize
shared-memory parallelism to simplify regions simultaneously with a high
parallel efficiency (70%). Hence, LTS significantly improves interactivity for
the exploration of simplification parameters and their effect on subsequent
topological analysis. For such exploration tasks, LTS brings the overall
execution time of a plethora of TDA pipelines from minutes down to seconds,
with an average observed speedup over state-of-the-art techniques of up to x36.
Furthermore, in the special case where preserved extrema are selected based on
topological persistence, an adapted version of LTS partially computes the
persistence diagram and simultaneously simplifies features below a predefined
persistence threshold. The effectiveness of LTS, its parallel efficiency, and
its resulting benefits for TDA are demonstrated on several simulated and
acquired datasets from different application domains, including physics,
chemistry, and biomedical imaging.
</p></div>
    </summary>
    <updated>2020-09-02T23:23:32Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-09-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra</id>
    <link href="https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra.html" rel="alternate" type="text/html"/>
    <title>Isosceles polyhedra</title>
    <summary>My latest arXiv preprint is “On polyhedral realization with isosceles triangles”, arXiv:2009.00116. As the title suggests, it studies polyhedra whose faces are all isosceles triangles. Despite several new results in it, there’s a lot I still don’t know. The paper finds a sort-of-new1 infinite family of polyhedra with congruent isosceles faces, shown below, but I don’t know if there are any more such families. The family of polyhedra from the first image is only “sort-of-new” because the same combinatorial structure was previously described as a triangulation of the sphere by congruent spherical isosceles triangles: Dawson, Robert J. MacG. (2005), “Some new tilings of the sphere with congruent triangles”, Renaissance Banff. In exchange for re-purposing Dawson’s triangulation, my paper describes another infinite family of spherical triangulations by congruent spherical isosceles triangles, not given by Dawson, based on applying a similar \(2\pi/3\) twist to an infinite family of non-convex bipyramids with congruent isosceles faces like the one below. Again, I don’t know whether there are other such families of spherical triangulations. ↩</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>My latest arXiv preprint is “On polyhedral realization with isosceles triangles”, <a href="http://arxiv.org/abs/2009.00116">arXiv:2009.00116</a>. As the title suggests, it studies polyhedra whose faces are all isosceles triangles. Despite several new results in it, there’s a lot I still don’t know. The paper finds a sort-of-new<sup id="fnref:1"><a class="footnote" href="https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra.html#fn:1">1</a></sup> infinite family of polyhedra with congruent isosceles faces, shown below, but I don’t know if there are any more such families.</p>

<p style="text-align: center;"><img alt="Twisted augmented bipyramid with isosceles-triangle faces" src="https://11011110.github.io/blog/assets/2020/twisted.svg"/></p>

<p>One of the other previously known families, shown below, has two integer parameters (the numbers of sides on the two half-bipyramids it combines), but I don’t know whether the same double parameterization is possible for the new family.</p>

<p style="text-align: center;"><img alt="Combination of two half-bipyramids with isosceles-triangle faces" src="https://11011110.github.io/blog/assets/2020/biarc.svg" width="80%"/></p>

<p>In 2001, Branko Grünbaum published an example of a polyhedron that could not be realized with congruent faces, even non-convexly,<sup id="fnref:2"><a class="footnote" href="https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra.html#fn:2">2</a></sup> but it can be realized as a convex polyhedron with all faces isosceles (or equilateral), as shown below. I don’t know whether there are polyhedra that cannot be realized with all faces isosceles, if one allows the realization to be non-convex (but non-self-crossing and combinatorially equivalent to a convex polyhedron) and the faces to be non-congruent.</p>

<p style="text-align: center;"><img alt="Gr&#xFC;nbaum's example of a polyhedron that cannot be realized with congruent faces, realized convexly with isosceles and equilateral triangle faces" src="https://11011110.github.io/blog/assets/2020/grunbaum.svg"/></p>

<p>My new preprint proves that there exist polyhedra (iterated Kleetopes) that cannot be realized as convex polyhedra with isosceles faces. But the construction is a little non-explicit and I don’t know how complicated these polyhedra need to be. For instance, I don’t know whether there is a convex isosceles-face realization of the double Kleetope of the octahedron, shown below.</p>

<p style="text-align: center;"><img alt="Double Kleetope of an octahedron" src="https://11011110.github.io/blog/assets/2020/kkoct.svg"/></p>

<p>Grünbaum’s example can be realized convexly with only two edge lengths, and my non-isosceles-faced polyhedra require at least three edge lengths in any convex realization. I don’t know whether the number of required edge lengths can be unbounded, or whether non-convex realizations ever require three lengths (although certain stacked polyhedra require at least two).</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>The family of polyhedra from the first image is only “sort-of-new” because the same combinatorial structure was previously described as a triangulation of the sphere by congruent spherical isosceles triangles: Dawson, Robert J. MacG. (2005), “<a href="https://archive.bridgesmathart.org/2005/bridges2005-489.html">Some new tilings of the sphere with congruent triangles</a>”, Renaissance Banff. In exchange for re-purposing Dawson’s triangulation, my paper describes another infinite family of spherical triangulations by congruent spherical isosceles triangles, not given by Dawson, based on applying a similar \(2\pi/3\) twist to an infinite family of non-convex bipyramids with congruent isosceles faces like the one below. Again, I don’t know whether there are other such families of spherical triangulations.</p>

      <p style="text-align: center;"><img alt="Non-convex polyhedron with congruent isosceles-triangle faces" src="https://11011110.github.io/blog/assets/2020/nwb.svg"/> <a class="reversefootnote" href="https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra.html#fnref:1">↩</a></p>
    </li>
    <li id="fn:2">
      <p>Grünbaum, Branko (2001), “<a href="https://sites.math.washington.edu/~grunbaum/Nonequifacettablesphere.pdf">A convex polyhedron which is not equifacettable</a>”, <em>Geombinatorics</em> 10: 165–171. I don’t know how to access old papers on this journal in general, but fortunately Grünbaum made his one available on his web site. <a class="reversefootnote" href="https://11011110.github.io/blog/2020/09/01/isosceles-polyhedra.html#fnref:2">↩</a></p>
    </li>
  </ol>
</div></div>
    </content>
    <updated>2020-09-01T23:18:00Z</updated>
    <published>2020-09-01T23:18:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-09-02T06:49:15Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4407</id>
    <link href="https://lucatrevisan.wordpress.com/2020/09/01/time-flies-when-the-world-is-falling-apart/" rel="alternate" type="text/html"/>
    <title>Time Flies When the World is Falling Apart</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">It has been exactly one year since I moved to Italy. Coming here a year ago, I expected that I would face some challenges and that there would be major life changes. Obviously, I did not know the half of … <a href="https://lucatrevisan.wordpress.com/2020/09/01/time-flies-when-the-world-is-falling-apart/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>It has been exactly one year since I moved to Italy.</p>
<p>Coming here a year ago, I expected that I would face some challenges and that there would be major life changes. Obviously, I did not know the half of it.</p>
<p><span id="more-4407"/></p>
<p>In March and April, being in the hottest hot spot of a global pandemic was not ideal. Something rather unexpected, however, has happened. Italy is not known for very effective governance and Italians are not known as a rule-following people. Yet the government implemented a strict lockdown, and held it long enough that the “reopening” took place with a safely low circulation of the virus. People have been mostly following the rules after the reopening, and for most of the summer Italy has been doing quite well. (There has been a recent surge of new cases  in the last few weeks, so it may be too soon to declare victory, but the numbers of intensive care hospitalizations and of deaths are still low).</p>
<p>Meanwhile, there have been “second waves” in several other European countries and the situation in the United States, as the President memorably said, is what it is.</p>
<p>This picture by Noah Berger for AP has been circulating as the perfect description of what is going on in Northern California this summer</p>
<p><img alt="IMG_0077" class="alignnone size-full wp-image-4409" src="https://lucatrevisan.files.wordpress.com/2020/09/img_0077.jpeg?w=584"/></p>
<p>This New York Times headline also does a good job of packing at least five things that are wrong in California right now (the spread of covid-19, the overcrowding of prisons because of excessive sentencing, the budget cuts affecting firefighting efforts, the exploitation of prisoners for underpaid work, and the spread of wildfires) in a single sentence:</p>
<p><img alt="california-inmates" class="alignnone size-full wp-image-4410" src="https://lucatrevisan.files.wordpress.com/2020/09/california-inmates.png?w=584"/></p>
<p>At the cost of resorting to banalities and cliches, Italians often do badly when confronted with good opportunities and lucky breaks, that are often wasted, but we do unexpectedly well in times of crisis. This can even be seen in the national football team, that is known for epic come-from-behind victories and for missing penalty kicks. The American spirit is to be ambitious and optimistic, and to pursue high-risk high-reward opportunities when they present themselves. The flip side is that adversity is often met in America with either despair or anger, typically counterproductively. All things considered, I am happy that I am getting to spend 2020 in Italy. Earlier this summer, the president and the rector of Bocconi announced the new long-term strategic plan for the university, which involves creating a new computer science department. If/when such plans come to fruition, there will be several faculty positions in computer science, at internationally competitive salaries, with advantageous taxation for people moving to Italy from other countries, and with English as the language of instructions, so maybe you too will consider such a move.</p>
<p>Bocconi is preparing to restart in-person teaching in a couple of weeks. The plan is to record and post lectures, to allow students to attend lectures remotely if they prefer, and to use classrooms at most at half capacity. If a class has to be scheduled in a classroom whose capacity is less than twice the class enrollment, students will be split in two groups. Each group will (be allowed to) physically attend in alternating weeks, and will (be required to) attend online at other times.</p>
<p>The space between campus buildings has been marked with well-spaced walking paths, and there are even pedestrian roundabouts.</p>
<p><img alt="IMG_0122" class="alignnone size-full wp-image-4412" src="https://lucatrevisan.files.wordpress.com/2020/09/img_0122.jpeg?w=584"/></p>
<p>Are we heading for a second-wave disaster? Will students really follow the rules? On Sunday we were in Rome and we took a bus to the city center. Every other seat in the bus was marked with a “do not sit” sign to create distancing between sitting people. All marked seats were empty even as the bus was filling up and several people were standing. Then a group of German tourists got in, and they sat in all the forbidden seats. This is the upside-down world of 2020, all bets are off.</p></div>
    </content>
    <updated>2020-09-01T17:36:01Z</updated>
    <published>2020-09-01T17:36:01Z</published>
    <category term="Bocconi"/>
    <category term="Italy"/>
    <category term="philosophy"/>
    <category term="politics"/>
    <category term="things that are terrible"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-09-03T13:20:09Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-4647242799583898034</id>
    <link href="https://blog.computationalcomplexity.org/feeds/4647242799583898034/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/09/a-well-known-theorem-that-has-not-been.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/4647242799583898034" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/4647242799583898034" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/09/a-well-known-theorem-that-has-not-been.html" rel="alternate" type="text/html"/>
    <title>A well known theorem that has not been written down- so I wrote it down- CLIQ is #P-complete</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>(The two proofs that CLIQ is #P-complete that I discuss in this blog are written up by Lance and myself and are <a href="https://www.cs.umd.edu/users/gasarch/BLOGPAPERS/sharpclique.pdf">here</a>. I think both are well known but I have not been able to find a writeup,so Lance and I did one.)</p><p><br/></p><p> I have been looking at #P (see my last blog on it it, <a href="https://blog.computationalcomplexity.org/2020/08/sharp-p-and-issue-of-natural-problems.html">here</a>, for a refresher on this topic) since I will be teaching this topic in Spring 2021.  Recall</p><p>#SAT(\phi) = the number of satisfying assignments for phi</p><p>#CLIQ((G,k))= the number of cliques of size \ge k of G</p><p>#SAT is #P-complete by a cursory look at the proof of the Cook-Levin theorem.</p><p>A function is #P-complete if everything else in #P is Turing-Poly red to it. To show for some set A </p><p>in NP, #A is #P-complete one usually uses pars reductions. </p><p>I wanted a proof that #CLIQ is #P-complete, so I wanted a parsimonious reduction from SAT to CLIQ (Thats a reduction f: SAT--&gt; CLIQ such that the number of satisfying assignments of phi equals the number of cliques of size \ge k of G.)</p><p>I was sure there is such a reduction and that it was well known and would be on the web someplace. So I tried to find it.</p><p>ONE:</p><p>I tracked some references to a paper by Janos Simon (<a href="https://link.springer.com/content/pdf/10.1007%2F3-540-08342-1_37.pdf">see here</a>)  where he claims that the reduction of SAT to CLIQ  by Karp <a href="https://blog.computationalcomplexity.org/feeds/posts/{http://cgi.di.uoa.gr/~sgk/teaching/grad/handouts/karp.pdf">(see here)</a> was pars.  I had already considered that and decided that Karps reduction was NOT pars.  I looked at both Simon's paper and Karp's paper to make sure I wasn't missing something (e.g., I misunderstood what Simon Says or what Karp ... darn, I can't think of anything as good as `Simon Says'). It seemed to me that Simon was incorrect. If I am wrong let me know.</p><p>TWO</p><p>Someone told me that it was in Valiant's  paper (see <a href="https://epubs.siam.org/doi/10.1137/0208032">here</a>). Nope. Valiant's paper shows that counting the number of maximal cliques is #P-complete. Same Deal Here- if I am wrong let me know. One can modify Valiant's argument to get #CLIQ #P-complete, and I do so in the write up. The proof is a string of reductions and starts with PERM is #P-complete. This does prove that# CLIQ is  #P-complete, but is rather complicated. Also, the reduction is not pars.</p><p>THREE <br/>Lance told me an easy pars reduction that is similar to Karp's non-pars reduction, but it really is NOT Karp's reduction. Its in my write up. I think it is well known since I recall hearing it about 10 years ago. From Lance. Hmmm, maybe its just well known to Lance.</p><p><br/></p><p>But here is my question: I am surprised I didn't find it on the web. If someone can point to a place on the web where it is, please let me know. In any case, its on the web NOW (my write up) so hopefully in the future someone else looking for it can find it.</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p></div>
    </content>
    <updated>2020-09-01T15:29:00Z</updated>
    <published>2020-09-01T15:29:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-09-03T08:12:24Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/09/01/quics-hartree-postdoctoral-fellowships-at-joint-center-for-quantum-information-and-computer-science-apply-by-december-1-2020/</id>
    <link href="https://cstheory-jobs.org/2020/09/01/quics-hartree-postdoctoral-fellowships-at-joint-center-for-quantum-information-and-computer-science-apply-by-december-1-2020/" rel="alternate" type="text/html"/>
    <title>QuICS Hartree Postdoctoral Fellowships at Joint Center for Quantum Information and Computer Science (apply by December 1, 2020)</title>
    <summary>The Joint Center for Quantum Information and Computer Science (QuICS, http://quics.umd.edu) is seeking exceptional candidates for the QuICS Hartree Postdoctoral Fellowships in Quantum Information and Computer Science. Applications should be submitted through AcademicJobsOnline at https://academicjobsonline.org/ajo/jobs/16778. Website: https://academicjobsonline.org/ajo/jobs/16778 Email: quics-coordinator@umiacs.umd.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Joint Center for Quantum Information and Computer Science (QuICS, <a href="http://quics.umd.edu">http://quics.umd.edu</a>) is seeking exceptional candidates for the QuICS Hartree Postdoctoral Fellowships in Quantum Information and Computer Science.<br/>
Applications should be submitted through AcademicJobsOnline at <a href="https://academicjobsonline.org/ajo/jobs/16778.">https://academicjobsonline.org/ajo/jobs/16778.</a></p>
<p>Website: <a href="https://academicjobsonline.org/ajo/jobs/16778">https://academicjobsonline.org/ajo/jobs/16778</a><br/>
Email: quics-coordinator@umiacs.umd.edu</p></div>
    </content>
    <updated>2020-09-01T14:39:18Z</updated>
    <published>2020-09-01T14:39:18Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-25562705.post-7958692547156288391</id>
    <link href="http://aaronsadventures.blogspot.com/feeds/7958692547156288391/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://www.blogger.com/comment.g?blogID=25562705&amp;postID=7958692547156288391" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/25562705/posts/default/7958692547156288391" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/25562705/posts/default/7958692547156288391" rel="self" type="application/atom+xml"/>
    <link href="http://aaronsadventures.blogspot.com/2020/07/the-existence-of-no-regret-learning.html" rel="alternate" type="text/html"/>
    <title>No Regret Algorithms from the Min Max Theorem</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The existence of no-regret learning algorithms can be used to prove <a href="https://en.wikipedia.org/wiki/Minimax_theorem">Von-Neumann's min-max theorem</a>. This argument is originally due to <a href="https://www.cs.princeton.edu/~schapire/papers/FreundScYY.pdf">Freund and Schapire</a>, and I <a href="https://www.cis.upenn.edu/~aaroth/courses/slides/agt20/lect08.pdf">teach it to my undergraduates </a>in my algorithmic game theory class. The min-max theorem also can be used to prove the existence of no-regret learning algorithms. Here is a constructive version of the argument (Constructive in that in the resulting algorithm, you only need to solve polynomially sized zero-sum games, so you can do it via linear programming).<div><br/></div><div>Recall the setting. Play proceeds in rounds $t \in \{1,\ldots,T\}$. At each day $t$, the learner chooses one of $k$ actions $i_t \in \{1,\ldots,k\}$, and the adversary chooses a loss vector $\ell^t \in [0,1]^k$. The learner incurs loss $\ell^t_{i_t}$, corresponding to the action he chose. At the end of the interaction, the regret of the learner is defined to be the difference between the cumulative loss he incurred and the cumulative loss of the best fixed action (played consistently)  in hindsight:</div><div>$$\textrm{Regret}_T = \max_j \left(\sum_{t=1}^T \ell^t_{i_t} - \ell^t_j\right)$$ </div><div>A classical and remarkable result is that there exist algorithms that can guarantee that regret grows only sublinearly with time: $\textrm{Regret}_T = O(\sqrt{T})$. Lets prove this. </div><div><br/></div><div><br/></div><div>Define the non-negative portion of our cumulative regret with respect to action $j$ up until day $d$ as:</div><div>$$V_d^j = \left(\sum_{t=1}^d\left(\ell^t_{i_t} - \ell^t_j\right)\right)^+$$</div><div>and our additional regret at day $d+1$ with respect to action $j$ as:</div><div>$$r_{j}^{d+1} = \ell_{i_{d+1}}^{d+1} - \ell^{d+1}_j$$</div><div>Observe that if $V_{d}^j \geq 1$  then $V_{d+1}^j = V_d^j + r_j^{d+1}$. </div><div><br/></div><div><br/></div><div>Define a surrogate loss function as our squared cumulative regrets, summed over all actions: </div><div>$$L_d = \sum_{j=1}^k (V_d^j)^2$$</div><div>Observe that we can write the expected gain in our loss on day $d+1$, conditioned on the history thus far:</div><div>$$\mathbb{E}[L_{d+1} - L_d] \leq \sum_{j : V_d^j \geq 1} \mathbb{E}[(V_d^j+r_j^{d+1})^2 - (V_d^j)^2) ] + 3k$$</div><div>$$= \sum_{j : V_d^j \geq 1} \left(2V_d^j \mathbb{E}[r_{j}^{d+1}] + \mathbb{E}[(r_{j}^{d+1})^2]\right) + 3k $$</div><div>$$\leq \sum_{j=1}^k \left(2V_d^j \mathbb{E}[r_{j}^{d+1}]\right) + 4k$$</div><div>where the expectations are taken over the randomness of both the learner and the adversary in round $d+1$. </div><div><br/></div><div>Now consider a zero-sum game played between the learner and the adversary in which the learner is the minimization player, the adversary is the maximization player, and the utility function is $$u(i_{d+1}, \ell^{d+1}) = \sum_{j=1}^k \left(2V_d^j \mathbb{E}[r_{j}^{d+1}]\right)$$ The min-max theorem says that the learner can guarantee the same payoff for herself in the following two scenarios:</div><div><br/></div><div><ol style="text-align: left;"><li>The learner first has to commit to playing a distribution $p_{d+1}$ over actions $i$, and then the adversary gets to best respond by picking the worst possible loss vectors, or</li><li>The adversary has to first commit to a distribution over loss vectors $\ell$ and then the learner gets the benefit of picking the best action $i_{d+1}$ to respond with. </li></ol>Scenario 1) is the scenario our learner finds herself in, when playing against an adaptive adversary. But 2) is much easier to analyze. If the adversary first commits to a distribution over loss vectors $\ell^{d+1}$, the learner can always choose action $i_{d+1} = \arg\min_j \mathbb{E}[\ell^{d+1}_j]$, which guarantees that $\mathbb{E}[r_{j}^{d+1}] \leq 0$, which in turn guarantees that the value of the game $ \sum_{j=1}^k \left(2V_d^j \mathbb{E}[r_{j}^{d+1}]\right) \leq 0$.  Hence, the min-max theorem tells us that the learner always has a distribution over actions $p_{d+1}$ that guarantees that $\mathbb{E}[L_{d+1} - L_d] \leq 4k$, <i>even in the worst case over loss functions</i>. If the learner always plays according to this distribution, then by a telescoping sum, we have that:</div><div>$$\mathbb{E}[L_T] \leq 4kT$$.</div><div>We therefore have by Jensen's inequality that:</div><div>$$\mathbb{E}[\max_j (V^j_T)] \leq \sqrt{\mathbb{E}[\max_j (V^j_T)^2]}\leq \sqrt{\mathbb{E}[\sum_{j=1}^k (V_j^T)^2]} \leq 2\sqrt{kT}$$.</div></div>
    </content>
    <updated>2020-09-01T14:16:00Z</updated>
    <published>2020-09-01T14:16:00Z</published>
    <author>
      <name>Aaron</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/09952936358739421126</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-25562705</id>
      <category term="game theory"/>
      <category term="news"/>
      <author>
        <name>Aaron</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/09952936358739421126</uri>
      </author>
      <link href="http://aaronsadventures.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/25562705/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://aaronsadventures.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/25562705/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <title>Adventures in Computation</title>
      <updated>2020-09-03T08:11:39Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/09/01/postdoc-at-tu-hamburg-apply-by-september-30-2020/</id>
    <link href="https://cstheory-jobs.org/2020/09/01/postdoc-at-tu-hamburg-apply-by-september-30-2020/" rel="alternate" type="text/html"/>
    <title>postdoc at TU Hamburg (apply by September 30, 2020)</title>
    <summary>The Institute for Algorithms and Complexity at TUHH: Hamburg University of Technology invites applications for a 5-year postdoc position (attached to DASHH: Data Science in Hamburg). The focus is on algorithms, applied to combinatorial optimization, operations research, and discrete mathematics in the natural sciences, particularly on big data obtained at Germany’s largest particle accelerator. Website: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Institute for Algorithms and Complexity at TUHH: Hamburg University of Technology invites applications for a 5-year postdoc position (attached to DASHH: Data Science in Hamburg). The focus is on algorithms, applied to combinatorial optimization, operations research, and discrete mathematics in the natural sciences, particularly on big data obtained at Germany’s largest particle accelerator.</p>
<p>Website: <a href="https://www.tuhh.de/algo/jobs.html">https://www.tuhh.de/algo/jobs.html</a><br/>
Email: matthias.mnich@tuhh.de</p></div>
    </content>
    <updated>2020-09-01T08:46:00Z</updated>
    <published>2020-09-01T08:46:00Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/icml2020/</id>
    <link href="https://differentialprivacy.org/icml2020/" rel="alternate" type="text/html"/>
    <title>Conference Digest - ICML 2020</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://icml.cc/virtual/2020">ICML 2020</a> is one of the premiere venues in machine learning, and generally features a lot of great work in differentially private machine learning.
This year is no exception: the relevant papers are listed below to the best of our ability, including links to the full versions of papers, as well as the conference pages (which contain slides and 15 minute videos for each paper).
As always, please inform us if we overlooked any papers on differential privacy.</p>

<h2 id="papers">Papers</h2>

<ul>
  <li>
    <p><a href="https://arxiv.org/abs/1909.12732">Alleviating Privacy Attacks via Causal Learning</a> (<a href="https://icml.cc/virtual/2020/poster/6346">page</a>)<br/>
<a href="https://www.microsoft.com/en-us/research/people/shtople/">Shruti Tople</a>, <a href="http://www.amitsharma.in/">Amit Sharma</a>, <a href="https://www.microsoft.com/en-us/research/people/adityan/">Aditya Nori</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1805.10341">An end-to-end Differentially Private Latent Dirichlet Allocation Using a Spectral Algorithm</a> (<a href="https://icml.cc/virtual/2020/poster/6240">page</a>)<br/>
<a href="https://github.com/dpeng817">Chris DeCarolis</a>, <a href="https://twitter.com/exsidius">Mukul Ram</a>, <a href="https://www.cs.umd.edu/people/sesmaeil">Seyed Esmaeili</a>, <a href="https://sites.cs.ucsb.edu/~yuxiangw/">Yu-Xiang Wang</a>, <a href="http://furong-huang.com/">Furong Huang</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1901.09697">Bayesian Differential Privacy for Machine Learning</a> (<a href="https://icml.cc/virtual/2020/poster/6547">page</a>)<br/>
<a href="https://scholar.google.com/citations?user=BCWx7iQAAAAJ">Aleksei Triastcyn</a>, <a href="https://people.epfl.ch/boi.faltings">Boi Faltings</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1911.03030">Certified Data Removal from Machine Learning Models</a> (<a href="https://icml.cc/virtual/2020/poster/5895">page</a>)<br/>
<a href="https://sites.google.com/view/chuanguo">Chuan Guo</a>, <a href="https://www.cs.umd.edu/~tomg/">Tom Goldstein</a>, <a href="https://awnihannun.com/">Awni Hannun</a>, <a href="https://lvdmaaten.github.io/">Laurens van der Maaten</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1911.00038">Context Aware Local Differential Privacy</a> (<a href="https://icml.cc/virtual/2020/poster/5775">page</a>)<br/>
<a href="https://people.ece.cornell.edu/acharya/">Jayadev Acharya</a>, <a href="https://research.google/people/105175/">Kallista Bonawitz</a>, <a href="https://kairouzp.github.io/">Peter Kairouz</a>, <a href="https://research.google/people/106777/">Daniel Ramage</a>, <a href="http://www.zitengsun.com/">Ziteng Sun</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1905.12813">Data-Dependent Differentially Private Parameter Learning for Directed Graphical Models</a> (<a href="https://icml.cc/virtual/2020/poster/6262">page</a>)<br/>
<a href="https://scholar.google.com/citations?user=lWWAZ4YAAAAJ">Amrita Roy Chowdhury</a>, <a href="http://pages.cs.wisc.edu/~thodrek/">Theodoros Rekatsinas</a>, <a href="http://pages.cs.wisc.edu/~jha/">Somesh Jha</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.09745">Differentially Private Set Union</a> (<a href="https://icml.cc/virtual/2020/poster/6541">page</a>)<br/>
<a href="https://www.microsoft.com/en-us/research/people/sigopi/">Sivakanth Gopi</a>, <a href="https://www.linkedin.com/in/pankajgulhane/">Pankaj Gulhane</a>, <a href="https://www.microsoft.com/en-us/research/people/jakul/">Janardhan Kulkarni</a>, <a href="https://heyyjudes.github.io/">Judy Hanwen Shen</a>, <a href="https://www.microsoft.com/en-us/research/people/milads/">Milad Shokouhi</a>, <a href="http://www.yekhanin.org/">Sergey Yekhanin</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.11651">Fair Learning with Private Demographic Data</a> (<a href="https://icml.cc/virtual/2020/poster/6499">page</a>)<br/>
<a href="https://husseinmozannar.github.io/">Hussein Mozannar</a>, <a href="https://sites.google.com/site/mesrob/home/">Mesrob Ohannessian</a>, <a href="https://ttic.uchicago.edu/~nati/">Nathan Srebro</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.15744">Fast and Private Submodular and $k$-Submodular Functions Maximization with Matroid Constraint</a> (<a href="https://icml.cc/virtual/2020/poster/6365">page</a>)<br/>
<a href="https://dblp.org/pid/166/1694.html">Akbar Rafiey</a>, <a href="http://research.nii.ac.jp/~yyoshida/">Yuichi Yoshida</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2006.00706">(Locally) Differentially Private Combinatorial Semi-Bandits</a> (<a href="https://icml.cc/virtual/2020/poster/6315">page</a>)<br/>
<a href="https://scholar.google.com/citations?user=sioumZAAAAAJ">Xiaoyu Chen</a>, <a href="https://scholar.google.com/citations?user=Bw-WdyUAAAAJ">Kai Zheng</a>, <a href="https://twitter.com/zixinjackzhou">Zixin Zhou</a>, <a href="https://scholar.google.com/citations?user=m8m9nD0AAAAJ">Yunchang Yang</a>, <a href="https://www.microsoft.com/en-us/research/people/weic/">Wei Chan</a>, <a href="http://www.liweiwang-pku.com/">Liwei Wang</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2007.05453">New Oracle-Efficient Algorithms for Private Synthetic Data Release</a> (<a href="https://icml.cc/virtual/2020/poster/5814">page</a>)<br/>
<a href="https://sites.google.com/umn.edu/giuseppe-vietri/home">Giuseppe Vietri</a>, <a href="https://scholar.google.com/citations?user=dDVIyEQAAAAJ">Grace Tian</a>, <a href="https://cs-people.bu.edu/mbun/">Mark Bun</a>, <a href="http://www.thomas-steinke.net/">Thomas Steinke</a>, <a href="https://zstevenwu.com/">Zhiwei Steven Wu</a></p>
  </li>
  <li>
    <p><a href="https://proceedings.icml.cc/static/paper_files/icml/2020/1190-Paper.pdf">On Differentially Private Stochastic Convex Optimization with Heavy-tailed Data</a> (<a href="https://icml.cc/virtual/2020/poster/5948">page</a>)<br/>
<a href="http://www.acsu.buffalo.edu/~dwang45/">Di Wang</a>, <a href="https://scholar.google.com/citations?user=e3ZhEDEAAAAJ">Hanshen Xiao</a>, <a href="https://people.csail.mit.edu/devadas/">Srinivas Devadas</a>, <a href="https://cse.buffalo.edu/~jinhui/">Jinhui Xu</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1909.13830">Optimal Differential Privacy Composition for Exponential Mechanisms</a> (<a href="https://icml.cc/virtual/2020/poster/6687">page</a>)<br/>
<a href="https://www.math.upenn.edu/~jinshuo/">Jinshuo Dong</a>, <a href="https://dblp.org/pid/155/9794.html">David Durfee</a>, <a href="https://scholar.google.com/citations?user=jr7gGB4AAAAJ">Ryan Rogers</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1909.01783">Oracle Efficient Private Non-Convex Optimization</a> (<a href="https://icml.cc/virtual/2020/poster/5815">page</a>)<br/>
<a href="https://sethneel.com/">Seth Neel</a>, <a href="https://www.cis.upenn.edu/~aaroth/">Aaron Roth</a>, <a href="https://sites.google.com/umn.edu/giuseppe-vietri/home">Giuseppe Vietri</a>, <a href="https://zstevenwu.com/">Zhiwei Steven Wu</a></p>
  </li>
  <li>
    <p><a href="https://proceedings.icml.cc/static/paper_files/icml/2020/2341-Paper.pdf">Private Counting from Anonymous Messages: Near-Optimal Accuracy with Vanishing Communication Overhead</a> (<a href="https://icml.cc/virtual/2020/poster/6134">page</a>)<br/>
<a href="https://sites.google.com/view/badihghazi/home">Badih Ghazi</a>, <a href="https://sites.google.com/site/ravik53/">Ravi Kumar</a>, <a href="https://pasin30055.github.io/">Pasin Manurangsi</a>, <a href="https://www.itu.dk/people/pagh/">Rasmus Pagh</a></p>
  </li>
  <li>
    <p><a href="https://proceedings.icml.cc/static/paper_files/icml/2020/6298-Paper.pdf">Private Outsourced Bayesian Optimization</a> (<a href="https://icml.cc/virtual/2020/poster/6783">page</a>)<br/>
<a href="https://scholar.google.com/citations?user=7_2XTQ8AAAAJ">Dmitrii Kharkovskii</a>, <a href="https://daizhongxiang.github.io/">Zhongxiang Dai</a>, <a href="https://www.comp.nus.edu.sg/~lowkh/research.html">Bryan Kian Hsiang Low</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2004.10941">Private Query Release Assisted by Public Data</a> (<a href="https://icml.cc/virtual/2020/poster/6329">page</a>)<br/>
<a href="https://sites.google.com/view/rbassily">Raef Bassily</a>, <a href="https://www.ccs.neu.edu/home/albertcheu/">Albert Cheu</a>, <a href="http://www.cs.technion.ac.il/~shaymrn/">Shay Moran</a>, <a href="http://www.cs.toronto.edu/~anikolov/">Aleksandar Nikolov</a>, <a href="https://www.ccs.neu.edu/home/jullman/">Jonathan Ullman</a>, <a href="https://zstevenwu.com/">Zhiwei Steven Wu</a></p>
  </li>
  <li>
    <p><a href="https://proceedings.icml.cc/static/paper_files/icml/2020/2453-Paper.pdf">Private Reinforcement Learning with PAC and Regret Guarantees</a> (<a href="https://icml.cc/virtual/2020/poster/6152">page</a>)<br/>
<a href="https://sites.google.com/umn.edu/giuseppe-vietri/home">Giuseppe Vietri</a>, <a href="https://borjaballe.github.io/">Borja Balle</a>, <a href="https://people.cs.umass.edu/~akshay/">Akshay Krishnamurthy</a>, <a href="https://zstevenwu.com/">Zhiwei Steven Wu</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1910.01327">Privately Detecting Changes in Unknown Distributions</a> (<a href="https://icml.cc/virtual/2020/poster/5854">page</a>)<br/>
<a href="https://sites.gatech.edu/rachel-cummings/">Rachel Cummings</a>, <a href="https://sites.google.com/view/skrehbiel/home">Sara Krehbiel</a>, <a href="https://scholar.google.com/citations?user=ayasb_wAAAAJ">Yuliia Lut</a>, <a href="https://wanrongz.github.io/">Wanrong Zhang</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2002.09463">Privately Learning Markov Random Fields</a> (<a href="https://icml.cc/virtual/2020/poster/5776">page</a>)<br/>
<a href="https://huanyuzhang.github.io/">Huanyu Zhang</a>, <a href="http://www.gautamkamath.com/">Gautam Kamath</a>, <a href="https://www.microsoft.com/en-us/research/people/jakul/">Janardhan Kulkarni</a>, <a href="https://zstevenwu.com/">Zhiwei Steven Wu</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/1903.09822">Scalable Differential Privacy with Certified Robustness in Adversarial Learning</a> (<a href="https://icml.cc/virtual/2020/poster/6401">page</a>)<br/>
<a href="https://sites.google.com/site/ihaiphan/">NhatHai Phan</a>, <a href="https://www.cise.ufl.edu/~mythai/">My T. Thai</a>, <a href="https://scholar.google.com/citations?user=OgXtPDIAAAAJ">Han Hu</a>, <a href="http://www.cs.kent.edu/~jin/">Ruoming Jin</a>, <a href="https://research.adobe.com/person/tong-sun/">Tong Sun</a>, <a href="https://ix.cs.uoregon.edu/~dou/">Dejing Dou</a></p>
  </li>
  <li>
    <p><a href="https://arxiv.org/abs/2003.04493">Sharp Composition Bounds for Gaussian Differential Privacy via Edgeworth Expansion</a> (<a href="https://icml.cc/virtual/2020/poster/6734">page</a>)<br/>
<a href="https://enosair.github.io/">Qinqing Zheng</a>, <a href="https://www.math.upenn.edu/~jinshuo/">Jinshuo Dong</a>, <a href="https://www.med.upenn.edu/apps/faculty/index.php/g275/p8939931">Qi Long</a>, <a href="http://www-stat.wharton.upenn.edu/~suw/">Weijie J. Su</a></p>
  </li>
</ul></div>
    </summary>
    <updated>2020-08-31T18:00:00Z</updated>
    <published>2020-08-31T18:00:00Z</published>
    <author>
      <name>Gautam Kamath</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-09-02T23:38:48Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17496</id>
    <link href="https://rjlipton.wordpress.com/2020/08/31/mea-culpa/" rel="alternate" type="text/html"/>
    <title>Mea Culpa</title>
    <summary>Plus more on the separating word problem Mea Culpa is not someone we introduced on the blog before. She does not come from the same world as Lofa Polir or Neil L. As in the French movie poster at right, the meaning is “my fault.” Today we apologize for some oversights and hasty omissions regarding […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Plus more on the separating word problem</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.wordpress.com/2020/08/31/mea-culpa/mea/" rel="attachment wp-att-17499"><img alt="" class="alignright wp-image-17499" height="147" src="https://rjlipton.files.wordpress.com/2020/08/mea.jpg?w=110&amp;h=147" width="110"/></a></p>
<p>
Mea Culpa is not someone we introduced on the blog before. She does not come from the same world as Lofa Polir or Neil L. As in the French <a href="https://en.wikipedia.org/wiki/Mea_Culpa_(film)">movie</a> poster at right, the meaning is “my fault.”</p>
<p/><p>
Today we apologize for some oversights and hasty omissions regarding the last <a href="https://rjlipton.wordpress.com/2020/08/29/20000-comments-and-more/">post</a>. Then we will explain Dick’s “laws with errors”.</p>
<p>
Let’s be clear. The paper we discussed in the last post claiming an order <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> upper bound is wrong. The best upper bound is still due to Zachary Chase and is order <img alt="{n^{1/3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7B1%2F3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n^{1/3}}"/>, with some log’s. </p>
<p>
At GLL we try to be fair and upbeat, especially with proof attempts. We know how hard it is to put yourself out there when you claim a new result. Whether for a famous open problem or not, it is always difficult. Mistakes are possible, miss understandings are possible. </p>
<p>
But perhaps this time we have gone too far, and for that we apologize. We just love the SWP, and want to reiterate the idea the post was supposed to be (only) about, an approach to SWP. </p>
<p>
There is also Nostra Culpa—“our fault,” Ken says too.  Not only is there a short <a href="https://www.imdb.com/title/tt8513100/">film</a> with that title, there is a 2013 one-singer <a href="https://www.youtube.com/watch?v=t2paj1mrCQI">opera</a> of that title with libretto drawn from a 2012 Twitter <a href="https://news.err.ee/106193/nostra-culpa-an-interview-with-the-writers-of-a-financial-opera">feud</a> between the economist Paul Krugman and the president of Estonia. At least our issue did not break out on Twitter. We were instead contacted privately by some friends who knew more about the erroneous paper highlighted in our post. We could have contacted them first—that was our omission.</p>
<p>
Again sorry for any confusion we created. Let’s turn to the approach we want to share about SWP.</p>
<p>
</p><p/><h2> Laws with Errors </h2><p/>
<p/><p>
I think there is hope that positive laws must be large, especially if we extend what it mean by a law. Consider a positive law 	</p>
<p align="center"><img alt="\displaystyle  U = V, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++U+%3D+V%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  U = V, "/></p>
<p>where <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/> are words over the letters <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/>. Recall we can tell if <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/> are different provided there is a finite group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> so that for some <img alt="{A,B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%2CB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A,B}"/> in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> the value of <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/> are different. This can be computed by a FSA with at most order <img alt="{|G|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CG%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|G|}"/> states. So the smaller <img alt="{|G|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CG%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|G|}"/> is the better. </p>
<p>
The trouble is it does not seem to the case that strong enough lower bounds are known for positive laws. This suggest that we make it harder for a law to work. </p>
<p>
The idea is to use a FST, that is a finite state transducer. This is a finite state device that reads a symbol, updates its state, and outputs one or more symbols. If <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T}"/> is the FST and <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> is a string, let <img alt="{T(U)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%28U%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T(U)}"/> be the result of applying <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T}"/>. For example, suppose that <img alt="{ABBBAB}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BABBBAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{ABBBAB}"/> is an input <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/>. Let the transducer add a <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/> after each <img alt="{AB}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{AB}"/>. Thus <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> maps to: 	</p>
<p align="center"><img alt="\displaystyle  ABCBBABC. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++ABCBBABC.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  ABCBBABC. "/></p>
<p>	 Then the following is true: </p>
<blockquote><p><b>Lemma 1</b> <em> Let <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> be group and let <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{T}"/> be a transducer with <img alt="{S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{S}"/> states. Then we can separate <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{U}"/> from <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{V}"/> by a FSA with order <img alt="{|G| \cdot S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CG%7C+%5Ccdot+S%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{|G| \cdot S}"/> states provided 	</em></p><em>
<p align="center"><img alt="\displaystyle  T(U) = T(V) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++T%28U%29+%3D+T%28V%29+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  T(U) = T(V) "/></p>
</em><p><em>is not a law in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/>. </em>
</p></blockquote>
<p/><p>
<em>Proof:</em>  The key is to simulate <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T}"/> as we read the input, and at the same time update the group element. This can be done by a FSA with the product <img alt="{|G|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CG%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|G|}"/> and <img alt="{S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S}"/> states. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
The hope is that having a law that is invariant for all FST, even only those with few states, is difficult. </p>
<blockquote><p><b> </b> <em> <b>A conjecture</b>: Positive laws that can handle all FST transducers with <img alt="{n^{\epsilon}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Cepsilon%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{n^{\epsilon}}"/> states must be large. </em>
</p></blockquote>
<p>That is are large enough to advance our best bounds on SWP. What do you think?</p>
<p/></font></font></div>
    </content>
    <updated>2020-08-31T13:41:04Z</updated>
    <published>2020-08-31T13:41:04Z</published>
    <category term="Open Problems"/>
    <category term="People"/>
    <category term="Proofs"/>
    <category term="Results"/>
    <category term="claims"/>
    <category term="mistake"/>
    <category term="open problem"/>
    <category term="separate words"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-09-03T13:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://nisheethvishnoi.wordpress.com/?p=99</id>
    <link href="https://nisheethvishnoi.wordpress.com/2020/08/31/algorithms-for-convex-optimization-book/" rel="alternate" type="text/html"/>
    <title>Algorithms for Convex Optimization Book</title>
    <summary>I am excited to announce that a pre-publication draft of my book Algorithms for Convex Optimization (to be published by Cambridge University Press) is now available for download here: Algorithms for Convex Optimization Book The goal of this book is to enable a reader to gain an in-depth understanding of algorithms for convex optimization. The emphasis is […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I am excited to announce that a pre-publication draft of my book <strong>Algorithms for Convex Optimization</strong> (to be published by Cambridge University Press) is now available for download here:</p>
<p><a href="https://convex-optimization.github.io/">Algorithms for Convex Optimization Book</a></p>
<p>The goal of this book is to enable a reader to gain an in-depth understanding of algorithms for convex optimization. The emphasis is to derive key algorithms for convex optimization from first principles and to establish precise running time bounds in terms of the input length.</p>
<p>The intended audience includes advanced undergraduate students, graduate students and researches from theoretical computer science, discrete optimization, and machine learning.</p>
<div class="page" title="Page 8">
<div class="layoutArea">
<div class="column">
<p>The book has four parts:</p>
</div>
</div>
</div>
<ol>
<li class="p1">Chapters 3,4, and 5: Introduction to convexity, models of computation and notions of efficiency in convex optimization, Lagrangian duality, Legendre-Fenchel duality, and KKT conditions.</li>
<li class="p1">Chapters 6,7, and 8: First-order methods such as gradient descent, mirror descent and the multiplicative weights update method, and accelerated gradient descent.</li>
<li class="p1">Chapters 9,10, and 11: Newton’s method, path-following interior point methods for linear programming, and self-concordant barrier functions.</li>
<li class="p1">Chapter 11 and 12: Cutting plane methods such as the ellipsoid method for linear and general convex programs.</li>
</ol>
<p class="p1">Chapter 1 summarizes the book via a brief history of the interplay between continuous and discrete optimization: how the search for fast algorithms for discrete problems is leading to improvements in algorithms for convex optimization.</p>
<p class="p1">Many chapters contain applications ranging from finding maximum flows, minimum cuts, and perfect matchings in graphs, to linear optimization over 0-1-polytopes, to submodular function minimization, to computing maximum entropy distributions over combinatorial polytopes.</p>
<p class="p1">The book is self-contained and starts with a review of calculus, linear algebra, geometry, dynamical systems, and graph theory in Chapter 2. Exercises posed in this book not only play an important role in checking one’s understanding, but sometimes important methods and concepts are introduced and developed entirely through them. Examples include the Frank-Wolfe method, coordinate descent, stochastic gradient descent, online convex optimization, the min-max theorem for zero-sum games, the Winnow algorithm for classification, the conjugate gradient method, primal-dual interior point method, and matrix scaling.</p>
<p>Feedback, corrections, and comments are welcome.</p></div>
    </content>
    <updated>2020-08-31T13:30:40Z</updated>
    <published>2020-08-31T13:30:40Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>nisheethvishnoi</name>
    </author>
    <source>
      <id>https://nisheethvishnoi.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://nisheethvishnoi.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://nisheethvishnoi.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://nisheethvishnoi.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://nisheethvishnoi.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Algorithms, Nature, and Society</title>
      <updated>2020-09-03T13:21:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/08/31/postdoc-at-epfl-apply-by-september-13-2020/</id>
    <link href="https://cstheory-jobs.org/2020/08/31/postdoc-at-epfl-apply-by-september-13-2020/" rel="alternate" type="text/html"/>
    <title>postdoc at EPFL (apply by September 13, 2020)</title>
    <summary>Applications are solicited for postdoctoral positions in all aspects of Theoretical Computer Science at EPFL. Each position will be for a period of up to two years and comes with a competitive salary and generous travel support. Website: https://theory.epfl.ch/postdoc.html Email: tcs-postdoc@groupes.epfl.ch</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Applications are solicited for postdoctoral positions in all aspects of Theoretical Computer Science at EPFL. Each position will be for a period of up to two years and comes with a competitive salary and generous travel support.</p>
<p>Website: <a href="https://theory.epfl.ch/postdoc.html">https://theory.epfl.ch/postdoc.html</a><br/>
Email: tcs-postdoc@groupes.epfl.ch</p></div>
    </content>
    <updated>2020-08-31T08:29:08Z</updated>
    <published>2020-08-31T08:29:08Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=4942</id>
    <link href="https://www.scottaaronson.com/blog/?p=4942" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=4942#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=4942" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">My new motto</title>
    <summary xml:lang="en-US">Update (Sep 1): Thanks for the comments, everyone! As you can see, I further revised this blog’s header based on the feedback and on further reflection. The Right could only kill me and everyone I know.The Left is scarier; it could convince me that it was my fault! (In case you missed it on the […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><strong><span class="has-inline-color has-vivid-red-color">Update (Sep 1):</span></strong> Thanks for the comments, everyone!  As you can see, I further revised this blog’s header based on the feedback and on further reflection.<br/><br/><strong>The Right could only kill me and everyone I know.<br/>The Left is scarier; it could convince me that it was my fault</strong>!</p>



<p>(In case you missed it on the blog’s revised header, right below “Quantum computers aren’t just nondeterministic Turing machines” and “Hold the November US election by mail.”  I added an exclamation point at the end to suggest a <em>slightly</em> comic delivery.)</p>



<p><strong><span class="has-inline-color has-vivid-red-color">Update:</span></strong> A friend expressed concern that, because my new motto appears to “blame both sides,” it might generate confusion about my sympathies or what I want to happen in November.  So to eliminate all ambiguity: I hereby announce that I will match all reader donations made in the next 72 hours to either the <a href="https://secure.actblue.com/donate/duforjoe">Biden-Harris campaign</a> or the <a href="https://lincolnproject.us/donate/">Lincoln Project</a>, up to a limit of $2,000.  Honor system; just tell me in the comments what you donated.</p></div>
    </content>
    <updated>2020-08-30T23:21:02Z</updated>
    <published>2020-08-30T23:21:02Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Announcements"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Embarrassing Myself"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Obviously I'm Not Defending Aaronson"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Self-Referential"/>
    <category scheme="https://www.scottaaronson.com/blog" term="The Fate of Humanity"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2020-09-01T14:14:06Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/08/30/linkage</id>
    <link href="https://11011110.github.io/blog/2020/08/30/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>The evolution of mathematical word processing (\(\mathbb{M}\)). “Developments in computing over the last 30 years have not done as much as one might have thought to make writing mathematics easier.”</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p><a href="https://sinews.siam.org/Details-Page/the-evolution-of-mathematical-word-processing">The evolution of mathematical word processing</a> (<a href="https://mathstodon.xyz/@11011110/104701998974894412">\(\mathbb{M}\)</a>). “Developments in computing over the last 30 years have not done as much as one might have thought to make writing mathematics easier.”</p>
  </li>
  <li>
    <p><a href="https://prideout.net/blog/svg_wireframes/">3D Wireframes in SVG, via Python</a> (<a href="https://mathstodon.xyz/@11011110/104707509485635530">\(\mathbb{M}\)</a>, <a href="https://github.com/prideout/svg3d">code repository</a>). Once you generate the model, it does the rest. Its depth-ordering heuristics aren’t perfect (and will fail when the depth order is cyclic), but generally work pretty well. For example, here’s <a href="https://en.wikipedia.org/wiki/Jessen%27s_icosahedron">Jessen’s icosahedron</a> in a simple partially-transparent style without fancy shading (<a href="https://11011110.github.io/blog/assets/2020/jessen.py">Python code</a>). To get it to look right I had to edit the resulting svg and manually reorder the faces.</p>

    <p style="text-align: center;"><img alt="Jessen's icosahedron" src="https://11011110.github.io/blog/assets/2020/jessen.svg"/></p>
  </li>
  <li>
    <p><a href="https://www.insidehighered.com/news/2020/08/17/ip-grab-youngstown-state">Intellectual property grab at Youngstown State</a> (<a href="https://mathstodon.xyz/@11011110/104714502717608284">\(\mathbb{M}\)</a>). In negotiations with the faculty union, the university wants to replace the tradition of faculty holding copyright to research articles, textbooks, syllabi and lectures, etc by instead taking ownership of “all nonpatentable faculty work” as work-for-hire. They claim that they aren’t changing their policies and are merely doing this “to be consistent with the law” but this comes across as unlikely and disingenuous.</p>
  </li>
  <li>
    <p><a href="https://digital.lib.washington.edu/researchworks/bitstream/handle/1773/15700/Lost%20Mathematics.pdf?fterence=1">Lectures on lost mathematics</a> (<a href="https://mathstodon.xyz/@11011110/104718951109084030">\(\mathbb{M}\)</a>). In this 79-page pdf from 1975, Branko Grünbaum discusses mathematical questions studied by non-mathematicians but snubbed by pure mathematicians, including which polygons tile, the girth of infinitely-repeating cubic spatial graphs, the classification of vertex-transitive polyhedral manifolds in space, generalization of Kempe universality to surfaces, flexible polyhedra, and tensegrity.</p>
  </li>
  <li>
    <p><a href="https://xkcd.com/2348/">A recent xkcd on river crossing puzzles</a> particularly amused me (<a href="https://mathstodon.xyz/@11011110/104726172352360084">\(\mathbb{M}\)</a>).</p>

    <p style="text-align: center;"><img alt="xkcd comic &quot;Boat Puzzle&quot;, https://xkcd.com/2348/" src="https://11011110.github.io/blog/assets/2020/xkcd-2348.png" width="80%"/></p>

    <p>It’s too bad xkcd uses an -NC clause in its CC license; if it didn’t, we could use it or its first frame to replace <a href="https://en.wikipedia.org/wiki/River_crossing_puzzle">the Wikipedia article’s illustration</a>, which is undergoing a long slow <a href="https://commons.wikimedia.org/wiki/Commons:Deletion_requests/File:Vovk_koza_kapusta.png">deletion discussion because copied from a 1954 Soviet book</a>. If you know something useful about the copyright status of 1954 Soviet books, please add your knowledge to that discussion.</p>
  </li>
  <li>
    <p><a href="https://www.flyingcoloursmaths.co.uk/eye-to-eye/">Eye to eye</a> (<a href="https://mathstodon.xyz/@11011110/104731872882549290">\(\mathbb{M}\)</a>). Let \(C\) and \(C'\) be circles with centers outside the other circle, and draw tangent rays from each center to the other circle. These rays cut their circles in chords of equal length. But I wonder: when only one circle has its center outside the other, its chord is still well defined, but the same length can’t be a chord of the other circle because it exceeds the diameter. But it should still have a geometric meaning with respect to the other circle: what is it?</p>
  </li>
  <li>
    <p><a href="https://petapixel.com/2020/08/20/lightroom-app-update-wipes-users-photos-and-presets-adobe-says-they-are-not-recoverable/">Lightroom App update irrecoverably loses users’ photos</a> (<a href="https://mathstodon.xyz/@11011110/104742916488291004">\(\mathbb{M}\)</a>, <a href="https://news.ycombinator.com/item?id=24229864">via</a>). My choice to continue using an oldish powerbook with dubiously-reliable keyboard, to avoid giving up my paid-for non-subscription Adobe apps which won’t run on newer Macs, has an unexpected benefit: my files haven’t been auto-deleted. Also, let this be a reminder to do your backups, and make sure that they include a local non-cloud backup of your files.</p>
  </li>
  <li>
    <p><a href="https://github.andrewt.net/mines/">Minesweeper where forced guesses are always safe, but unforced guesses always explode</a> (<a href="https://mastodon.technology/@andrewt/104701318997810776">\(\mathbb{M}\)</a>).</p>
  </li>
  <li>
    <p><a href="https://www.reddit.com/r/Scotland/comments/ig9jia/ive_discovered_that_almost_every_single_article/">“The Scots language version of Wikipedia is legendarily bad” — turns out because it was mostly written by an American teenager</a> (<a href="https://mathstodon.xyz/@11011110/104751072546716749">\(\mathbb{M}\)</a>, <a href="https://www.metafilter.com/188374/The-problem-is-that-this-person-cannot-speak-Scots">via</a>). See <a href="https://en.wikipedia.org/wiki/Wikipedia:Wikipedia_Signpost/2020-08-30/News_and_notes">the <em>Signpost</em> article</a> for an update.</p>
  </li>
  <li>
    <p>Today’s mini-episode of “not the Reuleaux triangle” (<a href="https://mathstodon.xyz/@11011110/104757581337870450">\(\mathbb{M}\)</a>): the logo of Polish football club Ruch Chorzów, which a supporter tried to add to the Wikipedia article. Unlike many non-Reuleaux round triangles, it appears to use circular arcs, but not centered at the corners and with non-equilateral corners. The arc across the bottom is longer than the two sides, and it is wider than it is tall. Image from <a href="http://kubamalicki.com/portfolio_page/ruch-chorzow-100-years-anniversary/">an article on a recent redesign of the official logo</a>.</p>

    <p style="text-align: center;"><img alt="Geometric analysis of the Ruch Chorz&#xF3;w logo showing that it is not a Reuleaux triangle" src="https://11011110.github.io/blog/assets/2020/ruch-logo.png" width="80%"/></p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@jsiehler/104763100825420197">J. Siehler asks for unsolved problems in mathematics whose statements are understandable by elementary school students, other than in number theory </a>. Examples given so far include <a href="https://en.wikipedia.org/wiki/Inscribed_square_problem">square pegs</a>, <a href="https://en.wikipedia.org/wiki/Bellman%27s_lost_in_a_forest_problem">lost in a forest</a>, <a href="https://en.wikipedia.org/wiki/Moving_sofa_problem">sofa-moving</a>, <a href="https://en.wikipedia.org/wiki/Moser%27s_worm_problem">Moser’s worm</a>, <a href="https://en.wikipedia.org/wiki/Net_(polyhedron)#Existence_and_uniqueness">Dürer’s nets</a>, the <a href="https://en.wikipedia.org/wiki/Tur%C3%A1n%27s_brick_factory_problem">brick factory</a>, and <a href="https://en.wikipedia.org/wiki/Lonely_runner_conjecture">lonely runners</a>.</p>
  </li>
  <li>
    <p><a href="https://www.rayawolfsun.com/2015/02/06/the-romance-of-al-asturlabiya/">Concerning “Mariam” Al-Asturlabiya</a> (<a href="https://mathstodon.xyz/@11011110/104771298687510642">\(\mathbb{M}\)</a>). A warning about how romanticizing past figures (in this case <a href="https://en.wikipedia.org/wiki/Mariam_al-Asturlabi">the only woman astrolabist known from the medieval Islamic world</a>) can result in creating biographical details for them out of thin air.</p>
  </li>
  <li>
    <p><a href="https://prideout.net/knotgl/">Interactive 3d knot table</a> (<a href="https://mathstodon.xyz/@11011110/104779316951663485">\(\mathbb{M}\)</a>). One of many interesting visualizations on “<a href="https://prideout.net/">the little grasshopper</a>”, by Philip Rideout (author of the svg3d Python library linked above).</p>
  </li>
  <li>
    <p><a href="https://gd2020.cs.ubc.ca/program-no-links/">The Graph Drawing 2020 program is online</a> (<a href="https://mathstodon.xyz/@11011110/104781215682863021">\(\mathbb{M}\)</a>). It is September 16-18, from 8AM to noon Pacific daylight time (the time in Vancouver, where the conference was originally to be held). The format has talk videos available pre-conference, with sessions consisting of 1-minute reminders of each talk and 5 minutes of live questions per talk. Jeff Erickson and Sheelagh Carpendale will give live invited talks. It’s free but requires registration, with deadline September 10.</p>
  </li>
</ul></div>
    </content>
    <updated>2020-08-30T17:47:00Z</updated>
    <published>2020-08-30T17:47:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-09-02T06:49:15Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17466</id>
    <link href="https://rjlipton.wordpress.com/2020/08/29/20000-comments-and-more/" rel="alternate" type="text/html"/>
    <title>20,000 Comments and More</title>
    <summary>With more about the Separating Words Problem I.I.T. Madras page Anoop S K M is a PhD student in the theory group of I.I.T. Madras in Chennai, India. His comment two weeks ago Monday was the 20,000th reader comment (including trackbacks) on this blog. Today we thank Anoop and all our readers and say more […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>With more about the Separating Words Problem</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.files.wordpress.com/2020/08/anoopskm-1.jpg"><img alt="" class="alignright size-thumbnail wp-image-17474" height="150" src="https://rjlipton.files.wordpress.com/2020/08/anoopskm-1.jpg?w=128&amp;h=150" width="128"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">I.I.T. Madras <a href="http://www.cse.iitm.ac.in/~theory/memberdetails.php?memberid=512">page</a></font></td>
</tr>
</tbody>
</table>
<p>
Anoop S K M is a PhD student in the theory group of I.I.T. Madras in Chennai, India. His <a href="https://rjlipton.wordpress.com/2020/08/03/cleverer-automata-exist/#comment-111947">comment</a> two weeks ago Monday was the <font color="green"><b>20,000</b></font>th reader comment (including trackbacks) on this blog.</p>
<p>
Today we thank Anoop and all our readers and say more about the subject of his comment.</p>
<p>
Anoop’s advisor is Jayalal Sarma, who has a further connection to me (Ken). Sarma has <a href="https://arxiv.org/abs/1002.1496">co-authored</a> <a href="https://link.springer.com/article/10.1007/s00224-013-9519-3">three</a> <a href="https://arxiv.org/abs/0912.2565">papers</a> with my PhD graduate Maurice Jansen, whose work we have <a href="https://rjlipton.wordpress.com/2011/04/20/could-euler-have-solved-this/">also</a> featured <a href="https://rjlipton.wordpress.com/2011/04/28/succinct-constant-depth-arithmetic-circuits-are-weak/">here</a>. </p>
<p>
The comment was Anoop’s first and thus far only one on the blog. In passing we note that after one’s first comment is moderated through, subsequent ones appear freely and immediately. Thus one can say that Anoop had only a 0.005% chance of hitting the milestone. </p>
<p>
Dick and I would also like to give a warm shout out to someone else who in another sense had almost a 56% chance of hitting it: Jon Awbrey, who writes the blog <a href="https://inquiryintoinquiry.com/">Inquiry Into Inquiry</a> and also <a href="https://ncatlab.org/nlab/show/Jon+Awbrey">contributes</a> to the <a href="https://ncatlab.org/nlab/show/About">nLab</a> Project.</p>
<table style="margin: auto;">
<tbody><tr>
<td>
<a href="https://rjlipton.files.wordpress.com/2020/08/jon_awbrey.jpg"><img alt="" class="alignright size-thumbnail wp-image-17470" src="https://rjlipton.files.wordpress.com/2020/08/jon_awbrey.jpg?w=128&amp;h=150"/></a>
</td>
</tr>
<tr>
<td class="caption alignright">
<font size="-2"><a href="https://www.researchgate.net/profile/Jon_Awbrey">src</a><br/>
</font>
</td>
</tr>
</tbody></table>
<p>As we were twenty-seven comments into our third myriad at the time of drafting this post, we note that most of his 15-of-27 comments are trackback citations of our previous <a href="https://rjlipton.wordpress.com/2020/08/19/logical-complexity-of-proofs/">post</a> on proof complexity, but he wrote <a href="https://rjlipton.wordpress.com/2020/08/19/logical-complexity-of-proofs/#comment-112175">two</a> long <a href="https://rjlipton.wordpress.com/2020/08/19/logical-complexity-of-proofs/#comment-112189">comments</a> as well. We have not had time to act on them; for my part, chess cheating has found ways to mutate into new kinds of cases even as I see hope for stemming the main online outbreak of it. But comments can also be resources for others, especially students who may be emboldened to take a swing at progress from where we’ve left off.</p>
<p>
</p><p/><h2> Anoop’s Comment and SWP Ideas </h2><p/>
<p/><p>
Anoop’s comment was in our recent <a href="https://rjlipton.wordpress.com/2020/08/03/cleverer-automata-exist/">post</a> on the Separating Word Problem (SWP). He asked about a technical <a href="http://invenio.nusl.cz/record/251413/files/content.csg.pdf">report</a> by Jiří Wiedermann claiming a clean best-possible <img alt="{O(\log n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{O(\log n)}"/> bound on the SWP over alphabet <img alt="{\{0,1\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{0,1\}}"/>. </p>
<p>
Wiedermann’s idea is simple to state—maybe too simple: Consider finite state automata (FSAs) <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> whose <img alt="{2m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2m}"/> states form two <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/>-cycle “tracks”: </p>
<p align="center"><img alt="\displaystyle  q_0 \rightarrow q_1 \rightarrow \cdots \rightarrow q_{m-1} \rightarrow q_0; \qquad q'_0 \rightarrow q'_1 \rightarrow \cdots \rightarrow q'_{m-1} \rightarrow q'_0 " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++q_0+%5Crightarrow+q_1+%5Crightarrow+%5Ccdots+%5Crightarrow+q_%7Bm-1%7D+%5Crightarrow+q_0%3B+%5Cqquad+q%27_0+%5Crightarrow+q%27_1+%5Crightarrow+%5Ccdots+%5Crightarrow+q%27_%7Bm-1%7D+%5Crightarrow+q%27_0+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  q_0 \rightarrow q_1 \rightarrow \cdots \rightarrow q_{m-1} \rightarrow q_0; \qquad q'_0 \rightarrow q'_1 \rightarrow \cdots \rightarrow q'_{m-1} \rightarrow q'_0 "/></p>
<p>Each edge goes to the next state on the same track on both <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/> and <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> <em>unless</em> we place a “crossover” so that the edges switch tracks on <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>. The primed track has accepting states. It does not matter whether the start state is <img alt="{q_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q_0}"/> or <img alt="{q'_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq%27_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q'_0}"/>, but it is the same for any pair of strings <img alt="{u,v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%2Cv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u,v}"/> of length <img alt="{n \gg m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Cgg+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n \gg m}"/> that we wish to distinguish.</p>
<p>
Let <img alt="{S \subseteq [n]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS+%5Csubseteq+%5Bn%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S \subseteq [n]}"/> be the set of places where <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> differ. Now suppose we have <img alt="{b \in [m]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb+%5Cin+%5Bm%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b \in [m]}"/> such that the intersection of <img alt="{S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S}"/> with the residue class <img alt="{R_{m,b} = \{am + b : a \in \mathbb{N}\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7Bm%2Cb%7D+%3D+%5C%7Bam+%2B+b+%3A+a+%5Cin+%5Cmathbb%7BN%7D%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{m,b} = \{am + b : a \in \mathbb{N}\}}"/> is odd. Make <img alt="{A = A_{m,b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+A_%7Bm%2Cb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = A_{m,b}}"/> by placing one “crossover” at point <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> on the tracks; that is, make the transitions for <img alt="{q_b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq_b%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q_b}"/> and <img alt="{q'_b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq%27_b%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q'_b}"/> be </p>
<p align="center"><img alt="\displaystyle  (q_b,0,q_{b+1}),~(q_b,1,q'_{b+1}),~(q'_b,0,q'_{b+1}),~(q'_b,1,q_{b+1}), " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%28q_b%2C0%2Cq_%7Bb%2B1%7D%29%2C%7E%28q_b%2C1%2Cq%27_%7Bb%2B1%7D%29%2C%7E%28q%27_b%2C0%2Cq%27_%7Bb%2B1%7D%29%2C%7E%28q%27_b%2C1%2Cq_%7Bb%2B1%7D%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  (q_b,0,q_{b+1}),~(q_b,1,q'_{b+1}),~(q'_b,0,q'_{b+1}),~(q'_b,1,q_{b+1}), "/></p>
<p>where the addition is modulo <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/>. Then whenever a place where <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> differ enters the crossover, the strings flip their status of being on the same track or different tracks. Since this happens an odd number of times, <img alt="{A_{m,b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA_%7Bm%2Cb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A_{m,b}}"/> accepts <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and rejects <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> or vice-versa.</p>
<p>
If for every <img alt="{S \subseteq [n]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS+%5Csubseteq+%5Bn%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S \subseteq [n]}"/> we could find such <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> with <img alt="{m = O(\log n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+O%28%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = O(\log n)}"/> then SWP would fall with the best possible logarithmic size, nullifying anything like Zachary Chase’s improvement from <img alt="{m = \tilde{O}(n^{2/5})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Ctilde%7BO%7D%28n%5E%7B2%2F5%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = \tilde{O}(n^{2/5})}"/> to <img alt="{m = \tilde{O}(n^{1/3})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Ctilde%7BO%7D%28n%5E%7B1%2F3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = \tilde{O}(n^{1/3})}"/>. The “<img alt="{m = O(\log n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+O%28%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = O(\log n)}"/>” is not hiding any <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> factors with a tilde—it is just a bare <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log n}"/> factor. The report claims this complete resolution, but it makes and then unmakes a point in a way we don’t follow. The point is that the idea of focusing on subsets <img alt="{S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S}"/> is not only independent of particular strings <img alt="{u,v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%2Cv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u,v}"/> but also independent of the lengths <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> of the string, except insofar as the maximum index in <img alt="{S}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S}"/> constrains the smallest <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> that works. But then the report states a theorem that invests <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> itself with significance that contradicts said point, so it just appears wrong.</p>
<p>
The report anyway does not appear either on Wiedermann’s publications page or his DBLP page. Its conclusion references a 2015 <a href="https://rjlipton.wordpress.com/2015/09/03/open-problems-that-might-be-easy/">post</a> on this blog in which SWP was included, but we had not heard of this until Anoop’s comment. So it goes in our mistake file. We have been grappling all week with the subject of claims and mistakes on a much larger scale with complicated papers and techniques. In the old days, ideas and errors would be threshed out in-person at conferences and workshops and only the finished product would be visible to those outside the loop. Now we not only have Internet connectivity but also the pandemic has curtailed the “in-person” aspect. Thus we are not averse to promoting the threshing and wonder how best to extract the useful novelty from new attempts that likely have errors.</p>
<p>
The <img alt="{A_{m,b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA_%7Bm%2Cb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A_{m,b}}"/> construction is neat but has a weakness that can be framed as motivation for Dick’s idea in the rest of this post.  Adding more crossovers for a fixed <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> does not help separate any more strings: If <img alt="{S \cap R_{m,b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS+%5Ccap+R_%7Bm%2Cb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S \cap R_{m,b}}"/> and <img alt="{S \cap R_{m,c}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS+%5Ccap+R_%7Bm%2Cc%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S \cap R_{m,c}}"/> both have even cardinality then adding <em>two</em> crossovers at <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> and <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> has no effect.  Intuitively speaking, all crossovers behave merely as the same non-unit element of the two-element group.  In particular, they commute with each other.  The idea moving forward is, can we get more interesting behavior from <em>non</em>-commutative groups that still yield small automata <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> separating given pairs of strings? </p>
<p>
</p><p/><h2> Laws on Finite Groups </h2><p/>
<p/><p>
Let’s start to explain a connection of SWP with finite groups. A <b>law</b> for a group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> is 	</p>
<p align="center"><img alt="\displaystyle  U = V, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++U+%3D+V%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  U = V, "/></p>
<p>where <img alt="{U,V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%2CV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U,V}"/> are words over <img alt="{\{ A,B \}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B+A%2CB+%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{ A,B \}}"/>. We will think of <img alt="{U,V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%2CV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U,V}"/> as embeddings within the group of the binary strings <img alt="{u,v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%2Cv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u,v}"/> we want to separate. The law says that <img alt="{U=V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%3DV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U=V}"/> for all substitutions of <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> as elements in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. Thus 	</p>
<p align="center"><img alt="\displaystyle  AB = BA " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++AB+%3D+BA+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  AB = BA "/></p>
<p>is a law that holds in abelian groups. Every finite group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> satisfies the law 	</p>
<p align="center"><img alt="\displaystyle  A^{n} = 1, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++A%5E%7Bn%7D+%3D+1%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  A^{n} = 1, "/></p>
<p>where <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> is the size of the group. </p>
<p>
There has been quite a bit of research on laws for groups. </p>
<ul>
<li>
Some are on the complexity of checking if they hold. It is a famous result that with randomness one can check to see if <img alt="{AB=BA}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BAB%3DBA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{AB=BA}"/> with few tests. <p/>
</li><li>
Some are on the structure of laws. <p/>
</li><li>
Most relevant to SWP is the interest in the smallest size law that holds for all groups of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> or less elements. The size of a law is the maximum of the length of the words <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/>.
</li></ul>
<p>
</p><p/><h2> Laws and SWP </h2><p/>
<p/><p>
Suppose that we wish to construct a FSA that can tell <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> from <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/>. We assume that <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> and <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/> are distinct <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> long strings over <img alt="{A,B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%2CB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A,B}"/>. Pick a finite group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. The key is two observations: </p>
<ol>
<li>
If <img alt="{\alpha = \beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha+%3D+%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha = \beta}"/> is <b>not</b> a law over <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>, then we can set <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> to elements in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> so that 	<p/>
<p align="center"><img alt="\displaystyle  \alpha \neq \beta. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Calpha+%5Cneq+%5Cbeta.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \alpha \neq \beta. "/></p>
</li><li>
There is a FSA that can compute the values of <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> and <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/> as elements in <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> with order <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> states.
</li></ol>
<p>This then proves that we can separate the words <img alt="{A,B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%2CB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A,B}"/> with order the size of <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> states. </p>
<p>
<i>Warning</i> It is important that the FSA operates on <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> and <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/> independently. Moreover, the FSA must run the same computation on these strings—the output must be different. </p>
<p>
I liked this approach since I hoped there would be useful results on laws in groups. There is quite a bit known. It would have been neat if there was a paper that proved: No law of length <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> holds in all finite groups of size at most <img alt="{n^{1/4}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7B1%2F4%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n^{1/4}}"/>. Alas this is not true. Well not exactly. Our laws are of the form 	</p>
<p align="center"><img alt="\displaystyle  U = V. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++U+%3D+V.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  U = V. "/></p>
<p>Since there are no inverses allowed in <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/> these are called <i>positive laws</i>. If we drop that restriction, then short laws do exist. There are laws of size <img alt="{O(n^{2/3})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28n%5E%7B2%2F3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{O(n^{2/3})}"/> that hold for all groups of order <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>. But I believe it is still open whether positive laws can be small.</p>
<p>
<a href="https://rjlipton.files.wordpress.com/2020/08/f2_cayley_graph.png"><img alt="" class="aligncenter size-full wp-image-17454" src="https://rjlipton.files.wordpress.com/2020/08/f2_cayley_graph.png?w=600"/></a></p>
<p/><h2> Positive Laws </h2><p/>
<p/><p>
I (Dick) started to search the web about laws in groups. I quickly found a <a href="https://arxiv.org/pdf/1609.03199.pdf">paper</a> by Andrei Bulatov, Olga Karpova, Arseny Shur, Konstantin Startsev on exactly this approach, titled “Lower Bounds on Words Separation: Are There Short Identities in Transformation Semigroups?” They study the problem, prove some results, and do some computer searches. They say: </p>
<blockquote><p><b> </b> <em> It is known that the shortest positive identity in the symmetric group on <img alt="{3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{3}"/> objects <img alt="{S_{3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7B3%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{S_{3}}"/> is <img alt="{x^{2}y^{2} = y^{2}x^{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5E%7B2%7Dy%5E%7B2%7D+%3D+y%5E%7B2%7Dx%5E%7B2%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x^{2}y^{2} = y^{2}x^{2}}"/>. The shortest such identity in <img alt="{S_{4}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7B4%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{S_{4}}"/> has length <img alt="{11}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B11%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{11}"/>: 	</em></p><em>
<p align="center"><img alt="\displaystyle  x^{6}y^{2}xy^{2} = y^{2}xy^{2}x^{6}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x%5E%7B6%7Dy%5E%7B2%7Dxy%5E%7B2%7D+%3D+y%5E%7B2%7Dxy%5E%7B2%7Dx%5E%7B6%7D.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  x^{6}y^{2}xy^{2} = y^{2}xy^{2}x^{6}. "/></p>
</em><p><em/>
</p></blockquote>
<p>They also note that:</p>
<blockquote><p><b> </b> <em> The problem is to find upper bounds on the function <img alt="{Sep}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BSep%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Sep}"/>. This problem is inverse to finding the asymptotics of the length of the shortest identity in full transformation semigroups <img alt="{T_{k}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT_%7Bk%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{T_{k}}"/>. </em>
</p></blockquote>
<p/><p>
I believe the last part of their statement is true, but perhaps misleading. I would argue that laws are related to SWP with a twist. The hope is that this twist is enough to make progress. Let me explain. </p>
<p>
</p><p/><h2> Laws with Errors </h2><p/>
<p/><p>
I think there is hope that positive laws must be large, if we extend what it mean by a law. Suppose that we have a law 	</p>
<p align="center"><img alt="\displaystyle  U_{1} \cdots U_{n} = V_{1} \cdots V_{n}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++U_%7B1%7D+%5Ccdots+U_%7Bn%7D+%3D+V_%7B1%7D+%5Ccdots+V_%7Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  U_{1} \cdots U_{n} = V_{1} \cdots V_{n}. "/></p>
<p>Where <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/> are as before words over <img alt="{\{A,B\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7BA%2CB%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{A,B\}}"/>. Assume that for all small groups this is always true when we set <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> to elements. </p>
<p>
We note however we can have the FSA do more than just substitutions. We could have it modify the <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/>. We can have the FSA make some changes to <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/>: Of course the FSA must do the same to <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and <img alt="{V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{V}"/>, and it must keep the number of states down. </p>
<p>
This means that the law <img alt="{U=V}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%3DV%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U=V}"/> must be robust to modifications that can be done with few states. As examples, the FSA could: </p>
<ol>
<li>
The FSA could map <img alt="{A^{2} \rightarrow A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%5E%7B2%7D+%5Crightarrow+A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A^{2} \rightarrow A}"/> and leave all others the same. <p/>
</li><li>
The FSA could map <img alt="{ABBBA}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BABBBA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{ABBBA}"/> to <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> when ever it sees this. <p/>
</li><li>
The FSA could delete the even letters. Thus <p/>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}   A^{6}B^{2}AB^{2} &amp;=&amp; B^{2}AB^{2}A^{6} \\  AAAAAA BB A BB &amp;=&amp; BB A BB AAAAAA \\  A~ A~ A~ B~ A ~ B &amp;=&amp; B~ A~ B ~ A~ A~ A \\  AAABA &amp;=&amp; BABAAA. \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%09A%5E%7B6%7DB%5E%7B2%7DAB%5E%7B2%7D+%26%3D%26+B%5E%7B2%7DAB%5E%7B2%7DA%5E%7B6%7D+%5C%5C+%09AAAAAA+BB+A+BB+%26%3D%26+BB+A+BB+AAAAAA+%5C%5C+%09A%7E+A%7E+A%7E+B%7E+A+%7E+B+%26%3D%26+B%7E+A%7E+B+%7E+A%7E+A%7E+A+%5C%5C+%09AAABA+%26%3D%26+BABAAA.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}   A^{6}B^{2}AB^{2} &amp;=&amp; B^{2}AB^{2}A^{6} \\  AAAAAA BB A BB &amp;=&amp; BB A BB AAAAAA \\  A~ A~ A~ B~ A ~ B &amp;=&amp; B~ A~ B ~ A~ A~ A \\  AAABA &amp;=&amp; BABAAA. \end{array} "/></p>
</li></ol>
<p>Note the FSA could even add new letters. Thus it could 	</p>
<p align="center"><img alt="\displaystyle  AB \rightarrow ACB, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++AB+%5Crightarrow+ACB%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  AB \rightarrow ACB, "/></p>
<p>where <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/> is a new letter. Thus 	</p>
<p align="center"><img alt="\displaystyle  AAAAAA BB A BB = BB A BB AAAAAA " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++AAAAAA+BB+A+BB+%3D+BB+A+BB+AAAAAA+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  AAAAAA BB A BB = BB A BB AAAAAA "/></p>
<p>becomes 	</p>
<p align="center"><img alt="\displaystyle  AAAAAA CBB A CBB = BB A C BB AAAAAA. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++AAAAAA+CBB+A+CBB+%3D+BB+A+C+BB+AAAAAA.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  AAAAAA CBB A CBB = BB A C BB AAAAAA. "/></p>
<p>And so on. </p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Can we get better lower bounds on positive laws if we require them to be resilient to such modifications? Ones that can be done by a small state FSA. What do you think?</p>
<p>
Again we thank Anoop and all our readers for stimulating comments.</p>
<p/><p><br/>
[changed wording in section 2 and improved transition to the rest]</p></font></font></div>
    </content>
    <updated>2020-08-29T21:54:23Z</updated>
    <published>2020-08-29T21:54:23Z</published>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="News"/>
    <category term="Open Problems"/>
    <category term="People"/>
    <category term="Anoop SKM"/>
    <category term="blog milestone"/>
    <category term="comments"/>
    <category term="finite automata"/>
    <category term="groups"/>
    <category term="readers"/>
    <category term="separating words problem"/>
    <category term="SWP"/>
    <category term="thanks"/>
    <category term="upper bounds"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-09-03T13:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/08/28/full-time-position-at-universidad-catolica-de-chile-apply-by-october-7-2020/</id>
    <link href="https://cstheory-jobs.org/2020/08/28/full-time-position-at-universidad-catolica-de-chile-apply-by-october-7-2020/" rel="alternate" type="text/html"/>
    <title>Full-time Position at Universidad Católica de Chile (apply by October 7, 2020)</title>
    <summary>Universidad Católica de Chile (UC) is offering one or more full-time positions at the assistant (tenure-track) or associate level. We invite applications from highly qualified candidates in Data Science, Machine Learning, Optimization, Statistics and Stochastics, although other areas from Computational Science and Engineering, Optimization and Applied Mathematics will also be considered. Website: http://imc.uc.cl/index.php/noticias/183-open-position-at-the-institute-for-mathematical-and-computational-engineering-uc Email: vacancysearch.imc@uc.cl</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Universidad Católica de Chile (UC) is offering one or more full-time positions at the assistant (tenure-track) or associate level. We invite applications from highly qualified candidates in Data Science, Machine Learning, Optimization, Statistics and Stochastics, although other areas from Computational Science and Engineering, Optimization and Applied Mathematics will also be considered.</p>
<p>Website: <a href="http://imc.uc.cl/index.php/noticias/183-open-position-at-the-institute-for-mathematical-and-computational-engineering-uc">http://imc.uc.cl/index.php/noticias/183-open-position-at-the-institute-for-mathematical-and-computational-engineering-uc</a><br/>
Email: vacancysearch.imc@uc.cl</p></div>
    </content>
    <updated>2020-08-28T18:02:24Z</updated>
    <published>2020-08-28T18:02:24Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-08-28-what-is-a-cryptographic-hash-function/</id>
    <link href="https://decentralizedthoughts.github.io/2020-08-28-what-is-a-cryptographic-hash-function/" rel="alternate" type="text/html"/>
    <title>What is a Cryptographic Hash Function?</title>
    <summary>If you ever tried to understand Bitcoin, you’ve probably banged your head against the wall trying to understand what is a cryptographic hash function? The goal of this post is to: Give you a very simple mental model for how hash functions work, called the random oracle model Give you...</summary>
    <updated>2020-08-28T17:05:00Z</updated>
    <published>2020-08-28T17:05:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-09-02T23:38:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blog.simons.berkeley.edu/?p=276</id>
    <link href="https://blog.simons.berkeley.edu/2020/08/lattice-blog-reduction-part-iii-self-dual-bkz/" rel="alternate" type="text/html"/>
    <title>Lattice Blog Reduction – Part III: Self-Dual BKZ</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">This is the third and last entry in a series of posts about lattice block reduction. See here and here for the first and second part, resp. In this post I will assume you have read the other parts. In … <a href="https://blog.simons.berkeley.edu/2020/08/lattice-blog-reduction-part-iii-self-dual-bkz/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This is the third and last entry in a series of posts about lattice block reduction. See <a class="uri" href="https://blog.simons.berkeley.edu/2020/04/lattice-blog-reduction-part-i-bkz/">here</a> and <a class="uri" href="https://blog.simons.berkeley.edu/2020/05/lattice-blog-reduction-part-ii-slide-reduction/">here</a> for the first and second part, resp. In this post I will assume you have read the other parts.</p>
<p>In the first two parts we looked at BKZ and Slide reduction, the former being the oldest and most useful in practice, while the latter achieves the best provable bounds and has the cleaner analysis. While BKZ is a natural generalization of LLL, we have seen that the analysis of LLL does not generalize well to BKZ. One can view Slide reduction as a different generalization of LLL with the goal of also naturally generalizing its analysis. As we mentioned in the first part, there is another analysis technique based on dynamical systems, introduced in [HPS11]. Unfortunately, as applied to BKZ, there are some cumbersome technicalities and the resulting bounds on the output quality are not as tight as we would like them to be (i.e. as for Slide reduction). One can view the algorithm we are considering today – SDBKZ [MW16] – as a generalization of LLL that lends itself much easier to this dynamical systems analysis: it is simpler, cleaner and yields better results. Since part of the goal of today’s post is to demonstrate this very useful analysis technique, SDBKZ is a natural candidate.</p>
<h1 id="sec:sdbkz">SDBKZ</h1>
<p>Recall the two tools we’ve been relying on in the first two algorithms, SVP and DSVP reduction of projected subblocks:</p>



<div class="wp-block-group"><div class="wp-block-group__inner-container">
<div class="wp-block-image"><figure class="alignleft size-large"><img alt="" class="wp-image-156" src="https://blog.simons.berkeley.edu/wp-content/uploads/2020/04/svp.png"/>Effect of a call to the DSVP oracle. GSO log norms of the input in black, of the output in blue. Note that the sum of the GSO log norms is a constant, so increasing the length of the last vector, decreases the (average of the) remaining vectors.</figure></div>
</div></div>



<div class="wp-block-image"><figure class="alignleft size-large"><img alt="" class="wp-image-262" src="https://blog.simons.berkeley.edu/wp-content/uploads/2020/05/dsvp.png"/>Effect of a call to the DSVP oracle. GSO log norms  of the input in black, of the output in blue. Note that the sum of the GSO log norms is a constant, so increasing the length of the last vector, decreases the (average of the) remaining vectors.</figure></div>



<p>We will use both of them again today. Like BKZ, a tour of SDBKZ starts by calling the SVP oracle on successive blocks of our basis. However, when we reach the end of the basis, we will not decrease the size of the window, since this is actually quite inconvenient for the analysis. Instead, we will keep the size of the window constant but switch to DSVP reduction, i.e. at the end of the BKZ tour we DSVP reduce the last block. This will locally maximize the last GSO vector in the basis, just as the first SVP call locally minimized the first vector of the basis. Then we will move the window successively backwards, mirroring a BKZ tour, but using DSVP reduction, until we reach the beginning of the basis again. At this point, we switch back to SVP reduction and move the window forward, etc. So SDBKZ runs in forward and backward tours.</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-283" src="https://blog.simons.berkeley.edu/wp-content/uploads/2020/08/sdbkz-1024x825.png"/>SDBKZ in one picture: apply the SVP oracle to the projected blocks from start to finish and when you reach the end, apply the DSVP oracle to from finish to start. Repeat.</figure>



<p>A nice observation here is that the backward tour can be viewed equivalently as: 1) compute the reversed dual basis (i.e. the dual basis with reversed columns), 2) run a forward tour, 3) compute the primal basis again. The first of these two steps is self-inverse: computing the reversed dual basis of the reversed dual basis yields the original primal basis. This means step 3) is actually the same as step 1). So in effect, one can view SDBKZ as simply repeating the following two steps: 1) run a forward tour, 2) compute the reversed dual basis. So it doesn’t matter if we use the primal or the dual basis as input, the operations of the algorithm are the same. This is why it is called <em>Self-Dual</em> BKZ.</p>
<p>There is one caveat with this algorithm: it is not clear, when one should terminate. In BKZ and Slide reduction one can formulate clear criteria, when the algorithm makes no more progress anymore. In SDBKZ this is not the case, but the analysis will show that we can bound the number of required tours ahead of time.</p>
<h4 id="the-analysis">The Analysis</h4>
<p>We will start by analyzing the effect of a forward tour. Let <span class="math inline">\({\mathbf{B}}\)</span> be our input basis. The first call to the SVP oracle in a forward tour replaces <span class="math inline">\({\mathbf{b}}_1\)</span> with the shortest vector in <span class="math inline">\({\mathbf{B}}_{[1,k]}\)</span>. This means that the new basis <span class="math inline">\({\mathbf{B}}’\)</span> satifies <span class="math inline">\(\| {\mathbf{b}}_1′ \| \leq \sqrt{\gamma_k} (\prod_{i=1}^k \|{\mathbf{b}}_i^* \|)^{1/k}\)</span> by Minkowski’s bound. Equivalently, this can be written as <span class="math display">\[\log \| {\mathbf{b}}_1′ \|
  \leq \log \sqrt{\gamma_k} + \frac1k (\sum_{i=1}^k \log \|{\mathbf{b}}_i^* \|).\]</span> So if we consider the <span class="math inline">\(\log \|{\mathbf{b}}_i^*\|\)</span> as variables, it seems like linear algebra could be useful here. So far, so good. The second step is more tricky though. We know that the next basis <span class="math inline">\({\mathbf{B}}”\)</span>, i.e. after the call to the SVP oracle on <span class="math inline">\({\mathbf{B}}’_{[2,k+1]}\)</span>, satisfies <span class="math inline">\({\mathbf{b}}_1” = {\mathbf{b}}_1’\)</span> and <span class="math inline">\(\| ({\mathbf{b}}_2”)^* \| \leq \sqrt{\gamma_k} (\prod_{i=2}^{k+1} \|({\mathbf{b}}’_i)^* \|)^{1/k}\)</span>. Unfortunately, we have no control over <span class="math inline">\(\|({\mathbf{b}}’_i)^* \|\)</span> for <span class="math inline">\(i \in {2,\dots,k} \)</span>, since we do not know how the SVP oracle in the first call changed these vector. However, we do know that the lattice <span class="math inline">\({\mathbf{B}}_{[1,k+1]}\)</span> did not change in that call. So we can write <span class="math display">\[\prod_{i=2}^{k+1} \|({\mathbf{b}}’_i)^* \| = \frac{\prod_{i=1}^{k+1} \|{\mathbf{b}}_i^* \|}{\| {\mathbf{b}}’_1 \|}\]</span> and thus we obtain <span class="math display">\[\log \| ({\mathbf{b}}_2′)^* \|
  \leq \log \sqrt{\gamma_k} + \frac1k (\sum_{i=1}^{k+1} \log \|{\mathbf{b}}_i^* \| – \log \|{\mathbf{b}}’_1 \|).\]</span> Again, this looks fairly “linear algebraicy”, so it could be useful. But there is another issue now: in order to get an inequality purely in the input basis <span class="math inline">\({\mathbf{B}}\)</span>, we would like to use our inequality for <span class="math inline">\(\log \|{\mathbf{b}}_1′ \|\)</span> in the one for <span class="math inline">\(\log \| ({\mathbf{b}}_2′)^* \|\)</span>. But the coefficient of <span class="math inline">\(\log \|{\mathbf{b}}_1′ \|\)</span> is negative, so we would need a lower bound for <span class="math inline">\(\log \|{\mathbf{b}}_1′ \|\)</span>. Furthermore, we would like to use upper bounds for our variables later, since the analysis of a tour will result in upper bounds and we would like to apply it iteratively. For this, negative coefficients are a problem. So, we need one more modification: we will use a change of variable to fix this. Instead of considering the variables <span class="math inline">\(\log \| {\mathbf{b}}_i^* \|\)</span>, we let the input variables to our forward tour be <span class="math inline">\(x_i = \sum_{j &lt; k+i} \log \|{\mathbf{b}}^*_i \|\)</span> and the output variables <span class="math inline">\(y_i = \sum_{j \leq i} \log \|({\mathbf{b}}’_i)^* \|\)</span> for <span class="math inline">\(i \in [1,\dots,n-k]\)</span>. Clearly, we can now write our upper bound on <span class="math inline">\(\log \|({\mathbf{b}}’_1)^*\|\)</span> as <span class="math display">\[y_1 \leq \log \sqrt{\gamma_k} + \frac{x_1}{k}.\]</span> More generally, we have <span class="math display">\[\|({\mathbf{b}}’_i)^* \| \leq \sqrt{\gamma_k} \left(\frac{\prod_{j=1}^{i+k-1} \|{\mathbf{b}}_j^* \|}{\prod_{j=1}^{i-1} \|({\mathbf{b}}’_j)^* \|} \right)^{\frac1k}\]</span> which means for our variables <span class="math inline">\(x_i\)</span> and <span class="math inline">\(y_i\)</span> that <span class="math display">\[y_i = y_{i-1} + \log \| ({\mathbf{b}}’_i)^* \|
  \leq y_{i-1} + \log \sqrt{\gamma_k} + \frac{x_i – y_{i-1}}{k}
  = (1-\frac1k) y_{i-1} + \frac1k x_i + \log \sqrt{\gamma_k}.\]</span></p>
<p>Note that we can write each <span class="math inline">\(y_i\)</span> in terms of <span class="math inline">\(x_i\)</span> and the previous <span class="math inline">\(y_i\)</span> with only positive coefficients. So now we can apply induction to write each <span class="math inline">\(y_i\)</span> only in terms of the <span class="math inline">\(x_i\)</span>’s, which shows that <span class="math display">\[y_i = \frac1k \sum_{j=1}^i \omega^{i-j} x_j + (1-\omega)^i k \alpha\]</span> where we simplified notation a little by defining <span class="math inline">\(\alpha = \log \sqrt{\gamma_k}\)</span> and <span class="math inline">\(\omega = 1-\frac1k\)</span>. By collecting the <span class="math inline">\(x_i\)</span>’s and <span class="math inline">\(y_i\)</span>’s in a vector each, we have the vectorial inequality <span class="math display">\[{\mathbf{y}} \leq {\mathbf{A}} {\mathbf{x}} + {\mathbf{b}}\]</span> where <span class="math display">\[{\mathbf{b}} = \alpha k \left[
\begin{array}{c}
1 – \omega \\ 
\vdots \\
1 – \omega^{n-k} 
\end{array}\right]
\qquad\qquad
{\mathbf{A}} = \frac1k 
\left[
\begin{array}{cccc}
  1 &amp; &amp; &amp; \\
  \omega &amp; 1 &amp; &amp; \\
   \vdots &amp; \ddots &amp; \ddots &amp; \\
   \omega^{n-k-1} &amp; \cdots &amp; \omega &amp; 1
\end{array}
\right].\]</span></p>
<p>Now recall that after a forward tour, SDBKZ computes the reversed dual basis. Given the close relationship between the primal and the dual basis and their GSO, one can show that simply reversing the vector <span class="math inline">\({\mathbf{y}}\)</span> will yield the right variables <span class="math inline">\({\mathbf{x}}’_i\)</span> to start the next “forward tour” (which is actually a backward tour, but on the dual). I.e. after reversing <span class="math inline">\({\mathbf{y}}\)</span>, the variables represent the logarithm of the corresponding subdeterminants of the dual basis. (For this we assume for convenience and w.l.o.g. that the lattice has determinant 1; otherwise, there would be a scaling factor involved in this transformation.)</p>
<p>In summary, the effect on the vector <span class="math inline">\({\mathbf{x}}\)</span> of executing once the two steps, 1) forward tour and 2) computing the reversed dual basis, can be described as <span class="math display">\[{\mathbf{x}}’ \leq {\mathbf{R}} {\mathbf{A}} {\mathbf{x}} + {\mathbf{R}} {\mathbf{b}}\]</span> where <span class="math inline">\({\mathbf{R}}\)</span> is the reversed identity matrix (i.e. the identity matrix with reversed columns). Iterating the two steps simply means we will be iterating the vectorial inequality above. So analyzing the affine dynamical system <span class="math display">\[{\mathbf{x}} \mapsto {\mathbf{R}} {\mathbf{A}} {\mathbf{x}} + {\mathbf{R}} {\mathbf{b}}\]</span> will allow us to deduce information about the basis after a certain number of iterations.</p>
<h4 id="small-digression-affine-dynamical-systems">Small Digression: Affine Dynamical Systems</h4>
<p>Consider some dynamical system <span class="math inline">\({\mathbf{x}} \mapsto {\mathbf{A}} {\mathbf{x}} + {\mathbf{b}} \)</span> and assume it has exactly one fixed point, i.e. <span class="math inline">\({\mathbf{x}}^*\)</span> such that <span class="math inline">\({\mathbf{A}} {\mathbf{x}}^* + {\mathbf{b}} = {\mathbf{x}}^* \)</span>. We can write any input <span class="math inline">\({\mathbf{x}}’\)</span> as <span class="math inline">\({\mathbf{x}}’ = {\mathbf{x}}^* + {\mathbf{e}}\)</span> for some “error vector” <span class="math inline">\({\mathbf{e}}\)</span>. When applying the system to it, we get <span class="math inline">\({\mathbf{x}}’ \mapsto {\mathbf{A}} {\mathbf{x}}’ + {\mathbf{b}} = {\mathbf{x}}^* + {\mathbf{A}} {\mathbf{e}}\)</span>. So the error vector <span class="math inline">\({\mathbf{e}}\)</span> is mapped to <span class="math inline">\({\mathbf{A}} {\mathbf{e}}\)</span>. Applying this <span class="math inline">\(t\)</span> times maps <span class="math inline">\({\mathbf{e}}\)</span> to <span class="math inline">\({\mathbf{A}}^t {\mathbf{e}}\)</span>, which means after <span class="math inline">\(t\)</span> iterations the error vector has norm <span class="math inline">\(\|{\mathbf{A}}^t {\mathbf{e}} \|_{p} \leq \|{\mathbf{A}}^t \|_{p} \| {\mathbf{e}} \|_{p} \)</span> (where <span class="math inline">\(\| \cdot \|_{p}\)</span> is the matrix norm induced by the vector <span class="math inline">\(p\)</span>-norm). If we can show that <span class="math inline">\(\|{\mathbf{A}} \|_p \leq 1 – \epsilon\)</span>, then <span class="math inline">\(\|{\mathbf{A}}^t \|_p \leq \|A \|^t \leq (1-\epsilon)^t \leq e^{-\epsilon t}\)</span>, so the error vector will decay exponentially in <span class="math inline">\(t\)</span> with base <span class="math inline">\(e^{-\epsilon}\)</span> and the algorithm converges to the fixed point <span class="math inline">\({\mathbf{x}}^*\)</span>.</p>
<p>Back to our concrete system above. As we just saw, we can analyze its output quality by computing its fixed point and its running time by computing <span class="math inline">\(\|{\mathbf{R}} {\mathbf{A}} \|_p\)</span> for some induced matrix <span class="math inline">\(p\)</span>-norm. Since this has been a lenghty post already, I hope you’ll trust me that our system above has a fixed point <span class="math inline">\({\mathbf{x}}^*\)</span>, which can be written out explicitely in closed form. As a teaser, its first coordinate is <span class="math display">\[x^*_1 = \frac{(n-k)k}{k-1} \alpha.\]</span> This means that if the algorithm converges, it will converge to a basis such that <span class="math inline">\(\sum_{j \leq k}\log \| {\mathbf{b}}_j^*\| \leq \frac{(n-k)k}{k-1} \log \sqrt{\gamma_k}\)</span>. Applying Minkowski’s Theorem to the first block <span class="math inline">\({\mathbf{B}}_{[1,k]}\)</span> now shows that the shortest vector in this block satisfies <span class="math inline">\(\lambda_1({\mathbf{B}}_{[1,k]}) \leq \sqrt{\gamma_k}^{\frac{n-1}{k-1}}\)</span>. Note that the next forward tour will find a vector of such length. Recall that we assumed that our lattice has determinant 1, so this is exactly the Hermite factor achieved by Slide reduction, but for arbitrary block size (we do not need to assume that <span class="math inline">\(k\)</span> divides <span class="math inline">\(n\)</span>) and better than what we can achieve for BKZ (even using the same technique). Moreover, the fixed point actually gives us more information: the other coordinates (that I have ommited here) allow us control over all but <span class="math inline">\(k\)</span> GSO vectors and by terminating the algorithm at different positions, it allows us to choose which vectors we want control over.</p>
<p>It remains to show that the algorithm actually converges and figure out how fast. It is fairly straight-forward to show that <span class="math display">\[\|{\mathbf{R}} {\mathbf{A}}\|_{\infty} = \|{\mathbf{A}}\|_{\infty} = 1 – \omega^{n-k} \approx e^{-\frac{n-k}{k}}.\]</span> (Consider the last row of <span class="math inline">\({\mathbf{A}}\)</span>.) This is always smaller than 1, so the algorithm does indeed converge. For <span class="math inline">\(k = \Omega(n)\)</span> this is bounded far enough from 1 such that the system will converge to the fixed point up to an arbitrary constant in a number of SVP calls that is polynomial in <span class="math inline">\(n\)</span>. Using another change of variable [N16] or considering the relative error instead of the absolute error [MW15], one can show that this also holds for smaller <span class="math inline">\(k\)</span>.</p>
<p>As mentioned before, this type of analysis was introduced in [HPS11] and has inspired new ideas even in the heuristic analysis of BKZ. In particular, one can predict the behavior of BKZ by simply running such a dynamical system on typical inputs (and making some heuristic assumptions). This idea has been and is being used extensively in cryptanalysis and in optimizing parameters of state-of-the-art algorithms.</p>
<p>Finally, a few last words on SDBKZ: we have seen that it achieves a good Hermite factor, but what can we say about the approximation factor? I actually do not know if the algorithm achieves a good approximation factor and also do not see a good way to analyze it. However, there is a reduction [L86] from achieving approximation factor <span class="math inline">\(\alpha\)</span> to achieving Hermite factor <span class="math inline">\(\sqrt{\alpha}\)</span>. So SDBKZ can be used to achieve approximation factor <span class="math inline">\(\gamma_k^{\frac{n-1}{k-1}}\)</span>. This is a little unsatisfactory in two ways: 1) the reduction results in a different algorithm, and 2) the bound is a little worse than the factor achieved by slide reduction, which is <span class="math inline">\(\gamma_k^{\frac{n-k}{k-1}}\)</span>. On a positive note, a recent work [ALNS20] has shown that, due to the strong bound on the Hermite factor, SDBKZ can be used to generalize Slide reduction to arbitrary block size <span class="math inline">\(k\)</span> in a way to achieve the approximation factor <span class="math inline">\(\gamma_k^{\frac{n-k}{k-1}}\)</span>. Another recent work [ABFKSW20] exploited the fact that SDBKZ allows to heuristically predict large parts of the basis to achieve better bounds on the running time of the SVP oracle.</p>
<ul>
<li><p>Lov<span>á</span>sz. An Algorithmic Theory of Numbers, Graphs and Convexity. 1986</p></li>
<li><p>Hanrot, Pujol, Stehlé. Analyzing blockwise lattice algorithms using dynamical systems. CRYPTO 2011</p></li>
<li><p>Micciancio, Walter. Practical, predictable lattice basis reduction – Full Version. <a class="uri" href="http://eprint.iacr.org/2015/1123">http://eprint.iacr.org/2015/1123</a></p></li>
<li><p>Micciancio, Walter. Practical, predictable lattice basis reduction. EUROCRYPT 2016</p></li>
<li><p>Neumaier. Bounding basis reduction properties. Designs, Codes and Cryptography 2016</p></li>
<li><p>Aggarwal, Li, Nguyen, Stephens-Davidowitz. Slide Reduction, Revisited—Filling the Gaps in SVP Approximation. CRYPTO 2020</p></li>
<li><p>Albrecht, Bai, Fouque, Kirchner, Stehlé, Wen. Faster Enumeration-based Lattice Reduction: Root Hermite Factor <span class="math inline">\(k^{(1/(2k))}\)</span> in Time <span class="math inline">\(k^{(k/8 + o(k))}\)</span>. CRYPTO 2020</p></li>
</ul></div>
    </content>
    <updated>2020-08-28T11:56:55Z</updated>
    <published>2020-08-28T11:56:55Z</published>
    <category term="General"/>
    <author>
      <name>Michael Walter</name>
    </author>
    <source>
      <id>https://blog.simons.berkeley.edu</id>
      <link href="https://blog.simons.berkeley.edu/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://blog.simons.berkeley.edu" rel="alternate" type="text/html"/>
      <subtitle>What's New at the Simons Institute for the Theory of Computing.</subtitle>
      <title>Calvin Café: The Simons Institute Blog</title>
      <updated>2020-09-02T23:37:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/08/26/postdoc-at-uc-berkeley-apply-by-september-10-2020/</id>
    <link href="https://cstheory-jobs.org/2020/08/26/postdoc-at-uc-berkeley-apply-by-september-10-2020/" rel="alternate" type="text/html"/>
    <title>Postdoc at UC Berkeley (apply by September 10, 2020)</title>
    <summary>Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit letters to the e-mail below, with your name in the subject line. Multiple opportunities available; earliest deadline requires nomination by September 10th. […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Please send a cover letter, CV, and research statement to the email below. In CV please list at least 3 references. In cover letter please identify faculty of interest. Also, have references submit letters to the e-mail below, with your name in the subject line. Multiple opportunities available; earliest deadline requires nomination by<br/>
September 10th.</p>
<p>Website: <a href="http://theory.cs.berkeley.edu/postdoc.html">http://theory.cs.berkeley.edu/postdoc.html</a><br/>
Email: tcs-postdoc-inquiries@lists.eecs.berkeley.edu</p></div>
    </content>
    <updated>2020-08-26T04:54:53Z</updated>
    <published>2020-08-26T04:54:53Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-09-03T13:20:37Z</updated>
    </source>
  </entry>
</feed>
