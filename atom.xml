<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2019-11-25T11:21:38Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://theorydish.blog/?p=1539</id>
    <link href="https://theorydish.blog/2019/11/24/motwani-postdoctoral-fellowship-2/" rel="alternate" type="text/html"/>
    <title>Motwani Postdoctoral Fellowship</title>
    <summary>The theory group at Stanford invites applications for the Motwani postdoctoral fellowship in theoretical computer science. Information and application instructions below. Applications will be accepted until the positions are filled, but review of applicants will begin after Dec 15. Website: https://academicjobsonline.org/ajo/jobs/15578 Email: theory.stanford@gmail.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The theory group at Stanford invites applications for the Motwani postdoctoral fellowship in theoretical computer science. Information and application instructions below.</p>
<p>Applications will be accepted until the positions are filled, but review of applicants will begin after Dec 15.</p>
<p>Website: <a href="https://academicjobsonline.org/ajo/jobs/15578">https://academicjobsonline.org/ajo/jobs/15578</a><br/>
Email: theory.stanford@gmail.com</p></div>
    </content>
    <updated>2019-11-25T00:02:30Z</updated>
    <published>2019-11-25T00:02:30Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Omer Reingold</name>
    </author>
    <source>
      <id>https://theorydish.blog</id>
      <logo>https://theorydish.files.wordpress.com/2017/03/cropped-nightdish1.jpg?w=32</logo>
      <link href="https://theorydish.blog/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://theorydish.blog" rel="alternate" type="text/html"/>
      <link href="https://theorydish.blog/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://theorydish.blog/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Stanford's CS Theory Research Blog</subtitle>
      <title>Theory Dish</title>
      <updated>2019-11-25T11:21:15Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/25/postdoctoral-position-in-computational-social-choice-at-university-of-toronto-apply-by-december-15-2019/</id>
    <link href="https://cstheory-jobs.org/2019/11/25/postdoctoral-position-in-computational-social-choice-at-university-of-toronto-apply-by-december-15-2019/" rel="alternate" type="text/html"/>
    <title>Postdoctoral position in Computational Social Choice at University of Toronto (apply by December 15, 2019)</title>
    <summary>Postdoctoral position beginning in Fall 2020; fellow will work with Prof. Nisarg Shah on topics such as (but not limited to): computational social choice, fairness and incentives in machine learning, algorithmic game theory, and mechanism design. Applicants should have (prior to starting) a PhD in computer science, economics, operations research, or a related field. Website: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Postdoctoral position beginning in Fall 2020; fellow will work with Prof. Nisarg Shah on topics such as (but not limited to): computational social choice, fairness and incentives in machine learning, algorithmic game theory, and mechanism design. Applicants should have (prior to starting) a PhD in computer science, economics, operations research, or a related field.</p>
<p>Website: <a href="https://www.cs.toronto.edu/theory/positions.html">https://www.cs.toronto.edu/theory/positions.html</a><br/>
Email: nisarg@cs.toronto.edu</p></div>
    </content>
    <updated>2019-11-25T00:01:22Z</updated>
    <published>2019-11-25T00:01:22Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.10172</id>
    <link href="http://arxiv.org/abs/1911.10172" rel="alternate" type="text/html"/>
    <title>An Efficient $\varepsilon$-BIC to BIC Transformation and Its Application to Black-Box Reduction in Revenue Maximization</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cai:Yang.html">Yang Cai</a>, Argyris Oikonomou, Grigoris Velegkas, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhao:Mingfei.html">Mingfei Zhao</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.10172">PDF</a><br/><b>Abstract: </b>We consider the black-box reduction from multi-dimensional revenue
maximization to virtual welfare maximization. Cai et al.~\cite{CaiDW12a,
CaiDW12b,CaiDW13a,CaiDW13b} show a polynomial-time approximation-preserving
reduction, however, the mechanism produced by their reduction is only
approximately Bayesian incentive compatible ($\varepsilon$-BIC). We provide a
new polynomial time transformation that converts any $\varepsilon$-BIC
mechanism to an exactly BIC mechanism with only a negligible revenue loss. Our
transformation applies to a very general mechanism design setting and only
requires sample access to the agents' type distributions and query access to
the original $\varepsilon$-BIC mechanism. Other $\varepsilon$-BIC to BIC
transformations exist in the literature~\cite{DaskalakisW12, RubinsteinW15,
CaiZ17} but all require exponential time to run. As an application of our
transformation, we improve the reduction by Cai et al.~\cite{CaiDW12a,
CaiDW12b,CaiDW13a,CaiDW13b} to generate an exactly BIC mechanism.
</p>
<p>Our transformation builds on a novel idea developed in a recent paper by
Dughmi et al.~\cite{dughmi2017bernoulli}: finding the maximum entropy
regularized matching using Bernoulli factories. The original algorithm by
Dughmi et al.~\cite{dughmi2017bernoulli} can only handle graphs with
nonnegative edge weights, while our transformation requires finding the maximum
entropy regularized matching on graphs with both positive and negative edge
weights. The main technical contribution of this paper is a new algorithm that
can accommodate arbitrary edge weights.
</p></div>
    </summary>
    <updated>2019-11-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.10137</id>
    <link href="http://arxiv.org/abs/1911.10137" rel="alternate" type="text/html"/>
    <title>Privately Learning Thresholds: Closing the Exponential Gap</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kaplan:Haim.html">Haim Kaplan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Ligett:Katrina.html">Katrina Ligett</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mansour:Yishay.html">Yishay Mansour</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Naor:Moni.html">Moni Naor</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stemmer:Uri.html">Uri Stemmer</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.10137">PDF</a><br/><b>Abstract: </b>We study the sample complexity of learning threshold functions under the
constraint of differential privacy. It is assumed that each labeled example in
the training data is the information of one individual and we would like to
come up with a generalizing hypothesis $h$ while guaranteeing differential
privacy for the individuals. Intuitively, this means that any single labeled
example in the training data should not have a significant effect on the choice
of the hypothesis. This problem has received much attention recently; unlike
the non-private case, where the sample complexity is independent of the domain
size and just depends on the desired accuracy and confidence, for private
learning the sample complexity must depend on the domain size $X$ (even for
approximate differential privacy). Alon et al. (STOC 2019) showed a lower bound
of $\Omega(\log^*|X|)$ on the sample complexity and Bun et al. (FOCS 2015)
presented an approximate-private learner with sample complexity
$\tilde{O}\left(2^{\log^*|X|}\right)$. In this work we reduce this gap
significantly, almost settling the sample complexity. We first present a new
upper bound (algorithm) of $\tilde{O}\left(\left(\log^*|X|\right)^2\right)$ on
the sample complexity and then present an improved version with sample
complexity $\tilde{O}\left(\left(\log^*|X|\right)^{1.5}\right)$.
</p>
<p>Our algorithm is constructed for the related interior point problem, where
the goal is to find a point between the largest and smallest input elements. It
is based on selecting an input-dependent hash function and using it to embed
the database into a domain whose size is reduced logarithmically; this results
in a new database, an interior point of which can be used to generate an
interior point in the original database in a differentially private manner.
</p></div>
    </summary>
    <updated>2019-11-25T02:24:47Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09944</id>
    <link href="http://arxiv.org/abs/1911.09944" rel="alternate" type="text/html"/>
    <title>Covering Codes for Insertions and Deletions</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lenz:Andreas.html">Andreas Lenz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rashtchian:Cyrus.html">Cyrus Rashtchian</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Siegel:Paul_H=.html">Paul H. Siegel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yaakobi:Eitan.html">Eitan Yaakobi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09944">PDF</a><br/><b>Abstract: </b>A covering code is a set of codewords with the property that the union of
balls, suitably defined, around these codewords covers an entire space.
Generally, the goal is to find the covering code with the minimum size
codebook. While most prior work on covering codes has focused on the Hamming
metric, we consider the problem of designing covering codes defined in terms of
insertions and deletions. First, we provide new sphere-covering lower bounds on
the minimum possible size of such codes. Then, we provide new existential upper
bounds on the size of optimal covering codes for a single insertion or a single
deletion that are tight up to a constant factor. Finally, we derive improved
upper bounds for covering codes using $R\geq 2$ insertions or deletions. We
prove that codes exist with density that is only a factor $O(R \log R)$ larger
than the lower bounds for all fixed $R$. In particular, our upper bounds have
an optimal dependence on the word length, and we achieve asymptotic density
matching the best known bounds for Hamming distance covering codes.
</p></div>
    </summary>
    <updated>2019-11-25T02:20:22Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09852</id>
    <link href="http://arxiv.org/abs/1911.09852" rel="alternate" type="text/html"/>
    <title>Developments in Multi-Agent Fair Allocation</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aziz:Haris.html">Haris Aziz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09852">PDF</a><br/><b>Abstract: </b>Fairness is becoming an increasingly important concern when designing
markets, allocation procedures, and computer systems. I survey some recent
developments in the field of multi-agent fair allocation.
</p></div>
    </summary>
    <updated>2019-11-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09810</id>
    <link href="http://arxiv.org/abs/1911.09810" rel="alternate" type="text/html"/>
    <title>On Modeling Local Search with Special-Purpose Combinatorial Optimization Hardware</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Xiaoyuan.html">Xiaoyuan Liu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/u/Ushijima=Mwesigwa:Hayato.html">Hayato Ushijima-Mwesigwa</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mandal:Avradip.html">Avradip Mandal</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/u/Upadhyay:Sarvagya.html">Sarvagya Upadhyay</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Safro:Ilya.html">Ilya Safro</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Roy:Arnab.html">Arnab Roy</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09810">PDF</a><br/><b>Abstract: </b>Many combinatorial scientific computing problems are NP-hard which in
practice requires using heuristics that either decompose a large-scale problem
and solve many smaller local subproblems in parallel or iteratively improve the
solution by local processing for sufficiently many steps to achieve a good
quality/performance trade-off. These subproblems are NP-hard by themselves and
the quality of their solution that depends on the subproblem size vitally
affects the global solution of the entire problem. As we approach the physical
limits predicted by Moore's law, a variety of specialized combinatorial
optimization hardware (such as adiabatic quantum computers, CMOS annealers, and
optical parametric oscillators) is emerging to tackle specialized tasks in
different domains. Many researchers anticipate that in the near future, these
devices will be hybridized with high-performance computing systems to tackle
large-scale problems which will open a door for the next breakthrough in
performance of the combinatorial scientific computing algorithms. Most of these
devices solve the Ising combinatorial optimization model that can represent
many fundamental combinatorial scientific computing models. In this paper, we
tackle the main challenges of problem size and precision limitation that the
Ising hardware model typically suffers from. Although, our demonstration uses
one of these novel devices, the models we propose can be generally used in any
local search and refinement solvers that are broadly employed in combinatorial
scientific computing algorithms.
</p></div>
    </summary>
    <updated>2019-11-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09755</id>
    <link href="http://arxiv.org/abs/1911.09755" rel="alternate" type="text/html"/>
    <title>An Efficient Parametric Linear Programming Solver and Application to Polyhedral Projection</title>
    <feedworld_mtime>1574640000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yu:Hang.html">Hang Yu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Monniaux:David.html">David Monniaux</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09755">PDF</a><br/><b>Abstract: </b>Polyhedral projection is a main operation of the polyhedron abstract
domain.It can be computed via parametric linear programming (PLP), which is
more efficient than the classic Fourier-Motzkin elimination method.In prior
work, PLP was done in arbitrary precision rational arithmetic.In this paper, we
present an approach where most of the computation is performed in
floating-point arithmetic, then exact rational results are reconstructed.We
also propose a workaround for a difficulty that plagued previous attempts at
using PLP for computations on polyhedra: in general the linear programming
problems are degenerate, resulting in redundant computations and geometric
descriptions.
</p></div>
    </summary>
    <updated>2019-11-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-11-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/24/postdocs-at-university-of-toronto-apply-by-december-15-2019/</id>
    <link href="https://cstheory-jobs.org/2019/11/24/postdocs-at-university-of-toronto-apply-by-december-15-2019/" rel="alternate" type="text/html"/>
    <title>Postdocs at University of Toronto (apply by December 15, 2019)</title>
    <summary>The theory group at the University of Toronto anticipates up to three postdoctoral positions beginning September 2020. We seek candidates from all areas of theoretical computer science including algorithms, complexity theory, cryptography, differential privacy, distributed computing, graph theory, quantum computing, and theoretical aspects of machine learning. Website: https://www.cs.toronto.edu/theory/positions.html Email: hyuen@cs.toronto.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The theory group at the University of Toronto anticipates up to three postdoctoral positions beginning September 2020. We seek candidates from all areas of theoretical computer science including algorithms, complexity theory, cryptography, differential privacy, distributed computing, graph theory, quantum computing, and theoretical aspects of machine learning.</p>
<p>Website: <a href="https://www.cs.toronto.edu/theory/positions.html">https://www.cs.toronto.edu/theory/positions.html</a><br/>
Email: hyuen@cs.toronto.edu</p></div>
    </content>
    <updated>2019-11-24T23:59:18Z</updated>
    <published>2019-11-24T23:59:18Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/24/motwani-postdoctoral-fellowship-at-stanford-computer-science-apply-by-december-15-2019/</id>
    <link href="https://cstheory-jobs.org/2019/11/24/motwani-postdoctoral-fellowship-at-stanford-computer-science-apply-by-december-15-2019/" rel="alternate" type="text/html"/>
    <title>Motwani Postdoctoral Fellowship at Stanford Computer Science (apply by December 15, 2019)</title>
    <summary>The theory group at Stanford invites applications for the Motwani postdoctoral fellowship in theoretical computer science. Information and application instructions below. Applications will be accepted until the positions are filled, but review of applicants will begin after Dec 15. Website: https://academicjobsonline.org/ajo/jobs/15578 Email: theory.stanford@gmail.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The theory group at Stanford invites applications for the Motwani postdoctoral fellowship in theoretical computer science. Information and application instructions below.</p>
<p>Applications will be accepted until the positions are filled, but review of applicants will begin after Dec 15.</p>
<p>Website: <a href="https://academicjobsonline.org/ajo/jobs/15578">https://academicjobsonline.org/ajo/jobs/15578</a><br/>
Email: theory.stanford@gmail.com</p></div>
    </content>
    <updated>2019-11-24T23:23:27Z</updated>
    <published>2019-11-24T23:23:27Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/169</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/169" rel="alternate" type="text/html"/>
    <title>TR19-169 |  On Exponential-Time Hypotheses, Derandomization, and Circuit Lower Bounds | 

	Roei Tell, 

	Lijie Chen, 

	Ron Rothblum, 

	Eylon Yogev</title>
    <summary>The Exponential-Time Hypothesis ($ETH$) is a strengthening of the $\mathcal{P} \neq \mathcal{NP}$ conjecture, stating that $3\text{-}SAT$ on $n$ variables cannot be solved in time $2^{\epsilon\cdot n}$, for some $\epsilon&gt;0$. In recent years, analogous hypotheses that are ``exponentially-strong'' forms of other classical complexity conjectures (such as $\mathcal{NP}\not\subseteq\mathcal{BPP}$ or $co\text{-}\mathcal{NP}\not\subseteq \mathcal{NP}$) have also been considered. These Exponential-Time Hypotheses have been widely influential across different areas of complexity theory. However, their connections to *derandomization and circuit lower bounds* have yet to be systematically studied. Such study is indeed the focus of the current work, and we prove a sequence of results demonstrating that *the connections between exponential-time hypotheses, derandomization, and circuit lower bounds are remarkably strong*.

First, we show that if $3\text{-}SAT$ (or even $TQBF$) cannot be solved by probabilistic algorithms that run in time $2^{n/\mathrm{polylog}(n)}$, then $\mathcal{BPP}$ can be deterministically simulated ``on average case'' in (nearly-)polynomial-time (i.e., in time $n^{\mathrm{polyloglog}(n)}$). This result addresses a long-standing lacuna in uniform ``hardness-to-randomness'' results, which did not previously extend to such parameter settings. Moreover, we extend this result to support an ``almost-always'' derandomization conclusion from an ``almost-always'' lower bound hypothesis.

Secondly, we show that *disproving* certain exponential-time hypotheses requires proving breakthrough circuit lower bounds. In particular, if $CircuitSAT$ for circuits over $n$ bits of size $\mathrm{poly}(n)$ can be solved by *probabilistic algorithms* in time $2^{n/\mathrm{polylog}(n)}$, then $\mathcal{BPE}$ does not have circuits of quasilinear size. The main novel feature of this result is that we only assume the existence of a *randomized* circuit-analysis algorithm, whereas previous similar results crucially relied on the hypothesis that the circuit-analysis algorithm does not use randomness.

Thirdly, we show that a very weak exponential-time hypothesis is closely-related to the classical question of whether derandomization and circuit lower bounds are *equivalent*. Specifically, we show two-way implications between the hypothesis that the foregoing equivalence holds and the hypothesis that $\mathcal{E}$ cannot be decided by ``small'' circuits that are *uniformly generated* by relatively-efficient non-deterministic machines. This highlights a sufficient-and-necessary path for progress towards proving that derandomization and circuit lower bounds are indeed equivalent.</summary>
    <updated>2019-11-24T11:50:42Z</updated>
    <published>2019-11-24T11:50:42Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-11-25T11:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/168</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/168" rel="alternate" type="text/html"/>
    <title>TR19-168 |  Beyond Natural Proofs: Hardness Magnification and Locality | 

	Ján Pich, 

	Lijie Chen, 

	Shuichi Hirahara, 

	Igor Carboni Oliveira, 

	Ninad Rajgopal, 

	Rahul Santhanam</title>
    <summary>Hardness magnification reduces major complexity separations (such as $EXP \not\subseteq NC^1$) to proving lower bounds for some natural problem $Q$ against weak circuit models. Several recent works [OS18, MMW19, CT19, OPS19, CMMW19, Oli19, CJW19a] have established results of this form. In the most intriguing cases, the required lower bound is known for problems that appear to be significantly easier than $Q$, while $Q$ itself is susceptible to lower bounds but these are not yet sufficient for magnification. 

In this work, we provide more examples of this phenomenon, and investigate the prospects of proving new lower bounds using this approach. In particular, we consider the following essential questions associated with the hardness magnification program:

– Does hardness magnification avoid the natural proofs barrier of Razborov and Rudich [RR97]? 
– Can we adapt known lower bound techniques to establish the desired lower bound for $Q$?

We establish that some instantiations of hardness magnification overcome the natural proofs barrier in the following sense: slightly superlinear-size circuit lower bounds for certain versions of the minimum circuit size problem MCSP imply the non-existence of natural proofs. As a corollary of our result, we show that certain magnification theorems not only imply strong worst-case circuit lower bounds but also rule out the existence of efficient learning algorithms. 

Hardness magnification might sidestep natural proofs, but we identify a source of difficulty when trying to adapt existing lower bound techniques to prove strong lower bounds via magnification. This is captured by a locality barrier: existing magnification theorems unconditionally show that the problems $Q$ considered above admit highly efficient circuits extended with small fan-in oracle gates, while lower bound techniques against weak circuit models quite often easily extend to circuits containing such oracles. This explains why direct adaptations of certain lower bounds are unlikely to yield strong complexity separations via hardness magnification.</summary>
    <updated>2019-11-24T05:59:30Z</updated>
    <published>2019-11-24T05:59:30Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-11-25T11:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09650</id>
    <link href="http://arxiv.org/abs/1911.09650" rel="alternate" type="text/html"/>
    <title>Towards a Theory of Parameterized Streaming Algorithms</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chitnis:Rajesh.html">Rajesh Chitnis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cormode:Graham.html">Graham Cormode</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09650">PDF</a><br/><b>Abstract: </b>Parameterized complexity attempts to give a more fine-grained analysis of the
complexity of problems: instead of measuring the running time as a function of
only the input size, we analyze the running time with respect to additional
parameters. This approach has proven to be highly successful in delineating our
understanding of \NP-hard problems. Given this success with the TIME resource,
it seems but natural to use this approach for dealing with the SPACE resource.
First attempts in this direction have considered a few individual problems,
with some success: Fafianie and Kratsch [MFCS'14] and Chitnis et al. [SODA'15]
introduced the notions of streaming kernels and parameterized streaming
algorithms respectively. For example, the latter shows how to refine the
$\Omega(n^2)$ bit lower bound for finding a minimum Vertex Cover (VC) in the
streaming setting by designing an algorithm for the parameterized $k$-VC
problem which uses $O(k^{2}\log n)$ bits.
</p>
<p>In this paper, we initiate a systematic study of graph problems from the
paradigm of parameterized streaming algorithms. We first define a natural
hierarchy of space complexity classes of FPS, SubPS, SemiPS, SupPS and BrutePS,
and then obtain tight classifications for several well-studied graph problems
such as Longest Path, Feedback Vertex Set, Dominating Set, Girth, Treewidth,
etc. into this hierarchy.
</p>
<p>(see paper for full abstract)
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09498</id>
    <link href="http://arxiv.org/abs/1911.09498" rel="alternate" type="text/html"/>
    <title>Implementing the Topological Model Succinctly</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>José Fuentes-Sepúlveda, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Navarro:Gonzalo.html">Gonzalo Navarro</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Seco:Diego.html">Diego Seco</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09498">PDF</a><br/><b>Abstract: </b>We show that the topological model, a semantically rich standard to represent
GIS data, can be encoded succinctly while efficiently answering a number of
topology-related queries. We build on recent succinct planar graph
representations so as to encode a model with $m$ edges within $4m+o(m)$ bits
and answer various queries relating nodes, edges, and faces in $o(\log\log m)$
time, or any time in $\omega(\log m)$ for a few complex ones.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09447</id>
    <link href="http://arxiv.org/abs/1911.09447" rel="alternate" type="text/html"/>
    <title>S-RASTER: Contraction Clustering for Evolving Data Streams</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/u/Ulm:Gregor.html">Gregor Ulm</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Smith:Simon.html">Simon Smith</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nilsson:Adrian.html">Adrian Nilsson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gustavsson:Emil.html">Emil Gustavsson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jirstrand:Mats.html">Mats Jirstrand</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09447">PDF</a><br/><b>Abstract: </b>Contraction Clustering (RASTER) is a very fast algorithm for density-based
clustering, which requires only a single pass. It can process arbitrary amounts
of data in linear time and in constant memory, quickly identifying approximate
clusters. It also exhibits good scalability in the presence of multiple CPU
cores. Yet, RASTER is limited to batch processing. In contrast, S-RASTER is an
adaptation of RASTER to the stream processing paradigm that is able to identify
clusters in evolving data streams. This algorithm retains the main benefits of
its parent algorithm, i.e. single-pass linear time cost and constant memory
requirements for each discrete time step in the sliding window. The sliding
window is efficiently pruned, and clustering is still performed in linear time.
Like RASTER, S-RASTER trades off an often negligible amount of precision for
speed. It is therefore very well suited to real-world scenarios where
clustering does not happen continually but only periodically. We describe the
algorithm, including a discussion of implementation details.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09379</id>
    <link href="http://arxiv.org/abs/1911.09379" rel="alternate" type="text/html"/>
    <title>Parameterized Complexity of Stable Roommates with Ties and Incomplete Lists Through the Lens of Graph Parameters</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bredereck:Robert.html">Robert Bredereck</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Heeger:Klaus.html">Klaus Heeger</a>, Dušan Knop, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Niedermeier:Rolf.html">Rolf Niedermeier</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09379">PDF</a><br/><b>Abstract: </b>We continue and extend previous work on the parameterized complexity analysis
of the NP-hard Stable Roommates with Ties and Incomplete Lists problem, thereby
strengthening earlier results both on the side of parameterized hardness as
well as on the side of fixed-parameter tractability. Other than for its famous
sister problem Stable Marriage which focuses on a bipartite scenario, Stable
Roommates with Incomplete Lists allows for arbitrary acceptability graphs whose
edges specify the possible matchings of each two agents (agents are represented
by graph vertices). Herein, incomplete lists and ties reflect the fact that in
realistic application scenarios the agents cannot bring all other agents into a
linear order. Among our main contributions is to show that it is W[1]-hard to
compute a maximum-cardinality stable matching for acceptability graphs of
bounded treedepth, bounded tree-cut width, and bounded feedback vertex number
(these are each time the respective parameters). However, if we `only' ask for
perfect stable matchings or the mere existence of a stable matching, then we
obtain fixed-parameter tractability with respect to tree-cut width but not with
respect to treedepth. On the positive side, we also provide fixed-parameter
tractability results for the parameter feedback edge set number.
</p></div>
    </summary>
    <updated>2019-11-24T23:20:23Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09370</id>
    <link href="http://arxiv.org/abs/1911.09370" rel="alternate" type="text/html"/>
    <title>Energy consumption in compact integer vectors: A study case</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>José Fuentes-Sepúlveda, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Ladra:Susana.html">Susana Ladra</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09370">PDF</a><br/><b>Abstract: </b>In the field of algorithms and data structures analysis and design, most of
the researchers focus only on the space/time trade-off, and little attention
has been paid to energy consumption. Moreover, most of the efforts in the field
of Green Computing have been devoted to hardware-related issues, being green
software in its infancy. Optimizing the usage of computing resources,
minimizing power consumption or increasing battery life are some of the goals
of this field of research.
</p>
<p>As an attempt to address the most recent sustainability challenges, we must
incorporate the energy consumption as a first-class constraint when designing
new compact data structures. Thus, as a preliminary work to reach that goal, we
first need to understand the factors that impact on the energy consumption and
their relation with compression. In this work, we study the energy consumption
required by several integer vector representations. We execute typical
operations over datasets of different nature. We can see that, as commonly
believed, energy consumption is highly related to the time required by the
process, but not always. We analyze other parameters, such as number of
instructions, number of CPU cycles, memory loads, among others.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09221</id>
    <link href="http://arxiv.org/abs/1911.09221" rel="alternate" type="text/html"/>
    <title>A 2-approximation for the $k$-prize-collecting Steiner tree problem</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pedrosa:Lehilton_Lelis_Chaves.html">Lehilton Lelis Chaves Pedrosa</a>, Hugo Kooki Kasuya Rosado <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09221">PDF</a><br/><b>Abstract: </b>We consider the $k$-prize-collecting Steiner tree problem. An instance is
composed of an integer $k$ and a graph $G$ with costs on edges and penalties on
vertices. The objective is to find a tree spanning at least $k$ vertices which
minimizes the cost of the edges in the tree plus the penalties of vertices not
in the tree. This is one of the most fundamental network design problems and is
a common generalization of the prize-collecting Steiner tree and the
$k$-minimum spanning tree problems. Our main result is a 2-approximation
algorithm, which improves on the currently best known approximation factor of
3.96 and has a faster running time. The algorithm builds on a modification of
the primal-dual framework of Goemans and Williamson, and reveals interesting
properties that can be applied to other similar problems.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09176</id>
    <link href="http://arxiv.org/abs/1911.09176" rel="alternate" type="text/html"/>
    <title>Lower Bounds for Function Inversion with Quantum Advice</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chung:Kai=Min.html">Kai-Min Chung</a>, Tai-Ning Liao, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/q/Qian:Luowen.html">Luowen Qian</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09176">PDF</a><br/><b>Abstract: </b>Function inversion is that given a random function $f: [M] \to [N]$, we want
to compute some auxiliary information of size $S$ that we can find pre-image of
any image with a few queries to the function given as a black box in time $T$.
It is a well-studied problem in the classical settings, however, it is not
clear how a quantum adversary can do better at this task besides invoking
Grover's algorithm. Nayebi et al. proved a lower bound for adversaries
inverting permutations leveraging only quantum queries to the black box. We
give a matching lower bound for functions and permutations where $M = O(N)$,
and allowing adversaries to be fully quantum, and thus resolving the open
question positively raised by Nayebi et al. of whether such lower bound is
achievable for inverters with quantum advice.
</p>
<p>In order to prove these bounds, we also proved a lower bound for a
generalized version of quantum random access code (originally introduced by
Ambainis et al.), i.e. under the setting where the encoding length is variable
and each element can be arbitrarily correlated, which may be of independent
interest.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09165</id>
    <link href="http://arxiv.org/abs/1911.09165" rel="alternate" type="text/html"/>
    <title>The Karger-Stein Algorithm is Optimal for $k$-cut</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gupta:Anupam.html">Anupam Gupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lee:Euiwoong.html">Euiwoong Lee</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Li:Jason.html">Jason Li</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09165">PDF</a><br/><b>Abstract: </b>In the $k$-cut problem, we are given an edge-weighted graph and want to find
the least-weight set of edges whose deletion breaks the graph into $k$
connected components. Algorithms due to Karger-Stein and Thorup showed how to
find such a minimum $k$-cut in time approximately $O(n^{2k-2})$. The best lower
bounds come from conjectures about the solvability of the $k$-clique problem
and a reduction from $k$-clique to $k$-cut, and show that solving $k$-cut is
likely to require time $\Omega(n^k)$. Our recent results have given
special-purpose algorithms that solve the problem in time $n^{1.98k + O(1)}$,
and ones that have better performance for special classes of graphs (e.g., for
small integer weights). In this work, we resolve the problem for general
graphs, by showing that for any fixed $k \geq 2$, the Karger-Stein algorithm
outputs any fixed minimum $k$-cut with probability at least $\hat{O}(n^{-k})$,
where $\hat{O}(\cdot)$ hides a $2^{O(\ln \ln n)^2}$ factor. This also gives an
extremal bound of $\hat{O}(n^k)$ on the number of minimum $k$-cuts in an
$n$-vertex graph and an algorithm to compute a minimum $k$-cut in similar
runtime. Both are tight up to $\hat{O}(1)$ factors. The first main ingredient
in our result is a fine-grained analysis of how the graph shrinks---and how the
average degree evolves---under the Karger-Stein process. The second ingredient
is an extremal result bounding the number of cuts of size at most $(2-\delta)
OPT/k$, using the Sunflower lemma.
</p></div>
    </summary>
    <updated>2019-11-24T23:25:41Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1911.09150</id>
    <link href="http://arxiv.org/abs/1911.09150" rel="alternate" type="text/html"/>
    <title>Polylogarithmic Approximation Algorithm for k-Connected Directed Steiner Tree on Quasi-Bipartite Graphs</title>
    <feedworld_mtime>1574553600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chan:Chun=Hsiang.html">Chun-Hsiang Chan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Laekhanukit:Bundit.html">Bundit Laekhanukit</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wei:Hao=Ting.html">Hao-Ting Wei</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Yuhao.html">Yuhao Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1911.09150">PDF</a><br/><b>Abstract: </b>In the k-Connected Directed Steiner Tree problem (k-DST), we are given a
directed graph G=(V, E) with edge (or vertex) costs, a root vertex r, a set of
q terminals T, and a connectivity requirement k&gt;0; the goal is to find a
minimum-cost subgraph H of G such that H has k internally disjoint paths from
the root r to each terminal t . The k-DST problem is a natural generalization
of the classical Directed Steiner Tree problem (DST) in the fault-tolerant
setting in which the solution subgraph is required to have an r,t-path, for
every terminal t, even after removing k-1 edges or vertices.
</p>
<p>Despite being a classical problem, there are not many positive results on the
problem, especially for the case k &gt;= 3. In this paper, we will present an
O(log k log q)-approximation algorithm for k-DST when an input graph is
quasi-bipartite, i.e., when there is no edge joining two non-terminal vertices.
To the best of our knowledge, our algorithm is the only known non-trivial
approximation algorithm for k-DST, for k &gt;= 3, that runs in polynomial-time
regardless of the structure of the optimal solution. In addition, our algorithm
is tight for every constant k, due to the hardness result inherited from the
Set Cover problem.
</p></div>
    </summary>
    <updated>2019-11-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-11-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/23/faculty-at-northwestern-university-apply-by-december-1-2019/</id>
    <link href="https://cstheory-jobs.org/2019/11/23/faculty-at-northwestern-university-apply-by-december-1-2019/" rel="alternate" type="text/html"/>
    <title>Faculty at Northwestern University (apply by December 1, 2019)</title>
    <summary>We invite candidates to apply for new positions as Assistant, Associate and Full Professor of Computer Science. We are interested in applications from outstanding candidates in all areas of Computer Science. We also encourage applicants to CS+X faculty positions jointly with other schools or departments at Northwestern, for individuals and teams exploring new research boundaries […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We invite candidates to apply for new positions as Assistant, Associate and Full Professor of Computer Science. We are interested in applications from outstanding candidates in all areas of Computer Science. We also encourage applicants to CS+X faculty positions jointly with other schools or departments at Northwestern, for individuals and teams exploring new research boundaries in computation.</p>
<p>Website: <a href="https://facultyrecruiting.northwestern.edu/apply/NzE4">https://facultyrecruiting.northwestern.edu/apply/NzE4</a><br/>
Email: apply-facsearch@cs.northwestern.edu.</p></div>
    </content>
    <updated>2019-11-23T21:16:27Z</updated>
    <published>2019-11-23T21:16:27Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7582</id>
    <link href="https://windowsontheory.org/2019/11/23/harvard-opportunity-lecturing-advising-position/" rel="alternate" type="text/html"/>
    <title>Harvard opportunity: lecturing / advising position</title>
    <summary>Harvard Computer Science is seeking a Lecturer/Assistant Director of Undergraduate Studies. A great candidate would be someone passionate about teaching and mentoring and excited to build a diverse and inclusive Undergraduate Computer Science community at Harvard. The position requires a Ph.D and is open to all areas of computer science and related fields, but of course […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Harvard Computer Science is seeking a Lecturer/Assistant Director of Undergraduate Studies. A great candidate would be someone passionate about teaching and mentoring and excited to build a diverse and inclusive Undergraduate Computer Science community at Harvard. The position requires a Ph.D and is open to all areas of computer science and related fields, but of course personally I would love to have a theorist fill this role.</p>



<p>Key responsibilities are:</p>



<p>* Teach (or co-teach) one undergraduate Computer Science course per semester.</p>



<p>* Join and help lead the Computer Science Undergraduate Advising team (which includes mentoring and advising undergraduate students and developing materials, initiatives, and events to foster a welcoming and inclusive Harvard Computer Science community.)</p>



<p>The job posting with all details is at <a href="https://tiny.cc/harvardadus">https://tiny.cc/harvardadus</a> <br/></p>



<p>Any questions about this position, feel free to contact me or Steve Chong  (the co directors of undergraduate studies for CS at Harvard) at cs-dus at seas.harvard.edu <br/></p></div>
    </content>
    <updated>2019-11-23T17:56:24Z</updated>
    <published>2019-11-23T17:56:24Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2019-11-25T11:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/22/postdoc-at-rutgers-university-apply-by-january-15-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/22/postdoc-at-rutgers-university-apply-by-january-15-2020/" rel="alternate" type="text/html"/>
    <title>Postdoc at Rutgers University (apply by January 15, 2020)</title>
    <summary>Postdoc in Algorithmic Principles of Computer Systems under the super vision of Martin Farach-Colton Applicants should have a strong background in Algorithms with an interests in both continuing their algorithmic research and in integrating into a cross-disciplinary group of researches spanning from Algorithms to Operating Systems. Website: http://jobs.rutgers.edu/postings/106311 Email: martin@farach-colton.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Postdoc in Algorithmic Principles of Computer Systems under the super vision of Martin Farach-Colton</p>
<p>Applicants should have a strong background in Algorithms with an interests in both continuing their algorithmic research and in integrating into a cross-disciplinary group of researches spanning from Algorithms to Operating Systems.</p>
<p>Website: <a href="http://jobs.rutgers.edu/postings/106311">http://jobs.rutgers.edu/postings/106311</a><br/>
Email: martin@farach-colton.com</p></div>
    </content>
    <updated>2019-11-22T21:30:34Z</updated>
    <published>2019-11-22T21:30:34Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/22/associate-or-full-teaching-professor-at-university-of-california-san-diego-apply-by-february-1-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/22/associate-or-full-teaching-professor-at-university-of-california-san-diego-apply-by-february-1-2020/" rel="alternate" type="text/html"/>
    <title>Associate or Full Teaching Professor at University of California – San Diego (apply by February 1, 2020)</title>
    <summary>We seek candidates who have demonstrated that they are strong computer science and engineering educators. Successful candidates must show commitment to educating a broad and diverse group of students and in working to increase the participation and success of students from groups underrepresented in computer science. Website: https://apol-recruit.ucsd.edu/JPF02340 Email: nherrera@eng.ucsd.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We seek candidates who have demonstrated that they are strong computer science and engineering educators. Successful candidates must show commitment to educating a broad and diverse group of students and in working to increase the participation and success of students from groups underrepresented in computer science.</p>
<p>Website: <a href="https://apol-recruit.ucsd.edu/JPF02340">https://apol-recruit.ucsd.edu/JPF02340</a><br/>
Email: nherrera@eng.ucsd.edu</p></div>
    </content>
    <updated>2019-11-22T16:55:22Z</updated>
    <published>2019-11-22T16:55:22Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/21/faculty-at-university-of-iowa-apply-by-january-15-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/21/faculty-at-university-of-iowa-apply-by-january-15-2020/" rel="alternate" type="text/html"/>
    <title>Faculty at University of Iowa (apply by January 15, 2020)</title>
    <summary>The University of Iowa Computer Science Department invites applications for multiple tenure-track positions effective August 2020. Tenure-track positions are at the Assistant Professor level, although more senior appointments may be considered. We seek creative and collaborative scholars from all areas of CS, who align with our current research portfolio, including algorithms and theory. Website: https://cs.uiowa.edu/hiring/ […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The University of Iowa Computer Science Department invites applications for multiple tenure-track positions effective August 2020. Tenure-track positions are at the Assistant Professor level, although more senior appointments may be considered. We seek creative and collaborative scholars from all areas of CS, who align with our current research portfolio, including algorithms and theory.</p>
<p>Website: <a href="https://cs.uiowa.edu/hiring/">https://cs.uiowa.edu/hiring/</a><br/>
Email: cs-info@list.uiowa.edu</p></div>
    </content>
    <updated>2019-11-21T22:20:01Z</updated>
    <published>2019-11-21T22:20:01Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://emanueleviola.wordpress.com/?p=680</id>
    <link href="https://emanueleviola.wordpress.com/2019/11/21/manucomic-1/" rel="alternate" type="text/html"/>
    <title>manucomic #1</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="wp-block-image size-large"><img alt="" class="wp-image-681" src="https://emanueleviola.files.wordpress.com/2019/11/manucomic1.jpg?w=746"/></figure></div>
    </content>
    <updated>2019-11-21T16:54:34Z</updated>
    <published>2019-11-21T16:54:34Z</published>
    <category term="Uncategorized"/>
    <category term="manucomic"/>
    <author>
      <name>Manu</name>
    </author>
    <source>
      <id>https://emanueleviola.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>by Manu</subtitle>
      <title>Thoughts</title>
      <updated>2019-11-25T11:21:06Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/167</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/167" rel="alternate" type="text/html"/>
    <title>TR19-167 |  UTIME Easy-witness Lemma &amp;amp; Some Consequences | 

	Anant Dhayal, 

	Russell Impagliazzo</title>
    <summary>We prove an easy-witness lemma ($\ewl$) for unambiguous non-deterministic verfiers. We show that if $\utime(t)\subset\mathcal{C}$, then for every $L\in\utime(t)$, for every $\utime(t)$ verifier $V$ for $L$, and for every $x\in L$, there is a certificate $y$ satisfing $V(x,y)=1$, that can be encoded as a truth-table of a $\mathcal{C}$ circuit. Our technique is simple compared to the $\ntime$ $\ewl$s \cite{IKW02,Wil-ES13,MW18}, and yields fine-grained results in terms of the time and size parameters. It also works for all {\it typical} non-uniform circuit classes without any additional machinery. Using this $\ewl$ we prove a Karp-Lipton \cite{KL80} style theorem ($\klt$) for $\uexp$. We show that $\uexp\subset\size(poly)\implies\uexp=\ma$. We also prove similar $\ewl$ and $\klt$ for $\uexp\cap\couexp$ and $\fewexp$.

Circuit lower bound techniques that entail natural properties of Razborov and Rudich \cite{RR97} are called natural, and are known to contradict widely believed cryptographic assumptions in the course of proving strong lower bounds. Thus attempts have been made to understand un-natural techniques. Natural properties satisfy three conditions: usefulness, constructiveness, and largeness. Usefulness is unavoidable in any lower-bound technique. In \cite{Wil-NP16,Ig13} it was shown that obtaining $\nexp$ lower bounds is equivalent to obtaining $\pt$-constructive (with $\log n$ advice) properties.

In this paper we consider properties that avoid largeness. We introduce a new notion called unique properties, which is opposite to natural properties in the sense of largeness. A unique property contains exactly one element of each input length (that is a power of 2). We show that $\pt$-constructivity and uniqueness (opposite of largeness) both are unavoidable for certain lower bounds. We prove, $\uexp\cap\couexp\not\subset\mathcal{C}$ if and only if there is a $\pt$-constructive unique property against $\mathcal{C}$. We also establish equivalences between lower bounds against $\uexp$ (with and without advice), and the existence of different restrictions of $\pt$-constructive unique properties that use advice. 

The ``derandomization (of $\bpp$) from uniform/non-uniform lower bounds for $\Gamma$'' type of results are known for $\Gamma=\expo,\nexp,\nexp\cap\conexp,\rexp$ \cite{NW94,BFNW93,IW01,IKW02,Wil-NP16}. Using the above equivalences we obtain a super-set of these results that also includes the classes $\uexp,\uexp\cap\couexp,\zpexp$.  

One important application of the $\nexp$ $\ewl$ and $\klt$ is the connection between fast ($\sat$ and learning) algorithms and $\nexp$ lower bounds \cite{Wil-ES13,FK09,Ig13}. Using our $\utime$ $\ewl$ and $\klt$ we derive connections between fast unambiguous algorithms and $\utime$ lower bounds. Finally we show results that generalize the lower bound frameworks -- that work only for unrestricted Boolean circuits -- such that they work for any restricted typical circuit class. This will help us to get lower bounds against any typical circuit class from fast algorithms that work for that particular class (and not for the super-class of unrestricted Boolean circuits).</summary>
    <updated>2019-11-21T01:41:00Z</updated>
    <published>2019-11-21T01:41:00Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-11-25T11:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/20/lecturer-assistant-director-undergraduate-studies-at-harvard-university-apply-by-january-1-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/20/lecturer-assistant-director-undergraduate-studies-at-harvard-university-apply-by-january-1-2020/" rel="alternate" type="text/html"/>
    <title>Lecturer / Assistant Director Undergraduate Studies at Harvard University (apply by January 1, 2020)</title>
    <summary>Harvard University seeks qualified candidates for the position of Assistant Director for Undergraduate Studies, with a concurrent Lectureship, in Computer Science. Responsibilities include teaching or co-teaching one one undergraduate Computer Science course per semester as well as hepling lead the Computer Science Undergraduate Advising team with faculty and staff. (see links for full info) Website: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Harvard University seeks qualified candidates for the position of Assistant Director for Undergraduate Studies, with a concurrent Lectureship, in Computer Science. Responsibilities include teaching or co-teaching one one undergraduate Computer Science course per semester as well as hepling lead the Computer Science Undergraduate Advising team with faculty and staff. (see links for full info)</p>
<p>Website: <a href="http://tiny.cc/harvardadus">http://tiny.cc/harvardadus</a><br/>
Email: cs-dus@seas.harvard.edu</p></div>
    </content>
    <updated>2019-11-20T19:58:34Z</updated>
    <published>2019-11-20T19:58:34Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/166</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/166" rel="alternate" type="text/html"/>
    <title>TR19-166 |  Top-down induction of decision trees: rigorous guarantees and inherent limitations | 

	Guy Blanc, 

	Jane Lange, 

	Li-Yang Tan</title>
    <summary>Consider the following heuristic for building a decision tree for a function $f : \{0,1\}^n \to \{\pm 1\}$.  Place the most influential variable $x_i$ of $f$ at the root, and recurse on the subfunctions $f_{x_i=0}$ and $f_{x_i=1}$ on the left and right subtrees respectively; terminate once the tree is an $\varepsilon$-approximation of $f$.   We analyze the quality of this heuristic, obtaining near-matching upper and lower bounds:  

$\circ$ Upper bound: For every $f$ with decision tree size $s$ and every $\varepsilon \in (0,\frac1{2})$, this heuristic builds a decision tree of size at most $s^{O(\log(s/\varepsilon)\log(1/\varepsilon))}$. 

$\circ$ Lower bound: For every $\varepsilon \in (0,\frac1{2})$ and $s \le 2^{\tilde{O}(\sqrt{n})}$, there is an $f$ with decision tree size $s$ such that this heuristic builds a decision tree of size $s^{\tilde{\Omega}(\log s)}$. 

We also obtain upper and lower bounds for monotone functions: $s^{O(\sqrt{\log s}/\varepsilon)}$ and $s^{\tilde{\Omega}(\sqrt[4]{\log s }
)}$ respectively.  The lower bound disproves conjectures of Fiat and Pechyony (2004) and Lee (2009).

Our upper bounds yield new algorithms for properly learning decision trees under the uniform distribution.  We show that these algorithms---which are motivated by widely employed and empirically successful top-down decision tree learning heuristics such as ID3, C4.5, and CART---achieve provable guarantees that compare favorably with those of the current fastest algorithm (Ehrenfeucht and Haussler, 1989), and even have certain qualitative advantages. Our lower bounds shed new light on the limitations of these heuristics. 

Finally, we revisit the classic work of Ehrenfeucht and Haussler.  We extend it to give the first uniform-distribution proper learning algorithm that achieves polynomial sample and memory complexity, while matching its state-of-the-art quasipolynomial runtime.</summary>
    <updated>2019-11-20T19:06:43Z</updated>
    <published>2019-11-20T19:06:43Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-11-25T11:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/20/postdoctoral-fellow-at-the-university-of-texas-at-austin-apply-by-january-15-2020-2/</id>
    <link href="https://cstheory-jobs.org/2019/11/20/postdoctoral-fellow-at-the-university-of-texas-at-austin-apply-by-january-15-2020-2/" rel="alternate" type="text/html"/>
    <title>Postdoctoral Fellow at The University of Texas at Austin (apply by January 15, 2020)</title>
    <summary>The Computer Science Department at UT Austin invites applications for a Postdoctoral Fellow in theoretical computer science for the 2020-21 academic year. The Fellow will work with Dana Moshkovitz and David Zuckerman on pseudorandomness and computational complexity. Review of applicants will begin on January 15, but applications will be accepted until the position is filled. […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Computer Science Department at UT Austin invites applications for a Postdoctoral Fellow in theoretical computer science for the 2020-21 academic year. The Fellow will work with Dana Moshkovitz and David Zuckerman on pseudorandomness and computational complexity. Review of applicants will begin on January 15, but applications will be accepted until the position is filled.</p>
<p>Website: <a href="https://www.myworkday.com/utaustin/d/inst/15$158872/9925$9054.htmld">https://www.myworkday.com/utaustin/d/inst/15$158872/9925$9054.htmld</a><br/>
Email: maguilar@cs.utexas.edu</p></div>
    </content>
    <updated>2019-11-20T17:45:16Z</updated>
    <published>2019-11-20T17:45:16Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/20/postdoctoral-fellow-at-the-university-of-texas-at-austin-apply-by-january-15-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/20/postdoctoral-fellow-at-the-university-of-texas-at-austin-apply-by-january-15-2020/" rel="alternate" type="text/html"/>
    <title>Postdoctoral Fellow at The University of Texas at Austin (apply by January 15, 2020)</title>
    <summary>The Computer Science Department at UT Austin invites applications for a Postdoctoral Fellow in theoretical computer science for the 2020-21 academic year. The Fellow will work with Dana Moshkovitz and David Zuckerman on pseudorandomness and computational complexity. Review of applicants will begin on January 15, but applications will be accepted until the position is filled. […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Computer Science Department at UT Austin invites applications for a Postdoctoral Fellow in theoretical computer science for the 2020-21 academic year. The Fellow will work with Dana Moshkovitz and David Zuckerman on pseudorandomness and computational complexity. Review of applicants will begin on January 15, but applications will be accepted until the position is filled.</p>
<p>Website: <a href="https://www.myworkday.com/utaustin/d/inst/15$158872/9925$9054.htmld">https://www.myworkday.com/utaustin/d/inst/15$158872/9925$9054.htmld</a><br/>
Email: maguilar@cs.utexas.edu</p></div>
    </content>
    <updated>2019-11-20T17:45:06Z</updated>
    <published>2019-11-20T17:45:06Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-25T11:20:44Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3445</id>
    <link href="https://agtb.wordpress.com/2019/11/20/test-of-time-award-call-for-nominations/" rel="alternate" type="text/html"/>
    <title>Test of time award: call for nominations</title>
    <summary>Please nominate for the SIGecom Test of Time Award. The SIGecom Test of Time Award recognizes the author or authors of an influential paper or series of papers published between ten and twenty-five years ago that has significantly impacted research or applications exemplifying the interplay of economics and computation. To be eligible, a paper or […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p style="font-weight: 400;">Please nominate for the SIGecom Test of Time Award.</p>
<p style="font-weight: 400;">The SIGecom Test of Time Award recognizes the author or authors of an influential paper or series of papers published between ten and twenty-five years ago that has significantly impacted research or applications exemplifying the interplay of economics and computation.</p>
<p style="font-weight: 400;">To be eligible, a paper or series of papers must be on a topic in the intersection of economics and computation, and must have been first published, in preliminary or final form, in an archival journal or conference proceedings no less than ten years and no more than twenty-five years before the year the award is conferred. Papers for which all authors are deceased at the time the Award Committee makes its decision are not eligible for the award.</p>
<p style="font-weight: 400;">The 2020 SIGecom Test of Time Award will be given for papers published no earlier than 1995 and no later than 2010. <strong>Nominations are due by February 29th, 2020</strong>, and must be made by email to the Award Committee with “2020 ACM SIGecom Test of Time Award” in the subject.</p>
<p style="font-weight: 400;">See details at <a href="https://www.sigecom.org/awardt.html">https://www.sigecom.org/awardt.html</a></p>
<p> </p>
<p style="font-weight: 400;">The 2020 Test of Time Award Committee</p>
<p style="font-weight: 400;">Paul Milgrom, Stanford University</p>
<p style="font-weight: 400;">Noam Nisan, The Hebrew University of Jerusalem</p>
<p style="font-weight: 400;">Éva Tardos (chair), Cornell University</p></div>
    </content>
    <updated>2019-11-20T07:55:55Z</updated>
    <published>2019-11-20T07:55:55Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>algorithmicgametheory</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-11-25T11:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16399</id>
    <link href="https://rjlipton.wordpress.com/2019/11/19/a-clever-way-to-find-compiler-bugs/" rel="alternate" type="text/html"/>
    <title>A Clever Way To Find Compiler Bugs</title>
    <summary>Your comments are valuable, we thank you. source Xuejun Yang is a Senior Staff Engineer at FutureWei Technologies. He is the DFA on the 2011 paper, “Finding and Understanding Bugs in C Compilers.” Today Ken and I discuss a clever idea from that paper. The paper was brought to our attention just now in a […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Your comments are valuable, we thank you.</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2019/11/19/a-clever-way-to-find-compiler-bugs/profile_image174/" rel="attachment wp-att-16401"><img alt="" class="alignright  wp-image-16401" src="https://rjlipton.files.wordpress.com/2019/11/profile_image174.jpg?w=220" width="220"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2"><a href="https://www.flux.utah.edu/profile/jxyang">source</a></font></td>
</tr>
</tbody>
</table>
<p>
Xuejun Yang is a Senior Staff Engineer at FutureWei Technologies. He is the DFA on the 2011 <a href="http://www.cs.utah.edu/~regehr/papers/pldi11-preprint.pdf">paper</a>, “Finding and Understanding Bugs in C Compilers.”</p>
<p>
Today Ken and I discuss a clever idea from that paper.</p>
<p>
The paper was brought to our attention just now in a meaty <a href="https://rjlipton.wordpress.com/2019/10/21/a-polemical-overreach/#comment-106276">comment</a> by Paul D. We thank him for it—the topic interests both of us. We don’t think Paul D. means to be anonymous, but in keeping with that we’ll give just a cryptic hint to his identity: The saying “a man on the make” is widely known, but for more than the millennium he has been the unique person in the world to whom it applies literally.  <b>Update 11/20</b>: Turns out we (I, Ken) were wrong about the identity, see <a href="https://rjlipton.wordpress.com/2019/11/19/a-clever-way-to-find-compiler-bugs/#comment-106348">this</a>.</p>
<p>
Yang was made unique by being listed out of alphabetical order on the paper. This is notable because the most common practice in our field is to list alphabetically irrespective of prominence. Hence we’ve invented the term ‘DFA’ for “Designated” or “Distinguished” First Author. The other authors are Yang Chen, Eric Eide, and John Regehr, all from the University of Utah. </p>
<p>
</p><p/><h2> The Topic </h2><p/>
<p/><p>
Paul D.’s comment notes that there was evidence that verification methods could improve compiler correctness. By <i>compiler</i> we mean the program that transforms high level code into machine code. These programs are used countless times every day and their correctness is clearly very important. </p>
<p>
Their correctness is tricky for several reasons. The main one is that almost all compilers try to optimize code. That is when they transform code into instructions they try to rewrite or rearrange the instructions to yield better performance. Compilers have been doing this forever. The trouble is that changing instructions to increase performance is dangerous. The changes must not affect the values that are computed. If they are not done carefully they can actually make the answers faster, but incorrect. This is the reason correctness is tricky.</p>
<p>
Formal verification requires a lot of effort. The highest effort should go into mission-critical software. But compilers are mission-critical <em>already</em>, unless we know mission-critical software won’t be compiled on a particular one. Hence it is notable when formal verification makes a compiler more reliable. </p>
<p>
</p><p/><h2> The Paper </h2><p/>
<p/><p>
The idea in the paper Paul referenced is quite elegant. They built a program called Csmith. It operates as follows: </p>
<blockquote><p><b> </b> <em> Suppose that <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{X}"/> is a compiler they wish to test. Then generate various legal C programs <img alt="{P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{P}"/>. For each of these let <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/> be the answer that <img alt="{X(P)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%28P%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{X(P)}"/> yields. Here <img alt="{X(P)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%28P%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{X(P)}"/> is the compiled program. Then check whether <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/> is correct. </em>
</p></blockquote>
<p/><p>
For example:  </p>
<pre>int foo (void) { 
    signed char x = 1; 
    unsigned char y = 255; 
    return x &gt; y; 
} 
</pre>
<p>
Some compilers returned <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>, but the correct answer is <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>. There are further examples in a 2012 companion <a href="https://www.cs.utah.edu/~regehr/papers/pldi12-preprint.pdf">paper</a> and these <a href="https://www.flux.utah.edu/download?uid=115&amp;slides=1&amp;type=pptx">slides</a> from an earlier version. The Csmith <a href="https://embed.cs.utah.edu/csmith/">homepage</a> has long lists of compiler bugs they found. </p>
<p>
Of course if <img alt="{X(P)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%28P%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X(P)}"/> crashes or refuse to compile <img alt="{P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{P}"/> then the compiler is wrong. But what happens if <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> is computed. How does Csmith know if the answer is correct? This seems to be really hard. This correctness testing must be automated: the whole approach is based on allowing tons of random programs to be tested. They cannot assume that humans will be used to check the outputs.</p>
<p>
This is the clever idea of this paper. They assume that there are at least two compilers say <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X}"/> and <img alt="{Y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y}"/>. Then let <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> be the output of <img alt="{X(P)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%28P%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X(P)}"/> and let <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> be the output of <img alt="{Y(P)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%28P%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y(P)}"/>. The key insight is: </p>
<blockquote><p>
<b>If <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/> is not equal to <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{B}"/>, then one of the compilers is wrong</b>.
</p></blockquote>
<p>
A very neat and elegant idea. For software in general it is called <a href="https://en.wikipedia.org/wiki/Differential_testing">differential</a> <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.83.445">testing</a>. </p>
<p>
This at least alerts when there are problems with some compilers and some programs. One can use this trick to discover programs that cause at least some compilers to have problems. This is extremely valuable. It allowed Csmith to discover hundreds of errors in production compilers—errors that previously were missed.</p>
<p>
</p><p/><h2> Smart Fuzzing </h2><p/>
<p/><p>
<a href="https://en.wikipedia.org/wiki/Fuzzing">Fuzzing</a> is defined by Wikipedia as testing by “providing invalid, unexpected, or random data as inputs to a computer program.” An early historical example, Apple’s “<a href="https://en.wikipedia.org/wiki/Monkey_testing">Monkey</a>” program, worked completely randomly. To ensure that the found bugs are <em>meaningful</em> and <em>analyzable</em>, Csmith needed a deeper, structured, “intelligent” design, not just the generation of <a href="https://en.wikipedia.org/wiki/Mayhem_(advertising_character)">Mayhem</a>.</p>
<p>
For one, Csmith needed to avoid programs <img alt="{P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{P}"/> than do not have deterministic behavior. The formal C standards itemize cases in which compilers are allowed to have arbitrary, even self-inconsistent, behavior. There are lots of them in C. A bug with dubious code could be dismissed out of hand.</p>
<p>
For another, the probability that a program <img alt="{P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{P}"/> built haphazardly by the original Csmith version would reveal bugs was observed to peak at about 80KB source-code size, about 1,000 lines across multiple pages. Those don’t make great examples. So Csmith has its own routines to compress bug instances it has found. Simple tricks are shortening numerical expressions to use only the bug-sensitive parts. Others are lifting local variables out of blocks and bypassing pointer jumps.</p>
<p>
A third goal is that the generator should branch out to all aspects of the language—in this case, C—not just the “grungy” parts that are ripe for finding compiler bugs. The paper talks about this at length. Regehr, who was Yang’s advisor, is also a blogger. His current <a href="https://blog.regehr.org/archives/1700">post</a>, dated November 4, is titled, “Helping Generative Fuzzers Avoid Looking Only Where the Light is Good, Part 1.” We guess that “Part 2” will go even more into details.</p>
<p>
</p><p/><h2> Formal Methods as Bugscreen </h2><p/>
<p/><p>
Regarding the formally-verified CompCert compiler, Paul D. quoted from the <a href="http://www.cs.utah.edu/~regehr/papers/pldi11-preprint.pdf">paper</a>:</p>
<blockquote><p><b> </b> <em> The striking thing about our CompCert results is that the middle-end bugs we found in all other compilers are absent. As of early 2011, the under-development version of CompCert is the only compiler we have tested for which Csmith cannot find wrong-code errors. This is not for lack of trying: we have devoted about six CPU-years to the task. The apparent unbreakability of CompCert supports a strong argument that developing compiler optimizations within a proof framework, where safety checks are explicit and machine-checked, has tangible benefits for compiler users. </em>
</p></blockquote>
<p/><p>
This August 2019 <a href="https://arxiv.org/pdf/1902.09334.pdf">paper</a> by Michaël Marcozzi, Qiyi Tang, Alastair Donaldson, and Cristian Cadar gives recent results involving Csmith and other tools. They have an interesting discussion on page 2, from which we excerpt:</p>
<blockquote><p><b> </b> <em> In our experience working in the area […], we have found compiler fuzzing to be a contentious topic. Research talks on compiler fuzzing are often followed by questions about the importance of the discovered bugs, and whether compiler fuzzers might be improved by taking inspiration from bugs encountered by users of compilers “in the wild.” Some … argue that any miscompilation bug, whether fuzzer-found or not, is a ticking bomb that should be regarded as severe, or avoided completely via formal verification (in the spirit of CompCert). </em>
</p></blockquote>
<p/><p>
They go on to say, however, that when a fully-developed compiler is used for non-critical software, the kinds of bugs typically found by fuzzing tend to have questionable importance. Their paper is titled, “A Systematic Impact Study for Fuzzer-Found Compiler Bugs.” </p>
<p>
So far they have found definite results that seem to have mixed implications. In their future-work section they note that they have evaluated the impact of bugs in compilers on the intended function of programs they compile, but not on possible security holes—which as we noted in our Cloudflare <a href="https://rjlipton.wordpress.com/2017/03/08/is-computer-security-possible/">post</a> can come from (misuse of) simple code that is completely correct. This leads us further to wonder, coming full-circle, whether formal methods might help quantify the relative importance of aspects of a language and areas of a compiler to guide more-intelligent generation of test cases.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p>
The above comment is interesting, but perhaps finding obscure bugs is important. Perhaps such bugs could be used to attack systems. That is perhaps some one could use them to break into a system. Security may be compromised by any error, even an unlikely one to occur in the wild. </p>
<p>
What do you think?</p>
<p/></font></font></div>
    </content>
    <updated>2019-11-20T00:57:14Z</updated>
    <published>2019-11-20T00:57:14Z</published>
    <category term="Ideas"/>
    <category term="Oldies"/>
    <category term="Results"/>
    <category term="bugs"/>
    <category term="compiler"/>
    <category term="errors"/>
    <category term="security"/>
    <category term="testing"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-11-25T11:20:40Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3443</id>
    <link href="https://agtb.wordpress.com/2019/11/19/a-market-for-tcs-papers/" rel="alternate" type="text/html"/>
    <title>A Market for TCS Papers??</title>
    <summary>By David Eppstein &amp; Vijay Vazirani No, not to make theoreticians rich! Besides, who will buy your papers anyway? (Quite the opposite, you will be lucky if you can convince someone to take them for free, just for sake of publicity!) What we are proposing is a market in which no money changes hands – […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>By David Eppstein &amp; Vijay Vazirani</em></p>
<p>No, not to make theoreticians rich! Besides, who will buy your papers anyway? (Quite the opposite, you will be lucky if you can convince someone to take them for free, just for sake of publicity!) What we are proposing is a market in which no money changes hands – a matching market – for matching papers to conferences.</p>
<p>First, a short preamble on how the idea emerged.</p>
<p><strong>Preamble</strong> (by Vijay):  Soon after my recent <a href="https://www.youtube.com/watch?v=MLr6Ud5qmt4&amp;t=74s"><u>Simons talk</u></a> on Matching Markets, I sent its url to Al Roth. Obviously, I wasn’t expecting a return email. However, the perfect gentleman and ultimate scholar that Al is, he did reply, and mentioned that he did not like my “definition” of matching markets and said, “I guess I would say matching markets are markets because they aggregate information that is held by the participants, which is what markets do (even if they don’t use prices to do it..).” This hit me like lightening from the sky – suddenly it crystallized the innate intuition about markets which I had formed through work on algorithmic aspects of markets! I thanked Al profusely and added, “This definitely helps in me get the right perspective on the notion!”</p>
<p>About a week ago, while updating my talk for a seminar at Columbia University, I included this beautiful insight in it and then a thought occurred: Each PC meeting involves aggregation of information from a large number of agents: PC members as well as external experts. Hence, isn’t a conference a matching market? Excitedly, I sent this question to Al. He replied, “… the conference process, matching papers to conferences, is a market and a particular conference might be a marketplace … ”</p>
<p>When I returned home, my esteemed colleague, David Eppstein, stunned me by declaring that he had thought of a market relevant to our field in which no money changes hands. I immediately knew he was thinking of the conference process. But he got to it out of the blue … and not the long process it took me!</p>
<p><strong>Back to the idea:  </strong>In the past, matching markets have brought immense efficiency and order in allocation problems in which use of money is considered repugnant, the prime examples being matching medical residents to hospitals, kidney exchange, and assignment of students of a large city to its schools.</p>
<p>At present we are faced with massive inefficiencies in the conference process – numerous researchers are trapped in unending cycles of submit … get reject … incorporate comments … resubmit — often to the next deadline which has been conveniently arranged a couple of days down the road so the unwitting participants are conditioned into mindlessly keep coming back for more, much like Pavlov’s dog.</p>
<p>We are proposing a matching market approach to finally obliterate this madness. We believe such a market is feasible using the following ideas. No doubt our scheme will have some drawbacks; however, as should be obvious, the advantages far outweigh them.</p>
<p>First, for co-located symposia within a larger umbrella conference, such as the<br/>
conferences within ALGO or FCRC, the following process should be a no-brainer:</p>
<p>1). Ensure a common deadline for all symposia; denote the latter by <em>S.</em></p>
<p>2). Let <em>R</em> denote the set of researchers who wish to submit one paper to a symposium in this umbrella conference – assume that researchers submitting more than one paper will have multiple names, one for each submission. Each researcher will provide a strict preference order over the subset of symposia to which they wish to submit their paper. Let <em>G</em> denote the bipartite graph with vertex sets (<em>R, S</em>) and an edge (<em>r, s</em>) only if researcher <em>r</em> chose symposium <em>s.</em></p>
<p>3). The umbrella conference will have a large common PC with experts representing all of its symposia. The process of assigning papers to PC members will of course use <em>G</em> in a critical way.</p>
<p>Once papers are reviewed by PC members and external reviewers, each symposium will rank its submissions using its own criteria of acceptance. We believe the overhead of ranking each paper multiple times is minimal since that is just an issue of deciding how “on-topic” a paper is – an easy task once the reviews of the paper are available.</p>
<p>4). Finally, using all these preference lists, a researcher-proposing stable matching is computed using the Gale-Shapley algorithm. As is well-known, this mechanism will be dominant strategy incentive compatible for researchers.</p>
<p>With a little extra effort, a similar scheme can also be used for a group of conferences at diverse locations but similar times, such as some of the annual summer theory conferences, STOC, ICALP, ESA, STAC, WADS/SWAT, etc.</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p></div>
    </content>
    <updated>2019-11-19T01:31:12Z</updated>
    <published>2019-11-19T01:31:12Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Kevin Leyton-Brown</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-11-25T11:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/18/faculty-at-boston-university-apply-by-december-1-2019/</id>
    <link href="https://cstheory-jobs.org/2019/11/18/faculty-at-boston-university-apply-by-december-1-2019/" rel="alternate" type="text/html"/>
    <title>Faculty at Boston University (apply by December 1, 2019)</title>
    <summary>Boston University Computer Science has openings for multiple tenure-track assistant professorships beginning July 1, 2020. Applications in all areas of computer science are invited. The university is also considering senior applicants for its Data Science Initiative. The Department, currently at 31 faculty members, is in the midst of an extended period of sustained growth. Website: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Boston University Computer Science has openings for multiple tenure-track assistant professorships beginning July 1, 2020. Applications in all areas of computer science are invited. The university is also considering senior applicants for its Data Science Initiative.</p>
<p>The Department, currently at 31 faculty members, is in the midst of an extended period of sustained growth.</p>
<p>Website: <a href="https://www.bu.edu/cs/2019/11/18/bu-cs-searching-for-new-faculty-members/">https://www.bu.edu/cs/2019/11/18/bu-cs-searching-for-new-faculty-members/</a><br/>
Email: ads22@bu.edu</p></div>
    </content>
    <updated>2019-11-18T19:59:22Z</updated>
    <published>2019-11-18T19:59:22Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-24T23:48:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/11/18/faculty-quantum-computation-at-uc-san-diego-apply-by-january-1-2020/</id>
    <link href="https://cstheory-jobs.org/2019/11/18/faculty-quantum-computation-at-uc-san-diego-apply-by-january-1-2020/" rel="alternate" type="text/html"/>
    <title>faculty – quantum computation at UC San Diego (apply by January 1, 2020)</title>
    <summary>The Computer Science and the Mathematics departments at UC San Diego are looking for excellent candidates in Quantum Computation. This includes: computational complexity of quantum computation, quantum algorithms, ways to establish quantum supremacy, applications of quantum computation in the sciences, quantum error-correction, quantum communication complexity, or similar topics. Website: https://apol-recruit.ucsd.edu/JPF02292 Email: shachar.lovett@gmail.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Computer Science and the Mathematics departments at UC San Diego are looking for excellent candidates in Quantum Computation. This includes: computational complexity of quantum computation, quantum algorithms, ways to establish quantum supremacy, applications of quantum computation in the sciences, quantum error-correction, quantum communication complexity, or similar topics.</p>
<p>Website: <a href="https://apol-recruit.ucsd.edu/JPF02292">https://apol-recruit.ucsd.edu/JPF02292</a><br/>
Email: shachar.lovett@gmail.com</p></div>
    </content>
    <updated>2019-11-18T17:54:44Z</updated>
    <published>2019-11-18T17:54:44Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-11-24T23:48:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-3436178446517561376</id>
    <link href="https://blog.computationalcomplexity.org/feeds/3436178446517561376/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/11/fields-used-to-be-closer-together-than.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/3436178446517561376" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/3436178446517561376" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/11/fields-used-to-be-closer-together-than.html" rel="alternate" type="text/html"/>
    <title>Fields used to be closer together than they are now. Good? Bad?</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">There was a retired software Eng professor that I had heard two very non-controversial rumors about:<br/>
<br/>
1) He got his PhD in Numerical Analysis<br/>
<br/>
2) He got his PhD in Compiler Optimization.<br/>
<br/>
So I asked him which was true.<br/>
<br/>
The answer: Both! In those days you had to optimize your code to get your NA code to run fast enough.<br/>
<br/>
We cannot imagine that anymore. Or at least I cannot.<br/>
<br/>
Over time the fields of computer science advance more so its hard to be  master of more than one field.  But its not that simple: there has been work recently applying Machine Learning to... well<br/>
everything really. Even so, I think the trend is more towards separation. Or perhaps it oscillates.<br/>
<br/>
I am NOT going to be the grumpy old man (Google once thought I was 70, see <a href="https://blog.computationalcomplexity.org/2018/10/google-added-years-to-my-life.html">here</a>) who says things were better in my day when the fields were closer together. But I will ask the question:<br/>
<br/>
1) Are people more specialized new? While I think yes since each field has gotten more complicated and harder to master. There are exceptions: Complexity theory uses much more sophisticated mathematics then when I was a grad student (1980-1985), and of course Quantum Computing has lead to more comp sci majors knowing physics.<br/>
<br/>
2) Is it good for the field that people are specialized? I am supposed to say that it is terrible and that great advances are made when people are interdiscplinary. But there are many more small advances that are made by someone who has a mastery of one (or two) fields.<br/>
<br/>
3) The PhD Process and the Tenure Process encourage specialization. This I think IS bad since there are different modes of research that should all be respected.'<br/>
<br/>
<br/></div>
    </content>
    <updated>2019-11-18T04:53:00Z</updated>
    <published>2019-11-18T04:53:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2019-11-25T11:05:51Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/165</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/165" rel="alternate" type="text/html"/>
    <title>TR19-165 |  Random Restrictions of High-Dimensional Distributions and Uniformity Testing with Subcube Conditioning | 

	Clement Canonne, 

	Xi Chen, 

	Gautam Kamath, 

	Amit Levi, 

	Erik Waingarten</title>
    <summary>We give a nearly-optimal algorithm for testing uniformity of distributions supported on $\{-1,1\}^n$, which makes $\tilde O (\sqrt{n}/\varepsilon^2)$ queries to a subcube conditional sampling oracle (Bhattacharyya and Chakraborty (2018)). The key technical component is a natural notion of random restriction for distributions on $\{-1,1\}^n$, and a quantitative analysis of how such a restriction affects the mean vector of the distribution. Along the way, we consider the problem of mean testing with independent samples and provide a nearly-optimal algorithm.</summary>
    <updated>2019-11-18T01:16:46Z</updated>
    <published>2019-11-18T01:16:46Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-11-25T11:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=4414</id>
    <link href="https://www.scottaaronson.com/blog/?p=4414" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=4414#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=4414" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">The Aaronson-Ambainis Conjecture (2008-2019)</title>
    <summary xml:lang="en-US">(see new update at end of post) Around 1999, one of the first things I ever did in quantum computing theory was to work on a problem that Fortnow and Rogers suggested in a paper: is it possible to separate P from BQP relative to a random oracle? (That is, without first needing to separate […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>(see new update at end of post)</em></p>



<p>Around 1999, one of the first things I ever did in quantum computing theory was to work on a problem that <a href="https://arxiv.org/abs/cs/9811023">Fortnow and Rogers</a> suggested in a paper: is it possible to separate <a href="https://en.wikipedia.org/wiki/P_(complexity)">P</a> from <a href="https://en.wikipedia.org/wiki/BQP">BQP</a> relative to a <a href="https://en.wikipedia.org/wiki/Random_oracle">random oracle</a>?  (That is, without first needing to separate P from PSPACE or whatever in the real world?)  Or to the contrary: suppose that a quantum algorithm Q makes T queries to a Boolean input string X.  Is there then a classical simulation algorithm that makes poly(T) queries to X, and that approximates Q’s acceptance probability for <em>most</em> values of X?  Such a classical simulation, were it possible, would still be consistent with the existence of quantum algorithms like <a href="https://en.wikipedia.org/wiki/Simon%27s_problem">Simon’s</a> and <a href="https://en.wikipedia.org/wiki/Shor%27s_algorithm">Shor’s</a>, which are able to achieve exponential (and even greater) speedups in the black-box setting.  It would simply demonstrate the importance, for Simon’s and Shor’s algorithms, of global structure that makes the string X extremely <em>non</em>-random: for example, encoding a periodic function (in the case of Shor’s algorithm), or encoding a function that hides a secret string s (in the case of Simon’s).  It would underscore that superpolynomial quantum speedups depend on structure.</p>



<p>I never managed to solve this problem.  Around 2008, though, I noticed that a solution would follow from a perhaps-not-obviously-related conjecture, about <em>influences</em> in low-degree polynomials.  Namely, let p:R<sup>n</sup>→R be a degree-d real polynomial in n variables, and suppose p(x)∈[0,1] for all x∈{0,1}<sup>n</sup>.  Define the <i>variance</i> of p to be<br/>   Var(p):=E<sub>x,y</sub>[|p(x)-p(y)|],<br/>and define the <i>influence</i> of the i<sup>th</sup> variable to be<br/>   Inf<sub>i</sub>(p):=E<sub>x</sub>[|p(x)-p(x<sup>i</sup>)|].<br/>Here the expectations are over strings in {0,1}<sup>n</sup>, and x<sup>i</sup> means x with its i<sup>th</sup> bit flipped between 0 and 1.  Then the conjecture is this: there must be some variable i such that Inf<sub>i</sub>(p) ≥ poly(Var(p)/d) (in other words, that “explains” a non-negligible fraction of the variance of the entire polynomial).</p>



<p>Why would this conjecture imply the statement about quantum algorithms?  Basically, because of the seminal result of <a href="https://arxiv.org/abs/quant-ph/9802049">Beals et al.</a> from 1998: that if a quantum algorithm makes T queries to a Boolean input X, then its acceptance probability can be written as a real polynomial over the bits of X, of degree at most 2T.  Given that result, if you wanted to classically simulate a quantum algorithm Q on most inputs—and if you only cared about query complexity, not computation time—you’d simply need to do the following:<br/>(1) Find the polynomial p that represents Q’s acceptance probability.<br/>(2) Find a variable i that explains at least a 1/poly(T) fraction of the total remaining variance in p, and query that i.<br/>(3) Keep repeating step (2), until p has been restricted to a polynomial with not much variance left—i.e., to nearly a constant function p(X)=c.  Whenever that happens, halt and output the constant c.<br/>The key is that by hypothesis, this algorithm will halt, with high probability over X, after only poly(T) steps.</p>



<p>Anyway, around the same time, Andris Ambainis had a major break on a different problem that I’d told him about: namely, whether randomized and quantum query complexities are polynomially related for all partial functions with permutation symmetry (like the collision and the element distinctness functions).  Andris and I decided to write up the two directions jointly.  The result was our 2011 paper entitled <a href="https://arxiv.org/abs/0911.0996">The Need for Structure in Quantum Speedups</a>.</p>



<p>Of the two contributions in the “Need for Structure” paper, the one about random oracles and influences in low-degree polynomials was clearly the weaker and less satisfying one.  As the reviewers pointed out, that part of the paper didn’t solve anything: it just reduced one unsolved problem to a new, slightly different problem that was <em>also</em> unsolved.  Nevertheless, that part of the paper acquired a life of its own over the ensuing decade, as the world’s experts in analysis of Boolean functions and polynomials began referring to the “Aaronson-Ambainis Conjecture.”  Ryan O’Donnell, Guy Kindler, and many others had a stab.  I even got Terry Tao to spend an hour or two on the problem when I visited UCLA.</p>



<p>Now, at long last, Nathan Keller and Ohad Klein say they’ve proven the Aaronson-Ambainis Conjecture, in a preprint whose title is a riff on ours: <a href="https://arxiv.org/abs/1911.03748">“Quantum Speedups Need Structure.”</a></p>



<p>Their paper hasn’t yet been peer-reviewed, and I haven’t yet carefully studied it, but I <em>could</em> and <em>should</em>: at 19 pages, it looks very approachable and clear, if not as radically short as (say) <a href="https://www.scottaaronson.com/blog/?p=4229">Huang’s proof of the Sensitivity Conjecture</a>.  Keller and Klein’s argument subsumes all the earlier results that I knew would need to be subsumed, and involves all the concepts (like a real analogue of block sensitivity) that I knew would need to be involved somehow.</p>



<p>My plan had been as follows:<br/>(1) Read their paper in detail.  Understand every step of their proof.<br/>(2) Write a blog post that reflects my detailed understanding.</p>



<p>Unfortunately, this plan did not sufficiently grapple with the fact that I now have two kids.  It got snagged for a week at step (1).  So I’m now executing an alternative plan, which is to jump immediately to the blog post.</p>



<p>Assuming Keller and Klein’s result holds up—as I expect it will—by combining it with the observations in my and Andris’s paper, one immediately gets an explanation for why no one has managed to separate P from BQP relative to a <em>random</em> oracle, but only relative to non-random oracles.  This complements the work of <a href="https://www.uncg.edu/mat/faculty/cdsmyth/thesis.pdf">Kahn, Saks, and Smyth</a>, who around 2000 gave a precisely analogous explanation for the difficulty of separating P from NP∩coNP relative to a random oracle.</p>



<p>Unfortunately, the polynomial blowup is quite enormous: from a quantum algorithm making T queries, Keller and Klein apparently get a classical algorithm making O(T<sup>18</sup>) queries.  But such things can almost always be massively improved.</p>



<p>Feel free to use the comments to ask any questions about this result or its broader context.  I’ll either do my best to answer from the limited amount I know, or else I’ll pass the questions along to Nathan and Ohad themselves.  Maybe, at some point, I’ll even be forced to understand the new proof.</p>



<p>Congratulations to Nathan and Ohad!</p>



<p><strong><font color="red">Update (Nov. 20):</font></strong> Tonight I finally did what I should’ve done two weeks ago, and worked through the paper from start to finish.  Modulo some facts about noise operators, hypercontractivity, etc. that I took on faith, I now have a reasonable (albeit imperfect) understanding of the proof.  It’s great!</p>



<p>In case it’s helpful to anybody, here’s my one-paragraph summary of how it works.  First, you hit your bounded degree-d function f with a random restriction to attenuate its higher-degree Fourier coefficients (reminiscent of <a href="http://www.ma.huji.ac.il/~ehudf/courses/anal09/LMN.pdf">Linial-Mansour-Nisan</a>).  Next, in that attenuated function, you find a small “coalition” of influential variables—by which we mean, a set of variables for which there’s <em>some</em> assignment that substantially biases f.  You keep iterating—finding influential coalitions in subfunctions on n/4, n/8, etc. variables.  All the while, you keep track of <em>the norm of the vector of all the block-sensitivities of all the inputs</em> (the authors don’t clearly explain this in the intro, but they reveal it near the end).  Every time you find another influential coalition, that norm goes down by a little, but by approximation theory, it can only go down O(d<sup>2</sup>) times until it hits rock bottom and your function is nearly constant.  By the end, you’ll have approximated f itself by a decision tree of depth poly(d, 1/ε, log(n)).  Finally, you get rid of the log(n) term by using the fact that f essentially depended on at most exp(O(d)) variables anyway. </p>



<p>Anyway, I’m not sure how helpful it is to write more: the <a href="https://arxiv.org/pdf/1911.03748.pdf">paper itself</a> is about 95% as clear as it could possibly be, and even where it isn’t, you’d probably need to read it first (and, uh, know something about influences, block sensitivity, random restrictions, etc.) before any further clarifying remarks would be of use.  But happy to discuss more in the comments, if anyone else is reading it.</p></div>
    </content>
    <updated>2019-11-17T23:33:08Z</updated>
    <published>2019-11-17T23:33:08Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Complexity"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Quantum"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog/?feed=atom</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2019-11-20T15:06:50Z</updated>
    </source>
  </entry>
</feed>
