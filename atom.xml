<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-03-25T20:21:53Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7657</id>
    <link href="https://windowsontheory.org/2020/03/25/new-cs-theory-talk-aggragator/" rel="alternate" type="text/html"/>
    <title>New CS theory talk aggragator</title>
    <summary>Shcachar Lovett has put together a new website aggregating information about virtual talks in CS theory: https://cstheorytalks.wordpress.com/  It has a Google calendar that people can add to their own, and a form to submit a new talk that automatically gets added to the Google calendar.  This can be a fantastic resource these days that almost […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Shcachar Lovett has put together a new website aggregating information about virtual talks in CS theory: <a href="https://cstheorytalks.wordpress.com/">https://cstheorytalks.wordpress.com/</a></p>



<p> It has a Google calendar that people can add to their own, and a form to submit a new talk that automatically gets added to the Google calendar. </p>



<p>This can be a fantastic resource these days that almost no one can travel – please publicize this and also submit to it talks that you are organizing.</p></div>
    </content>
    <updated>2020-03-25T17:00:17Z</updated>
    <published>2020-03-25T17:00:17Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-03-25T20:20:54Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10983</id>
    <link href="http://arxiv.org/abs/2003.10983" rel="alternate" type="text/html"/>
    <title>Deep Local Shapes: Learning Local SDF Priors for Detailed 3D Reconstruction</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chabra:Rohan.html">Rohan Chabra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lenssen:Jan_Eric.html">Jan Eric Lenssen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Ilg:Eddy.html">Eddy Ilg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schmidt:Tanner.html">Tanner Schmidt</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Straub:Julian.html">Julian Straub</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lovegrove:Steven.html">Steven Lovegrove</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Newcombe:Richard.html">Richard Newcombe</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10983">PDF</a><br/><b>Abstract: </b>Efficiently reconstructing complex and intricate surfaces at scale is a
long-standing goal in machine perception. To address this problem we introduce
Deep Local Shapes (DeepLS), a deep shape representation that enables encoding
and reconstruction of high-quality 3D shapes without prohibitive memory
requirements. DeepLS replaces the dense volumetric signed distance function
(SDF) representation used in traditional surface reconstruction systems with a
set of locally learned continuous SDFs defined by a neural network, inspired by
recent work such as DeepSDF. Unlike DeepSDF, which represents an object-level
SDF with a neural network and a single latent code, we store a grid of
independent latent codes, each responsible for storing information about
surfaces in a small local neighborhood. This decomposition of scenes into local
shapes simplifies the prior distribution that the network must learn, and also
enables efficient inference. We demonstrate the effectiveness and
generalization power of DeepLS by showing object shape encoding and
reconstructions of full scenes, where DeepLS delivers high compression,
accuracy, and local shape completion.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10935</id>
    <link href="http://arxiv.org/abs/2003.10935" rel="alternate" type="text/html"/>
    <title>Deep Weisfeiler Leman</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Grohe:Martin.html">Martin Grohe</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schweitzer:Pascal.html">Pascal Schweitzer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wiebking:Daniel.html">Daniel Wiebking</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10935">PDF</a><br/><b>Abstract: </b>We introduce the framework of Deep Weisfeiler Leman algorithms (DeepWL),
which allows the design of purely combinatorial graph isomorphism tests that
are more powerful than the well-known Weisfeiler-Leman algorithm.
</p>
<p>We prove that, as an abstract computational model, polynomial time
DeepWL-algorithms have exactly the same expressiveness as the logic Choiceless
Polynomial Time (with counting) introduced by Blass, Gurevich, and Shelah (Ann.
Pure Appl. Logic., 1999)
</p>
<p>It is a well-known open question whether the existence of a polynomial time
graph isomorphism test implies the existence of a polynomial time canonisation
algorithm. Our main technical result states that for each class of graphs
(satisfying some mild closure condition), if there is a polynomial time DeepWL
isomorphism test then there is a polynomial canonisation algorithm for this
class. This implies that there is also a logic capturing polynomial time on
this class.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10774</id>
    <link href="http://arxiv.org/abs/2003.10774" rel="alternate" type="text/html"/>
    <title>Notes on Equitable Partition into Matching Forests in Mixed Graphs and into $b$-branchings in Digraphs</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Takazawa:Kenjiro.html">Kenjiro Takazawa</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10774">PDF</a><br/><b>Abstract: </b>An equitable partition into branchings in a digraph is a partition of the arc
set into branchings such that the sizes of any two branchings differ at most by
one. For a digraph whose arc set can be partitioned into $k$ branchings, there
always exists an equitable partition into $k$ branchings. In this paper, we
present two extensions of equitable partitions into branchings in digraphs:
those into matching forests in mixed graphs; and into $b$-branchings in
digraphs. For matching forests, Kir\'{a}ly and Yokoi (2018) considered a
tricriteria equitability based on the sizes of the matching forest, and the
matching and branching therein. In contrast to this, we introduce a
single-criterion equitability based on the number of the covered vertices. For
$b$-branchings, we define an equitability based on the size of the
$b$-branching and the indegrees of all vertices. For both matching forests and
$b$-branchings, we prove that equitable partitions always exist.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10698</id>
    <link href="http://arxiv.org/abs/2003.10698" rel="alternate" type="text/html"/>
    <title>Parameterized Algorithms for Red-Blue Weighted Vertex Cover on Trees</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Vishnu Veerathu, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tripathi:Yogesh.html">Yogesh Tripathi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10698">PDF</a><br/><b>Abstract: </b>\textproc{Weighted Vertex Cover} is a variation of an extensively studied
NP-complete problem, \textproc{Vertex Cover}, in which we are given a graph, $G
= (V,E,w)$, where function $w:V \rightarrow \mathbb{Q}^{+}$ and a parameter
$k$. The objective is to determine if there exists a vertex cover, $S$, such
that $\sum_{v \in S}w(v) \leq k$. In our work, we first study the hardness of
\textproc{Weighted Vertex Cover} and then examine this problem under
parameterization by $l$ and $k$, where $l$ is the number of vertices with
fractional weights. Then, we study the \textproc{Red-Blue Weighted Vertex
Cover} problem on trees in detail. In this problem, we are given a tree,
$T=(V,E,w)$, where function $w:V \rightarrow \mathbb{Q}^{+}$, a function $c:V
\rightarrow \{R,B\}$ and two parameters $k$ and $k_R$. We have to determine if
there exists a vertex cover, $S$, such that $\sum_{v \in S}w(v) \leq k$ and
$\sum_{\substack{v \in S\\ c(v) = R}}w(v) \leq k_R$. We tackle this problem by
applying different reduction techniques and meaningful parameterizations. We
also study some restrictive versions of this problem.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10612</id>
    <link href="http://arxiv.org/abs/2003.10612" rel="alternate" type="text/html"/>
    <title>A Distributed Algorithm for Spectral Sparsification of Graphs with Applications to Data Clustering</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Fabricio Mendoza-Granada, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Villagra:Marcos.html">Marcos Villagra</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10612">PDF</a><br/><b>Abstract: </b>Spectral sparsification is a technique that is used to reduce the number of
non-zero entries in a positive semidefinite matrix with little changes to its
spectrum. In particular, the main application of spectral sparsification is to
construct sparse graphs whose spectra are close to a given dense graph. We
study spectral sparsification under the assumption that the edges of a graph
are allocated among sites which can communicate among each other. In this work
we show that if a graph is allocated among several sites, the union of the
spectral sparsifiers of each induced subgraph give us an spectral sparsifier of
the original graph. In contrast to other works in the literature, we present
precise computations of the approximation factor of the union of spectral
sparsifiers and give an explicit calculation of the edge weights. Then we
present an application of this result to data clustering in the
Number-On-Forehead model of multiparty communication complexity when input data
is allocated as a sunflower among sites in the party.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10588</id>
    <link href="http://arxiv.org/abs/2003.10588" rel="alternate" type="text/html"/>
    <title>Approximate Aggregate Queries Under Additive Inequalities</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Mahmoud Abo-Khamis, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Im:Sungjin.html">Sungjin Im</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moseley:Benjamin.html">Benjamin Moseley</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pruhs:Kirk.html">Kirk Pruhs</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Samadian:Alireza.html">Alireza Samadian</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10588">PDF</a><br/><b>Abstract: </b>We consider the problem of evaluating an aggregation query, which is a
sum-of-sum query or a sum-of-product query, subject to additive inequalities.
Such aggregation queries, with a smallish number of additive inequalities,
arise naturally/commonly in many applications, particularly in machine learning
applications. We give a relatively complete categorization of the computational
complexity of such problems. We first show that the problem is NP-hard, even in
the case of one additive inequality. Thus we turn to approximating the query.
Our main result is an efficient algorithm for approximating, with arbitrarily
small relative error, many natural aggregation queries with one additive
inequality. We give examples of natural queries that can be efficiently solved
using this algorithm. In contrast we show that the situation with two additive
inequalities is quite different, by showing that it is NP-hard to evaluate
simple aggregation queries, with two additive inequalities, with any bounded
relative error. We end by considering the problem of computing the gradient of
the objective function in the Support Vector Machines (SVM) problem, a
canonical machine learning problem. While computing the gradient for SVM can be
reduced to the problem of computing an aggregation query with one additive
inequality, our algorithm is not applicable due to what we call the
``subtraction problem''. However, we show how to circumvent this subtraction
problem within the context of SVM to obtain a gradient-descent algorithm that
will result in an approximately correct optimal solution, using an alternative
notion of approximate correctness, which may be of independent interest.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10570</id>
    <link href="http://arxiv.org/abs/2003.10570" rel="alternate" type="text/html"/>
    <title>On the complexity of Broadcast Domination and Multipacking in digraphs</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Foucaud:Florent.html">Florent Foucaud</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gras:Benjamin.html">Benjamin Gras</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Perez:Anthony.html">Anthony Perez</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sikora:Florian.html">Florian Sikora</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10570">PDF</a><br/><b>Abstract: </b>We study the complexity of the two dual covering and packing distance-based
problems Broadcast Domination and Multipacking in digraphs. A dominating
broadcast of a digraph $D$ is a function $f:V(D)\to\mathbb{N}$ such that for
each vertex $v$ of $D$, there exists a vertex $t$ with $f(t)&gt;0$ having a
directed path to $v$ of length at most $f(t)$. The cost of $f$ is the sum of
$f(v)$ over all vertices $v$. A multipacking is a set $S$ of vertices of $D$
such that for each vertex $v$ of $D$ and for every integer $d$, there are at
most $d$ vertices from $S$ within directed distance at most $d$ from $v$. The
maximum size of a multipacking of $D$ is a lower bound to the minimum cost of a
dominating broadcast of $D$. Let Broadcast Domination denote the problem of
deciding whether a given digraph $D$ has a dominating broadcast of cost at most
$k$, and Multipacking the problem of deciding whether $D$ has a multipacking of
size at least $k$. It is known that Broadcast Domination is polynomial-time
solvable for the class of all undirected graphs (that is, symmetric digraphs),
while polynomial-time algorithms for Multipacking are known only for a few
classes of undirected graphs. We prove that Broadcast Domination and
Multipacking are both NP-complete for digraphs, even for planar layered acyclic
digraphs of small maximum degree. Moreover, when parameterized by the solution
cost/solution size, we show that the problems are W-hard. We also show that
Broadcast Domination is FPT on acyclic digraphs, and that it does not admit a
polynomial kernel for such inputs, unless the polynomial hierarchy collapses to
its third level. In addition, we show that both problems are FPT when
parameterized by the solution cost/solution size together with the maximum
out-degree, and as well, by the vertex cover number. Finally, we give for both
problems polynomial-time algorithms for some subclasses of acyclic digraphs.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-25T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09948</id>
    <link href="http://arxiv.org/abs/2003.09948" rel="alternate" type="text/html"/>
    <title>Euclidean TSP in Narrow Strip</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Alkema:Henk.html">Henk Alkema</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Berg:Mark_de.html">Mark de Berg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kisfaludi=Bak:S=aacute=ndor.html">Sándor Kisfaludi-Bak</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09948">PDF</a><br/><b>Abstract: </b>We investigate how the complexity of Euclidean TSP for point sets $P$ inside
the strip $(-\infty,+\infty)\times [0,\delta]$ depends on the strip width
$\delta$. We obtain two main results. First, for the case where the points have
distinct integer $x$-coordinates, we prove that a shortest bitonic tour (which
can be computed in $O(n\log^2 n)$ time using an existing algorithm) is
guaranteed to be a shortest tour overall when $\delta\leq 2\sqrt{2}$, a bound
which is best possible. Second, we present an algorithm that is fixed-parameter
tractable with respect to $\delta$. More precisely, our algorithm has running
time $2^{O(\sqrt{\delta})} n^2$ for sparse point sets, where each
$1\times\delta$ rectangle inside the strip contains $O(1)$ points. For random
point sets, where the points are chosen uniformly at random from the
rectangle~$[0,n]\times [0,\delta]$, it has an expected running time of
$2^{O(\sqrt{\delta})} n^2 + O(n^3)$.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09914</id>
    <link href="http://arxiv.org/abs/2003.09914" rel="alternate" type="text/html"/>
    <title>1 x 1 Rush Hour with Fixed Blocks is PSPACE-complete</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Brunner:Josh.html">Josh Brunner</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chung:Lily.html">Lily Chung</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Demaine:Erik_D=.html">Erik D. Demaine</a>, Dylan Hendrickson, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hesterberg:Adam.html">Adam Hesterberg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Suhl:Adam.html">Adam Suhl</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zeff:Avi.html">Avi Zeff</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09914">PDF</a><br/><b>Abstract: </b>Consider $n^2-1$ unit-square blocks in an $n \times n$ square board, where
each block is labeled as movable horizontally (only), movable vertically
(only), or immovable -- a variation of Rush Hour with only $1 \times 1$ cars
and fixed blocks. We prove that it is PSPACE-complete to decide whether a given
block can reach the left edge of the board, by reduction from Nondeterministic
Constraint Logic via 2-color oriented Subway Shuffle. By contrast,
polynomial-time algorithms are known for deciding whether a given block can be
moved by one space, or when each block either is immovable or can move both
horizontally and vertically. Our result answers a 15-year-old open problem by
Tromp and Cilibrasi, and strengthens previous PSPACE-completeness results for
Rush Hour with vertical $1 \times 2$ and horizontal $2 \times 1$ movable blocks
and 4-color Subway Shuffle.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1810.01393</id>
    <link href="http://arxiv.org/abs/1810.01393" rel="alternate" type="text/html"/>
    <title>Approximating the Existential Theory of the Reals</title>
    <feedworld_mtime>1585094400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Deligkas:Argyrios.html">Argyrios Deligkas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fearnley:John.html">John Fearnley</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Melissourgos:Themistoklis.html">Themistoklis Melissourgos</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Spirakis:Paul_G=.html">Paul G. Spirakis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1810.01393">PDF</a><br/><b>Abstract: </b>The Existential Theory of the Reals (ETR) consists of existentially
quantified Boolean formulas over equalities and inequalities of polynomial
functions of variables in $\mathbb{R}$. In this paper we propose and study the
approximate existential theory of the reals ($\epsilon$-ETR), in which the
constraints only need to be satisfied approximately. We first show that when
the domain of the variables is $\mathbb{R}$ then $\epsilon$-ETR = ETR under
polynomial time reductions, and then study the constrained $\epsilon$-ETR
problem when the variables are constrained to lie in a given bounded convex
set. Our main theorem is a sampling theorem, similar to those that have been
proved for approximate equilibria in normal form games. It discretizes the
domain in a grid-like manner whose density depends on various properties of the
formula. A consequence of our theorem is that we obtain a quasi-polynomial time
approximation scheme (QPTAS) for a fragment of constrained $\epsilon$-ETR. We
use our theorem to create several new PTAS and QPTAS algorithms for problems
from a variety of fields.
</p></div>
    </summary>
    <updated>2020-03-25T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/03/24/full-professor-w3-at-tu-dortmund-university-apply-by-april-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/03/24/full-professor-w3-at-tu-dortmund-university-apply-by-april-15-2020/" rel="alternate" type="text/html"/>
    <title>Full Professor (W3)  at TU Dortmund University (apply by April 15, 2020)</title>
    <summary>The Department of Computer Science at TU Dortmund University (https://tu-dortmund.de/en) is seeking to fill the position of a Full Professor Position (W3) in “Efficient Algorithms and Complexity Theory” commencing as soon as possible. Website: https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f Email: thomas.schwentick@tu-dortmund.de</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science at TU Dortmund University (<a href="https://tu-dortmund.de/en">https://tu-dortmund.de/en</a>) is seeking to fill the position of a Full Professor Position (W3) in “Efficient Algorithms and Complexity Theory” commencing as soon as possible.</p>
<p>Website: <a href="https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f">https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f</a><br/>
Email: thomas.schwentick@tu-dortmund.de</p></div>
    </content>
    <updated>2020-03-24T10:41:04Z</updated>
    <published>2020-03-24T10:41:04Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-03-25T20:20:38Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-7044506782591278327</id>
    <link href="https://blog.computationalcomplexity.org/feeds/7044506782591278327/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-do-do-while-stuck-at-homeother.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/7044506782591278327" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/7044506782591278327" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-do-do-while-stuck-at-homeother.html" rel="alternate" type="text/html"/>
    <title>What do do while ``stuck'' at home/Other thoughts on the virus</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Lance had a great post on what to do while you are stuck at home, which is of course relevant to whats happening now. Lance's post is <a href="https://blog.computationalcomplexity.org/2020/03/what-to-do-while-stuck-at-home-part-i.html">here</a>.<br/>
<br/>
I will add to it, and then have other comments.<br/>
<br/>
1) In our current electronic society we can do a lot from home. Don't think of it as being `stuck at home'<br/>
<br/>
2) Lance points out that you should read a paper, read a textbook, etc. I of course agree and add some advice. Be Goldlocks!<br/>
<br/>
This paper is too hard (e.g., a text on quantum gravity)<br/>
<br/>
This paper is too easy (e.g., a discrete  math textbook for a freshman course)<br/>
<br/>
This paper is just right (e.g., working out the large canonical Ramsey theorem)<br/>
<br/>
3) If you catch up on your TV viewing on your DVR then beware: you will see commercials for Bloomberg.<br/>
<br/>
4) DO NOT binge watch TV.  You will hate yourself in the morning.<br/>
<br/>
5) Simons Inst Theory talks:<br/>
<br/>
<a href="https://simons.berkeley.edu/videos">https://simons.berkeley.edu/videos</a><br/>
<br/>
TCS+ talks<br/>
<br/>
<a href="https://sites.google.com/site/plustcs/past-talks">https://sites.google.com/site/plustcs/past-talks</a><br/>
<br/>
or<br/>
<a href="https://sites.google.com/site/plustcs/">https://sites.google.com/site/plustcs/</a><br/>
<br/>
The Gathering for Gardner records all of their talks and puts the on you-tube<br/>
so goto youtube and search for Gathering for Gardners. These are Goldilocks talks since they<br/>
are easy but on stuff you prob don't know.<br/>
<br/>
6) Keep fit. I used to go on treadmill for 45 minutes a day, now I am doing an hour.<br/>
<br/>
7) Go for walks with a person who already shares your house, but avoid other people.<br/>
<br/>
8) Book reviews, surveys, orig articles, that you were putting off writing- now write them.<br/>
but see next item.<br/>
<br/>
10) Catch up on your blog reading. My favorite was Scott Aaronson's blog post about Davos:<a href="https://www.scottaaronson.com/blog/?p=4536">here</a>. I also read every single comment. I hated myself in the morning. So that part may have been a mistake.<br/>
<br/>
OTHER THOUGHTS<br/>
<br/>
1) Do you really have more free time? No commuting, no teaching, but you still have the rest of your job, and perhaps it is harder if some things are easier at work. And calling relatives and friends to make sure they are okay, and just to talk, is a great thing to do, but its time consuming.<br/>
<br/>
2) I'm beginning to lose track of what day-of-the-week it is since I don't have school to keep me on track, and I only watch TV shows on DVR so I watching a show on a day does not mean I know what day it is.<br/>
<br/>
3) Avoid being price-gouged. The first few days that I tried to buy TP for my mom on amazon (I do this in normal times--- I order lots for my mom on amazon--- she is tech shy. She is also over 90.) her usual brand was out of stock, and the other brands were either higher quality so higher prices or just<br/>
absurdly priced. She wisely said to wait a week. She was right- it was easy to get at the usual price.<br/>
<br/>
4) More generally, it seems like the shortages are people-created. For example, if in a store you see they are low on X, then you buy LOTS of X, and everyone does that, so then their really is a shortage of X. But I think thats calmed down some.<br/>
<br/>
5) It important to have a `we will recover from this, life will go on' attitude (while following the things ALL experts say- wash your hands a lot, drink lots of water, get lots of sleep, which is prob<br/>
good advice anyway) and hence I will try to, for the next few weeks, blog on NORMAL things----Hilberts's 10th problem, Large Ramsey, etc.<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/></div>
    </content>
    <updated>2020-03-24T04:01:00Z</updated>
    <published>2020-03-24T04:01:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-03-25T18:36:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10230</id>
    <link href="http://arxiv.org/abs/2003.10230" rel="alternate" type="text/html"/>
    <title>Failure of Feasible Disjunction Property for $k$-DNF Resolution and NP-hardness of Automating It</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Garl=iacute=k:Michal.html">Michal Garlík</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10230">PDF</a><br/><b>Abstract: </b>We show that for every integer $k \geq 2$, the Res($k$) propositional proof
system does not have the weak feasible disjunction property. Next, we
generalize a recent result of Atserias and M\"uller [FOCS, 2019] to Res($k$).
We show that if NP is not included in P (resp. QP, SUBEXP) then for every
integer $k \geq 1$, Res($k$) is not automatable in polynomial (resp.
quasi-polynomial, subexponential) time.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10057</id>
    <link href="http://arxiv.org/abs/2003.10057" rel="alternate" type="text/html"/>
    <title>A Toroidal Maxwell-Cremona-Delaunay Correspondence</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Erickson:Jeff.html">Jeff Erickson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Patrick.html">Patrick Lin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10057">PDF</a><br/><b>Abstract: </b>We consider three classes of geodesic embeddings of graphs on Euclidean flat
tori: (1) A torus graph $G$ is equilibrium if it is possible to place positive
weights on the edges, such that the weighted edge vectors incident to each
vertex of G sum to zero. (2) A torus graph $G$ is reciprocal if there is a
geodesic embedding of the dual graph $G^*$ on the same flat torus, where each
edge of G is orthogonal to the corresponding dual edge in $G^*$. (3) A torus
graph $G$ is coherent if it is possible to assign weights to the vertices, so
that $G$ is the (intrinsic) weighted Delaunay graph of its vertices. The
classical Maxwell-Cremona correspondence and the well-known correspondence
between convex hulls and weighted Delaunay triangulations imply that the
analogous concepts for plane graphs (with convex outer faces) are equivalent.
Indeed, all three conditions are equivalent to $G$ being the projection of the
1-skeleton of the lower convex hull of points in $\mathbb{R}^3$. However, this
three-way equivalence does not extend directly to geodesic graphs on flat tori.
On any flat torus, reciprocal and coherent graphs are equivalent, and every
reciprocal graph is equilibrium, but not every equilibrium graph is reciprocal.
We establish a weaker correspondence: Every equilibrium graph on any flat torus
is affinely equivalent to a reciprocal/coherent graph on some flat torus.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10000</id>
    <link href="http://arxiv.org/abs/2003.10000" rel="alternate" type="text/html"/>
    <title>The Computational Complexity of Evil Hangman</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Barbay:J=eacute=r=eacute=my.html">Jérémy Barbay</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Subercaseaux:Bernardo.html">Bernardo Subercaseaux</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10000">PDF</a><br/><b>Abstract: </b>The game of Hangman is a classical asymmetric two player game in which one
player, the setter, chooses a secret word from a language, that the other
player, the guesser, tries to discover through single letter matching queries,
answered by all occurrences of this letter if any. In the Evil Hangman variant,
the setter can change the secret word during the game, as long as the new
choice is consistent with the information already given to the guesser. We show
that a greedy strategy for Evil Hangman can perform arbitrarily far from
optimal, and most importantly, that playing optimally as an Evil Hangman setter
is computationally difficult. The latter result holds even assuming perfect
knowledge of the language, for several classes of languages, ranging from
Finite to Turing Computable. The proofs are based on reductions to Dominating
Set on 3-regular graphs and to the Membership problem, combinatorial problems
already known to be computationally hard.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09904</id>
    <link href="http://arxiv.org/abs/2003.09904" rel="alternate" type="text/html"/>
    <title>On the snappability and singularity-distance of frameworks with bars and triangular plates</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nawratil:Georg.html">Georg Nawratil</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09904">PDF</a><br/><b>Abstract: </b>In a recent article the author presented a method to measure the snapping
capability -- shortly called snappability -- of bar-joint frameworks based on
the total elastic strain energy by computing the deformation of all bars using
Hooke's law and the definition of Cauchy/Engineering strain. Within the paper
at hand, we extend this approach to frameworks composed of bars and triangular
plates by using the physical concept of Green-Lagrange strain. An intrinsic
pseudometric based on the resulting total elastic strain energy density cannot
only be used for evaluating the snappability but also for measuring the
distance to the closest singular configuration. The presented methods are
demonstrated on the basis of the 3-legged planar parallel manipulator.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09895</id>
    <link href="http://arxiv.org/abs/2003.09895" rel="alternate" type="text/html"/>
    <title>Being Fast Means Being Chatty: The Local Information Cost of Graph Spanners</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Robinson:Peter.html">Peter Robinson</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09895">PDF</a><br/><b>Abstract: </b>We introduce a new measure for quantifying the amount of information that the
nodes in a network need to learn to jointly solve a graph problem. We show that
the local information cost presents a natural lower bound on the communication
complexity of distributed algorithms. We demonstrate the application of local
information cost by deriving a lower bound on the communication complexity of
computing a $(2t-1)$-spanner that consists of at most $O(n^{1+\frac{1}{t} +
\epsilon})$ edges, where $\epsilon = \Theta \left( {1}/{t^2} \right)$. Our main
result is that any $O(\text{poly}(n))$-time algorithm must send at least
$\tilde\Omega\left(\tfrac{1}{t^2} n^{1+{1}/{2t}}\right)$ bits in the CONGEST
model under the KT1 assumption, where each node has knowledge of its neighbors'
IDs initially. Previously, only a trivial lower bound of $\tilde \Omega(n)$
bits was known for this problem; in fact, our result is the first nontrivial
lower bound on the communication complexity of a sparse subgraph problem under
the KT1 assumption. A consequence of our lower bound is that achieving both
time- and communication-optimality is impossible when designing spanner
algorithms for this setting. In light of the work of King, Kutten, and Thorup
(PODC 2015), this shows that computing a minimum spanning tree can be done
significantly faster than finding a spanner when considering algorithms with
$\tilde O(n)$ communication complexity. Our result also implies time complexity
lower bounds for constructing a spanner in the node-congested clique of
Augustine et al. (2019) and in the push-pull gossip model with limited
bandwidth.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09879</id>
    <link href="http://arxiv.org/abs/2003.09879" rel="alternate" type="text/html"/>
    <title>The Power of a Single Qubit: Two-way Quantum Finite Automata and the Word Problem</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Remscrim:Zachary.html">Zachary Remscrim</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09879">PDF</a><br/><b>Abstract: </b>The two-way finite automaton with quantum and classical states (2QCFA),
defined by Ambainis and Watrous, is a model of quantum computation whose
quantum part is extremely limited; however, as they showed, 2QCFA are
surprisingly powerful: a 2QCFA, with a single qubit, can recognize, with
bounded error, the language $L_{eq}=\{a^m b^m :m \in \mathbb{N}\}$ in expected
polynomial time and the language $L_{pal}=\{w \in \{a,b\}^*:w \text{ is a
palindrome}\}$ in expected exponential time.
</p>
<p>We further demonstrate the power of 2QCFA by showing that they can recognize
the word problems of many groups. In particular 2QCFA, with a single qubit and
algebraic number transition amplitudes, can recognize, with bounded error, the
word problem of any finitely generated virtually abelian group in expected
polynomial time, as well as the word problems of a large class of linear groups
in expected exponential time. This latter class (properly) includes all groups
with context-free word problem. We also exhibit results for 2QCFA with any
finite number of qubits.
</p>
<p>As a corollary, we obtain a direct improvement on the original Ambainis and
Watrous result by showing that $L_{eq}$ can be recognized by a 2QCFA with
better parameters. As a further corollary, we show that 2QCFA can recognize
certain non-context-free languages in expected polynomial time.
</p>
<p>In a companion paper, we prove matching lower bounds, thereby showing that
the class of languages recognizable with bounded error by a 2QCFA in expected
$\mathit{subexponential}$ time is properly contained in the class of languages
recognizable with bounded error by a 2QCFA in expected $\mathit{exponential}$
time.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09877</id>
    <link href="http://arxiv.org/abs/2003.09877" rel="alternate" type="text/html"/>
    <title>Lower Bounds on the Running Time of Two-Way Quantum Finite Automata and Sublogarithmic-Space Quantum Turing Machines</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Remscrim:Zachary.html">Zachary Remscrim</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09877">PDF</a><br/><b>Abstract: </b>The two-way finite automaton with quantum and classical states (2QCFA),
defined by Ambainis and Watrous, is a model of quantum computation whose
quantum part is extremely limited; however, as they showed, 2QCFA are
surprisingly powerful: a 2QCFA with only a single-qubit can recognize the
language $L_{pal}=\{w \in \{a,b\}^*:w \text{ is a palindrome}\}$ with bounded
error in expected time $2^{O(n)}$, on inputs of length $n$.
</p>
<p>We prove that their result essentially cannot be improved upon: a 2QCFA (of
any size) cannot recognize $L_{pal}$ with bounded error in expected time
$2^{o(n)}$. To our knowledge, this is the first example of a language that can
be recognized with bounded error by a 2QCFA in exponential time but not in
subexponential time. Moreover, we prove that a quantum Turing machine (QTM)
running in space $o(\log n)$ and expected time $2^{n^{1-\Omega(1)}}$ cannot
recognize $L_{pal}$ with bounded error; again, this is the first lower bound of
its kind.
</p>
<p>Far more generally, we establish a lower bound on the running time of any
2QCFA or $o(\log n)$-space QTM that recognizes any language $L$ in terms of a
natural ``hardness measure" of $L$. This allows us to exhibit a large family of
languages for which we have asymptotically matching lower and upper bounds on
the running time of any such 2QCFA or QTM recognizer.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09791</id>
    <link href="http://arxiv.org/abs/2003.09791" rel="alternate" type="text/html"/>
    <title>$P\neq NP$</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Tianrong.html">Tianrong Lin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09791">PDF</a><br/><b>Abstract: </b>The whole discussions are divided into two parts, one is for $|\Sigma|\geq 2$
(general case), another is for $|\Sigma|=1$ (special case). The main
contribution of the present paper is that a series of results are obtained.
Specifically, we prove in general case that: (1) Let $L_1\in NP-P$ and $L_2\in
P$, then the complexity of problem on reducibility from $L_1$ to $L_2$ is
$\Omega(m^{p(|\omega|)})$, $m\geq 2$ is a constant, where $p$ is a polynomial
and $\omega\in\Sigma^*$ the input; (2) There exists no polynomial-time
algorithm for {\it SAT}; (3) An immediate corollary of (1) and (2) is that
$P\neq NP$, which also can be deduced from (6), see Remark 7.1; (4) Let $L_1\in
coNP-coP$ and $L_2\in coP$, then the complexity of problem on reducibility from
$L_1$ to $L_2$ is $\Omega(m^{p(|\omega|)})$, $m\geq 2$ is a constant, where $p$
is a polynomial and $\omega\in\Sigma^*$ the input; (5) There exists no
polynomial-time algorithm for {\it TAUT}; (6) An immediate corollary of (4) and
(5) is that $coP\neq coNP$;
</p>
<p>We next study the problem in special case. It is shown that:
</p>
<p>(1) the complexity of problem of reducibility from $L_1\in NP-P$ (resp.~
$L_1\in coNP-coP$) to $L_2\in P$ (resp.~$L_2\in coP$) is $\mathcal
{O}(p^{''}(|\omega|))$ where $p^{''}$ is a polynomial and $\omega\in\Sigma^*$
the input; (2) an immediate corollary is that $P=NP$ and $coP=coNP$ in the
special case.
</p>
<p>However, the title of the paper will only reflect the general case.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09756</id>
    <link href="http://arxiv.org/abs/2003.09756" rel="alternate" type="text/html"/>
    <title>Scaling up Kernel Ridge Regression via Locality Sensitive Hashing</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kapralov:Michael.html">Michael Kapralov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nouri:Navid.html">Navid Nouri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Razenshteyn:Ilya.html">Ilya Razenshteyn</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Velingker:Ameya.html">Ameya Velingker</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zandieh:Amir.html">Amir Zandieh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09756">PDF</a><br/><b>Abstract: </b>Random binning features, introduced in the seminal paper of Rahimi and Recht
(2007), are an efficient method for approximating a kernel matrix using
locality sensitive hashing. Random binning features provide a very simple and
efficient way of approximating the Laplace kernel but unfortunately do not
apply to many important classes of kernels, notably ones that generate smooth
Gaussian processes, such as the Gaussian kernel and Matern kernel. In this
paper, we introduce a simple weighted version of random binning features and
show that the corresponding kernel function generates Gaussian processes of any
desired smoothness. We show that our weighted random binning features provide a
spectral approximation to the corresponding kernel matrix, leading to efficient
algorithms for kernel ridge regression. Experiments on large scale regression
datasets show that our method outperforms the accuracy of random Fourier
features method.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09725</id>
    <link href="http://arxiv.org/abs/2003.09725" rel="alternate" type="text/html"/>
    <title>Volumetric density-equalizing reference map with applications</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Choi:Gary_P=_T=.html">Gary P. T. Choi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rycroft:Chris_H=.html">Chris H. Rycroft</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09725">PDF</a><br/><b>Abstract: </b>The density-equalizing map, a technique developed for cartogram creation, has
been widely applied to data visualization but only for 2D applications. In this
work, we propose a novel method called the volumetric density-equalizing
reference map (VDERM) for computing density-equalizing map for volumetric
domains. Given a prescribed density distribution in a volumetric domain in
$\mathbb{R}^3$, the proposed method continuously deforms the domain, with
different volume elements enlarged or shrunk according to the density
distribution. With the aid of the proposed method, medical and sociological
data can be visualized via deformations of 3D objects. The method can also be
applied to adaptive remeshing and shape modeling. Furthermore, by exploiting
the time-dependent nature of the proposed method, applications to shape
morphing can be easily achieved. Experimental results are presented to
demonstrate the effectiveness of the proposed method.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09584</id>
    <link href="http://arxiv.org/abs/2003.09584" rel="alternate" type="text/html"/>
    <title>Hidden Words Statistics for Large Patterns</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Janson:Svante.html">Svante Janson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Szpankowski:Wojciech.html">Wojciech Szpankowski</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09584">PDF</a><br/><b>Abstract: </b>We study here the so called subsequence pattern matching also known as hidden
pattern matching in which one searches for a given pattern $w$ of length $m$ as
a subsequence in a random text of length $n$. The quantity of interest is the
number of occurrences of $w$ as a subsequence (i.e., occurring in not
necessarily consecutive text locations). This problem finds many applications
from intrusion detection, to trace reconstruction, to deletion channel, and to
DNA-based storage systems. In all of these applications, the pattern $w$ is of
variable length. To the best of our knowledge this problem was only tackled for
a fixed length $m=O(1)$ [Flajolet, Szpankowski and Vall\'ee, 2006]. In our main
result we prove that for $m=o(n^{1/3})$ the number of subsequence occurrences
is normally distributed. In addition, we show that under some constraints on
the structure of $w$ the asymptotic normality can be extended to
$m=o(\sqrt{n})$. For a special pattern $w$ consisting of the same symbol, we
indicate that for $m=o(n)$ the distribution of number of subsequences is either
asymptotically normal or asymptotically log normal. We conjecture that this
dichotomy is true for all patterns. We use Hoeffding's projection method for
$U$-statistics to prove our findings.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09533</id>
    <link href="http://arxiv.org/abs/2003.09533" rel="alternate" type="text/html"/>
    <title>Testing Polynomials for Vanishing on Cartesian Products of Planar Point Sets</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aronov:Boris.html">Boris Aronov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Ezra:Esther.html">Esther Ezra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sharir:Micha.html">Micha Sharir</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09533">PDF</a><br/><b>Abstract: </b>We present subquadratic algorithms, in the algebraic decision-tree model of
computation, for detecting whether there exists a triple of points, belonging
to three respective sets $A$, $B$, and $C$ of points in the plane, that satisfy
a certain polynomial equation or two equations. The best known instance of such
a problem is testing for the existence of a collinear triple of points in
$A\times B\times C$, a classical 3SUM-hard problem that has so far defied any
attempt to obtain a subquadratic solution, whether in the (uniform) real RAM
model, or in the algebraic decision-tree model. While we are still unable to
solve this problem, in full generality, in subquadratic time, we obtain such a
solution, in the algebraic decision-tree model, that uses only roughly
$O(n^{28/15})$ constant-degree polynomial sign tests, for the special case
where two of the sets lie on one-dimensional curves and the third is placed
arbitrarily in the plane.
</p>
<p>As a second application of our technique, we again have three $n$-point sets
$A$, $B$, and $C$ in the plane, and we want to determine whether there exists a
triple $(a,b,c) \in A\times B\times C$ that simultaneously satisfies two real
polynomial equations. For example, this is the setup when testing for the
existence of pairs of similar triangles spanned by the input points, in various
contexts discussed later in the paper. We show that problems of this kind can
be solved with roughly $O(n^{24/13})$ constant-degree polynomial sign tests.
This is a considerable improvement, given the 3SUM-hardness of the triangle
similarity problem that we discuss and the lack of any subquadratic algorithm
for it (or for any similar problem) in the uniform model.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09532</id>
    <link href="http://arxiv.org/abs/2003.09532" rel="alternate" type="text/html"/>
    <title>Message complexity of population protocols</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Amir:Talley.html">Talley Amir</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aspnes:James.html">James Aspnes</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Doty:David.html">David Doty</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/H=:Mahsa_Eftekhari.html">Mahsa Eftekhari H.</a>, Eric Severson <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09532">PDF</a><br/><b>Abstract: </b>The standard population protocol model assumes that when two agents interact,
each observes the entire state of the other agent. We initiate the study of the
$\textbf{message complexity}$ for population protocols, where the state of an
agent is divided into an externally-visible $\textbf{message}$ and an internal
component, where only the message can be observed by the other agent in an
interaction.
</p>
<p>We consider the case of $O(1)$ message complexity. When time is unrestricted,
we obtain an exact characterization of the stably computable predicates based
on the number of internal states $s(n)$: If $s(n) = o(n)$ then the protocol
computes a semilinear predicate (unlike the original model, which can compute
non-semilinear predicates with $s(n) = O(\log n)$), and otherwise it computes a
predicate decidable by a nondeterministic $O(n \log s(n))$-space-bounded Turing
machine. We then consider time complexity, introducing novel
$O(\mathrm{polylog}(n))$ expected time protocols for junta/leader election and
general purpose broadcast correct with high probability, and approximate and
exact population size counting correct with probability 1. Finally, we show
that the main constraint on the power of bounded-message-size protocols is the
size of the internal states: with unbounded internal states, any computable
function can be computed with probability 1 in the limit by a protocol that
uses only one-bit messages.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.09481</id>
    <link href="http://arxiv.org/abs/2003.09481" rel="alternate" type="text/html"/>
    <title>Efficient Oblivious Database Joins</title>
    <feedworld_mtime>1585008000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Krastnikov:Simeon.html">Simeon Krastnikov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kerschbaum:Florian.html">Florian Kerschbaum</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stebila:Douglas.html">Douglas Stebila</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.09481">PDF</a><br/><b>Abstract: </b>A major algorithmic challenge in designing applications intended for secure
remote execution is ensuring that they are oblivious to their inputs, in the
sense that their memory access patterns do not leak sensitive information to
the server. This problem is particularly relevant to cloud databases that wish
to allow queries over the client's encrypted data. One of the major obstacles
to such a goal is the join operator, which is non-trivial to implement
obliviously without resorting to generic but inefficient solutions like
Oblivious RAM (ORAM).
</p>
<p>We present an oblivious algorithm for equi-joins which (up to a logarithmic
factor) matches the optimal $O(n\log n)$ complexity of the standard non-secure
sort-merge join (on inputs producing $O(n)$ outputs). We do not use use
expensive primitives like ORAM or rely on unrealistic hardware or security
assumptions. Our approach, which is based on sorting networks and novel
provably-oblivious constructions, is conceptually simple, easily verifiable,
and very efficient in practice. Its data-independent algorithmic structure
makes it secure in various different settings for remote computation, even in
those that are known to be vulnerable to certain side-channel attacks (such as
Intel SGX) or with strict requirements for low circuit complexity (like secure
multiparty computation). We confirm that our approach is easily realizable
through a compact prototype implementation which matches our expectations for
performance and is shown, both formally and empirically, to possess the desired
security characteristics.
</p></div>
    </summary>
    <updated>2020-03-24T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-24T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4340</id>
    <link href="https://lucatrevisan.wordpress.com/2020/03/22/on-virus-containment-as-dieting/" rel="alternate" type="text/html"/>
    <title>On virus containment as dieting</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The Protezione Civile, the Italian equivalent of FEMA, holds a daily press conference to announce coronavirus data from the previous 24 hours. Today they had relatively good news, of which we hope to hear more soon. The Protezione Civile puts … <a href="https://lucatrevisan.wordpress.com/2020/03/22/on-virus-containment-as-dieting/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Protezione Civile, the Italian equivalent of FEMA, holds a daily press conference to announce coronavirus data from the previous 24 hours. Today they had relatively good news, of which we hope to hear more soon. The Protezione Civile  puts a lot of data online every day, on <a href="https://github.com/pcm-dpc/COVID-19">github</a>, which allows any interested party to monitor the situation and will allow people in other countries to see the effect of our various restrictive measures over time. </p>
<p>The graph below, which is courtesy of <a href="http://didattica.unibocconi.it/mypage/index.php?IdUte=202443&amp;cognome=LUCIBELLO&amp;nome=CARLO&amp;urlBackMy=">Carlo Lucibello</a>, shows the number of deaths in Italy on a logarithmic scale, compared with data from China from 36 days before.<br/>
<img alt="90441248_574660963135651_9199184881282711552_n" class="alignnone size-full wp-image-4342" src="https://lucatrevisan.files.wordpress.com/2020/03/90441248_574660963135651_9199184881282711552_n.png?w=584"/><br/>
(Image credit: Carlo Lucibello)</p>
<p>At the start, Italian deaths rose like in China, at the same exponential rate. About twenty days after the lockdown of Wuhan, the Chinese data started deviating from the exponential rate and leveled off. In Italy, about ten days ago, there was a slowdown, which followed the institution of the “yellow zone” by about 15 days. The “yellow zone” measures closed schools, universities, museums, cinemas, and clubs, and restricted hours of bars and coffee shops, in Lombardy. Apparently, although these measures made a difference, they still allowed the spread of the virus to continue at an exponential rate.</p>
<p>On March 8, Lombardy was put on a stricter lockdown, with travel restrictions, and on March 10 the lockdown was extended to the rest of the country. So we may hope to see a stronger slowdown and maybe a leveling-off two or three weeks after these measures, that is, any day now. It may seem premature to ask this question, but what happens next?</p>
<p>Today the Italian government announced additional measures to facilitate “social distancing,” halting all “non-essential” manufacturing and other work activities, forbidding people from leaving the house to walk or jog (even alone), and  further restricting the cases in which it is allowed to travel between different cities.</p>
<p>These measures, which apply nationwide, are meant to be in place for two weeks. They will be economically devastating (even more so than the already devastating nationwide lockdown of March 10), and they will be difficult to keep in place for longer than the expected two weeks.</p>
<p>When a nationwide “lockdown” was first instituted, the prime minister announced it by saying “let’s be distant today in order to more warmly hug each other tomorrow”. In general, the spirit of these measures has been to suffer for a short time and then return to normal.</p>
<p>This feels like the national mood in general, and the government took today’s further restrictive measures somewhat reluctantly, because there was strong popular support for them.</p>
<p>Here I am worried that we are approaching this crisis the way many people attempt to lose weight: by going on a starvation diet, then losing some weight, then celebrating and finally gaining back more weight than they lost.</p>
<p>The point being that I worry about what will happen once the worst is over and these restrictive measures will be lifted. Until there is a vaccine or a cure, we will not be able to really go back to normal, and we will have to make some sustainable “lifestyle changes” to “maintain” what we got, just like people who maintain weight loss for a long time do so by making sustainable changes for the long term.</p>
<p>Concretely, we will need a very efficient system to monitor new cases and trace contacts, perhaps similar to Taiwan’s, and to follow the kind of stricter hygiene precautions in public places that have been common in East Asia since SARS. Let’s hope that we will have to worry about such problems soon.</p></div>
    </content>
    <updated>2020-03-22T22:08:31Z</updated>
    <published>2020-03-22T22:08:31Z</published>
    <category term="Milan"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-03-25T20:20:09Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/03/22/uci-ecological-preserve</id>
    <link href="https://11011110.github.io/blog/2020/03/22/uci-ecological-preserve.html" rel="alternate" type="text/html"/>
    <title>UCI Ecological Preserve</title>
    <summary>The UCI Ecological Preserve is a 60-acre patch of coastal sage scrub, adjoining the housing complex in which I live.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The <a href="http://ecopreserve.ucnrs.org/">UCI Ecological Preserve</a> is a 60-acre patch of <a href="https://en.wikipedia.org/wiki/Coastal_sage_scrub">coastal sage scrub</a>, adjoining <a href="https://en.wikipedia.org/wiki/University_Hills,_Irvine">the housing complex in which I live</a>.</p>

<p>Like most of the rest of the world, I’m stuck at home for an indefinite duration, but the level of lockdown that we’re under allows us to go for walks outside, and like many of my neighbors (keeping a safe distance from each other) I took advantage of the opportunity to do so yesterday in the preserve. It was a gorgeous day, with very clear air from the recent rains: so clear that I could see individual buildings in downtown Los Angeles, 40 miles away.</p>

<p>I brought my camera along, but chose to focus on the nearby brush rather than the more distant views. Here’s one of my shots:</p>

<p style="text-align: center;"><img alt="UCI Ecological Preserve" src="https://www.ics.uci.edu/~eppstein/pix/uciep/6-m.jpg" style="border-style: solid; border-color: black;"/></p>

<p>The rest are in <a href="https://www.ics.uci.edu/~eppstein/pix/uciep/index.html">my online gallery</a>.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/103869119505106054">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2020-03-22T15:28:00Z</updated>
    <published>2020-03-22T15:28:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-03-22T22:44:29Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=19400</id>
    <link href="https://gilkalai.wordpress.com/2020/03/22/kelman-kindler-lifshitz-minzer-and-safra-towards-the-entropy-influence-conjecture/" rel="alternate" type="text/html"/>
    <title>Kelman, Kindler, Lifshitz, Minzer, and Safra: Towards the Entropy-Influence Conjecture</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Let me briefly report on a remarkable new paper by Esty Kelman, Guy Kindler, Noam Lifshitz, Dor Minzer, and Muli Safra, Revisiting Bourgain-Kalai and Fourier Entropies. The paper describes substantial progress towards the Entropy-Influence conjecture, posed by Ehud Friedgut and … <a href="https://gilkalai.wordpress.com/2020/03/22/kelman-kindler-lifshitz-minzer-and-safra-towards-the-entropy-influence-conjecture/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Let me briefly report on a remarkable new paper by Esty Kelman, Guy Kindler, Noam Lifshitz, Dor Minzer, and Muli Safra, <a href="https://arxiv.org/abs/1911.10579">Revisiting Bourgain-Kalai and Fourier Entropies</a>. The paper describes substantial progress towards the Entropy-Influence conjecture, posed by <a href="https://www.ams.org/journals/proc/1996-124-10/S0002-9939-96-03732-X/S0002-9939-96-03732-X.pdf">Ehud Friedgut and me in 1996</a>. (See this <a href="https://terrytao.wordpress.com/2007/08/16/gil-kalai-the-entropyinfluence-conjecture/">blog post from 2007</a>.)</p>
<p><strong>Abstract:</strong> The total inﬂuence of a function is a central notion in analysis of Boolean functions, and characterizing functions that have small total inﬂuence is one of the most fundamental questions associated with it. The KKL theorem and the Friedgut junta theorem give a strong characterization of such functions whenever the bound on the total inﬂuence is <em>o(logn)</em>, however, both results become useless when the total inﬂuence of the function is <em>ω(logn)</em>. The only case in which this logarithmic barrier has been broken for an interesting class of function was proved by Bourgain and Kalai, who focused on functions that are symmetric under large enough subgroups of <img alt="S_n" class="latex" src="https://s0.wp.com/latex.php?latex=S_n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S_n"/>.</p>
<p>In this paper, we revisit the key ideas of the Bourgain-Kalai paper. We prove a new general inequality that upper bounds the correlation between a Boolean function <em>f</em> and a real-valued, low degree function<em> g</em> in terms of their norms, Fourier coefﬁcients and total inﬂuences.</p>
<p>Some corollaries of this inequality are:</p>
<ol>
<li>The Bourgain-Kalai result.</li>
<li>A slightly weaker version of the Fourier-Entropy Conjecture. More precisely, we prove that the Fourier entropy of the low-degree part of<em> f</em> is at most <img alt="O(I[f]log^2 I[f])" class="latex" src="https://s0.wp.com/latex.php?latex=O%28I%5Bf%5Dlog%5E2+I%5Bf%5D%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="O(I[f]log^2 I[f])"/>, where<em> I[f]</em> is the total inﬂuence of <em>f</em>. In particular, we conclude that the Fourier spectrum of a Boolean function is concentrated on at most <img alt="2O(I[f]log^2 I[f])" class="latex" src="https://s0.wp.com/latex.php?latex=2O%28I%5Bf%5Dlog%5E2+I%5Bf%5D%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2O(I[f]log^2 I[f])"/> Fourier coefﬁcients.</li>
<li>Using well-known learning algorithms of sparse functions, the previous point implies that the class of functions with sub-logarithmic total inﬂuence (i.e. at most <img alt="O(\log n/(\log \log n)2))" class="latex" src="https://s0.wp.com/latex.php?latex=O%28%5Clog+n%2F%28%5Clog+%5Clog+n%292%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="O(\log n/(\log \log n)2))"/> is learnable in polynomial time, using membership queries.</li>
</ol>
<h2><a href="https://gilkalai.files.wordpress.com/2020/03/bour-kal.png"><img alt="" class="alignnone size-large wp-image-19597" height="435" src="https://gilkalai.files.wordpress.com/2020/03/bour-kal.png?w=640&amp;h=435" width="640"/></a></h2>
<p>Our theorem on influence under symmetry. From my <a href="https://youtu.be/35saSZ93PlI">videotaped lecture</a> on Jean Bourgain. See <a href="https://gilkalai.wordpress.com/2019/01/02/jean/">this post</a> about Jean Bourgain.</p>
<h2>A few remarks:</h2>
<p>A) Given a Boolean function <img alt="f:\{-1,1\}^n\to \{-1,1\}" class="latex" src="https://s0.wp.com/latex.php?latex=f%3A%5C%7B-1%2C1%5C%7D%5En%5Cto+%5C%7B-1%2C1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f:\{-1,1\}^n\to \{-1,1\}"/> let <img alt="f=\sum_{S \subset \{1,2,\dots ,n\}}\hat f(S)W_S" class="latex" src="https://s0.wp.com/latex.php?latex=f%3D%5Csum_%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%28S%29W_S&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f=\sum_{S \subset \{1,2,\dots ,n\}}\hat f(S)W_S"/> be its Fourier-Walsh expansion. (Here <img alt="W_S(x_1,x_2,\dots ,x_n)=\prod_{i\in S}x_i" class="latex" src="https://s0.wp.com/latex.php?latex=W_S%28x_1%2Cx_2%2C%5Cdots+%2Cx_n%29%3D%5Cprod_%7Bi%5Cin+S%7Dx_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="W_S(x_1,x_2,\dots ,x_n)=\prod_{i\in S}x_i"/>.) The total influence <img alt="I(f)" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f)"/> of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> is described by</p>
<p style="text-align: center;"><img alt="I(f)=\sum {S \subset \{1,2,\dots ,n\}}\hat f^2(S)|S|" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29%3D%5Csum+%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%5E2%28S%29%7CS%7C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f)=\sum {S \subset \{1,2,\dots ,n\}}\hat f^2(S)|S|"/>.</p>
<p>The spectral entropy <img alt="E(f)" class="latex" src="https://s0.wp.com/latex.php?latex=E%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E(f)"/> of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> is defined by</p>
<p style="text-align: center;"><img alt="E(f)=\sum_{S \subset \{1,2,\dots ,n\}}\hat f^2(S) \log (\hat f^2(S))" class="latex" src="https://s0.wp.com/latex.php?latex=E%28f%29%3D%5Csum_%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%5E2%28S%29+%5Clog+%28%5Chat+f%5E2%28S%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E(f)=\sum_{S \subset \{1,2,\dots ,n\}}\hat f^2(S) \log (\hat f^2(S))"/>.</p>
<p>The entropy-influence conjecture (here called the Fourier-entropy conjecture) asserts that for some universal constant <em>C</em></p>
<p style="text-align: center;"><img alt="I(f) \ge C E(f)" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29+%5Cge+C+E%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f) \ge C E(f)"/>.</p>
<p>B) One interesting feature of the conjecture is that the RHS is invariant under arbitrary linear transformations of <img alt="\{-1,1\}^n" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B-1%2C1%5C%7D%5En&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{-1,1\}^n"/> (regarded as an <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/>-dimensional vector space) while the LHS is invariant only to permutations of the variables.</p>
<p>C) My paper with Jean Bourgain, <a href="http://www.ma.huji.ac.il/~kalai/bki.pdf">Influences of variables and threshold intervals under group symmetries</a>, describes lower bounds on total influences for Boolean function invariant under certain groups of permutations (of the variables). Those results are stronger (but more restrictive) than what the Entropy/influence conjecture directly implies. (This was overlooked for a while.) The new paper gives (much hoped for, see below) simpler proofs and stronger results compared to those in my paper with Jean Bourgain.</p>
<p>D) <a href="https://terrytao.wordpress.com/2018/12/29/jean-bourgain/#comment-509792">Ryan O’Donnel wrote</a> about Bourgain and some of his contributions to the analysis of Boolean functions:</p>
<p><em>“I spent close to 5 years understanding one 6-page paper of his (“On the distribution of the Fourier spectrum of Boolean functions”), and also close to 10 years understanding a 10-page paper of his (the k-SAT sharp threshold ‘appendix’). If anyone’s up for a challenge, I’m pretty sure no one on earth fully understands the second half of his paper “Influences of variables and threshold intervals under group symmetries” with Kalai (including Gil <img alt="&#x1F642;" class="wp-smiley" src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f642.png" style="height: 1em;"/> )”</em></p>
<p>It looks that by now we have pretty good understanding and even some far-reaching progress regarding all three papers that Ryan mentioned. (It is unclear if we can hope now for an exponential spread of understanding for Bourgain’s proofs.)</p>
<p> </p></div>
    </content>
    <updated>2020-03-22T10:43:00Z</updated>
    <published>2020-03-22T10:43:00Z</published>
    <category term="Combinatorics"/>
    <category term="Computer Science and Optimization"/>
    <category term="Open problems"/>
    <category term="Dor Minzer"/>
    <category term="Esty Kelman"/>
    <category term="Guy Kindler"/>
    <category term="Muli Safra"/>
    <category term="Noam Lifshitz"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-03-25T20:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/038</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/038" rel="alternate" type="text/html"/>
    <title>TR20-038 |  Error Correcting Codes for Uncompressed Messages | 

	Ofer Grossman, 

	Justin Holmgren</title>
    <summary>Most types of messages we transmit (e.g., video, audio, images, text) are not fully compressed, since they do not have known efficient and information theoretically optimal compression algorithms.  When transmitting such messages, standard error correcting codes fail to take advantage of the fact that messages are not fully compressed.

We show that in this setting, it is sub-optimal to use standard error correction. We consider a model where there is a set of “valid messages” which the sender may send that may not be efficiently compressible, but where it is possible for the receiver to recognize valid messages. In this model, we construct a (probabilistic) encoding procedure that achieves better tradeoffs between data rates and error-resilience (compared to just applying a standard error correcting code).

Additionally, our techniques yield improved efficiently decodable (probabilistic) codes for fully compressed messages (the standard setting where the set of valid messages is all binary strings) in the high-rate regime.</summary>
    <updated>2020-03-22T08:59:44Z</updated>
    <published>2020-03-22T08:59:44Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-25T20:20:25Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16828</id>
    <link href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/" rel="alternate" type="text/html"/>
    <title>Star-Free Regular Languages and Logic</title>
    <summary>Part 1 of a two-part series Daniel Winton is a graduate student in mathematics at Buffalo. He did an independent study with me last semester on descriptive complexity. Today we begin a two-part series written by Daniel on a foundational result in this area involving first-order logic and star-free languages. Dick and I have discussed […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Part 1 of a two-part series</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/wintonprofile/" rel="attachment wp-att-16830"><img alt="" class="alignright wp-image-16830" height="165" src="https://rjlipton.files.wordpress.com/2020/03/wintonprofile.png?w=150&amp;h=165" width="150"/></a></p>
<p>
Daniel Winton is a graduate student in mathematics at Buffalo. He did an independent study with me last semester on descriptive complexity.</p>
<p>
Today we begin a two-part series written by Daniel on a foundational result in this area involving first-order logic and <em>star-free</em> languages.</p>
<p>
Dick and I have discussed how GLL might act during the terrible coronavirus developments. We could collect quantitative and theoretical insights to help understand what is happening and possibly contribute to background for attempts to deal with it. Our March 12 <a href="https://rjlipton.wordpress.com/2020/03/12/group-testing-for-the-coronavirus/">post</a> was this kind, and was on the wavelength of an actual advance in group testing announced in Israel two days ago, as noted in a <a href="https://rjlipton.wordpress.com/2020/03/12/group-testing-for-the-coronavirus/#comment-109506">comment</a>. We could try to be even more active than that. We could focus on entertainment and diversion. Our annual St. Patrick’s Day <a href="https://rjlipton.wordpress.com/2020/03/17/leprechauns-stay-home/">post</a> mentioned the ongoing <a href="https://en.candidates-2020.com/main">Candidates</a> <a href="https://new.uschess.org/news/2020-candidates-couch-potatoes/">Tournament</a> in chess, with links to follow it live 7am–noon EDT. Game analysis may be found <a href="http://www.thechessmind.net/">here</a> and elsewhere.</p>
<p>
Here we’re doing what we most often do: present a hopefully sprightly angle on a technical subject. We offer this in solidarity with the many professors and teachers who are beginning to teach online to many students. The subject of regular languages is the start of many theory courses and sometimes taught in high schools. Accordingly, Dick and I decided to prefix a section introducing regular languages as a teaching topic and motivating the use of logic, before entering the main body written by Daniel.</p>
<p>
</p><p/><h2> Regular Languages and Logic </h2><p/>
<p/><p>
<a href="https://en.wikipedia.org/wiki/Regular_language">Regular</a> languages are building blocks used throughout computer science. They can be defined in many ways. Two major types of descriptions are:</p>
<ol>
<li>
Regular expressions. For example, the regular expression <p/>
<p align="center"><img alt="\displaystyle  b^{*}(a b^{*} a b^{*})^{*} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++b%5E%7B%2A%7D%28a+b%5E%7B%2A%7D+a+b%5E%7B%2A%7D%29%5E%7B%2A%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  b^{*}(a b^{*} a b^{*})^{*} "/></p>
<p>describes the set of strings over the alphabet <img alt="{\{a,b\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7Ba%2Cb%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{a,b\}}"/> that have an even number of <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/>‘s. </p>
</li><li>
Finite automata, for example:
</li></ol>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/evendfa/" rel="attachment wp-att-16832"><img alt="" class="aligncenter wp-image-16832" height="140" src="https://rjlipton.files.wordpress.com/2020/03/evendfa.jpg?w=300&amp;h=140" width="300"/></a></p>
<p>
The regular languages defined by (1) and (2) are the same. All regular expressions have corresponding finite automata. This equivalence makes a powerful statement about the concept of regular languages. The more and more diverse definitions we have, the better we understand a concept. This leads us to consider other possible definitions.</p>
<p>
A natural kind of definition involves <em>logic</em>. Studying complexity classes through logic and <a href="https://en.wikipedia.org/wiki/Model_theory">model theory</a> has proven fruitful, creating <a href="https://en.wikipedia.org/wiki/Descriptive_complexity_theory">descriptive complexity</a> as an area. <em>Good news:</em> there are logic definitions equivalent to the regular languages. <em>Bad news:</em> they require going up to second-order logic. We would like to stay with first-order logic. So we ask:</p>
<blockquote><p><b> </b> <em> What kind of languages can we define using only first-order logic (FOL) and simple predicates like “the <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{i}"/>th bit of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/> is <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{a}"/>” and “place <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{i}"/> comes before place <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{j}"/>“? </em>
</p></blockquote>
<p/><p>
The answer is the <em>star-free</em> languages, which form a subclass <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> of the regular languages. They were made famous in the book <em>Counter-Free Automata</em> by Robert McNaughton and Seymour Papert, where the equivalence to FOL was proved. A portentous fact is that these automata cannot solve simple tasks involving modular counting. Nor can <em>perceptrons</em>—the title subject of a book at the same time by Papert with Marvin Minsky, which we <a href="https://rjlipton.wordpress.com/2016/01/27/minsky-the-theorist/">discussed</a> in relation to both AI and circuit complexity. This post will introduce <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> and FOL, prove the easier direction of the characterization, and give two lemmas for next time. The second post will present a new way to visualize the other direction. <b>The rest of this post is by Daniel Winton.</b></p>
<p>
</p><p/><h2> No Stars Upon Thars </h2><p/>
<p/><p>
A regular language over an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is one with an expression that can be obtained by applying the union, concatenation, and Kleene star operations a finite number of times on the empty set and singleton subsets of <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>. Star-free languages are defined similarly but give up the use of the Kleene star <img alt="{{}^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%7D%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{}^*}"/> operation, while adding complementation (<img alt="{\sim}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csim%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sim}"/>) as a basic operation. The star-free languages are a subset of the regular languages, because regular languages are closed under complementation. </p>
<p>
Complementation often helps find star-free expressions that we ordinarily write using stars. For instance, if the alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is <img alt="{\{a,b\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7Ba%2Cb%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{a,b\}}"/>, then <img alt="{(\sim \emptyset)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Csim+%5Cemptyset%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\sim \emptyset)}"/> gives <img alt="{(a + b)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28a+%2B+b%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(a + b)^*}"/>. The following lemma gives a family of regular expressions that use Kleene star but are really star-free.</p>
<blockquote><p><b>Lemma 1</b> <em> The language given by taking the Kleene star operation on a union of singleton elements in an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is star-free. </em>
</p></blockquote>
<p/><p>
<em>Proof.</em> For <img alt="{\Sigma=\{a_1, ..., a_n, b_1, ..., b_m\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%3D%5C%7Ba_1%2C+...%2C+a_n%2C+b_1%2C+...%2C+b_m%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma=\{a_1, ..., a_n, b_1, ..., b_m\}}"/> we have that <img alt="{(b_1+ ... + b_m)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28b_1%2B+...+%2B+b_m%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(b_1+ ... + b_m)^*}"/> can be given by </p>
<p align="center"><img alt="\displaystyle  \sim((\sim\emptyset) (a_1+ ... + a_n) (\sim\emptyset)). \quad  " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csim%28%28%5Csim%5Cemptyset%29+%28a_1%2B+...+%2B+a_n%29+%28%5Csim%5Cemptyset%29%29.+%5Cquad++&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sim((\sim\emptyset) (a_1+ ... + a_n) (\sim\emptyset)). \quad  "/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>For example, the language <img alt="{b^*ab^*ab^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2Aab%5E%2Aab%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*ab^*ab^*}"/> is star-free because <img alt="{b^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*}"/> is by this lemma. This idea extends also to forbidden substrings—e.g., the set of strings with no <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> is <img alt="{\;\sim((\sim\emptyset)aa(\sim\emptyset))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%3B%5Csim%28%28%5Csim%5Cemptyset%29aa%28%5Csim%5Cemptyset%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\;\sim((\sim\emptyset)aa(\sim\emptyset))}"/>. </p>
<p>
The language <img alt="{(ab + ba + bb)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28ab+%2B+ba+%2B+bb%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(ab + ba + bb)^*}"/> is not the same, however, and it is not star-free. Intuitively this is because it involves modular counting: an <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> in an odd position is OK but not even. The parity language <img alt="{b^*(ab^*ab^*)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2A%28ab%5E%2Aab%5E%2A%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*(ab^*ab^*)^*}"/> from the introduction is another example. So <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> is a proper subset of the regular languages. What kind of subset? This is where having a third description via logic is really useful.</p>
<p>
</p><p/><h2> The First Order of Business </h2><p/>
<p/><p>
In addition to the familiar Boolean operations <img alt="{\wedge,\vee,\neg,\rightarrow,\leftrightarrow}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwedge%2C%5Cvee%2C%5Cneg%2C%5Crightarrow%2C%5Cleftrightarrow%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\wedge,\vee,\neg,\rightarrow,\leftrightarrow}"/> and truth values, <em>first-order logic</em> provides variables that range over elements of a structure and quantifiers on those variables. Since we will be concerned with Boolean strings <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, the variables will range over places in the string <img alt="{0,\dots,n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%2C%5Cdots%2Cn-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0,\dots,n-1}"/>, where <img alt="{n = |x|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+%7Cx%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = |x|}"/>. A logic also specifies a set of predicates that relate variables and interact with the structure. For strings we have:</p>
<ul>
<li>
<img alt="{X_c(i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(i)}"/>, meaning that the symbol indexed <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> in <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> is the character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. The logic gives one such predicate for each <img alt="{c \in \Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc+%5Cin+%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c \in \Sigma}"/>. <p/>
</li><li>
<img alt="{i &lt; j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3C+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i &lt; j}"/>, with the obvious meaning for natural numbers <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/>.
</li></ul>
<p>
We can take the <img alt="{X_c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c}"/> for granted since we are talking about strings, but we need to say that predicates like <img alt="{i + j = k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%2B+j+%3D+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i + j = k}"/> and <img alt="{i\cdot j = k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%5Ccdot+j+%3D+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i\cdot j = k}"/> are excluded, so we call this <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>. We could define equality by <img alt="{i = j \equiv \lnot(i &lt; j \lor j &lt; i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3D+j+%5Cequiv+%5Clnot%28i+%3C+j+%5Clor+j+%3C+i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i = j \equiv \lnot(i &lt; j \lor j &lt; i)}"/> but we regard equality as inherent.</p>
<p>
We can use <img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/> to define the successor relation <img alt="{S(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S(i,j)}"/>, which denotes that position <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> comes immediately after position <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>:</p>
<p/><p align="center"><img alt="\displaystyle  S(i,j) \equiv i&lt;j \land \forall k (i&lt;k \rightarrow j\leq k). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S%28i%2Cj%29+%5Cequiv+i%3Cj+%5Cland+%5Cforall+k+%28i%3Ck+%5Crightarrow+j%5Cleq+k%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S(i,j) \equiv i&lt;j \land \forall k (i&lt;k \rightarrow j\leq k). "/></p>
<p>
Note the use of quantifiers. We can use quantifiers to say things about the string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> too. For instance, the language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> of strings having no <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> substrings is defined by the logical sentence</p>
<p/><p align="center"><img alt="\displaystyle  \sigma_L = (\forall i,j):S(i,j) \rightarrow \neg (X_a(i) \land X_a(j)). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csigma_L+%3D+%28%5Cforall+i%2Cj%29%3AS%28i%2Cj%29+%5Crightarrow+%5Cneg+%28X_a%28i%29+%5Cland+X_a%28j%29%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sigma_L = (\forall i,j):S(i,j) \rightarrow \neg (X_a(i) \land X_a(j)). "/></p>
<p>
It is implicit here that <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> are always in-bounds. If <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> were a legal constant with <img alt="{X_c(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(n)}"/> always false then a string like <img alt="{bbba}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bbbba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{bbba}"/> (which belongs to <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>) would falsify <img alt="{\sigma_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csigma_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sigma_L}"/> with <img alt="{i = n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3D+n-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i = n-1}"/> and <img alt="{j = n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = n}"/>. </p>
<p>
How big is <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>? We'll see it is no more and no less than <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/>.</p>
<p>
</p><p/><h2> From SF to FO </h2><p/>
<p/><p>
To prove that any language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> has a definition in <img alt="{\mathsf{FO}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}}"/>, we will not only give a sentence <img alt="{\sigma_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csigma_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sigma_L}"/> but also a <em>formula</em> <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/>. We will define this formula to indicate that for a given string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, the portion of the string between indices <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j-1}"/> is in <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. Then for the correct choices of <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/>, <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> gives <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. We define <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> to test middle portions of strings, because it handles lengths better for the induction in the concatenation case. </p>
<blockquote><p><b>Theorem 2</b> <em/></p><em>
<p>
Every language in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> is definable in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>.</p>
</em><p><em>
</em>
</p></blockquote>
<p>
The proof is a nice example where “building up” to prove something more general—involving two extra variables—makes induction go smoothly.</p>
<p>
<em>Proof:</em>  Let <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> be a star-free regular language and <img alt="{L'=\{\langle x, i ,j \rangle:}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%27%3D%5C%7B%5Clangle+x%2C+i+%2Cj+%5Crangle%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L'=\{\langle x, i ,j \rangle:}"/> the portion of the string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> between indices <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> (inclusive) and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> (exclusive) is contained in <img alt="{L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\}}"/>. Let <img alt="{\phi_L(i,j)\in \sf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%5Cin+%5Csf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)\in \sf{FO}[&lt;]}"/> be the formula denoting that for a given string <img alt="{x, x[i,j)\in L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2C+x%5Bi%2Cj%29%5Cin+L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x, x[i,j)\in L}"/>, that is, <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> is the representation of <img alt="{L'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L'}"/> in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>. We will show that such a <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> exists via induction on <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. This is sufficient, as for a given symbol <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> that always represents the length of a string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, <img alt="{\phi_L(0,n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%280%2Cn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(0,n)}"/> is the formula in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> representing the language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. </p>
<p>
First, we must show that <img alt="{\phi_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L}"/> is in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> for <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> one of the basis languages, <img alt="{\emptyset, \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cemptyset%2C+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\emptyset, \epsilon}"/>, and <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>, for some <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> in <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>. We have that:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  \phi_\emptyset(i,j) &amp;=&amp; \texttt{false};\\ \phi_\epsilon(i,j) &amp;=&amp; i=j;\\ \phi_c(i,j) &amp;=&amp; (X_c(i)\land S(i,j)). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%5Cphi_%5Cemptyset%28i%2Cj%29+%26%3D%26+%5Ctexttt%7Bfalse%7D%3B%5C%5C+%5Cphi_%5Cepsilon%28i%2Cj%29+%26%3D%26+i%3Dj%3B%5C%5C+%5Cphi_c%28i%2Cj%29+%26%3D%26+%28X_c%28i%29%5Cland+S%28i%2Cj%29%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  \phi_\emptyset(i,j) &amp;=&amp; \texttt{false};\\ \phi_\epsilon(i,j) &amp;=&amp; i=j;\\ \phi_c(i,j) &amp;=&amp; (X_c(i)\land S(i,j)). \end{array} "/></p>
<p>
Now, we must show that given star-free languages <img alt="{L_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_1}"/> and <img alt="{L_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_2}"/> with FO<img alt="{[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{[&lt;]}"/> translations <img alt="{\psi_1(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_1%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_1(i,j)}"/> and <img alt="{\psi_2(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_2%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_2(i,j)}"/> respectively, we have <img alt="{\phi_{L_1\cup L_2}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7BL_1%5Ccup+L_2%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{L_1\cup L_2}(i,j)}"/>, <img alt="{\phi_{L_1\cdot L_2}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7BL_1%5Ccdot+L_2%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{L_1\cdot L_2}(i,j)}"/>, and <img alt="{\phi_{\sim L_1}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7B%5Csim+L_1%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{\sim L_1}(i,j)}"/> are in <img alt="{\sf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sf{FO}[&lt;]}"/>. Then: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  \phi_{L_1\cup L_2}(i,j)&amp;=&amp;\psi_1(i,j) \lor \psi_2(i,j);\\ \\ \phi_{L_1\cdot L_2}(i,j)&amp;=&amp;\exists k(i\leq k \land k \leq j) (\psi_1(i,k) \land \psi_2(k,j));\\ \\ \phi_{\sim L_1}(i,j)&amp;=&amp;\lnot \psi_{1}(i,j). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%5Cphi_%7BL_1%5Ccup+L_2%7D%28i%2Cj%29%26%3D%26%5Cpsi_1%28i%2Cj%29+%5Clor+%5Cpsi_2%28i%2Cj%29%3B%5C%5C+%5C%5C+%5Cphi_%7BL_1%5Ccdot+L_2%7D%28i%2Cj%29%26%3D%26%5Cexists+k%28i%5Cleq+k+%5Cland+k+%5Cleq+j%29+%28%5Cpsi_1%28i%2Ck%29+%5Cland+%5Cpsi_2%28k%2Cj%29%29%3B%5C%5C+%5C%5C+%5Cphi_%7B%5Csim+L_1%7D%28i%2Cj%29%26%3D%26%5Clnot+%5Cpsi_%7B1%7D%28i%2Cj%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  \phi_{L_1\cup L_2}(i,j)&amp;=&amp;\psi_1(i,j) \lor \psi_2(i,j);\\ \\ \phi_{L_1\cdot L_2}(i,j)&amp;=&amp;\exists k(i\leq k \land k \leq j) (\psi_1(i,k) \land \psi_2(k,j));\\ \\ \phi_{\sim L_1}(i,j)&amp;=&amp;\lnot \psi_{1}(i,j). \end{array} "/></p>
<p>
Since star-free languages can be obtained by applying the union, concatenation, and complementation operations a finite number of times on <img alt="{\emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\emptyset}"/> and singleton subsets of <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>, this completes the proof of <img alt="{\mathsf{SF} \subseteq \mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D+%5Csubseteq+%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF} \subseteq \mathsf{FO}[&lt;]}"/>. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Two Lemmas For Next Time </h2><p/>
<p/><p>
Prefatory to showing (in the next post) that <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> is contained in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/>, we prove properties about substrings on the ends of star-free languages, rather than in the middle as with the trick in the proof of Theorem 2.</p>
<p>
Let <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> be a language over an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> and <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> be a word in <img alt="{\Sigma^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma^n}"/> for some <img alt="{n\in \mathbb{N}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5Cin+%5Cmathbb%7BN%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n\in \mathbb{N}}"/>. Define <img alt="{L/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/w}"/>, the <em>right quotient</em> of <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> by <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/>, by <img alt="{L/w =\{v: vw \in L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw+%3D%5C%7Bv%3A+vw+%5Cin+L%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/w =\{v: vw \in L\}}"/> and <img alt="{L\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash w}"/>, the <em>left quotient</em> of <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> by <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/>, by <img alt="{L\backslash w=\{v:wv \in L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%3D%5C%7Bv%3Awv+%5Cin+L%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash w=\{v:wv \in L\}}"/>.  First we handle right quotients:</p>
<blockquote><p><b>Lemma 3</b> <em> If <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L}"/> is star-free, then <img alt="{L/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L/w}"/> is star-free. </em>
</p></blockquote>
<p/><p>
<em>Proof:</em>  For any word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> over <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> we define a function <img alt="{f_w(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)}"/> by <img alt="{f_w(\alpha)=\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha'}"/> where <img alt="{L(\alpha')=L(\alpha)/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28%5Calpha%27%29%3DL%28%5Calpha%29%2Fw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(\alpha')=L(\alpha)/w}"/>. If <img alt="{w = \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = \epsilon}"/>, then <img alt="{f_w(\alpha)=\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha}"/>, and so the statement of the lemma trivially holds. So let <img alt="{w = vc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+vc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = vc}"/> for some string <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> and character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. Note that <img alt="{L/(vc) = (L/c)/v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2F%28vc%29+%3D+%28L%2Fc%29%2Fv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/(vc) = (L/c)/v}"/>. Thus <img alt="{f_{vc}(\alpha) = f_v(f_c(\alpha))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_%7Bvc%7D%28%5Calpha%29+%3D+f_v%28f_c%28%5Calpha%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_{vc}(\alpha) = f_v(f_c(\alpha))}"/> for all <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. Hence it suffices to define <img alt="{f_c(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_c%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_c(\alpha)}"/> for any single character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> by recursion on <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. We have:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset, \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Cemptyset%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28%5Cepsilon%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28c%29%26%3D%26%5Cepsilon%3B%5C%5C+f_c%28a%29%26%3D%26%5Cemptyset%2C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset, \end{array} "/></p>
<p>
and recursively:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\alpha \cup\beta)&amp;=&amp;f_c(\alpha) \cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} \alpha\cdot f_c(\beta) &amp; \epsilon\not\in L(\beta), \\ \alpha\cdot f_c(\beta) \cup f_c(\alpha) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim\alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Calpha+%5Ccup%5Cbeta%29%26%3D%26f_c%28%5Calpha%29+%5Ccup+f_c%28%5Cbeta%29%3B%5C%5C%5C%5C+f_c%28%5Calpha%5Ccdot%5Cbeta%29%26%3D%26%5Cbegin%7Bcases%7D+%5Calpha%5Ccdot+f_c%28%5Cbeta%29+%26+%5Cepsilon%5Cnot%5Cin+L%28%5Cbeta%29%2C+%5C%5C+%5Calpha%5Ccdot+f_c%28%5Cbeta%29+%5Ccup+f_c%28%5Calpha%29+%26+otherwise%5Ctext%7B%3B%7D+%5Cend%7Bcases%7D%5C%5C%5C%5C+f_c%28%5Csim%5Calpha%29%26%3D%26%5Csim+f_c%28%5Calpha%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\alpha \cup\beta)&amp;=&amp;f_c(\alpha) \cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} \alpha\cdot f_c(\beta) &amp; \epsilon\not\in L(\beta), \\ \alpha\cdot f_c(\beta) \cup f_c(\alpha) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim\alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} "/></p>
<p>
In general, if <img alt="{w = c_1 c_2 \cdots c_{n-1} c_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+c_1+c_2+%5Ccdots+c_%7Bn-1%7D+c_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = c_1 c_2 \cdots c_{n-1} c_n}"/>, then</p>
<p/><p align="center"><img alt="\displaystyle L/w = f_{c_1}(f_{c_2}(\dots f_{c_{n-1}}(f_{c_n}(\alpha))\dots))." class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L%2Fw+%3D+f_%7Bc_1%7D%28f_%7Bc_2%7D%28%5Cdots+f_%7Bc_%7Bn-1%7D%7D%28f_%7Bc_n%7D%28%5Calpha%29%29%5Cdots%29%29.&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle L/w = f_{c_1}(f_{c_2}(\dots f_{c_{n-1}}(f_{c_n}(\alpha))\dots))."/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<blockquote><p><b>Lemma 4</b> <em> If <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L}"/> is star-free, then <img alt="{L\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L\backslash w}"/> is star-free. </em>
</p></blockquote>
<p/><p>
The proof of Lemma 4 is similar to the proof of Lemma 3. The main differences lie in the concatenation subcase for the <img alt="{w=c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%3Dc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w=c}"/> case and the order of quotienting when using this operation repeatedly.</p>
<p>
<em>Proof:</em>  For any word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> over <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> we define a function <img alt="{f_w(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)}"/> by <img alt="{f_w(\alpha)=\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha'}"/> where <img alt="{L(\alpha')=L(\alpha)\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28%5Calpha%27%29%3DL%28%5Calpha%29%5Cbackslash+w%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(\alpha')=L(\alpha)\backslash w}"/>. If <img alt="{w = \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = \epsilon}"/>, then <img alt="{f_w(\alpha)=\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha}"/>, and so the statement of the lemma trivially holds. So let <img alt="{w = vc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+vc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = vc}"/> for some string <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> and character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. Note that <img alt="{L\backslash(vc) = (L\backslash v)\backslash c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash%28vc%29+%3D+%28L%5Cbackslash+v%29%5Cbackslash+c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash(vc) = (L\backslash v)\backslash c}"/>. Thus <img alt="{f_{vc}(\alpha) = f_c(f_v(\alpha))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_%7Bvc%7D%28%5Calpha%29+%3D+f_c%28f_v%28%5Calpha%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_{vc}(\alpha) = f_c(f_v(\alpha))}"/> for all <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. Hence it suffices to define <img alt="{f_c(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_c%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_c(\alpha)}"/> for any single character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> by recursion on <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. We have:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset.\\ \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Cemptyset%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28%5Cepsilon%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28c%29%26%3D%26%5Cepsilon%3B%5C%5C+f_c%28a%29%26%3D%26%5Cemptyset.%5C%5C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset.\\ \end{array} "/></p>
<p>
and recursively:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\alpha\cup\beta)&amp;=&amp;f_c(\alpha)\cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} f_c(\alpha)\cdot\beta &amp; \epsilon\not\in L(\alpha), \\ f_c(\alpha)\cdot\beta \cup f_c\beta) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim \alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Calpha%5Ccup%5Cbeta%29%26%3D%26f_c%28%5Calpha%29%5Ccup+f_c%28%5Cbeta%29%3B%5C%5C%5C%5C+f_c%28%5Calpha%5Ccdot%5Cbeta%29%26%3D%26%5Cbegin%7Bcases%7D+f_c%28%5Calpha%29%5Ccdot%5Cbeta+%26+%5Cepsilon%5Cnot%5Cin+L%28%5Calpha%29%2C+%5C%5C+f_c%28%5Calpha%29%5Ccdot%5Cbeta+%5Ccup+f_c%5Cbeta%29+%26+otherwise%5Ctext%7B%3B%7D+%5Cend%7Bcases%7D%5C%5C%5C%5C+f_c%28%5Csim+%5Calpha%29%26%3D%26%5Csim+f_c%28%5Calpha%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\alpha\cup\beta)&amp;=&amp;f_c(\alpha)\cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} f_c(\alpha)\cdot\beta &amp; \epsilon\not\in L(\alpha), \\ f_c(\alpha)\cdot\beta \cup f_c\beta) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim \alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} "/></p>
<p>
In general, if <img alt="{w = c_1 c_2 \cdots c_{n-1} c_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+c_1+c_2+%5Ccdots+c_%7Bn-1%7D+c_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = c_1 c_2 \cdots c_{n-1} c_n}"/>, then</p>
<p/><p align="center"><img alt="\displaystyle L\backslash w = f_{c_n}(f_{c_{n-1}}(\dots f_{c_{2}}(f_{c_1}(\alpha))\dots))." class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L%5Cbackslash+w+%3D+f_%7Bc_n%7D%28f_%7Bc_%7Bn-1%7D%7D%28%5Cdots+f_%7Bc_%7B2%7D%7D%28f_%7Bc_1%7D%28%5Calpha%29%29%5Cdots%29%29.&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle L\backslash w = f_{c_n}(f_{c_{n-1}}(\dots f_{c_{2}}(f_{c_1}(\alpha))\dots))."/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
There are richer systems such as <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/> and <img alt="{\mathsf{FO}(+,\cdot)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%2C%5Ccdot%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+,\cdot)}"/>. Note that <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/> allows defining the <img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/> relation via <img alt="{i &lt; j \equiv (\exists k) \lnot(k= 0) \land i + k = j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3C+j+%5Cequiv+%28%5Cexists+k%29+%5Clnot%28k%3D+0%29+%5Cland+i+%2B+k+%3D+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i &lt; j \equiv (\exists k) \lnot(k= 0) \land i + k = j}"/>. We can define non-regular languages such as <img alt="{{a^n b^n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7Ba%5En+b%5En%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{a^n b^n}}"/> in <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/>. The class <img alt="{\mathsf{FO}(+,\times)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%2C%5Ctimes%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+,\times)}"/> famously equals uniform <img alt="{\mathsf{AC^0}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BAC%5E0%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{AC^0}}"/>, see chapter 5 of Neil Immerman's <a href="https://link.springer.com/book/10.1007/978-1-4612-0539-5">book</a> <em>Descriptive Complexity</em>. Thus we hope our new style for proving <img alt="{\mathsf{FO}[&lt;] \subseteq \mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D+%5Csubseteq+%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;] \subseteq \mathsf{SF}}"/> (to come in the next part) will build a nice foundation for visualizing these higher results.</p>
<p/></font></font></div>
    </content>
    <updated>2020-03-21T20:54:45Z</updated>
    <published>2020-03-21T20:54:45Z</published>
    <category term="All Posts"/>
    <category term="History"/>
    <category term="Oldies"/>
    <category term="Proofs"/>
    <category term="Teaching"/>
    <category term="trick"/>
    <category term="Daniel Winton"/>
    <category term="Robert McNaughton"/>
    <category term="Seymour Papert"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-03-25T20:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/037</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/037" rel="alternate" type="text/html"/>
    <title>TR20-037 |  Failure of Feasible Disjunction Property for $k$-DNF Resolution and NP-hardness of Automating It | 

	Michal Garlik</title>
    <summary>We show that for every integer $k \geq 2$, the Res($k$) propositional proof system does not have the weak feasible disjunction property. Next, we generalize a recent result of Atserias and Müller [FOCS, 2019] to Res($k$). We show that if NP is not included in P (resp. QP, SUBEXP) then for every integer $k \geq 1$, Res($k$) is not automatable in polynomial (resp. quasi-polynomial, subexponential) time.</summary>
    <updated>2020-03-21T11:53:33Z</updated>
    <published>2020-03-21T11:53:33Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-25T20:20:25Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4331</id>
    <link href="https://lucatrevisan.wordpress.com/2020/03/20/what-is-next/" rel="alternate" type="text/html"/>
    <title>What is next?</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Greetings from the future! The progression of covid-19 in Italy is running about eight days ahead of France and Spain and about 16 days ahead of the United States. Here in Lombardy, which is about ten days ahead of NYC, … <a href="https://lucatrevisan.wordpress.com/2020/03/20/what-is-next/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Greetings from the future! The progression of covid-19 in Italy is running about eight days ahead of France and Spain and about 16 days ahead of the United States. Here in Lombardy, which is about ten days ahead of NYC, we have been “sheltering at home” for 13 days already.</p>
<p>How is social distancing working out for me? I thought that I was well prepared for it, but it is still not easy. I have started to talk to the furniture, and apparently this is perfectly normal, at least as long as the furniture does not talk back. </p>
<p>As I have been telling my dining table, it has been very dismaying to read news from the US, where there seemed to be a very dangerous complacency. I am relieved to see that this is changing, especially at the state level, which makes me much more hopeful.</p>
<p>I have also found media coverage to be disappointing. Apparently, many highly educated people, including people whose job involves understanding policy issues, have no idea how numbers work (<a href="https://www.youtube.com/watch?v=ordODDzVso8">source</a>). This is a problem because a lot of issues concerning this epidemic have to do with numbers, which can be misleading if they are not reported in context.</p>
<p>For example, before the time when Trump decided that he had retroactively been concerned about a pandemic since January, conservative media emphasized the estimate of a 2% mortality rate, in a way that made it sound, well, 98% of people survive, and 98% is approximately 100%, so what is the big deal. For context, the Space Shuttle only exploded 1.5% of the times, and this was deemed <i>too dangerous for astronauts</i>. This is the kind of intuitive reference that I would like to see more of.</p>
<p>Even now, there is a valid debate on whether measures that will cost the economy trillions of dollars are justified. After all, it would be absurd to spend trillions of dollars to save, say, 10,000 lives, it would be questionable to do so to save 100,000 lives, and it would be undoubtedly right to do so to save millions of lives and a collapse of the health care system (especially considering that a collapse of the health care system might create its own financial panic that would also cost trillions of dollars).</p>
<p>So which one is it? Would doing nothing cost 10,000 American lives? A million? How long will people have to “shelter at home”? And what is next? I can recommend two well-researched articles: <a href="https://www.nytimes.com/2020/03/20/opinion/coronavirus-outcomes.html">this</a> on plausible scenarios and <a href="https://www.nytimes.com/2020/03/17/opinion/coronavirus-social-distancing-effect.html">this</a> on what’s next.</p>
<p>Kristof’s article cites an <a href="https://www.statnews.com/2020/03/17/a-fiasco-in-the-making-as-the-coronavirus-pandemic-takes-hold-we-are-making-decisions-without-reliable-data/">essay</a> by Stanford professor John Ioannidis who notes that it is within the realm of possibilities, given the available data, that the true mortality rate could be as low as 0.05%, that is, wait for it, lower than the mortality rate of the flu. Accordingly, in a plausible scenario, “If we had not known about a new virus out there, and had not checked individuals with PCR tests, the number of total deaths due to “influenza-like illness” would not seem unusual this year.”</p>
<p>Ioannidis’ essay was written without reference to data from Italy, which was probably not available in peer-reviewed form at the time of writing.</p>
<p>I would not want professor Ioannidis to tell me how to design graph algorithms, and I don’t mean to argue for the plausibility of the above scenario, but let me complement it with some data from Italy.</p>
<p>Lombardy is Italy’s richest and most developed region, and the second richest (in absolute and PPP GDP) administrative region in Europe after the Ile de France (<a href="https://en.wikipedia.org/wiki/List_of_European_regions_by_GDP">source</a>). It has a rather good health care system. In 2018, on average, 273 people died per day in Lombardy of all causes (<a href="https://ugeo.urbistat.com/AdminStat/it/it/demografia/popolazione/lombardia/3/2">source</a>). Yesterday, 381 people died in Lombardy with coronavirus (<a href="https://github.com/pcm-dpc/COVID-19/tree/master/schede-riepilogative/regioni">source</a>). This is spread out over a region with more than 10 million residents.</p>
<p>Some areas are harder-hit hotspots. Three days ago, a Bergamo newspaper <a href="https://www.bergamonews.it/2020/03/17/coronavirus-a-bergamo-in-una-settimana-330-morti-14-volte-in-piu-rispetto-a-un-anno-fa/360586/">reported</a> that 330 people had died in the previous week of all causes in the city. In the same week of March in 2019, 23 people had died. That’s a 14x increase of mortality of all causes. <b>Edited to add (3/22/2020):</b> <i>the mayor of Bergamo <a href="https://www.reuters.com/article/us-health-coronavirus-italy-homes-insigh/uncounted-among-coronavirus-victims-deaths-sweep-through-italys-nursing-homes-idUSKBN2152V0">told Reuters</a> that 164 people died in Bergamo of all causes in the first two weeks of March 2020, versus 56 in the first two weeks of March 2019, a 3x increase instead of the 14x increase reported by Bergamo News.</i></p>
<p>Bergamo’s hospital had 16 beds in its intensive care unit, in line with international standards (it is typical to have of the order of an ICU bed per 5000-10,000 people, and Bergamo has a population of 120,000). Right now there are 80 people in intensive care in Bergamo, a 5x increase in capacity that was possible by bringing in a lot of ventilators and moving other sick people to other hospitals. Nonetheless, there have been reports of shortages of ICU beds, and of people needing to intubated that could not be. There are also reports of people dying of pneumonia at home, without being tested.</p>
<p>Because of this surge in deaths, Bergamo’s funeral homes have not been able to keep up. It’s not that they have not been able to keep up with arranging funerals, because funerals are banned. They just do not have the capacity to perform the burials.</p>
<p>So coffins have been accumulating. A couple of days ago, a motorcade of army vehicles came to Bergamo to pick up 70 coffins and take them to other cities.</p>
<p/>
<p>It should be noted that this is happening after 20 days of “social distancing” measures and after 13 days of “sheltering at home” in Lombardy.</p>
<p>My point being, if we had not known that a news virus was going around, the number of excess deaths in Bergamo would have not been hidden by the random noise in the number of deaths due to influenza-like illness.</p></div>
    </content>
    <updated>2020-03-20T19:37:09Z</updated>
    <published>2020-03-20T19:37:09Z</published>
    <category term="Italy"/>
    <category term="lies damn lies and ..."/>
    <category term="Bergamo"/>
    <category term="covid-19"/>
    <category term="things that are terrible"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-03-25T20:20:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blog.simons.berkeley.edu/?p=113</id>
    <link href="https://blog.simons.berkeley.edu/2020/03/workshop-lattices-new-cryptographic-capabilities/" rel="alternate" type="text/html"/>
    <title>Workshop “Lattices: New Cryptographic Capabilities”</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">On the behalf of the organizers, I am excited to announce that the next Simons workshop Lattices: New Cryptographic Capabilities will take place next week Mar 23-27, 2020 over Zoom! schedule 8.20 am-noon PDT (4.20 – 8 pm, CET) zoom … <a href="https://blog.simons.berkeley.edu/2020/03/workshop-lattices-new-cryptographic-capabilities/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>On the behalf of the organizers, I am excited to announce that the next Simons workshop <a href="https://simons.berkeley.edu/workshops/lattices-2020-2">Lattices: New Cryptographic Capabilities</a> will take place next week <strong>Mar 23-27, 2020</strong> over Zoom!</p>
<ul>
<li><a href="https://simons.berkeley.edu/workshops/schedule/10566">schedule</a> 8.20 am-noon PDT (4.20 – 8 pm, CET)</li>
<li>zoom <a href="https://berkeley.zoom.us/j/912850168">berkeley.zoom.us/j/912850168</a></li>
</ul>
<p>The workshop will cover advanced lattice-based cryptographic constructions, while also highlighting some of the recurring themes and techniques, reiterated through a game of Bingo! The rest of this post provides a sneak preview along with the Bingo puzzle.</p>
<p><!--
Here is a quick overview of
the workshop

* Day 1: fully homomorphic encryption, attribute-based encryption, homomorphic signatures and non-interactive zero knowledge, all from a simple equation!

* Day 2: obfuscation, obfuscation, obfuscation

* Day 3: -->Looking forward to seeing everyone at the workshop!</p>
<p>Hoeteck, together with Shweta, Zvika and Vinod</p>
<hr/>
<h2 id="zoom-guidelinestips">Zoom Guidelines/Tips</h2>
<ul>
<li>To ask a question, use the “raise hand” feature.</li>
<li>If the speaker’s slide is not displaying in its entirety, try “side-by-side mode” under “view options”.</li>
<li>Please log in to Zoom with your full name.</li>
</ul>
<h2 id="a-sneak-preview">A Sneak Preview</h2>
<p>Let <span class="math inline"><strong>A</strong><sub>1</sub>, <strong>A</strong><sub>2</sub></span> be square matrices and <span class="math inline"><strong>t</strong></span> a row vector such that</p>
<p><span class="math display"><strong>t</strong><strong>A</strong><sub>1</sub> = <em>x</em><sub>1</sub><strong>t</strong>, <strong>t</strong><strong>A</strong><sub>2</sub> = <em>x</em><sub>2</sub><strong>t</strong></span><br/>
Using high-school algebra lingo, we would refer to <span class="math inline"><strong>t</strong></span> as the eigenvector of <span class="math inline"><strong>A</strong><sub>1</sub>, <strong>A</strong><sub>2</sub></span>. It is easy to see that</p>
<p><span class="math display"><strong>t</strong> ⋅ (<strong>A</strong><sub>1</sub> + <strong>A</strong><sub>2</sub>) = (<em>x</em><sub>1</sub> + <em>x</em><sub>2</sub>)<strong>t</strong>, <em>t</em> ⋅ <strong>A</strong><sub>1</sub><strong>A</strong><sub>2</sub> = <em>x</em><sub>1</sub><em>x</em><sub>2</sub><strong>t</strong></span><br/>
This extends readily to any polynomial <span class="math inline"><em>p</em>(<em>x</em><sub>1</sub>, …, <em>x</em><sub><em>n</em></sub>)</span>, namely: if <span class="math inline"><strong>t</strong><strong>A</strong><sub><em>i</em></sub> = <em>x</em><sub><em>i</em></sub><strong>t</strong></span>, then</p>
<p><span class="math display"><strong>t</strong> ⋅ <em>f</em>(<strong>A</strong><sub>1</sub>, …, <strong>A</strong><sub><em>n</em></sub>) = <em>f</em>(<em>x</em><sub>1</sub>, …, <em>x</em><sub><em>n</em></sub>)<strong>t</strong></span><br/>
As in turns out, much of advanced lattice-based crypto boils down to a generalization of this statement! The generalization is along two orthogonal dimensions:</p>
<ol type="i">
<li>arbitrary matrices <span class="math inline"><strong>A</strong><sub>1</sub>, …, <strong>A</strong><sub><em>n</em></sub></span> that may not share the same eigenvector <span class="math inline"><strong>t</strong></span>, and</li>
<li>a relaxation to “approximate” equality, namely <span class="math inline"><strong>t</strong><strong>A</strong><sub><em>i</em></sub> ≈ <em>x</em><sub><em>i</em></sub><strong>t</strong></span>.</li>
</ol>
<p>The generalization underlies fully homomorphic encryption, homomorphic signatures, attribute-based encryption schemes and many more!</p>
<h2 id="bingo">Bingo!</h2>
<p>Here’s the 4×4 bingo puzzle:</p>
<table>
<tbody>
<tr class="odd">
<td>GGH15</td>
<td>Bonsai</td>
<td><span class="math inline"><strong>A</strong><strong>R</strong> <strong>+</strong> <strong>G</strong></span></td>
<td>noise growth</td>
</tr>
<tr class="even">
<td><span class="math inline"><strong>G</strong><sup> − 1</sup></span></td>
<td>LWE</td>
<td>Vinod</td>
<td>LHL</td>
</tr>
<tr class="odd">
<td>Gaussian</td>
<td><span class="math inline"><strong>A</strong><sub><em>f</em></sub></span></td>
<td>FHE Dec <span class="math inline">≈</span> linear</td>
<td>noise flooding</td>
</tr>
<tr class="even">
<td>homomorphic</td>
<td>trapdoor</td>
<td>smoothing parameter</td>
<td><span class="math inline"><strong>H</strong><sub><em>f</em>, <em>x</em></sub></span></td>
</tr>
</tbody>
</table></div>
    </content>
    <updated>2020-03-20T15:07:05Z</updated>
    <published>2020-03-20T15:07:05Z</published>
    <category term="General"/>
    <author>
      <name>Hoeteck Wee</name>
    </author>
    <source>
      <id>https://blog.simons.berkeley.edu</id>
      <link href="https://blog.simons.berkeley.edu/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://blog.simons.berkeley.edu" rel="alternate" type="text/html"/>
      <subtitle>What's New at the Simons Institute for the Theory of Computing.</subtitle>
      <title>Calvin Café: The Simons Institute Blog</title>
      <updated>2020-03-25T00:34:06Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7654</id>
    <link href="https://windowsontheory.org/2020/03/19/focs-deadline-pushed-back-6-days/" rel="alternate" type="text/html"/>
    <title>FOCS deadline pushed back 6 days</title>
    <summary>From Sandy Irani, FOCS 2020 PC chair: In light of the very unusual developments in the world due to the spread of Covid-19 and the disruption it is causing to many people in our field, especially those with young children at home, the FOCS PC has decided to push back the final deadline for papers […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>From Sandy Irani, FOCS 2020 PC chair:</p>



<p>In light of the very unusual developments in the world due to the spread of Covid-19 and the disruption it is causing to many people in our field, especially those with young children at home, the FOCS PC has decided to push back the final deadline for papers by six days. We would have liked to do more, but we still are trying to stick to our timeline for notification since that date is coordinated with other deadlines in the theory community. In addition, some members of the committee are also affected by this crisis and there is concern that we may not be able to do our job as a committee in a shorter time frame. Pre-registration (including titles and abstracts) is still required by the original deadline. Here are the new dates:</p>



<p><strong>Pre-registration (including titles and abstracts):</strong> Thursday <strong>April 9</strong>, 11:59 PM (EDT)</p>



<p><strong>Final Paper Submission:</strong> Wednesday <strong>April 15</strong>, 11:59 PM (EDT)</p>



<p>Conference url: <a href="https://focs2020.cs.duke.edu/" rel="noreferrer noopener" target="_blank">https://focs2020.cs.duke.edu/</a></p>



<p>We hope you all stay healthy!</p>



<p>–Sandy Irani, for the FOCS 2020 Committee</p></div>
    </content>
    <updated>2020-03-19T16:27:50Z</updated>
    <published>2020-03-19T16:27:50Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-03-25T20:20:54Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-6639109407429165166</id>
    <link href="https://blog.computationalcomplexity.org/feeds/6639109407429165166/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-to-do-while-stuck-at-home-part-i.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/6639109407429165166" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/6639109407429165166" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-to-do-while-stuck-at-home-part-i.html" rel="alternate" type="text/html"/>
    <title>What to do while stuck at home Part I</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">First of all both the <a href="https://amturing.acm.org/">Turing award</a> and <a href="https://www.abelprize.no/seksjon/vis.html?tid=76020">Abel Prize</a> announced yesterday.<br/>
<br/>
As we start moving from the panic phase of the coronavirus to the boring phase, what kinds of things should you do or not do while stuck at home for the next two weeks to eighteen months.<br/>
<br/>
First of all still do your job. Teach your online classes. Try to do some research. Meet with your colleagues/students/advisor virtually (best with Zoom or something similar). Submit to conferences. What else? Use the situation for your advantage.<br/>
<br/>
<b>Attend virtual conferences: </b>Really attend. Pretend that you flew there and devote the entire day to going to virtual talks or chatting with other attendees in virtual hallways. I <a href="https://blog.computationalcomplexity.org/2020/03/the-importance-of-networking.html">said it wouldn't happen this way</a> last week so prove me wrong.<br/>
<br/>
<b>Create a Virtual Workshop: </b>Because you can. Invite people to give online talks. Open it up for all to listen. Find ways to discuss together.<br/>
<br/>
<b>Connect: </b>Make a virtual get-together with an old colleague or someone you've always wanted to meet. Researchers around the world will be holed up and happy to get some interactions.<br/>
<br/>
<b>Learn Something New: </b>Read a textbook. Take an online course in CS or something completely different. There are plenty.<br/>
<br/>
<b>Help Others Learn: </b>Start that book you've always wanted to write. Or just write a short survey article giving your view of a slice of the theory world. Create some videos or a podcast to explain stuff.<br/>
<br/>
<b>Pick up a hobby: </b>Something outside computer science just to keep your sanity.<br/>
<b><br/></b>
<b>Watch some fun computer-related movies: </b>Her, Sneakers, The Computer wore Tennis Shoes, 2001, The Imitation Game, Hidden Figures, Colossus: The Forbin Project, Ex Machina. Add your own favorites in the comments.<br/>
<br/>
And on the other hand don't<br/>
<br/>
<b>Become an epidemiologist: </b>As a computer scientist you are an expert in networks, graph theory and exponential growth so you can create models that show we are grossly under preparing and/or overreacting to the virus and want to tell the world how you are right and the so-called "experts" are wrong. Please don't.<br/>
<br/>
<b>Prove P ≠ NP</b>: Trying to settle P v NP and failing is instructive. Trying to settle P v NP and thinking you succeeded is delusional.<br/>
<br/>
<b>Freak Out: </b>We will get past this virus and the world will recover.<br/>
<br/>
Bill will follow up with his own ideas in part II next week.</div>
    </content>
    <updated>2020-03-19T13:45:00Z</updated>
    <published>2020-03-19T13:45:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-03-25T18:36:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://dstheory.wordpress.com/?p=39</id>
    <link href="https://dstheory.wordpress.com/2020/03/19/friday-march-27-sujay-sanghavi-from-ut-austin/" rel="alternate" type="text/html"/>
    <title>Friday, March 27 — Sujay Sanghavi from UT Austin</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The second Foundations of Data Science virtual talk will take place next Friday, March 27th at 11:00 AM Pacific Time (2:00 pm Eastern Time, 20:00 Central European Time, 19:00 UTC).  Sujay Sanghavi from University of Texas at Austin will speak about “Towards Model Agnostic Robustness”. Abstract: It is now common practice to try and solve machine<a class="more-link" href="https://dstheory.wordpress.com/2020/03/19/friday-march-27-sujay-sanghavi-from-ut-austin/">Continue reading <span class="screen-reader-text">"Friday, March 27 — Sujay Sanghavi from UT Austin"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The second Foundations of Data Science virtual talk will take place next Friday, March 27th at 11:00 AM Pacific Time (2:00 pm Eastern Time, 20:00 Central European Time, 19:00 UTC).  <strong>Sujay Sanghavi</strong> from University of Texas at Austin will speak about “<em>Towards Model Agnostic Robustness</em>”.</p>



<p><strong>Abstract</strong>: It is now common practice to try and solve machine learning problems by starting with a complex existing model or architecture, and fine-tuning/adapting it to the task at hand. However, outliers, errors or even just sloppiness in training data often lead to drastic drops in performance. </p>



<p>We investigate a simple generic approach to correct for this, motivated by a classic statistical idea: trimmed loss. This advocates jointly (a) selecting which training samples to ignore, and (b) fitting a model on the remaining samples. As such this is computationally infeasible even for linear regression. We propose and study the natural iterative variant that alternates between these two steps (a) and (b) – each of which individually can be easily accomplished in pretty much any statistical setting. We also study the batch-SGD variant of this idea. We demonstrate both theoretically (for generalized linear models) and empirically (for vision and NLP neural network models) that this effectively recovers accuracy in the presence of bad training data.</p>



<p>This work is joint with Yanyao Shen and Vatsal Shah and appears in NeurIPS 2019, ICML 2019 and AISTATS 2020.</p>



<p><a href="https://sites.google.com/view/dstheory">Link to join the virtual talk.</a></p>



<p>The series is supported by the <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=1934846&amp;HistoricalAwards=false">NSF HDR TRIPODS Grant 1934846</a>. </p></div>
    </content>
    <updated>2020-03-19T02:29:19Z</updated>
    <published>2020-03-19T02:29:19Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>dstheory</name>
    </author>
    <source>
      <id>https://dstheory.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://dstheory.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://dstheory.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://dstheory.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://dstheory.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Foundation of Data Science – Virtual Talk Series</title>
      <updated>2020-03-25T20:21:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://theorydish.blog/?p=1570</id>
    <link href="https://theorydish.blog/2020/03/18/private-and-secure-distributed-matrix-multiplication/" rel="alternate" type="text/html"/>
    <title>Private and Secure Distributed Matrix Multiplication</title>
    <summary>Machine learning on big data sets takes a significant amount of computational power, so it is often necessary to offload some of the work to external distributed systems, such as an Amazon EC2 cluster. It is useful to be able to utilize external resources for computation tasks while keeping the actual data private and secure. In particular, matrix multiplication is an essential step in many machine learning processes, but the owner of the matrices may have reasons to keep the actual values protected. In this post, we’ll discuss four works about secure distributed computation. First, we’ll talk about a method of using MDS (maximum distance separable) error correcting codes to add security and privacy to general data storage (“Cross Subspace Alignment and the Asymptotic Capacity of X-Secure T-Private Information Retrieval” by Jia, Sun, Jafar). Then we’ll discuss method of adapting a coding strategy for straggler mitigation (“Polynomial codes: an optimal design for high-dimensional coded matrix multiplication” by Yu, Qian, Maddah-Ali, Avestimehr) in matrix multiplication to instead add security or privacy (“On the capacity of secure distributed matrix multiplication” by Chang, Tandon and “Private Coded Matrix Multiplication” by Kim, Yang, Lee) Throughout this post we will use variations on the following communication model: The [...]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Machine learning on big data sets takes a significant amount of computational power, so it  is often necessary to offload some of the work to external distributed systems, such as an Amazon EC2 cluster. It is useful to be able to utilize external resources for computation tasks while keeping the actual data <em>private</em> and<em> secure</em>. In particular, matrix multiplication is an essential step in many machine learning processes, but the owner of the matrices may have reasons to keep the actual values protected.</p>



<p>In this post, we’ll discuss four works about secure distributed computation. First, we’ll talk about a method of using MDS (maximum distance separable) error correcting codes to add security and privacy to general data storage (“<a href="https://arxiv.org/pdf/1808.07457.pdf">Cross Subspace Alignment and the Asymptotic Capacity of X-Secure T-Private Information Retrieval”</a> by Jia, Sun, Jafar). </p>



<p>Then we’ll discuss method of adapting a coding strategy for straggler mitigation (<a href="http://papers.nips.cc/paper/7027-polynomial-codes-an-optimal-design-for-high-dimensional-coded-matrix-multiplication.pdf">“Polynomial codes: an optimal design for high-dimensional coded matrix multiplication”</a> by Yu, Qian, Maddah-Ali, Avestimehr) in matrix multiplication to instead add security or privacy (<a href="https://uweb.engr.arizona.edu/~wchang/Globecom-SecureMM-2018.pdf">“On the capacity of secure distributed matrix multiplication”</a> by Chang, Tandon and <a href="https://ieeexplore-ieee-org.stanford.idm.oclc.org/abstract/document/8832193">“Private Coded Matrix Multiplication”</a> by Kim, Yang, Lee)</p>



<p>Throughout this post we will use variations on the following communication model:</p>



<figure class="wp-block-image size-large is-resized"><img alt="" class="wp-image-1572" height="192" src="https://theorydish.files.wordpress.com/2020/03/blog_fig1.png?w=1024" width="404"/></figure>



<p>The data in the grey box is only given to the master, so workers only have access to what they receive (via green arrows). Later on we will also suppose the workers have a shared library not available to the master. The workers do not communicate with each other as part of the computation, but we want to prevent them from figuring out anything about the data if they do talk to each other.</p>



<p> This model is related to <em>private computation</em> but not exactly the same. We assume the servers are “honest but curious”, meaning they won’t introduce malicious computations. We also only require the master to receive the final result, and don’t need to protect any data from the master. This is close to the BGW scheme ([Ben-Or, Goldwasser, Wigderson ’88]), but we do not allow workers to communicate with each other as part of the computation of the result.</p>



<p> We consider <em>unconditional</em> or <em>information-theoretic</em> security, meaning the data is protected even if the workers have unbounded computational power. Furthermore, we will consider having <em>perfect  secrecy</em>, in which the mutual information between the information revealed to the workers and the actual messages is zero.</p>



<h2>X-Secure T-Private Information Retrieval</h2>



<p> Before we get into matrix-matrix multiplication, consider the problem of storing information on the workers to be retrieved by the master, such that it is “protected.” What do we mean by that? [Jia, Sun, and Jafar ’19] define X-secure T-private information retrieval as follows: </p>



<blockquote class="wp-block-quote"><p>Let <img alt="W_1,...,W_{K}" class="latex" src="https://s0.wp.com/latex.php?latex=W_1%2C...%2CW_%7BK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_1,...,W_{K}"/> be a data set of messages, such that each <img alt="W_i" class="latex" src="https://s0.wp.com/latex.php?latex=W_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_i"/> consists of <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="L"/> random bits. A storage scheme of <img alt="W_{1},...,W_{K}" class="latex" src="https://s0.wp.com/latex.php?latex=W_%7B1%7D%2C...%2CW_%7BK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_{1},...,W_{K}"/> on <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> nodes is </p><p>1. <em>X-secure</em> if any set of up to <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X"/> servers cannot determine anything about any <img alt="W_i" class="latex" src="https://s0.wp.com/latex.php?latex=W_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_i"/> and</p><p>2. <em>T-private </em> if given a query from the user to retrieve some data element <img alt="W_{\theta}" class="latex" src="https://s0.wp.com/latex.php?latex=W_%7B%5Ctheta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_{\theta}"/>, any set of up to <img alt="T" class="latex" src="https://s0.wp.com/latex.php?latex=T&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="T"/> users cannot determine the value of <img alt="\theta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctheta&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\theta"/>.</p><cite>[Jia, Sun, and Jafar ’19]</cite></blockquote>



<p>Letting <img alt="Q_{1}^{[\theta]},...,Q_{N}^{[\theta]}" class="latex" src="https://s0.wp.com/latex.php?latex=Q_%7B1%7D%5E%7B%5B%5Ctheta%5D%7D%2C...%2CQ_%7BN%7D%5E%7B%5B%5Ctheta%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="Q_{1}^{[\theta]},...,Q_{N}^{[\theta]}"/> be the set of queries sent to each node and <img alt="S_1,...,S_N" class="latex" src="https://s0.wp.com/latex.php?latex=S_1%2C...%2CS_N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="S_1,...,S_N"/> be the information stored on each node  (all vectors of length L), we depict this as:</p>



<figure class="wp-block-image size-large is-resized"><img alt="" class="wp-image-1581" height="223" src="https://theorydish.files.wordpress.com/2020/03/blog_fig2.png?w=1024" width="452"/></figure>



<p>The information theoretic requirements of this system to be correct can be summarized as follows (using notation <img alt="S_{[1:N]}" class="latex" src="https://s0.wp.com/latex.php?latex=S_%7B%5B1%3AN%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="S_{[1:N]}"/> for set <img alt="S_1,...,S_N" class="latex" src="https://s0.wp.com/latex.php?latex=S_1%2C...%2CS_N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="S_1,...,S_N"/>):</p>



<figure class="wp-block-table"><table><tbody><tr><td><strong>Property</strong></td><td><strong>Information Theoretic Requirement</strong></td></tr><tr><td>Data messages are size <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="L"/> bits</td><td><img alt="H(W_1)=H(W_2)=....=H(W_K) = L" class="latex" src="https://s0.wp.com/latex.php?latex=H%28W_1%29%3DH%28W_2%29%3D....%3DH%28W_K%29+%3D+L&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="H(W_1)=H(W_2)=....=H(W_K) = L"/></td></tr><tr><td>Data messages are independent</td><td><img alt="H(W_1,...,W_K) = KL" class="latex" src="https://s0.wp.com/latex.php?latex=H%28W_1%2C...%2CW_K%29+%3D+KL&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="H(W_1,...,W_K) = KL"/></td></tr><tr><td>Data can be determined from the stored information</td><td><img alt="H(W_1,....,W_K)|S_{[1:N]}) = 0" class="latex" src="https://s0.wp.com/latex.php?latex=H%28W_1%2C....%2CW_K%29%7CS_%7B%5B1%3AN%5D%7D%29+%3D+0&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="H(W_1,....,W_K)|S_{[1:N]}) = 0"/></td></tr><tr><td>User has no prior knowledge of server data</td><td><img alt="I(S_{[1:N]};Q^{[\theta]}_{[1:N]},\theta) = 0" class="latex" src="https://s0.wp.com/latex.php?latex=I%28S_%7B%5B1%3AN%5D%7D%3BQ%5E%7B%5B%5Ctheta%5D%7D_%7B%5B1%3AN%5D%7D%2C%5Ctheta%29+%3D+0&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="I(S_{[1:N]};Q^{[\theta]}_{[1:N]},\theta) = 0"/></td></tr><tr><td>X-Security</td><td><img alt="I(S_{\mathcal{X}};W_1,...,W_K) = 0" class="latex" src="https://s0.wp.com/latex.php?latex=I%28S_%7B%5Cmathcal%7BX%7D%7D%3BW_1%2C...%2CW_K%29+%3D+0&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="I(S_{\mathcal{X}};W_1,...,W_K) = 0"/>, <img alt="\forall \mathcal{X}\subset [1:N],|\mathcal{X}|=X" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cforall+%5Cmathcal%7BX%7D%5Csubset+%5B1%3AN%5D%2C%7C%5Cmathcal%7BX%7D%7C%3DX&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\forall \mathcal{X}\subset [1:N],|\mathcal{X}|=X"/></td></tr><tr><td> T-Privacy</td><td><img alt="I(Q_{\mathcal{T}}^{[\theta]},S_{\mathcal{T}}; \theta) = 0," class="latex" src="https://s0.wp.com/latex.php?latex=I%28Q_%7B%5Cmathcal%7BT%7D%7D%5E%7B%5B%5Ctheta%5D%7D%2CS_%7B%5Cmathcal%7BT%7D%7D%3B+%5Ctheta%29+%3D+0%2C&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="I(Q_{\mathcal{T}}^{[\theta]},S_{\mathcal{T}}; \theta) = 0,"/>  <img alt="\forall \mathcal{T} \subset [1:N], |\mathcal{T}|=T" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cforall+%5Cmathcal%7BT%7D+%5Csubset+%5B1%3AN%5D%2C+%7C%5Cmathcal%7BT%7D%7C%3DT&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\forall \mathcal{T} \subset [1:N], |\mathcal{T}|=T"/></td></tr><tr><td>Nodes answer only based on their data and received query </td><td><img alt="H(A_n^{[\theta]}| Q_n^{[\theta]},S_n) =0" class="latex" src="https://s0.wp.com/latex.php?latex=H%28A_n%5E%7B%5B%5Ctheta%5D%7D%7C+Q_n%5E%7B%5B%5Ctheta%5D%7D%2CS_n%29+%3D0&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="H(A_n^{[\theta]}| Q_n^{[\theta]},S_n) =0"/></td></tr><tr><td>User can decode desired message from answers</td><td><img alt="H(W_{\theta} | A_{[1:N]}^{[\theta]},Q_{[1:N]}^{[\theta]} ,\theta) = 0" class="latex" src="https://s0.wp.com/latex.php?latex=H%28W_%7B%5Ctheta%7D+%7C+A_%7B%5B1%3AN%5D%7D%5E%7B%5B%5Ctheta%5D%7D%2CQ_%7B%5B1%3AN%5D%7D%5E%7B%5B%5Ctheta%5D%7D+%2C%5Ctheta%29+%3D+0&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="H(W_{\theta} | A_{[1:N]}^{[\theta]},Q_{[1:N]}^{[\theta]} ,\theta) = 0"/></td></tr></tbody></table></figure>



<p>Given these constraints, Jia et al. give bounds on the capacity of the system. Capacity is the maximum rate achievable, where rate is defined as bits requested by the worker (<img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="L"/>, the length of a single message) divided by the number of bits downloaded by the worker. The bounds are in terms of the capacity of T-Private Information Retrieval, (which is the same as the above definition, with only requirement 2).</p>



<blockquote class="wp-block-quote"><p>If <img alt="N \leq X+T" class="latex" src="https://s0.wp.com/latex.php?latex=N+%5Cleq+X%2BT&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N \leq X+T"/> then for arbitrary <img alt="K" class="latex" src="https://s0.wp.com/latex.php?latex=K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="K"/>, <img alt="C_{XSTPIR}(N,K,X,T) = \frac{N-X}{N}C_{TPIR}(N-X,K,T) = \frac{N-X}{NK}" class="latex" src="https://s0.wp.com/latex.php?latex=C_%7BXSTPIR%7D%28N%2CK%2CX%2CT%29+%3D+%5Cfrac%7BN-X%7D%7BN%7DC_%7BTPIR%7D%28N-X%2CK%2CT%29+%3D+%5Cfrac%7BN-X%7D%7BNK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="C_{XSTPIR}(N,K,X,T) = \frac{N-X}{N}C_{TPIR}(N-X,K,T) = \frac{N-X}{NK}"/>.</p><p><img alt="\displaystyle C_{XSTPIR}(N,K,X,T) \leq \left(\frac{N-X}{N}\right) C_{TPIR}(N-X,K,T)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+C_%7BXSTPIR%7D%28N%2CK%2CX%2CT%29+%5Cleq+%5Cleft%28%5Cfrac%7BN-X%7D%7BN%7D%5Cright%29+C_%7BTPIR%7D%28N-X%2CK%2CT%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle C_{XSTPIR}(N,K,X,T) \leq \left(\frac{N-X}{N}\right) C_{TPIR}(N-X,K,T)"/></p><p> When <img alt="N\leq X+T" class="latex" src="https://s0.wp.com/latex.php?latex=N%5Cleq+X%2BT&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N\leq X+T"/>: <img alt="\displaystyle C_{XSTPIR}(N,K,X,T) = \left(\frac{N-X}{N}\right) C_{TPIR}(N-X,K,T) = \frac{N-X}{NK}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+C_%7BXSTPIR%7D%28N%2CK%2CX%2CT%29+%3D+%5Cleft%28%5Cfrac%7BN-X%7D%7BN%7D%5Cright%29+C_%7BTPIR%7D%28N-X%2CK%2CT%29+%3D+%5Cfrac%7BN-X%7D%7BNK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle C_{XSTPIR}(N,K,X,T) = \left(\frac{N-X}{N}\right) C_{TPIR}(N-X,K,T) = \frac{N-X}{NK}"/> </p><p> <img alt="\displaystyle\lim_{K\to \infty} C_{XSTPIR}(N,K,X,T) = \lim_{K\to \infty} \left(\frac{N-K}{N}\right) C_{TPIR}(N-X,K,T) =\begin{cases}&#xA0; &#xA0;1-(\frac{X+T}{N}) &amp; N&gt;X+T  \\&#xA0;  0 &amp; N\leq X+T \end{cases}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle%5Clim_%7BK%5Cto+%5Cinfty%7D+C_%7BXSTPIR%7D%28N%2CK%2CX%2CT%29+%3D+%5Clim_%7BK%5Cto+%5Cinfty%7D+%5Cleft%28%5Cfrac%7BN-K%7D%7BN%7D%5Cright%29+C_%7BTPIR%7D%28N-X%2CK%2CT%29+%3D%5Cbegin%7Bcases%7D%C2%A0+%C2%A01-%28%5Cfrac%7BX%2BT%7D%7BN%7D%29+%26+N%3EX%2BT++%5C%5C%C2%A0++0+%26+N%5Cleq+X%2BT+%5Cend%7Bcases%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle\lim_{K\to \infty} C_{XSTPIR}(N,K,X,T) = \lim_{K\to \infty} \left(\frac{N-K}{N}\right) C_{TPIR}(N-X,K,T) =\begin{cases}&#xA0; &#xA0;1-(\frac{X+T}{N}) &amp; N&gt;X+T  \\&#xA0;  0 &amp; N\leq X+T \end{cases}"/></p><cite>[Jia, Sun, and Jafar ’19]</cite></blockquote>



<p>Jia et al. give schemes that achieve these bounds while preserving the privacy and security constraints by introducing random noise vectors into how data is stored and queries are constructed. The general scheme for <img alt="N&gt;X+T" class="latex" src="https://s0.wp.com/latex.php?latex=N%3EX%2BT&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N&gt;X+T"/> uses <em>cross subspace alignment</em>, which essentially chooses how to construct the stored information and the queries such that the added noise mostly “cancels out” when the master combines all the response from the servers. The scheme for <img alt="N\leq X+T" class="latex" src="https://s0.wp.com/latex.php?latex=N%5Cleq+X%2BT&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N\leq X+T"/> is straightforward to explain, and demonstrates the idea of using error correcting codes that treat the random values as the message and the actual data as the “noise.”</p>



<p>For this scheme, the message length <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="L"/> is set to <img alt="N-X" class="latex" src="https://s0.wp.com/latex.php?latex=N-X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N-X"/> (the number of nodes <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/>, minus the maximum number of colluding servers <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X"/>). First, we generate <img alt="K" class="latex" src="https://s0.wp.com/latex.php?latex=K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="K"/> random bit vectors of length <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X"/>:</p>



<figure class="wp-block-image size-large is-resized"><img alt="" class="wp-image-1590" height="157" src="https://theorydish.files.wordpress.com/2020/03/blog_fig3.png?w=856" width="370"/></figure>



<p>Next, apply an <img alt="(N,X)" class="latex" src="https://s0.wp.com/latex.php?latex=%28N%2CX%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="(N,X)"/> MDS code to <img alt="Z_1,...,Z_K" class="latex" src="https://s0.wp.com/latex.php?latex=Z_1%2C...%2CZ_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="Z_1,...,Z_K"/> to get <img alt="\bar{Z}_1,..,\bar{Z}_K" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BZ%7D_1%2C..%2C%5Cbar%7BZ%7D_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{Z}_1,..,\bar{Z}_K"/>, which are <img alt="K" class="latex" src="https://s0.wp.com/latex.php?latex=K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="K"/> encoded vectors of length <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/>:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1591" src="https://theorydish.files.wordpress.com/2020/03/blog_fig4.png?w=1024"/></figure>



<p>For our data <img alt="W_1,...,W_K" class="latex" src="https://s0.wp.com/latex.php?latex=W_1%2C...%2CW_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_1,...,W_K"/>, we pad each vector with zeros to get <img alt="\bar{W}_1,..,\bar{W}_K" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BW%7D_1%2C..%2C%5Cbar%7BW%7D_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{W}_1,..,\bar{W}_K"/> of length <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/>:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1592" src="https://theorydish.files.wordpress.com/2020/03/blog_fig5.png?w=1024"/></figure>



<p>Now that the dimensions line up, we can add the two together and store each column <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="n"/> at the <img alt="n^{th}" class="latex" src="https://s0.wp.com/latex.php?latex=n%5E%7Bth%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="n^{th}"/> node:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1593" src="https://theorydish.files.wordpress.com/2020/03/blog_fig6.png?w=1024"/></figure>



<p>To access the data, the user downloads all <img alt="NK" class="latex" src="https://s0.wp.com/latex.php?latex=NK&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="NK"/> bits. The length <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> string downloaded from  row <img alt="i" class="latex" src="https://s0.wp.com/latex.php?latex=i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="i"/> can be used to decode <img alt="\bar{Z}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BZ%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{Z}_i"/>: <img alt="\bar{W}_{L+1},\bar{W}_{L+2},...,\bar{W}_{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BW%7D_%7BL%2B1%7D%2C%5Cbar%7BW%7D_%7BL%2B2%7D%2C...%2C%5Cbar%7BW%7D_%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{W}_{L+1},\bar{W}_{L+2},...,\bar{W}_{N}"/> are all zero, so columns <img alt="L+1 = N-X+1" class="latex" src="https://s0.wp.com/latex.php?latex=L%2B1+%3D+N-X%2B1&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="L+1 = N-X+1"/> through <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> have the values of <img alt="\bar{Z}_{i,N-X+1},...,\bar{Z}_{i,N}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BZ%7D_%7Bi%2CN-X%2B1%7D%2C...%2C%5Cbar%7BZ%7D_%7Bi%2CN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{Z}_{i,N-X+1},...,\bar{Z}_{i,N}"/>. This gives the user <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X"/> values from the MDS code used on each row, so they can decode and get <img alt="Z_1,...,Z_K" class="latex" src="https://s0.wp.com/latex.php?latex=Z_1%2C...%2CZ_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="Z_1,...,Z_K"/> and <img alt="\bar{Z}_{1},...,\bar{Z}_K" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BZ%7D_%7B1%7D%2C...%2C%5Cbar%7BZ%7D_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{Z}_{1},...,\bar{Z}_K"/>. Then a subtraction from the downloaded data gives <img alt="W_1,...,W_{K}" class="latex" src="https://s0.wp.com/latex.php?latex=W_1%2C...%2CW_%7BK%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="W_1,...,W_{K}"/>. Because of the MDS property of the code used to get <img alt="\bar{Z}_1,...,\bar{Z}_K" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbar%7BZ%7D_1%2C...%2C%5Cbar%7BZ%7D_K&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bar{Z}_1,...,\bar{Z}_K"/>, this scheme is X-secure and because the user downloads all bits, it is T-private.</p>



<h2>Matrix Multiplication with Polynomial Codes</h2>



<p>We now move on to the task of matrix-matrix multiplication. The methods for secure and private distributed matrix multiplication we will discuss shortly are based on <em>polynomial codes</em>, used by [Yu, Maddah-Ali, Avestimehr ’17] for doing distributed matrix multiplications robust to stragglers. Suppose the master has matrices <img alt="{\bf{A}} \in \mathbb{F}_q^{m\times n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbf%7BA%7D%7D+%5Cin+%5Cmathbb%7BF%7D_q%5E%7Bm%5Ctimes+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bf{A}} \in \mathbb{F}_q^{m\times n}"/> and <img alt="{\bf{B}} \in \mathbb{F}_q^{n \times p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbf%7BB%7D%7D+%5Cin+%5Cmathbb%7BF%7D_q%5E%7Bn+%5Ctimes+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bf{B}} \in \mathbb{F}_q^{n \times p}"/> for some finite field <img alt="\mathbb{F}_q" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathbb%7BF%7D_q&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\mathbb{F}_q"/>, and <img alt="m,n,p \in \mathbb{Z}^+" class="latex" src="https://s0.wp.com/latex.php?latex=m%2Cn%2Cp+%5Cin+%5Cmathbb%7BZ%7D%5E%2B&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="m,n,p \in \mathbb{Z}^+"/>. Assume <img alt="m" class="latex" src="https://s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="m"/> and <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="p"/> are divisible by <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/>, so we can represent the matrices divided into <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> submatrices: </p>



<p class="has-text-align-center"><img alt="{\bf{A}}= \begin{bmatrix}A_1\\ A_2 \\ \vdots \\ A_m\end{bmatrix}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbf%7BA%7D%7D%3D+%5Cbegin%7Bbmatrix%7DA_1%5C%5C+A_2+%5C%5C+%5Cvdots+%5C%5C+A_m%5Cend%7Bbmatrix%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bf{A}}= \begin{bmatrix}A_1\\ A_2 \\ \vdots \\ A_m\end{bmatrix}"/>               and        <img alt="{\bf{B}}= \begin{bmatrix}B_1&amp; B_2 &amp; \dots &amp;B_n\end{bmatrix}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbf%7BB%7D%7D%3D+%5Cbegin%7Bbmatrix%7DB_1%26+B_2+%26+%5Cdots+%26B_n%5Cend%7Bbmatrix%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bf{B}}= \begin{bmatrix}B_1&amp; B_2 &amp; \dots &amp;B_n\end{bmatrix}"/> </p>



<p>So to recover <img alt="\bf{AB}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbf%7BAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bf{AB}"/>, the master needs each entry of: </p>



<p><img alt="{\bf{AB}} = \begin{bmatrix}A_1B_1 &amp; A_1B_2 &amp; \dots &amp; A_1B_n\\A_2B_1 &amp; A_2B_2 &amp; \dots &amp; A_2 B_n\\\vdots &amp; \vdots &amp;\vdots &amp;\vdots\\A_mB_1 &amp;A_mB_2 &amp; \dots&#xA0; &amp; A_mB_n \end{bmatrix}." class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbf%7BAB%7D%7D+%3D+%5Cbegin%7Bbmatrix%7DA_1B_1+%26+A_1B_2+%26+%5Cdots+%26+A_1B_n%5C%5CA_2B_1+%26+A_2B_2+%26+%5Cdots+%26+A_2+B_n%5C%5C%5Cvdots+%26+%5Cvdots+%26%5Cvdots+%26%5Cvdots%5C%5CA_mB_1+%26A_mB_2+%26+%5Cdots%C2%A0+%26+A_mB_n+%5Cend%7Bbmatrix%7D.&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bf{AB}} = \begin{bmatrix}A_1B_1 &amp; A_1B_2 &amp; \dots &amp; A_1B_n\\A_2B_1 &amp; A_2B_2 &amp; \dots &amp; A_2 B_n\\\vdots &amp; \vdots &amp;\vdots &amp;\vdots\\A_mB_1 &amp;A_mB_2 &amp; \dots&#xA0; &amp; A_mB_n \end{bmatrix}."/></p>



<p>The key idea of polynomial codes is to encode <img alt="A_1,...,A_m" class="latex" src="https://s0.wp.com/latex.php?latex=A_1%2C...%2CA_m&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="A_1,...,A_m"/> and <img alt="B_1,...,B_n" class="latex" src="https://s0.wp.com/latex.php?latex=B_1%2C...%2CB_n&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="B_1,...,B_n"/> in polynomials <img alt="\tilde{A}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BA%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{A}_i"/> and <img alt="\tilde{B}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BB%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{B}_i"/> to be sent to the <img alt="i^{th}" class="latex" src="https://s0.wp.com/latex.php?latex=i%5E%7Bth%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="i^{th}"/> worker,  where they are multiplied and the result is returned. The goal of Yu et al. was to create robustness to stragglers, and so they add redundancy in this process so that not all workers need to return a result for the master to be able to determine <img alt="\bf{AB}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbf%7BAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bf{AB}"/>. In particular, only <img alt="mn" class="latex" src="https://s0.wp.com/latex.php?latex=mn&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="mn"/> returned values are needed, so <img alt="N-mn" class="latex" src="https://s0.wp.com/latex.php?latex=N-mn&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N-mn"/> servers can be slow or fail completely without hurting the computation. This method can be thought of as setting up the encodings of <img alt="\bf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bf{A}"/> and <img alt="\bf{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbf%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\bf{B}"/> so that the resulting multiplications <img alt="\tilde{C}_1=\tilde{A}_1\tilde{B}_1,...,\tilde{C}_N=\tilde{A}_N\tilde{B}_N" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BC%7D_1%3D%5Ctilde%7BA%7D_1%5Ctilde%7BB%7D_1%2C...%2C%5Ctilde%7BC%7D_N%3D%5Ctilde%7BA%7D_N%5Ctilde%7BB%7D_N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{C}_1=\tilde{A}_1\tilde{B}_1,...,\tilde{C}_N=\tilde{A}_N\tilde{B}_N"/> are evaluations of a polynomial with coefficients  <img alt="A_1B_1,A_1B_2,...,A_2B_1....,A_mB_n" class="latex" src="https://s0.wp.com/latex.php?latex=A_1B_1%2CA_1B_2%2C...%2CA_2B_1....%2CA_mB_n&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="A_1B_1,A_1B_2,...,A_2B_1....,A_mB_n"/> at <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> different points — equivalent to a Reed-Solomon code. </p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1603" src="https://theorydish.files.wordpress.com/2020/03/blog_fig7.png?w=1024"/></figure>



<p>This idea is adapted by [Chang, Tandon ’18] to protect the data from colluding servers: noise is incorporated into the encodings such that the number of encoded matrices required to determine anything about the data is greater than the security threshold <img alt="X &lt; N" class="latex" src="https://s0.wp.com/latex.php?latex=X+%3C+N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X &lt; N"/>. Since the master receives all <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> responses it is able to decode the result of <img alt="\textbf{AB}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{AB}"/>, but no set of <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="X"/> nodes can decode <img alt="\textbf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{A}"/>, <img alt="\textbf{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{B}"/>, or <img alt="\textbf{AB}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BAB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{AB}"/>. Similarly, [Kim, Yang, Li ’19] adapts this idea to impose privacy on a matrix-matrix multiplication: workers are assumed to have a shared library <img alt="\{{\textbf{B}}_i\}_{i=1}^M" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7B%5Ctextbf%7BB%7D%7D_i%5C%7D_%7Bi%3D1%7D%5EM&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\{{\textbf{B}}_i\}_{i=1}^M"/>, and the user would like to multiply <img alt="{\textbf{A}}{\textbf{B}}_{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctextbf%7BA%7D%7D%7B%5Ctextbf%7BB%7D%7D_%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\textbf{A}}{\textbf{B}}_{D}"/> for some <img alt="D \in[1:M]" class="latex" src="https://s0.wp.com/latex.php?latex=D+%5Cin%5B1%3AM%5D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="D \in[1:M]"/> without revealing the value of <img alt="D" class="latex" src="https://s0.wp.com/latex.php?latex=D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="D"/> to the workers. The workers encode the entire library such that when the  encoding is multiplied by an encoded input <img alt="\tilde{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{A}"/> from the master, the result is useful to the master in decoding <img alt="{\textbf{A}}{\textbf{B}}_D" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctextbf%7BA%7D%7D%7B%5Ctextbf%7BB%7D%7D_D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\textbf{A}}{\textbf{B}}_D"/>.</p>



<p>Chang and Tandon consider the following two privacy models, where up to <img alt="\ell" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cell&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\ell"/> servers may collude. The master also has <img alt="K^{(A)}" class="latex" src="https://s0.wp.com/latex.php?latex=K%5E%7B%28A%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="K^{(A)}"/> (and in the second model, <img alt="K^{(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=K%5E%7B%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="K^{(B)}"/>), which are matrices of random values with the same dimensions as <img alt="\textbf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{A}"/> (and <img alt="\textbf{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{B}"/>). These are used in creating the encodings <img alt="\tilde{A}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BA%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{A}_i"/> (and <img alt="\tilde{B}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BB%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{B}_i"/>).</p>



<p> <img alt="\textbf{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{B}"/> is public, <img alt="\textbf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{A}"/> is private:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1604" src="https://theorydish.files.wordpress.com/2020/03/blog_fig8.png?w=1024"/></figure>



<p>Both private:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1605" src="https://theorydish.files.wordpress.com/2020/03/blog_fig9.png?w=1024"/></figure>



<p>Kim, Yang, and Lee take a similar approach of applying the method of polynomial code to <em>private</em> matrix multiplication. As before, there are <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="N"/> workers, but now the master wants to multiply <img alt="\textbf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{A}"/> with some <img alt="{\textbf{B}}_D" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctextbf%7BB%7D%7D_D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\textbf{B}}_D"/> in shared library <img alt="\{{\textbf{B}}_i\}_{i=1}^M" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7B%5Ctextbf%7BB%7D%7D_i%5C%7D_%7Bi%3D1%7D%5EM&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\{{\textbf{B}}_i\}_{i=1}^M"/> (all the workers have the shared library). </p>



<p>Since the master isn’t itself encoding <img alt="\{{\textbf{B}}\}_{i=1}^M" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7B%5Ctextbf%7BB%7D%7D%5C%7D_%7Bi%3D1%7D%5EM&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\{{\textbf{B}}\}_{i=1}^M"/> it has to tell the workers how to encode the library so that it can reconstruct the desired product. This is done by having the master tell the workers what values of <img alt="\vec{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cvec%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\vec{y}"/> they should use to evaluate the polynomial that corresponds to encoding each library matrix. We denote the encoding of the library done by each worker <img alt="i" class="latex" src="https://s0.wp.com/latex.php?latex=i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="i"/> as the multivariate polynomial <img alt="h" class="latex" src="https://s0.wp.com/latex.php?latex=h&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="h"/> which is evaluated at <img alt="\{{\textbf{B}}\}_{i=1}^M" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7B%5Ctextbf%7BB%7D%7D%5C%7D_%7Bi%3D1%7D%5EM&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\{{\textbf{B}}\}_{i=1}^M"/> and the node-specific vector <img alt="y^{(i)}_{[1:M]}" class="latex" src="https://s0.wp.com/latex.php?latex=y%5E%7B%28i%29%7D_%7B%5B1%3AM%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="y^{(i)}_{[1:M]}"/> to get the node’s encoding, <img alt="\tilde{B}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BB%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{B}_i"/>. The worker multiplies this with the encoding of <img alt="\textbf{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextbf%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\textbf{A}"/> it receives, <img alt="\tilde{A}_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BA%7D_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\tilde{A}_i"/> and returns the resulting value <img alt="Z_i" class="latex" src="https://s0.wp.com/latex.php?latex=Z_i&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="Z_i"/>. All together, we get the following communication model: </p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-1611" src="https://theorydish.files.wordpress.com/2020/03/blog_fig10.png?w=1024"/></figure>



<h2>Conclusion</h2>



<p>As we’ve seen, coding techniques originally designed to add redundancy and protect against data loss can also be used to intentionally incorporate noise for data protection. In particular, this can be done when out-sourcing matrix multiplications, making it a useful technique in many data processing and machine learning applications.</p>



<p>References:</p>



<ul><li><a href="https://arxiv.org/pdf/1808.07457.pdf">Jia, Zhuqing, Hua Sun, and Syed Ali Jafar. “Cross Subspace Alignment and the Asymptotic Capacity of  X-Secure T-Private Information Retrieval.” <em>IEEE Transactions on Information Theory</em> 65.9 (2019): 5783-5798.</a></li><li><a href="http://papers.nips.cc/paper/7027-polynomial-codes-an-optimal-design-for-high-dimensional-coded-matrix-multiplication.pdf">Yu, Qian, Mohammad Maddah-Ali, and Salman Avestimehr. “Polynomial codes: an optimal design for high-dimensional coded matrix multiplication.” <em>Advances in Neural Information Processing Systems</em>. 2017.</a></li><li><a href="https://uweb.engr.arizona.edu/~wchang/Globecom-SecureMM-2018.pdf">Chang, Wei-Ting, and Ravi Tandon. “On the capacity of secure distributed matrix multiplication.” <em>2018 IEEE Global Communications Conference (GLOBECOM)</em>. IEEE, 2018.</a></li><li><a href="https://ieeexplore-ieee-org.stanford.idm.oclc.org/abstract/document/8832193">Kim, Minchul, Heecheol Yang, and Jungwoo Lee. “Private Coded Matrix Multiplication.” <em>IEEE Transactions on Information Forensics and Security</em> (2019).</a></li></ul>



<p/></div>
    </content>
    <updated>2020-03-18T23:14:58Z</updated>
    <published>2020-03-18T23:14:58Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Alex Porter</name>
    </author>
    <source>
      <id>https://theorydish.blog</id>
      <logo>https://theorydish.files.wordpress.com/2017/03/cropped-nightdish1.jpg?w=32</logo>
      <link href="https://theorydish.blog/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://theorydish.blog" rel="alternate" type="text/html"/>
      <link href="https://theorydish.blog/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://theorydish.blog/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Stanford's CS Theory Research Blog</subtitle>
      <title>Theory Dish</title>
      <updated>2020-03-25T20:21:27Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=405</id>
    <link href="https://tcsplus.wordpress.com/2020/03/18/tcs-talk-wednesday-march-25-dana-moshkovitz-ut-austin/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, March 25 — Dana Moshkovitz, UT Austin</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, March 25th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 18:00 Central European Time, 17:00 UTC). Dana Moshkovitz from UT Austin will speak about “Nearly Optimal Pseudorandomness From Hardness” (abstract below). You can reserve a spot as an individual or a group to join […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, March 25th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 18:00 Central European Time, 17:00 UTC). <strong>Dana Moshkovitz</strong> from UT Austin will speak about “<em>Nearly Optimal Pseudorandomness From Hardness</em>” (abstract below).</p>
<p>You can reserve a spot as an individual or a group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk/live-seat-reservation">the online form</a>. (The link will also be posted <a href="https://sites.google.com/site/plustcs/livetalk">on our website</a> on the day of the talk, so people who did not sign up will still be able to join, until the maximum capacity of 300 seats is reached.) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>
<blockquote><p>Abstract: Existing proofs that deduce BPP=P from circuit lower bounds convert randomized algorithms into deterministic algorithms with a large polynomial slowdown. We convert randomized algorithms into deterministic ones with little slowdown. Specifically, assuming exponential lower bounds against randomized single-valued nondeterministic (SVN) circuits, we convert any randomized algorithm over inputs of length n running in time <img alt="t\geq n" class="latex" src="https://s0.wp.com/latex.php?latex=t%5Cgeq+n&amp;bg=fff&amp;fg=444444&amp;s=0" title="t\geq n"/> to a deterministic one running in time <img alt="t^{2+\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=t%5E%7B2%2B%5Calpha%7D&amp;bg=fff&amp;fg=444444&amp;s=0" title="t^{2+\alpha}"/> for an arbitrarily small constant <img alt="\alpha &gt; 0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha+%3E+0&amp;bg=fff&amp;fg=444444&amp;s=0" title="\alpha &gt; 0"/>. Such a slowdown is nearly optimal, as, under complexity-theoretic assumptions, there are problems with an inherent quadratic derandomization slowdown. We also convert any randomized algorithm that errs rarely into a deterministic algorithm having a similar running time (with pre-processing). The latter derandomization result holds under weaker assumptions, of exponential lower bounds against deterministic SVN circuits. Our results follow from a new, nearly optimal, explicit pseudorandom generator. The construction uses, among other ideas, a new connection between pseudoentropy generators and locally list recoverable codes.</p></blockquote>
<p> </p></div>
    </content>
    <updated>2020-03-18T23:13:21Z</updated>
    <published>2020-03-18T23:13:21Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2020-03-25T20:21:12Z</updated>
    </source>
  </entry>
</feed>
