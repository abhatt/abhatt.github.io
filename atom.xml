<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2021-11-01T07:22:38Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-2754344269552524293</id>
    <link href="http://blog.computationalcomplexity.org/feeds/2754344269552524293/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2019/07/when-did-math-get-so-hard.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/2754344269552524293" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/2754344269552524293" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2019/07/when-did-math-get-so-hard.html" rel="alternate" type="text/html"/>
    <title>When did Math Get So Hard?</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><br/>
I have been on many Math PhD thesis defense's  as the Dean's Representative. This means I don't have to understand the work, just make sure the rules are followed. I've done this for a while and I used to understand some of it but now there are times I understand literally none of it. As a result, when the student leaves the room and we talk among ourselves I ask<br/>
<br/>
<br/>
When did Math get so hard?<br/>
<br/>
I mean it as a statement and maybe a joke, but I decided to email various people and ask for a serious answer. Here are some thoughts of mine and others<div><br/></div><div>1) When you get older math got harder. Lance blogged on this <a href="https://blog.computationalcomplexity.org/2021/10/a-young-persons-game.html">here</a></div><div><br/></div><div>2) When math got more abstract it got harder. Blame Grothendieck.</div><div><br/></div><div>3) When math stopped being tied to the real work it got harder. Blame Hardy. </div><div><br/></div><div>4) Math has always been hard. We NOW understand some of the older math better so it seems easy to us, but it wasn't at the time. </div><div><br/></div><div>5) With the web and more people working in math, new results come out faster so its harder to keep up.</div><div><br/></div><div>6) All fields of math have a period of time when they are easy, at the beginning, and then as the low-hanging fruit gets picked it gets harder and harder.  So if a NEW branch was started it might initially be easy. Counterthought- even a new branch might be hard now since it can draw on so much prior math. Also, the low hanging fruit may be picked rather quickly. </div><div><br/>
<br/><br/>
</div></div>
    </content>
    <updated>2021-10-31T19:46:00Z</updated>
    <published>2021-10-31T19:46:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-31T22:33:48Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/10/31/linkage</id>
    <link href="https://11011110.github.io/blog/2021/10/31/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>Square-difference-free set (\(\mathbb{M}\)), now a Good Article on Wikipedia. As the name suggests, these are sets of integers no two of which differ by a square. My favorite such set consists of the losing positions in subtract-a-square, where each move removes a square number of coins from a pile of coins, winning by taking the last coin. This general class of sets and the subtract-a-square set have \(o(n)\) elements up to \(n\), but their maximum density remains unknown.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p><a href="https://en.wikipedia.org/wiki/Square-difference-free_set">Square-difference-free set</a> (<a href="https://mathstodon.xyz/@11011110/107112823640205029">\(\mathbb{M}\)</a>), now a Good Article on Wikipedia. As the name suggests, these are sets of integers no two of which differ by a square. My favorite such set consists of the losing positions in <a href="https://en.wikipedia.org/wiki/Subtract_a_square">subtract-a-square</a>, where each move removes a square number of coins from a pile of coins, winning by taking the last coin. This general class of sets and the subtract-a-square set have \(o(n)\) elements up to \(n\), but their maximum density remains unknown.</p>
  </li>
  <li>
    <p><a href="https://mathoverflow.net/q/406120/440">Can a convex polyhedron have an odd number of faces, all congruent</a> (<a href="https://mathstodon.xyz/@11011110/107121133147692528">\(\mathbb{M}\)</a>). If so the faces would have to all be kites, per comments at the link. Which raises the question: can a convex polyhedron with congruent kite faces avoid being either a <a href="https://en.wikipedia.org/wiki/Trapezohedron">trapezohedron</a> or formed from deltahedron (a polyhedron with equilateral triangle faces) by subdividing each triangle into three kites? Both automatically have evenly many faces.</p>
  </li>
  <li>
    <p><a href="https://en.wikipedia.org/wiki/Regular_number">You might know about regular numbers</a> (<a href="https://mathstodon.xyz/@11011110/107127099279073309">\(\mathbb{M}\)</a>), of the form \(2^i\cdot 3^j\cdot 5^k\), from Babylonian mathematics, music theory, Plato, or as a test case for functional programming. But did you know that they come up in biology, as numbers of years between mass flowering in certain types of bamboo? See Veller, Nowak and Davis, “<a href="https://doi.org/10.1111/ele.12442">Extended flowering intervals of bamboos evolved by discrete multiplication</a>”, <em>Ecol. Lett.</em> 2015, via Andrey Zabolotskiy at <a href="https://oeis.org/A051037">OEIS A051037</a>.</p>
  </li>
  <li>
    <p>My new paper “<a href="https://arxiv.org/abs/2110.06163">Finding relevant points for nearest-neighbor classification</a>”, has won the best paper award of the SIAM Symposium on Simplicity in Algorithms, SOSA22 <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107132784717543034">\(\mathbb{M}\)</a>).</span> Woo! In other news, the lists of accepted papers at <a href="https://www.siam.org/conferences/cm/program/accepted-papers/sosa22-accepted-papers">SOSA</a>, <a href="https://www.siam.org/conferences/cm/program/accepted-papers/soda22-accepted-papers">SODA</a>, and <a href="https://www.siam.org/conferences/cm/program/accepted-papers/alenex22-accepted-papers">ALENEX</a> are online.</p>
  </li>
  <li>
    <p><a href="https://twitter.com/thienan496/status/1446021847292669953">Animation of the minimum-weight matchings of increasingly many points of two colors in a unit square</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107140270923344318">\(\mathbb{M}\)</a>).</span> Because the color densities fluctuate, the matching develops regions of many parallel long edges transporting excess density from one place to another. This is reflected mathematically in the fact that the expected length is \(\Theta(\sqrt{n\log n})\) compared to \(\Theta(\sqrt{n})\) for non-bipartite matching; see Ajtai, Komlós, and Tusnády, “<a href="https://doi.org/10.1007/BF02579135">On optimal matchings</a>”, <em>Combinatorica</em> 1984.</p>
  </li>
  <li>
    <p><a href="https://en.wikipedia.org/wiki/Jacob_E._Goodman">Jacob E. Goodman</a>, famed as a discrete and computational geometer and cofounder of the top journal in the field, <em>Discrete &amp; Computational Geometry</em>, <a href="https://web.archive.org/web/20211025204323/https://newyorkcomposerscircle.org/index.html">died on October 10</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107143828784210981">\(\mathbb{M}\)</a>,</span> <a href="https://newyorkcomposerscircle.org/composers/jacob-e-goodman.html">see also</a>).</p>
  </li>
  <li>
    <p>The classical CS interview question of destructively reversing a singly-linked list goes back at least to <a href="http://i.stanford.edu/pub/cstr/reports/cs/tr/76/544/CS-TR-76-544.pdf">Ed McCreight in 1973</a> (<a href="https://mathstodon.xyz/@11011110/107147889403810499">\(\mathbb{M}\)</a>). But if you generalize a singly-linked list to a zipper (directed out in both directions from a finger <span style="white-space: nowrap;">into it)</span> then reversal is trivial and you get the classical algorithm by moving your finger from start to end. I don’t know of references; maybe the zipper people are too focused on functional/non-destructive/reentrant methods to mention this?</p>
  </li>
  <li>
    <p>I recently learned that the name “Thomsen graph” for  comes from the work of Danish chemist <a href="https://en.wikipedia.org/wiki/Hans_Peter_J%C3%B8rgen_Julius_Thomsen">Julius Thomsen</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107154978136052455">\(\mathbb{M}\)</a>)</span> who <a href="https://archive.org/download/crossref-pre-1909-scholarly-works/10.1002%252Fcber.18860190141.zip/10.1002%252Fcber.188601902285.pdf">proposed in 1886 that it describes the structure of benzene</a>. Thomsen was late to the party: Kekulé had already proposed the benzene ring in 1865. But the name for the graph stuck.</p>
  </li>
  <li>
    <p>My UCI colleague <a href="https://recruit.ap.uci.edu/JPF07189">Vijay Vazirani is looking for a postdoc in algorithmic design / algorithmic game theory</a> (<a href="https://mathstodon.xyz/@11011110/107157944689667569">\(\mathbb{M}\)</a>). One-year, renewable.</p>
  </li>
  <li>
    <p><a href="https://sinews.siam.org/Details-Page/fairmandering-generating-fairness-optimized-political-districts">Fairmandering: generating fairness-optimized political districts</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107169485099658532">\(\mathbb{M}\)</a>),</span> Wes Gurnee and David Shmoys. If you generate a hierarchically-organized and large family of partitions of a state into contiguous equal-population regions, you can then optimize over the hierarchy for fairness. Gurnee and Shmoys choose to optimize the <a href="https://en.wikipedia.org/wiki/Efficiency_gap">efficiency gap</a> but their method is a two-edged sword: it would work equally well to optimize for partisan advantage.</p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@christianp/107173511804051329">What high-order regular polygons do you have lying around your house?</a></p>
  </li>
  <li>
    <p><a href="http://skepticsplay.blogspot.com/2013/06/in-praise-of-non-deductive-puzzles.html">In praise of non-deductive puzzles</a> (<a href="https://mathstodon.xyz/@11011110/107183397931741236">\(\mathbb{M}\)</a>). I’m not sure I agree that logic puzzles solved by intuition and guessing are better than ones where you have to make sufficiently deep deductions, but they both beat blind backtracking. I do agree that numberlinks should fill the grid as a natural consequence of connecting the numbers, not an extra constraint. And that <a href="http://mathgrant.blogspot.com/2010/10/grants-review-corner-volume-2.html">non-unique generators for puzzles whose solutions should be unique are an abomination</a>.</p>
  </li>
  <li>
    <p><a href="https://sinews.siam.org/Details-Page/preserving-the-history-of-applied-mathematics">Preserving the history of applied mathematics</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107191450699219701">\(\mathbb{M}\)</a>),</span> John Boyd in <em>SIAM News</em>.</p>
  </li>
  <li>
    <p><a href="https://www.npr.org/2021/10/30/1050817670/university-florida-professors-free-speech-voting-rights">University of Florida blocks faculty from being expert witnesses on voting rights, claiming that lawsuits against the state create a conflict of interest</a> <span style="white-space: nowrap;">(<a href="https://mathstodon.xyz/@11011110/107198292249996684">\(\mathbb{M}\)</a>,</span> <a href="https://www.chronicle.com/article/u-of-florida-stops-professors-from-participating-in-voting-rights-suit-raising-cries-of-censorship">also</a>, <a href="https://www.nytimes.com/2021/10/29/us/florida-professors-voting-rights-lawsuit.html">also</a>). Beyond being an assault on academic freedom, this appears to violate the 1st amendment. US states can limit on-the-job speech, but here they would have testified on their own time, a routine activity that was blocked only because of its content.</p>
  </li>
</ul></div>
    </content>
    <updated>2021-10-31T18:27:00Z</updated>
    <published>2021-10-31T18:27:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-11-01T02:11:11Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/31/assistant-professor-with-tenure-at-university-of-amsterdam-apply-by-november-22-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/31/assistant-professor-with-tenure-at-university-of-amsterdam-apply-by-november-22-2021/" rel="alternate" type="text/html"/>
    <title>Assistant Professor (with tenure) at University of Amsterdam (apply by November 22, 2021)</title>
    <summary>We currently have a vacancy for an Assistant Professor in Model-Based AI at the Institute for Logic, Language and Computation (ILLC) at the University of Amsterdam. Relevant topics of expertise include SAT solving, constraint programming, planning and scheduling, answer set programming, description logics, ontology engineering, and computer-aided verification (non-exhaustive list). Website: https://www.illc.uva.nl/NewsandEvents/News/Positions/newsitem/13023/Assistant-Professor-in-Model-Based-AI Email: Ulle Endriss</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We currently have a vacancy for an Assistant Professor in Model-Based AI at the Institute for Logic, Language and Computation (ILLC) at the University of Amsterdam. Relevant topics of expertise include SAT solving, constraint programming, planning and scheduling, answer set programming, description logics, ontology engineering, and computer-aided verification (non-exhaustive list).</p>
<p>Website: <a href="https://www.illc.uva.nl/NewsandEvents/News/Positions/newsitem/13023/Assistant-Professor-in-Model-Based-AI">https://www.illc.uva.nl/NewsandEvents/News/Positions/newsitem/13023/Assistant-Professor-in-Model-Based-AI</a><br/>
Email: Ulle Endriss</p></div>
    </content>
    <updated>2021-10-31T11:46:06Z</updated>
    <published>2021-10-31T11:46:06Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/31/postdoc-at-university-of-california-irvine-apply-by-january-31-2022/</id>
    <link href="https://cstheory-jobs.org/2021/10/31/postdoc-at-university-of-california-irvine-apply-by-january-31-2022/" rel="alternate" type="text/html"/>
    <title>Postdoc  at University of California, Irvine (apply by January 31, 2022)</title>
    <summary>UC Irvine has one postdoc position open to work in Vijay Vazirani’s group on algorithm design and algorithmic game theory. Can start anytime, one year, renewable one more year. Website: https://recruit.ap.uci.edu/JPF07189 Email: https://recruit.ap.uci.edu/JPF07189</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>UC Irvine has one postdoc position open to work in Vijay Vazirani’s group on algorithm design and algorithmic game theory. Can start anytime, one year, renewable one more year.</p>
<p>Website: <a href="https://recruit.ap.uci.edu/JPF07189">https://recruit.ap.uci.edu/JPF07189</a><br/>
Email: <a href="https://recruit.ap.uci.edu/JPF07189">https://recruit.ap.uci.edu/JPF07189</a></p></div>
    </content>
    <updated>2021-10-31T11:36:07Z</updated>
    <published>2021-10-31T11:36:07Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15263</id>
    <link href="http://arxiv.org/abs/2110.15263" rel="alternate" type="text/html"/>
    <title>Coresets for Time Series Clustering</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Huang:Lingxiao.html">Lingxiao Huang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sudhir:K=.html">K. Sudhir</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vishnoi:Nisheeth_K=.html">Nisheeth K. Vishnoi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15263">PDF</a><br/><b>Abstract: </b>We study the problem of constructing coresets for clustering problems with
time series data. This problem has gained importance across many fields
including biology, medicine, and economics due to the proliferation of sensors
facilitating real-time measurement and rapid drop in storage costs. In
particular, we consider the setting where the time series data on $N$ entities
is generated from a Gaussian mixture model with autocorrelations over $k$
clusters in $\mathbb{R}^d$. Our main contribution is an algorithm to construct
coresets for the maximum likelihood objective for this mixture model. Our
algorithm is efficient, and under a mild boundedness assumption on the
covariance matrices of the underlying Gaussians, the size of the coreset is
independent of the number of entities $N$ and the number of observations for
each entity, and depends only polynomially on $k$, $d$ and $1/\varepsilon$,
where $\varepsilon$ is the error parameter. We empirically assess the
performance of our coreset with synthetic data.
</p></div>
    </summary>
    <updated>2021-10-31T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15260</id>
    <link href="http://arxiv.org/abs/2110.15260" rel="alternate" type="text/html"/>
    <title>Approximating the Arboricity in Sublinear Time</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eden:Talya.html">Talya Eden</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mossel:Saleet.html">Saleet Mossel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Ron:Dana.html">Dana Ron</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15260">PDF</a><br/><b>Abstract: </b>We consider the problem of approximating the arboricity of a graph $G=
(V,E)$, which we denote by $\mathsf{arb}(G)$, in sublinear time, where the
arboricity of a graph is the minimal number of forests required to cover its
edges. An algorithm for this problem may perform degree and neighbor queries,
and is allowed a small error probability. We design an algorithm that outputs
an estimate $\hat{\alpha}$, such that with probability $1-1/\textrm{poly}(n)$,
$\mathsf{arb}(G)/c\log^2 n \leq \hat{\alpha} \leq \mathsf{arb}(G)$, where
$n=|V|$ and $c$ is a constant. The expected query complexity and running time
of the algorithm are
</p>
<p>$O(n/\mathsf{arb}(G))\cdot \textrm{poly}(\log n)$, and this upper bound also
holds with high probability. %($\widetilde{O}(\cdot)$ is used to suppress
$\textrm{poly}(\log n)$ dependencies).
</p>
<p>This bound is optimal for such an approximation up to a $\textrm{poly}(\log
n)$ factor.
</p></div>
    </summary>
    <updated>2021-10-31T22:42:07Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15221</id>
    <link href="http://arxiv.org/abs/2110.15221" rel="alternate" type="text/html"/>
    <title>retworkx: A High-Performance Graph Library for Python</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Matthew Treinish, Ivan Carvalho, Georgios Tsilimigkounakis, Nahum Sá <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15221">PDF</a><br/><b>Abstract: </b>Network and graph analysis is a widely applicable field of research, and
Python is a popular programming language. In retworkx, we provide a
high-performance, flexible graph and network analysis library for Python.
retworkx is inspired by NetworkX (Hagberg et al., 2008) but addresses many
performance concerns of the latter. retworkx is particularly suited for
performance-sensitive applications that use graph representations.
</p></div>
    </summary>
    <updated>2021-10-31T22:40:53Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15155</id>
    <link href="http://arxiv.org/abs/2110.15155" rel="alternate" type="text/html"/>
    <title>Online Facility Location with Linear Delay</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bienkowski:Marcin.html">Marcin Bienkowski</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/B=ouml=hm:Martin.html">Martin Böhm</a>, Jarosław Byrka, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marcinkowski:Jan.html">Jan Marcinkowski</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15155">PDF</a><br/><b>Abstract: </b>We study the problem of online facility location with delay. In this problem,
a sequence of $n$ clients appear in the metric space, and they need to be
eventually connected to some open facility. The clients do not have to be
connected immediately, but such a choice comes with a penalty: each client
incurs a waiting cost (the difference between its arrival and connection time).
At any point in time, an algorithm may decide to open a facility and connect
any subset of clients to it. This is a well-studied problem both of its own,
and within the general class of network design problems with delays.
</p>
<p>Our main focus is on a new variant of this problem, where clients may be
connected also to an already open facility, but such action incurs an extra
cost: an algorithm pays for waiting of the facility (a cost incurred separately
for each such "late" connection). This is reminiscent of online matching with
delays, where both sides of the connection incur a waiting cost. We call this
variant two-sided delay to differentiate it from the previously studied
one-sided delay.
</p>
<p>We present an $O(1)$-competitive deterministic algorithm for the two-sided
delay variant. On the technical side, we study a greedy strategy, which grows
budgets with increasing waiting delays and opens facilities for subsets of
clients once sums of these budgets reach certain thresholds. Our technique is a
substantial extension of the approach used by Jain, Mahdian and Saberi [STOC
2002] for analyzing the performance of offline algorithms for facility
location.
</p>
<p>We then show how to transform our $O(1)$-competitive algorithm for the
two-sided delay variant to $O(\log n / \log \log n)$-competitive deterministic
algorithm for one-sided delays. We note that all previous online algorithms for
problems with delays in general metrics have at least logarithmic ratios.
</p></div>
    </summary>
    <updated>2021-10-31T22:41:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15152</id>
    <link href="http://arxiv.org/abs/2110.15152" rel="alternate" type="text/html"/>
    <title>Share-a-ride problems: Models and Solution Algorithms</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Herthel:Ana_Beatriz.html">Ana Beatriz Herthel</a>, Richard Hartl, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vidal:Thibaut.html">Thibaut Vidal</a>, Anand Subramanian <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15152">PDF</a><br/><b>Abstract: </b>Some of today's greatest challenges in urban environments concern individual
mobility and rapid parcel delivery. Given the surge of e-commerce and the
ever-increasing volume of goods to be delivered, we explore possible logistic
solutions by proposing algorithms to add parcel-transport services to
ride-hailing systems. Toward this end, we present and solve mixed-integer
linear programming (MILP) formulations of the share-a-ride problem and
quantitatively analyze the service revenues and use of vehicle resources. We
create five scenarios that represent joint transportation situations for
parcels and people, and that consider different densities in request types and
different requirements for vehicle resources. For one scenario, we propose an
alternative MILP formulation that significantly reduces computation times. The
proposed model also improves scalability by solving instances with 260% more
requests than those solved with general MILP. The results show that the
greatest profit margins occur when several parcels share trips with customers.
In contrast, with all metrics considered, the worst results occur when parcels
and people are transported in separate dedicated vehicles. The integration of
parcel services in ride-hailing systems also reduces vehicle waiting times when
the number of parcel requests exceeds the number of ride-hailing customers.
</p></div>
    </summary>
    <updated>2021-10-31T22:41:03Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15098</id>
    <link href="http://arxiv.org/abs/2110.15098" rel="alternate" type="text/html"/>
    <title>A Framework for Parameterized Subexponential Algorithms for Generalized Cycle Hitting Problems on Planar Graphs</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marx:D=aacute=niel.html">Dániel Marx</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Misra:Pranabendu.html">Pranabendu Misra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neuen:Daniel.html">Daniel Neuen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tale:Prafullkumar.html">Prafullkumar Tale</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15098">PDF</a><br/><b>Abstract: </b>Subexponential parameterized algorithms are known for a wide range of natural
problems on planar graphs, but the techniques are usually highly problem
specific. The goal of this paper is to introduce a framework for obtaining
$n^{O(\sqrt{k})}$ time algorithms for a family of graph modification problems
that includes problems that can be seen as generalized cycle hitting problems.
</p>
<p>Our starting point is the Node Unique Label Cover problem (that is, given a
CSP instance where each constraint is a permutation of values on two variables,
the task is to delete $k$ variables to make the instance satisfiable). We
introduce a variant of the problem where $k$ vertices have to be deleted such
that every 2-connected component of the remaining instance is satisfiable. Then
we extend the problem with cardinality constraints that restrict the number of
times a certain value can be used (globally or within a 2-connected component
of the solution). We show that there is an $n^{O(\sqrt{k})}$ time algorithm on
planar graphs for any problem that can be formulated this way, which includes a
large number of well-studied problems, for example, Odd Cycle Transversal,
Subset Feedback Vertex Set, Group Feedback Vertex Set, Subset Group Feedback
Vertex Set, Vertex Multiway Cut, and Component Order Connectivity.
</p>
<p>For those problems that admit appropriate (quasi)polynomial kernels (that
increase the parameter only linearly and preserve planarity), our results
immediately imply $2^{O(\sqrt{k}\cdot\operatorname{polylog}(k))}n^{O(1)}$ time
parameterized algorithms on planar graphs. In particular, we use or adapt known
kernelization results to obtain $2^{O(\sqrt{k}\cdot \operatorname{polylog}(k))}
n^{O(1)}$ time (randomized) algorithms for Vertex Multiway Cut, Group Feedback
Vertex Set, and Subset Feedback Vertex Set.
</p></div>
    </summary>
    <updated>2021-10-31T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15070</id>
    <link href="http://arxiv.org/abs/2110.15070" rel="alternate" type="text/html"/>
    <title>Improved Strongly Polynomial Algorithms for Deterministic MDPs, 2VPI Feasibility, and Discounted All-Pairs Shortest Paths</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Karczmarz:Adam.html">Adam Karczmarz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15070">PDF</a><br/><b>Abstract: </b>We revisit the problem of finding optimal strategies for deterministic Markov
Decision Processes (DMDPs), and a closely related problem of testing
feasibility of systems of $m$ linear inequalities on $n$ real variables with at
most two variables per inequality (2VPI).
</p>
<p>We give a randomized trade-off algorithm solving both problems and running in
$\tilde{O}(nmh+(n/h)^3)$ time using $\tilde{O}(n^2/h+m)$ space for any
parameter $h\in [1,n]$. In particular, using subquadratic space we get
$\tilde{O}(nm+n^{3/2}m^{3/4})$ running time, which improves by a polynomial
factor upon all the known upper bounds for non-dense instances with
$m=O(n^{2-\epsilon})$. Moreover, using linear space we match the randomized
$\tilde{O}(nm+n^3)$ time bound of Cohen and Megiddo [SICOMP'94] that required
$\tilde{\Theta}(n^2+m)$ space.
</p>
<p>Additionally, we show a new algorithm for the Discounted All-Pairs Shortest
Paths problem, introduced by Madani et al. [TALG'10], that extends the DMDPs
with optional end vertices. For the case of uniform discount factors, we give a
deterministic algorithm running in $\tilde{O}(n^{3/2}m^{3/4})$ time, which
improves significantly upon the randomized bound $\tilde{O}(n^2\sqrt{m})$ of
Madani et al.
</p></div>
    </summary>
    <updated>2021-10-31T22:48:12Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.15015</id>
    <link href="http://arxiv.org/abs/2110.15015" rel="alternate" type="text/html"/>
    <title>Engineering Uniform Sampling of Graphs with a Prescribed Power-law Degree Sequence</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Daniel Allendorf, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Meyer:Ulrich.html">Ulrich Meyer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Penschuck:Manuel.html">Manuel Penschuck</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tran:Hung.html">Hung Tran</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wormald:Nick.html">Nick Wormald</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.15015">PDF</a><br/><b>Abstract: </b>We consider the following common network analysis problem: given a degree
sequence $\mathbf{d} = (d_1, \dots, d_n) \in \mathbb N^n$ return a uniform
sample from the ensemble of all simple graphs with matching degrees. In
practice, the problem is typically solved using Markov Chain Monte Carlo
approaches, such as Edge-Switching or Curveball, even if no practical useful
rigorous bounds are known on their mixing times. In contrast, Arman et al.
sketch Inc-Powerlaw, a novel and much more involved algorithm capable of
generating graphs for power-law bounded degree sequences with $\gamma
\gtrapprox 2.88$ in expected linear time.
</p>
<p>For the first time, we give a complete description of the algorithm and add
novel switchings. To the best of our knowledge, our open-source implementation
of Inc-Powerlaw is the first practical generator with rigorous uniformity
guarantees for the aforementioned degree sequences. In an empirical
investigation, we find that for small average-degrees Inc-Powerlaw is very
efficient and generates graphs with one million nodes in less than a second.
For larger average-degrees, parallelism can partially mitigate the increased
running-time.
</p></div>
    </summary>
    <updated>2021-10-31T22:48:20Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14948</id>
    <link href="http://arxiv.org/abs/2110.14948" rel="alternate" type="text/html"/>
    <title>Better Sum Estimation via Weighted Sampling</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Beretta:Lorenzo.html">Lorenzo Beretta</a>, Jakub Tětek <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14948">PDF</a><br/><b>Abstract: </b>Given a large set $U$ where each item $a\in U$ has weight $w(a)$, we want to
estimate the total weight $W=\sum_{a\in U} w(a)$ to within factor of
$1\pm\varepsilon$ with some constant probability $&gt;1/2$. Since $n=|U|$ is
large, we want to do this without looking at the entire set $U$. In the
traditional setting in which we are allowed to sample elements from $U$
uniformly, sampling $\Omega(n)$ items is necessary to provide any non-trivial
guarantee on the estimate. Therefore, we investigate this problem in different
settings: in the \emph{proportional} setting we can sample items with
probabilities proportional to their weights, and in the \emph{hybrid} setting
we can sample both proportionally and uniformly. These settings have
applications, for example, in sublinear-time algorithms and distribution
testing.
</p>
<p>Sum estimation in the proportional and hybrid setting has been considered
before by Motwani, Panigrahy, and Xu [ICALP, 2007]. In their paper, they give
both upper and lower bounds in terms of $n$. Their bounds are near-matching in
terms of $n$, but not in terms of $\varepsilon$. In this paper, we improve both
their upper and lower bounds. Our bounds are matching up to constant factors in
both settings, in terms of both $n$ and $\varepsilon$. No lower bounds with
dependency on $\varepsilon$ were known previously. In the proportional setting,
we improve their $\tilde{O}(\sqrt{n}/\varepsilon^{7/2})$ algorithm to
$O(\sqrt{n}/\varepsilon)$. In the hybrid setting, we improve
$\tilde{O}(\sqrt[3]{n}/ \varepsilon^{9/2})$ to
$O(\sqrt[3]{n}/\varepsilon^{4/3})$. Our algorithms are also significantly
simpler and do not have large constant factors. We also investigate the
previously unexplored setting where $n$ is unknown to the algorithm. Finally,
we show how our techniques apply to the problem of edge counting in graphs.
</p></div>
    </summary>
    <updated>2021-10-31T22:44:56Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14859</id>
    <link href="http://arxiv.org/abs/2110.14859" rel="alternate" type="text/html"/>
    <title>Approximate Decomposable Submodular Function Minimization for Cardinality-Based Components</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Veldt:Nate.html">Nate Veldt</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Benson:Austin_R=.html">Austin R. Benson</a>, Jon Kleinberg <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14859">PDF</a><br/><b>Abstract: </b>Minimizing a sum of simple submodular functions of limited support is a
special case of general submodular function minimization that has seen numerous
applications in machine learning. We develop fast techniques for instances
where components in the sum are cardinality-based, meaning they depend only on
the size of the input set. This variant is one of the most widely applied in
practice, encompassing, e.g., common energy functions arising in image
segmentation and recent generalized hypergraph cut functions. We develop the
first approximation algorithms for this problem, where the approximations can
be quickly computed via reduction to a sparse graph cut problem, with graph
sparsity controlled by the desired approximation factor. Our method relies on a
new connection between sparse graph reduction techniques and piecewise linear
approximations to concave functions. Our sparse reduction technique leads to
significant improvements in theoretical runtimes, as well as substantial
practical gains in problems ranging from benchmark image segmentation tasks to
hypergraph clustering problems.
</p></div>
    </summary>
    <updated>2021-10-31T22:49:59Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14815</id>
    <link href="http://arxiv.org/abs/2110.14815" rel="alternate" type="text/html"/>
    <title>Deterministic enumeration of all minimum cut-sets and $k$-cut-sets in hypergraphs for fixed $k$</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Beideman:Calvin.html">Calvin Beideman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chandrasekaran:Karthekeyan.html">Karthekeyan Chandrasekaran</a>, Weihang Wang <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14815">PDF</a><br/><b>Abstract: </b>We consider the problem of deterministically enumerating all minimum
$k$-cut-sets in a given hypergraph for any fixed $k$. The input here is a
hypergraph $G = (V, E)$ with non-negative hyperedge costs. A subset $F$ of
hyperedges is a $k$-cut-set if the number of connected components in $G - F$ is
at least $k$ and it is a minimum $k$-cut-set if it has the least cost among all
$k$-cut-sets. For fixed $k$, we call the problem of finding a minimum
$k$-cut-set as Hypergraph-$k$-Cut and the problem of enumerating all minimum
$k$-cut-sets as Enum-Hypergraph-$k$-Cut. The special cases of
Hypergraph-$k$-Cut and Enum-Hypergraph-$k$-Cut restricted to graph inputs are
well-known to be solvable in (randomized as well as deterministic) polynomial
time. In contrast, it is only recently that polynomial-time algorithms for
Hypergraph-$k$-Cut were developed. The randomized polynomial-time algorithm for
Hypergraph-$k$-Cut that was designed in 2018 (Chandrasekaran, Xu, and Yu, SODA
2018) showed that the number of minimum $k$-cut-sets in a hypergraph is
$O(n^{2k-2})$, where $n$ is the number of vertices in the input hypergraph, and
that they can all be enumerated in randomized polynomial time, thus resolving
Enum-Hypergraph-$k$-Cut in randomized polynomial time. A deterministic
polynomial-time algorithm for Hypergraph-$k$-Cut was subsequently designed in
2020 (Chandrasekaran and Chekuri, FOCS 2020), but it is not guaranteed to
enumerate all minimum $k$-cut-sets. In this work, we give the first
deterministic polynomial-time algorithm to solve Enum-Hypergraph-$k$-Cut (this
is non-trivial even for $k = 2$). Our algorithms are based on new structural
results that allow for efficient recovery of all minimum $k$-cut-sets by
solving minimum $(S,T)$-terminal cuts. Our techniques give new structural
insights even for enumerating all minimum cut-sets (i.e., minimum 2-cut-sets)
in a given hypergraph.
</p></div>
    </summary>
    <updated>2021-10-31T22:45:02Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14734</id>
    <link href="http://arxiv.org/abs/2110.14734" rel="alternate" type="text/html"/>
    <title>Approximating 1-Wasserstein Distance between Persistence Diagrams by Graph Sparsification</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dey:Tamal_K=.html">Tamal K. Dey</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Simon.html">Simon Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14734">PDF</a><br/><b>Abstract: </b>Persistence diagrams (PD)s play a central role in topological data analysis.
This analysis requires computing distances among such diagrams such as the
1-Wasserstein distance. Accurate computation of these PD distances for large
data sets that render large diagrams may not scale appropriately with the
existing methods. The main source of difficulty ensues from the size of the
bipartite graph on which a matching needs to be computed for determining these
PD distances. We address this problem by making several algorithmic and
computational observations in order to obtain an approximation. First, taking
advantage of the proximity of PD points, we condense them thereby decreasing
the number of nodes in the graph for computation. The increase in point
multiplicities is addressed by reducing the matching problem to a min-cost flow
problem on a transshipment network. Second, we use Well Separated Pair
Decomposition to sparsify the graph to a size that is linear in the number of
points. Both node and arc sparsifications contribute to the approximation
factor where we leverage a lower bound given by the Relaxed Word Mover's
distance. Third, we eliminate bottlenecks during the sparsification procedure
by introducing parallelism. Fourth, we develop an open source software called
PDoptFlow based on our algorithm, exploiting parallelism by GPU and multicore.
We perform extensive experiments and show that the actual empirical error is
very low. We also show that we can achieve high performance at low guaranteed
relative errors, improving upon the state of the arts.
</p></div>
    </summary>
    <updated>2021-10-31T22:52:12Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14717</id>
    <link href="http://arxiv.org/abs/2110.14717" rel="alternate" type="text/html"/>
    <title>An Efficient Reversible Algorithm for Linear Regression</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lynch:Jayson.html">Jayson Lynch</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sun:Jiaying.html">Jiaying Sun</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14717">PDF</a><br/><b>Abstract: </b>This paper presents an efficient reversible algorithm for linear regression,
both with and without ridge regression. Our reversible algorithm matches the
asymptotic time and space complexity of standard irreversible algorithms for
this problem. Needed for this result is the expansion of the analysis of
efficient reversible matrix multiplication to rectangular matrices and matrix
inversion.
</p></div>
    </summary>
    <updated>2021-10-31T22:50:35Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2110.14676</id>
    <link href="http://arxiv.org/abs/2110.14676" rel="alternate" type="text/html"/>
    <title>Algorithmic Reconstruction of the Fiber of Persistent Homology on Cell Complexes</title>
    <feedworld_mtime>1635638400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Leygonie:Jacob.html">Jacob Leygonie</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Henselman=Petrusek:Gregory.html">Gregory Henselman-Petrusek</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2110.14676">PDF</a><br/><b>Abstract: </b>Let $K$ be a finite simplicial, cubical, delta or CW complex. The persistence
map $\mathrm{PH}$ takes a filter $f:K \rightarrow \mathbb{R}$ as input and
returns the barcodes $\mathrm{PH}(f)$ of the associated sublevel set persistent
homology modules. We address the inverse problem: given a target barcode $D$,
computing the fiber $\mathrm{PH}^{-1}(D)$. For this, we use the fact that
$\mathrm{PH}^{-1}(D)$ decomposes as complex of polyhedra when $K$ is a
simplicial complex, and we generalise this result to arbitrary based chain
complexes. We then design and implement a depth first search algorithm that
recovers the polyhedra forming the fiber $\mathrm{PH}^{-1}(D)$. As an
application, we solve a corpus of 120 sample problems, providing a first
insight into the statistical structure of these fibers, for general CW
complexes.
</p></div>
    </summary>
    <updated>2021-10-31T22:51:59Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2021-10-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/10/30/two-counterexamples-covering</id>
    <link href="https://11011110.github.io/blog/2021/10/30/two-counterexamples-covering.html" rel="alternate" type="text/html"/>
    <title>Two counterexamples for covering points by two polygons</title>
    <summary>One of our students made a seminar presentation this week on the problem of covering a given set of \(n\) points by two scaled and translated copies of a given convex \(k\)-gon, minimizing the scale factor, based on a 2016 conference paper on the problem published by someone else. The presentation was good but the paper turns out to be wrong in several ways. I think it should not be difficult to find the paper if you look, but I’m avoiding naming it here: it’s uncited, so it hasn’t done much damage to the literature, its author’s other papers are not as far as I know problematic, the author appears to want to forget the paper (there was no journal version and it is not included in their online publication list), and I want to focus on the geometric nature of the mistakes rather than on pointing fingers.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>One of our students made a seminar presentation this week on the problem of covering
a given set of \(n\) points by two scaled and translated copies of a given convex <span style="white-space: nowrap;">\(k\)-gon,</span> minimizing the scale factor, based on a 2016 conference paper on the problem published by someone else. The presentation was good but the paper turns out to be wrong in several ways. I think it should not be difficult to find the paper if you look, but I’m avoiding naming it here: it’s uncited, so it hasn’t done much damage to the literature, its author’s other papers are not as far as I know problematic, the author appears to want to forget the paper (there was no journal version and it is not included in their online publication list), and I want to focus on the geometric nature of the mistakes rather than on pointing fingers.</p>

<p>The algorithm of the paper starts by (correctly) computing the optimal cover of the given points by a single copy of the polygon. This is a low-dimensional linear program, but one with \(O(nk)\) constraints, one for each pair of a side of the polygon and an input point to be covered. The paper makes the observation that the only pairs that matter are the ones that match each side to the extreme point in a perpendicular direction, and it uses a nice divide-and-conquer method to find these extreme points in time \(O(n\log k)\), which turns out to be the bottleneck of the algorithm.</p>

<p>It then tries to use this one-copy cover to speed up the two-copy cover, and this is where things go wrong. It claims that if the one-copy cover has five or more of its sides touched by input points, then the optimal two-copy cover has the same scale factor: there are so many touching points that three or more of them would all have to be in the same copy of the two-copy cover, and would force it to have the same size as the one-copy cover. This is false.</p>

<p style="text-align: center;"><img alt="Even when a regular hexagon is touched on six sides by the points that it covers, it may be possible to cover the same points by two smaller regular hexagons" src="https://11011110.github.io/blog/assets/2021/6fixture-can-shrink.svg"/></p>

<p>It claims that, when four or fewer sides of the one-copy cover are touched by input points, then for the optimal two-copy cover, one of the two copies will be touched on two sides with the same slopes. If true this would greatly simplify the search for the optimal partition into two subsets and the optimal scale factor for that partition. But it is false: there exist instances where the slopes of sides touched on the two-copy cover are completely disjoint from the slopes touched on the one-copy cover.</p>

<p style="text-align: center;"><img alt="Even when an octagon is touched on four sides by the points that it covers, the smallest two scaled and translated octagons that cover the same points may not be touched on any of the same sides" src="https://11011110.github.io/blog/assets/2021/4fixture-can-shrink.svg"/></p>

<p>I think what is going on here is a more general phenomenon relating to linear programming, rather than to this specific geometric optimization problem. Suppose you have a linear program with \(k\) variables (here, three variables for the scale factor and translation vector of the single-copy cover), and to keep things simple let’s say that it has a unique optimal solution. That solution will be determined by a basis, a minimal subset of inequalities with the same solution. The basis inequalities become tight equalities rather than inequalities, and if you know which ones they are then you can just solve these \(k\) linear equations in the \(k\) unknowns. However, more than \(k\) inequalities may be  tight, and there may be more than one basis. With some additional assumptions that are automatically satisfied here you can choose any <span style="white-space: nowrap;">\(k\)-tuple</span> of tight inequalities, solve linear equations, and get the same solution. But that does <em>not</em> mean that every <span style="white-space: nowrap;">\(k\)-tuple</span> of tight inequalities is a basis, and it does not mean that these tight inequalities stay tight for all subsets of the constraints.</p>

<p>Turning this idea back into geometry, in each of these figures, the inequalities come from pairs of a point and a polygon side. Each inequality states that its point must be contained in the halfspace bounded by its side, and it is tight when the point lies on the side. Any translated and scaled copy of a polygon is determined by points that touch any three of its sides. But forming a basis, for the problem of covering points with the smallest possible copy, is a stronger property. A set of three sides and (maybe fewer than three) touching points forms a basis only when the normal vectors to those sides do not span an angle less <span style="white-space: nowrap;">than \(\pi\).</span></p>

<p>For instance, for the hexagons of the first illustration, triples of consecutive sides have normal vectors that span only an angle <span style="white-space: nowrap;">of \(2\pi/3\),</span> too small to form a basis. Other triples of sides have normal vectors that are more spread out and do form a basis. The blue one-copy hexagon containing all of the points is optimal, because all six of its sides are touched, and many triples of those touched sides are non-consecutive. But when we split the points into the two yellow hexagons, each yellow hexagon contains the points that touch only a consecutive triple of blue sides, not a basis. Because they are not a basis, those three points (and the other points that are grouped along with them) can be contained in a smaller hexagon than the blue one. (Exercise: find a basis for one of the yellow hexagons, showing that at least for this partition into two subsets the scale factor is optimal.)</p>

<p>(<a href="https://mathstodon.xyz/@11011110/107192319455242081">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2021-10-30T12:34:00Z</updated>
    <published>2021-10-30T12:34:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-11-01T02:11:11Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/29/tenure-track-assistant-professor-position-in-algorithms-at-university-of-vienna-austria-apply-by-january-10-2022/</id>
    <link href="https://cstheory-jobs.org/2021/10/29/tenure-track-assistant-professor-position-in-algorithms-at-university-of-vienna-austria-apply-by-january-10-2022/" rel="alternate" type="text/html"/>
    <title>Tenure-track assistant professor position in algorithms at University of Vienna, Austria (apply by January 10, 2022)</title>
    <summary>The faculty of Computer Science is inviting applications for a full-time tenure-track assistant professor position in the design and analysis of algorithms. Excellent candidates in all fields of algorithms are encouraged to apply. Website: https://univis.univie.ac.at/ausschreibungstellensuche/flow/bew_ausschreibung-flow?_flowExecutionKey=_cE6855C1E-D7E3-F933-5554-A27CD0FF2612_kFC207DD0-4381-FA23-2F97-263156792539&amp;tid=88323.28 Email: monika.henzinger@univie.ac.at</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The faculty of Computer Science is inviting applications for a full-time tenure-track assistant professor position in the design and analysis of algorithms. Excellent candidates in all fields of algorithms are encouraged to apply.</p>
<p>Website: <a href="https://univis.univie.ac.at/ausschreibungstellensuche/flow/bew_ausschreibung-flow?_flowExecutionKey=_cE6855C1E-D7E3-F933-5554-A27CD0FF2612_kFC207DD0-4381-FA23-2F97-263156792539&amp;tid=88323.28">https://univis.univie.ac.at/ausschreibungstellensuche/flow/bew_ausschreibung-flow?_flowExecutionKey=_cE6855C1E-D7E3-F933-5554-A27CD0FF2612_kFC207DD0-4381-FA23-2F97-263156792539&amp;tid=88323.28</a><br/>
Email: monika.henzinger@univie.ac.at</p></div>
    </content>
    <updated>2021-10-29T23:21:01Z</updated>
    <published>2021-10-29T23:21:01Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/29/postdoc-at-bocconi-university-apply-by-december-12-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/29/postdoc-at-bocconi-university-apply-by-december-12-2021/" rel="alternate" type="text/html"/>
    <title>Postdoc at Bocconi University (apply by December 12, 2021)</title>
    <summary>Bocconi University has two open postdoc positions in Luca Trevisan’s group, to work on topics related to spectral graph theory, approximation algorithms, average-case complexity and related areas, starting Fall 2022. Each position is for one year, renewable for a second. Website: https://lucatrevisan.wordpress.com/2021/10/21/postdoc-positions/ Email: l.trevisan@unibocconi.it</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Bocconi University has two open postdoc positions in Luca Trevisan’s group, to work on topics related to spectral graph theory, approximation algorithms, average-case complexity and related areas, starting Fall 2022. Each position is for one year, renewable for a second.</p>
<p>Website: <a href="https://lucatrevisan.wordpress.com/2021/10/21/postdoc-positions/">https://lucatrevisan.wordpress.com/2021/10/21/postdoc-positions/</a><br/>
Email: l.trevisan@unibocconi.it</p></div>
    </content>
    <updated>2021-10-29T13:06:17Z</updated>
    <published>2021-10-29T13:06:17Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2021-10-29-consensus-cheat-sheet/</id>
    <link href="https://decentralizedthoughts.github.io/2021-10-29-consensus-cheat-sheet/" rel="alternate" type="text/html"/>
    <title>Consensus cheat sheet</title>
    <summary>Crash Omission Byzantine Synchrony $f&lt;n$ is possible $f+1$ round executions must exist $f \geq n/2$ is impossible $f&lt;n/2$ possible with PKI / PoW $f \geq n/3$ impossible without PKI/PoW Partial Synchrony $f \geq n/2$ is impossible $f&lt;n/2$ is possible $f&lt;n/3$ is possible $f \geq n/3$ is impossible Asynchrony non...</summary>
    <updated>2021-10-29T12:18:00Z</updated>
    <published>2021-10-29T12:18:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2021-10-31T22:55:51Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/28/faculty-at-imperial-college-london-apply-by-january-4-2022/</id>
    <link href="https://cstheory-jobs.org/2021/10/28/faculty-at-imperial-college-london-apply-by-january-4-2022/" rel="alternate" type="text/html"/>
    <title>Faculty at Imperial College London (apply by January 4, 2022)</title>
    <summary>The Department of Computing at Imperial College London invites applications for four full-time permanent faculty members at the Assistant Professorships level (lecturer). Exceptional candidates may be appointed at Associate Professorships level. We offer a competitive salary package, and we will consider outstanding candidates from any area of Computer Science. Website: https://www.imperial.ac.uk/jobs/description/ENG01911/lecturers-computing/ Email: margaret.hall@imperial.ac.uk</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computing at Imperial College London invites applications for four full-time permanent faculty members at the Assistant Professorships level (lecturer). Exceptional candidates may be appointed at Associate Professorships level.</p>
<p>We offer a competitive salary package, and we will consider outstanding candidates from any area of Computer Science.</p>
<p>Website: <a href="https://www.imperial.ac.uk/jobs/description/ENG01911/lecturers-computing/">https://www.imperial.ac.uk/jobs/description/ENG01911/lecturers-computing/</a><br/>
Email: margaret.hall@imperial.ac.uk</p></div>
    </content>
    <updated>2021-10-28T17:06:39Z</updated>
    <published>2021-10-28T17:06:39Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/28/faculty-at-northeastern-university-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/28/faculty-at-northeastern-university-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Faculty at Northeastern University (apply by December 1, 2021)</title>
    <summary>Northeastern is hiring broadly in all areas of computer science, with two specially designated faculty slots relating to theory: * Quantum computing: broadly defined, including quantum algorithms, quantum complexity and quantum information theory. * Cryptography, with an emphasis on quantum and/or post-quantum cryptography. Website: https://www.khoury.northeastern.edu/information-for-overview/prospective-faculty/open-positions/ Email: khoury-hr@northeastern.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Northeastern is hiring broadly in all areas of computer science, with two specially designated faculty slots relating to theory:</p>
<p>* Quantum computing: broadly defined, including quantum algorithms, quantum complexity and quantum information theory.</p>
<p>* Cryptography, with an emphasis on quantum and/or post-quantum cryptography.</p>
<p>Website: <a href="https://www.khoury.northeastern.edu/information-for-overview/prospective-faculty/open-positions/">https://www.khoury.northeastern.edu/information-for-overview/prospective-faculty/open-positions/</a><br/>
Email: khoury-hr@northeastern.edu</p></div>
    </content>
    <updated>2021-10-28T06:23:19Z</updated>
    <published>2021-10-28T06:23:19Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/27/faculty-at-university-of-waterloo-apply-by-december-1-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/27/faculty-at-university-of-waterloo-apply-by-december-1-2021/" rel="alternate" type="text/html"/>
    <title>Faculty at University of Waterloo (apply by December 1, 2021)</title>
    <summary>The David R. Cheriton School of Computer Science at the University of Waterloo invites applications for eight tenure-track Assistant Professor positions, subject to budget approval. Priority areas include: 1. Data Systems 2. Systems and Networking 3. Robotics, Machine Learning, Multiagent Systems, Natural Language Processing, or Computer Vision 4. Bioinformatics 5. All areas of Computer Science […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The David R. Cheriton School of Computer Science at the University of Waterloo invites applications for eight tenure-track Assistant Professor positions, subject to budget approval. Priority areas include:</p>
<p>1. Data Systems<br/>
2. Systems and Networking<br/>
3. Robotics, Machine Learning, Multiagent Systems, Natural Language Processing, or Computer Vision 4. Bioinformatics<br/>
5. All areas of Computer Science</p>
<p>Website: <a href="https://cs.uwaterloo.ca/about/open-positions/tenure-track-positions">https://cs.uwaterloo.ca/about/open-positions/tenure-track-positions</a><br/>
Email: cs-recruiting@uwaterloo.ca</p></div>
    </content>
    <updated>2021-10-27T23:50:51Z</updated>
    <published>2021-10-27T23:50:51Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-3113376765706910797</id>
    <link href="http://blog.computationalcomplexity.org/feeds/3113376765706910797/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/fall-2021-jobs-post.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/3113376765706910797" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/3113376765706910797" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/fall-2021-jobs-post.html" rel="alternate" type="text/html"/>
    <title>Fall 2021 Jobs Post</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We're in the midst of a great transformation in computing, one where data takes center stage and I predict this will start to have a larger effect on hiring in computer science departments. We'll see a bigger need to grow in data science, particularly machine learning and autonomous systems. Cybersecurity and quantum computing will also grow with a push due to competition with China. Quantum winter might be coming but we're not there yet.</p><p>Harder to predict is the rest of computer science, such as traditional areas like networks, operating systems, programming languages and, yes, theory, particularly theory unrelated to quantum, learning or security. There is still a need for CS departments to grow in these areas, but we may be moving away from a rising tide raising all boats. On the other hand due to the digital transformation of just about everything, non-CS departments are hiring people who look a lot like computer scientists.</p><p>Other factors may cause US universities to be more conservative in hiring such as a <a href="https://www.wsj.com/articles/college-university-fall-higher-education-men-women-enrollment-admissions-back-to-school-11630948233?st=1oz46jkmsdq8jcq&amp;reflink=desktopwebshare_permalink">drop in male students</a>, the upcoming <a href="https://www.cupahr.org/issue/feature/higher-ed-enrollment-cliff/">demographic cliff</a>, an unclear future for international students coming to the states, and a lingering COVID budget hangover.</p><p>So go get a job while the going is still good though I would not suggest forgoing a faculty position for a postdoc, particularly if you aren't working in data science.</p><p>I also wonder how the post-COVID world will affect the job search. We'll probably see more virtual interviews than the pre-COVID days at least in the early rounds. It's also harder for students to network and make themselves known at virtual and hybrid conferences which will likely persist for some time.</p><p>Give yourself a good virtual face. Have a well-designed web page with access to all your job materials and papers. Maintain your Google Scholar page. Add yourself to the CRA's <a href="https://cra.org/cv-database/">CV database</a>. Find a way to stand out, perhaps a short video describing your research. </p><p>Best source for finding jobs are the ads from the <a href="https://cra.org/ads/">CRA</a> and the <a href="https://jobs.acm.org/">ACM</a>. For theoretical computer science specific postdoc and faculty positions check out <a href="https://cstheory-jobs.org/">TCS Jobs</a> and <a href="http://dmatheorynet.blogspot.com/">Theory Announcements</a>. If you have jobs to announce, please post to the above and/or feel free to leave a comment on this post. Even if you don't see an ad for a specific school they may still be hiring, check out their website or email someone at the department. You'll never know if you don't ask.</p></div>
    </content>
    <updated>2021-10-27T21:52:00Z</updated>
    <published>2021-10-27T21:52:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-31T22:33:48Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/27/postdoc-at-tu-eindhoven-university-of-amsterdam-cwi-leiden-university-apply-by-november-15-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/27/postdoc-at-tu-eindhoven-university-of-amsterdam-cwi-leiden-university-apply-by-november-15-2021/" rel="alternate" type="text/html"/>
    <title>postdoc at TU Eindhoven, University of Amsterdam, CWI, Leiden University (apply by November 15, 2021)</title>
    <summary>The NETWORKS project focuses on stochastics and algorithmics for network problems. Are you an algorithms researcher (or a stochastics researcher) with an interest in network problems? And would you like to be part of the NETWORKS project with its many activities? Then we invite you to apply for one of these positions. Website: https://www.thenetworkcenter.nl/Open-Positions/openposition/30/14-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND- Email: […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The NETWORKS project focuses on stochastics and algorithmics for network problems. Are you an algorithms researcher (or a stochastics researcher) with an interest in network problems? And would you like to be part of the NETWORKS project with its many activities? Then we invite you to apply for one of these positions.</p>
<p>Website: <a href="https://www.thenetworkcenter.nl/Open-Positions/openposition/30/14-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-">https://www.thenetworkcenter.nl/Open-Positions/openposition/30/14-Postdoctoral-fellows-in-Stochastics-and-Algorithmics-COFUND-</a><br/>
Email: info@thenetworkcenter.nl</p></div>
    </content>
    <updated>2021-10-27T19:32:07Z</updated>
    <published>2021-10-27T19:32:07Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/27/senior-lecturer-associate-professor-at-the-university-of-melbourne-apply-by-november-10-2021/</id>
    <link href="https://cstheory-jobs.org/2021/10/27/senior-lecturer-associate-professor-at-the-university-of-melbourne-apply-by-november-10-2021/" rel="alternate" type="text/html"/>
    <title>Senior Lecturer/Associate Professor at The University of Melbourne (apply by November 10, 2021)</title>
    <summary>The Faculty of Engineering and Information Technology (FEIT) is seeking a dynamic academic with expertise in algorithms and their fairness, or related fields, to join the School of Computing and Information Systems (CIS). Website: https://jobs.unimelb.edu.au/en/job/906606/senior-lecturerassociate-professor-in-algorithms-and-fairness Email: awirth@unimelb.edu.au</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Faculty of Engineering and Information Technology (FEIT) is seeking a dynamic academic with expertise in algorithms and their fairness, or related fields, to join the School of Computing and Information Systems (CIS).</p>
<p>Website: <a href="https://jobs.unimelb.edu.au/en/job/906606/senior-lecturerassociate-professor-in-algorithms-and-fairness">https://jobs.unimelb.edu.au/en/job/906606/senior-lecturerassociate-professor-in-algorithms-and-fairness</a><br/>
Email: awirth@unimelb.edu.au</p></div>
    </content>
    <updated>2021-10-27T05:58:34Z</updated>
    <published>2021-10-27T05:58:34Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2021/10/26/multiple-open-rank-tenure-track-positions-at-university-of-utah-apply-by-january-15-2022/</id>
    <link href="https://cstheory-jobs.org/2021/10/26/multiple-open-rank-tenure-track-positions-at-university-of-utah-apply-by-january-15-2022/" rel="alternate" type="text/html"/>
    <title>Multiple open-rank tenure track positions at University of Utah (apply by January 15, 2022)</title>
    <summary>The School of Computing at the University of Utah seeks applications for tenure-track/tenured faculty in all areas of computer science/computing, and at all ranks, to fill approximately nine available positions. Website: https://www.cs.utah.edu/faculty-hiring/#tenure Email: bhaskaraaditya@gmail.com</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The School of Computing at the University of Utah seeks applications for tenure-track/tenured faculty in all areas of computer science/computing, and at all ranks, to fill approximately nine available positions.</p>
<p>Website: <a href="https://www.cs.utah.edu/faculty-hiring/#tenure">https://www.cs.utah.edu/faculty-hiring/#tenure</a><br/>
Email: bhaskaraaditya@gmail.com</p></div>
    </content>
    <updated>2021-10-26T20:27:56Z</updated>
    <published>2021-10-26T20:27:56Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2021-11-01T07:20:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/how-to-deploy-ml-with-dp/</id>
    <link href="https://differentialprivacy.org/how-to-deploy-ml-with-dp/" rel="alternate" type="text/html"/>
    <title>How to deploy machine learning with differential privacy?</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In many applications of machine learning, such as machine learning for medical diagnosis, we would like to have machine learning algorithms that do not memorize sensitive information about the training set, such as the specific medical histories of individual patients. Differential privacy is a notion that allows quantifying the degree of privacy protection provided by an algorithm on the underlying (sensitive) data set it operates on. Through the lens of differential privacy, we can design machine learning algorithms that responsibly train models on private data.</p>

<h2 id="why-do-we-need-private-machine-learning-algorithms">Why do we need private machine learning algorithms?</h2>

<p>Machine learning algorithms work by studying a lot of data and updating their parameters to encode the relationships in that data. Ideally, we would like the parameters of these machine learning models to encode general patterns (e.g., ‘‘patients who smoke are more likely to have heart disease’’) rather than facts about specific training examples (e.g., “Jane Smith has heart disease”). Unfortunately, machine learning algorithms do not learn to ignore these specifics by default. If we want to use machine learning to solve an important task, like making a cancer diagnosis model, then when we publish that machine learning model (for example, by making an open source cancer diagnosis model for doctors all over the world to use) we might also inadvertently reveal information about the training set. A malicious attacker might be able to inspect the published model’s predictions and learn private information about Jane Smith. For instance, the adversary could mount a membership inference attack to know whether or not Jane Smith contributed her data to the model’s training set [SSS17]. The adversary could also build on membership inference attacks to extract training data by repeatedly guessing possible training points until they result in a sufficiently strong membership signal from the model’s prediction [CTW20]. In many instances, the model itself may be represented by a few of the data samples (e.g., Support Vector Machine in its dual form).</p>

<p>A common misconception is that if a model generalizes (i.e., performs well on the test examples), then it preserves privacy. As mentioned earlier, this is far from being true. One of the main reasons being that generalization is an average case behavior of a model (over the distribution of data samples), whereas privacy must be provided for everyone, including outliers (which may deviate from our distributional assumptions).</p>

<p>Over the years, researchers have proposed various approaches towards protecting privacy in learning algorithms (k-anonymity [SS98], l-diversity [MKG07], m-invariance [XT07], t-closeness [LLV07] etc.). Unfortunately, [GKS08] all these approaches are vulnerable to what are called composition attacks, that use auxiliary information to violate the privacy protection. Famously, this strategy allowed researchers to de-anonymize part of a movie ratings dataset released to participants of the Netflix Prize when the individuals had also shared their movie ratings publicly on the Internet Movie Database (IMDb) [NS08]. If Jane Smith had assigned the same ratings to movies A, B and C in the Netflix Prize dataset and publicly on IMDb at similar times, then researchers could link data corresponding to Jane across both datasets. This would in turn give them the means to recover ratings that were included in the Netflix Prize but not on IMDb. This example shows how difficult it is to define and guarantee privacy because it is hard to estimate the scope of knowledge—about individuals—available to adversaries. While the dataset released by Netflix has since been taken down, it is difficult to ensure that all of its copies have been deleted. In recent years, data sample instance encoding based methods like InstaHide [HSL20], and NeuraCrypt [YEO21] have been demonstrated to be vulnerable to such composition attacks as well.</p>

<p>As a result, the research community has converged on differential privacy [DMNS06], which provides the following semantic guarantee, as opposed to ad-hoc approaches: An adversary learns almost the same information about an individual whether or not they are present in or absent from the training data set. In particular, it provides a condition on the algorithm, independent from who might be attacking it, or the specifics of the data set instantiation.  Put another way, differential privacy is a framework for evaluating the guarantees provided by a system that was designed to protect privacy. Such systems can be applied directly to “raw” data which potentially still contains sensitive information, altogether removing the need for procedures that sanitize or anonymize data and are prone to the failures described previously. That said, minimizing data collection in the first place remains a good practice to limit other forms of privacy risk.</p>

<h2 id="designing-private-machine-learning-algorithms-via-differential-privacy">Designing Private Machine Learning Algorithms via Differential Privacy</h2>

<p>Differential privacy [DMNS06] is a semantic notion of privacy that addresses a lot of the limitations of previous approaches like k-anonymity. The basic idea is to randomize part of the mechanism’s behavior to provide privacy. In our case, the mechanism considered is a learning algorithm, but the differential privacy framework can be applied to study any algorithm.</p>

<p>The intuition for why we introduce randomness into the learning algorithm is that it obscures the contribution of an individual, but does not obscure important statistical patterns. Without randomness, we would be able to ask questions like: “What parameters does the learning algorithm choose when we train it on this specific dataset?” With randomness in the learning algorithm, we instead ask questions like: “What is the probability that the learning algorithm will choose parameters in this set of possible parameters, when we train it on this specific dataset?”</p>

<p>We use a version of differential privacy which requires (in our use case of machine learning) that the probability of learning any particular set of parameters stays roughly the same if we change a single data record in the training set. A data record can be a single training example from an individual, or the collection of all the training examples provided by an individual. The former is often referred to as example level/item level privacy, and the latter is referred to as user level differential privacy. While user level privacy provides stronger semantics, it may be harder to achieve. For a more thorough discussion about the taxonomy of these notions, see [DNPR10, JTT18, HR12, HR13]. In this document, for the ease of exposition of the technical results, we focus on the example level notion. This could mean to add a training example, remove a training example, or change the values within one training example. The intuition is that if a single patient (Jane Smith) does not affect the outcome of learning much, then that patient’s records cannot be memorized and her privacy is respected. In the rest of this post, how much a single record can affect the outcome of learning is called the sensitivity of an algorithm.</p>

<p>The guarantee of differential privacy is that the adversary is not able to distinguish the answers produced by the randomized algorithm based on the data of two of the three users from the answers returned by the same algorithm based on the data of all three users. We also refer to the degree of indistinguishability as the privacy loss. Smaller privacy loss corresponds to a stronger privacy guarantee.</p>

<p>It is often thought that privacy is a fundamental bottleneck in obtaining good prediction accuracy/generalization for machine learning algorithms. In fact, recent research has shown that in many instances it actually helps in designing algorithms with strong generalization ability. Some of the examples where DP has resulted in designing better learning algorithms are Online linear predictions [KV05] and online PCA [DTTZ13]. Notably, [DFH15] formally showed that generalization for any DP learning algorithm comes for free. More concretely, if a DP learning algorithm has good training accuracy, it is guaranteed to have good test accuracy.
This is true because differential privacy itself acts as a very strong form of regularization.</p>

<p>One might argue that the generalization guarantee which a DP algorithm can achieve may be sub-par to that of its non-private baselines. For a large class of learning tasks, one can show that asymptotically DP does not introduce any further error beyond the inherent statistical error [SSTT21]. [ACG16,BFTT19] highlights that in the presence of enough data, a DP algorithm can get arbitrarily close to the inherent statistical error, even under strong privacy parameters.</p>

<h2 id="private-empirical-risk-minimization">Private Empirical Risk Minimization</h2>

<p>Before we go into the design of specific differentially private learning algorithms, we first formalize the problem setup, and standardize some notation. Consider a training data set \(D={(x_1,y_1),…,(x_n,y_n)}\) drawn i.i.d. from some fixed (unknown) distribution \(\Pi\), with the feature vector being \(x_i\) and label/response being \(y_i\). We define the training loss at any model \(\theta\) as \(L_{train} (\theta, D) = \frac{1}{n} \sum_{i=1}^{n} l(\theta; (x_i, y_i))\), and the corresponding test loss as \(L_{test} (\theta) = E_{(x,y) \sim \Pi} l(\theta;(x,y)) \).
We will design DP algorithms to output models that approximately minimize the test loss while having access only to the training loss.</p>

<p>In the literature, there are a variety of approaches towards designing these DP learning algorithms [CMS11, KST12, BST14, PAE16, BTT18]. One can categorize them broadly as: i) algorithms that assume that the individual loss function \(l(\theta;\cdot) \) is convex in the model parameter  to ensure differential privacy, ii) algorithms that are differentially private even when the loss function is non-convex in nature (e.g., deep learning models), and iii) model agnostic algorithms, that do not require any information about the representation of the model \(\theta\), or the loss function \(l(\theta;\cdot) \). In our current discussion, we will only focus on designing algorithms for (ii), and (iii). This is because it turns out that the best known algorithms for (ii) are already competitive to algorithms that are specific for (i) [INS19].</p>

<h2 id="private-algorithms-for-training-deep-learning-models">Private Algorithms for Training Deep Learning Models</h2>

<p>The first approach, due to SCS13, BST14, and ACG16, is named differentially private stochastic gradient descent (DP-SGD). It proposes to modify the model updates computed by the most common optimizer used in deep learning: stochastic gradient descent (SGD). Typically, stochastic gradient descent trains iteratively. At each iteration, a small number of training examples (a “minibatch”) are sampled from the training set. The optimizer computes the average model error on these examples, and then differentiates this average error with respect to each of the model parameters to obtain a gradient vector. Finally, the model parameters (\(\theta_t\)) are updated by subtracting this gradient (\(\nabla_t\)) multiplied by a small constant \(\eta\) (the learning rate controls how quickly the optimizer updates the model’s parameters). At a high level, two modifications are made by DP-SGD to obtain differential privacy: gradients, which are computed on a per-example basis (rather than averaged over multiple examples), are first clipped to control their sensitivity, and, second, spherical Gaussian noise \(b_t\) is added to their sum to obtain the indistinguishability needed for DP. Succinctly, the update step can be written as follows: \(\theta_{t+1} \leftarrow \theta_t - \eta \cdot (\nabla_t + b_t)\).</p>

<p>Let us take the example of a hospital training a model to predict whether patients will be readmitted after being released. To train the model, the hospital uses information from patient records, such as demographic variables and admission variables (e.g., age, ethnicity, insurance type, type of Intensive Care Unit admitted to) but also time-varying vitals and labs (e.g., heart rate, blood pressure, white blood cell counts) [JPS16]. The modifications made by DP-SGD ensure that if (1) Jane Smith’s individual patient record contained unusual features, e.g., her insurance provider was uncommon for people of her age or her heart rate followed an unusual pattern, the resulting signal will have a bounded impact on our model updates, and (2) the model’s final parameters would be essentially identical should Jane Smith have chosen to not contribute (i.e., opt-out) her patient record to the training set. Stronger differential privacy is achieved when one is able to introduce more noise (i.e., sample noise with larger standard deviation) and train for as few iterations as possible.</p>

<p>Two main components in the above DP-SGD algorithm that distinguishes itself from traditional SGD are: i) per-example clipping and ii) Gaussian noise addition. In addition, for the analysis to hold, DP-SGD requires that sub-sampling of mini batches is uniform at random from the training data set. While this is not a requirement of DP-SGD per se, in practice many implementations of SGD do not satisfy this requirement and instead analyze different permutations of the data at each epoch of training.</p>

<p>While gradient clipping is common in deep learning, often used as a form of regularization, it differs from that in DP-SGD as follows: The average gradient over the minibatch is clipped, as opposed to clipping the gradient of individual examples (i.e., \(l(\theta_t;(x,y)) \) before averaging. It is an ongoing research direction to both understand the effect of per-example clipping in DP-SGD in model training [SSTT21], and also effective ways to mitigate its impact both in terms of accuracy [PTS21], and training time [ZHS19].</p>

<p>In standard stochastic gradient descent, subsampling is usually used either as a way to speed up the training process [CAR16], or as a a form of regularization [RCR15]. In DP-SGD, the randomness in the subsampling of the minibatch is used to guarantee DP. The technical component for this sort of privacy analysis is called privacy amplification by subsampling [KLNRS08,BBG18]. Since the sampling randomness is used to guarantee DP, it is crucial that the uniformity in the sampling step is of cryptographic strength. Another, (possibly) counterintuitive feature of DP-SGD is that for best privacy/utility trade-off it is in general better to have larger batch sizes. In fact, full-batch DP-gradient descent may provide the best privacy/utility trade-offs, albeit at the expense of computational feasibility.</p>

<p>For a fixed DP guarantee, the magnitude of the Gaussian noise that gets added to the gradient updates in each step in DP-SGD is proportional to \(\sqrt{the\ number\ of\ steps}\) the model is trained for. As a result, it is important to tune the number of training steps for best privacy/utility trade-offs.</p>

<p>In the <a href="https://github.com/tensorflow/privacy/blob/master/tutorials/mnist_dpsgd_tutorial.py">following tutorial</a>, we provide a small code snippet to train a model with DP-SGD.</p>

<h2 id="model-agnostic-private-learning">Model Agnostic Private Learning</h2>

<p>The Sample and Aggregate framework [NRS07] is a generic method to add differential privacy to a non-private algorithm without caring about the internal workings of it, a.k.a. model agnostic. In the context of machine learning, one can state the main idea as follows: Consider a multi-class classification problem. Take the training data, and split into k disjoint subsets of equal size. Train independent models \(\theta_1, \theta_2, …, \theta_k \) on the disjoint subsets. In order to predict on an test example x, first, compute a private histogram over the set of k predictions \(\theta_1(x), \theta_2(x), …, \theta_k(x) \). Then, select and output the bin in the histogram based on the highest count, after adding a small amount of Laplace/Gaussian noise to the counts. In the context of DP learning, this particular approach was used in two different lines of work: i) PATE [PAE16], and ii) Model agnostic private learning [BTT18]. While the latter focussed on obtaining theoretical privacy/utility trade-offs for a class of learning tasks (e.g., agnostic PAC learning), the PATE approach focuses on practical deployment. Both these lines of work make one common observation. If the predictions from \(\theta_1(x), \theta_2(x), …, \theta_k(x) \) are fairly consistent, then the privacy cost in terms of DP is very small. Hence, one can run a large number of prediction queries, without violating DP constraints. In the following, we describe the PATE approach in detail.</p>

<p>The private aggregation of teacher ensembles (PATE) demonstrated in particular that this approach allows one to learn deep neural networks with differential privacy. It proposes to have an ensemble of models trained without privacy predict with differential privacy by having these models predict in aggregate rather than revealing their individual predictions. In PATE, we start by partitioning the private dataset into smaller subsets of data. These subsets are partitions, so there is no overlap between the data included in any pair of partitions. If Jane Smith’s record was in our private dataset, then it is included in one of the partitions only. That is, only one of the teachers has analyzed Jane Smith’s record during training. We train a ML model, called a teacher, on each of these partitions. We now have an ensemble of teacher models that were trained independently, but without any guarantees of privacy. How do we use this ensemble to make predictions that respect privacy? In PATE, we add noise while aggregating the predictions made individually by each teacher to form a single common prediction. We count the number of teachers who voted for each class, and then perturb that count by adding random noise sampled from the Laplace or Gaussian distribution. Each label predicted by the noisy aggregation mechanism comes with rigorous differential privacy guarantees that bound the privacy budget spent to label that input. Again, stronger differential privacy is achieved when we are able to introduce more noise in the aggregation and are able to answer as few queries as possible. Let us now come back to our running example. Imagine that we’d like to use the output of PATE to know if Jane likes a particular movie. The only teacher trained on the partition containing Jane Smith’s data—has now learned that a record similar to Jane’s is characteristic of an individual who likes similar movies, and as a consequence changes its prediction on a test input which is similar to Jane’s to predict the movie rating assigned by Jane. However, because the teacher only contributes a single vote to the aggregation, and that the aggregation injects noise, we won’t be able to know whether the teacher changed its prediction to the movie rating assigned by Jane because the teacher indeed trained on Jane’s data or because the noise injected during the aggregation “flipped” that teacher’s vote. The random noise added to vote counts prevents the outcome of aggregation from reflecting the votes of any individual teachers to protect privacy.</p>

<h2 id="practically-deploying-differential-privacy-in-machine-learning">Practically deploying differential privacy in machine learning</h2>

<p>The two approaches we introduced have the advantage of being conceptually simple to understand. Fortunately, there also exist several open-source implementations of these approaches. For instance, DP-SGD is implemented in TensorFlow Privacy, Objax, and Opacus. This means that one is able to take an existing TensorFlow, JAX, or PyTorch pipeline for training a machine learning model and replace a non-private optimizer with DP-SGD. An example implementation of PATE is also available in TensorFlow Privacy. So what are the concrete potential obstacles to deploying machine learning with differential privacy?</p>

<p>The first obstacle is the accuracy of privacy-preserving models. Datasets are often sampled from distribution with heavy tails. For instance, in a medical application, there are typically (and fortunately) fewer patients with a given medical condition than patients without that condition. This means that there are fewer training examples for patients with each medical condition to learn from. Because differential privacy prevents us from learning patterns which are not found generally across the training data, it limits our ability to learn from these patients for which we have very few examples of [SPG]. More generally, there is often a trade-off between the accuracy of a model and the strength of the differential privacy guarantee it was trained with: the smaller the privacy budget is, the larger the impact on accuracy typically is. That said, this tension is not always inevitable and there are instances where privacy and accuracy are synergical because differential privacy implies generalization [DFH15] (but not vice versa).</p>

<p>The second obstacle to deploying differentially private machine learning can be the computational overhead. For instance, in DP-SGD one must compute per-example gradients rather than average gradients. This often means that optimizations implemented in machine learning frameworks to exploit matrix algebra supported by underlying hardware accelerators (e.g., GPUs) are harder to take advantage of. In another example, PATE requires that one train multiple models (the teachers) rather than a single model so this can also introduce overhead in the training procedure. Fortunately, this cost is mostly mitigated in recent implementations of private learning algorithms, in particular in Objax and Opacus.</p>

<p>The third obstacle to deploying differential privacy, in machine learning but more generally in any form of data analysis, is the choice of privacy budget. The smaller the budget, the stronger the guarantee is. This means one can compare two analyses and say which one is “more private”. However, this also means that it is unclear what is “small enough” of a privacy budget. This is particularly problematic given that applications of differential privacy to machine learning often require a privacy budget that provides little theoretical guarantees in order to train a model whose accuracy is large enough to warrant a useful deployment. Thus, it may be interesting for practitioners to evaluate the privacy of their machine learning algorithm by attacking it themselves. Whereas the theoretical analysis of an algorithm’s differential privacy guarantees provides a worst-case guarantee limiting how much private information the algorithm can leak against any adversary, implementing a specific attack can be useful to know how successful a particular adversary or class of adversaries would be. This helps interpret the theoretical guarantee but may not be treated as a direct substitute for it. Open-source implementations of such attacks are increasingly available: e.g., for membership inference <a href="https://github.com/tensorflow/privacy/tree/master/tensorflow_privacy/privacy/privacy_tests/membership_inference_attack">here</a> and <a href="https://github.com/cchoquette/membership-inference">here</a>.</p>

<h2 id="conclusion">Conclusion</h2>

<p>In the above, we discussed some of the algorithmic approaches towards differentially private model training which have been effective both in theoretical and practical settings. Since it is a rapidly growing field, we could not cover all the important aspects of the research space. Some prominent ones include: i) Choice of the best hyperparameters in the training of DP models.In order to ensure that the overall algorithm preserves differential privacy, one needs to ensure that the choice of hyperparameters itself preserves DP. Recent research has provided algorithms for selecting the best hyperparameters in a differentially private fashion [LT19]. ii) Choice of network architecture: it is not always true that the best known model architectures for non-private model training are indeed the best for training with differential privacy. In particular, we know that the number of model parameters may have adverse effects on the privacy/utility trade-offs [BST14]. Hence, choosing the right model architecture is important for providing a good privacy/utility trade-off [PTS21]. (iii) Training in the federated/distributed setting: in the above exposition, we assumed that the training data lies in a single centralized location. However, in settings like Federated Learning (FL) [MMRHA17], the data records can be highly distributed, e.g., across various mobile devices. Running DP-SGD in the FL setting, which is required for FL to provide privacy guarantees for the training data, raises a series of challenges [KMA19] which are often facilitated by distributed private learning algorithms designed specifically for FL settings [BKMTT20, KMSTTZ21]. Some of the specific challenges in the context of FL include, limited and non-uniform availability of clients (holding individual data records) and unknown (and variable) size of the training data [BKMTT18]. On the other hand, PATE style algorithms lend themselves naturally to the distributed setting once combined with existing cryptographic primitives, as demonstrated by the CaPC protocol [CDD21]. It is an active area of research to address these above challenges.</p>

<h2 id="acknowledgements">Acknowledgements</h2>

<p>The authors would like to thank Thomas Steinke and Andreas Terzis for detailed feedback and edit suggestions. Parts of this blog post previously appeared on <a href="https://differentialprivacy.org/www.cleverhans.io">www.cleverhans.io</a>.</p>

<h2 id="citations">Citations</h2>

<p>[ACG16] Abadi, M., Chu, A., Goodfellow, I., McMahan, H. B., Mironov, I., Talwar, K., &amp; Zhang, L. (2016, October). Deep learning with differential privacy. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (pp. 308-318). ACM.</p>

<p>[BBG18] Balle, B., Barthe, G., &amp; Gaboardi, M. (2018). Privacy amplification by subsampling: Tight analyses via couplings and divergences. arXiv preprint arXiv:1807.01647.</p>

<p>[BKMTT18] Balle, B., Kairouz P., McMahan M., Thakkar O. &amp; Thakurta A. (2020). Privacy amplification via random check-ins. In NeurIPS.</p>

<p>[MMRHA17] McMahan, B., Moore, E., Ramage, D., Hampson, S., &amp; y Arcas, B. A. (2017, April). Communication-efficient learning of deep networks from decentralized data. In Artificial intelligence and statistics (pp. 1273-1282). PMLR.</p>

<p>[KMSTTZ18] Kairouz P., McMahan M., Song S., Thakkar O., Thakurta A., &amp; Xu Z. (2021). Practical and Private (Deep) Learning without Sampling or Shuffling. In ICML.</p>

<p>[BFTT19] Bassily, R., Feldman, V., Talwar, K., &amp; Thakurta, A. Private Stochastic Convex Optimization with Optimal Rates. In NeurIPS 2019.</p>

<p>[BST14] Raef Bassily, Adam Smith, and Abhradeep Thakurta. Private empirical risk minimization: Efficient algorithms and tight error bounds. In Proceedings of the 55th Annual IEEE Symposium on Foundations of Computer Science.</p>

<p>[BTT18] Bassily, R., Thakurta, A. G., &amp; Thakkar, O. D. (2018). Model-agnostic private learning. Advances in Neural Information Processing Systems.</p>

<p>[CDD21] Choquette-Choo, C. A., Dullerud, N., Dziedzic, A., Zhang, Y., Jha, S., Papernot, N., &amp; Wang, X. (2021). CaPC Learning: Confidential and Private Collaborative Learning. arXiv preprint arXiv:2102.05188.</p>

<p>[CMS11] Chaudhuri, K., Monteleoni, C., &amp; Sarwate, A. D. (2011). Differentially private empirical risk minimization. Journal of Machine Learning Research, 12(3).</p>

<p>[CTW20] Carlini, N., Tramer, F., Wallace, E., Jagielski, M., Herbert-Voss, A., Lee, K., … &amp; Raffel, C. (2020). Extracting training data from large language models. arXiv preprint arXiv:2012.07805.</p>

<p>[DFH15] Dwork, C., Feldman, V., Hardt, M., Pitassi, T., Reingold, O., &amp; Roth, A. (2015). Generalization in adaptive data analysis and holdout reuse. arXiv preprint arXiv:1506.02629.</p>

<p>[DMNS06] Dwork, C., McSherry, F., Nissim, K., &amp; Smith, A. (2006, March). Calibrating noise to sensitivity in private data analysis. In Theory of Cryptography Conference (pp. 265-284). Springer, Berlin, Heidelberg.</p>

<p>[DNPR10] Dwork, C., Naor, M., Pitassi, T., &amp; Rothblum, G. N. (2010, June). Differential privacy under continual observation. In Proceedings of the forty-second ACM symposium on Theory of computing (pp. 715-724).</p>

<p>[DTTZ14] Dwork, C., Talwar, K., Thakurta, A., &amp; Zhang, L. (2014, May). Analyze gauss: optimal bounds for privacy-preserving principal component analysis. In Proceedings of the forty-sixth annual ACM symposium on Theory of computing (pp. 11-20).</p>

<p>[HSL20] Huang, Y., Song, Z., Li, K., &amp; Arora, S. (2020, November). Instahide: Instance-hiding schemes for private distributed learning. In International Conference on Machine Learning (pp. 4507-4518). PMLR.</p>

<p>[HR12] Hardt, M., &amp; Roth, A. (2012, May). Beating randomized response on incoherent matrices. In Proceedings of the forty-fourth annual ACM symposium on Theory of computing (pp. 1255-1268).</p>

<p>[HR13] Hardt, M., &amp; Roth, A. (2013, June). Beyond worst-case analysis in private singular vector computation. In Proceedings of the forty-fifth annual ACM symposium on Theory of computing (pp. 331-340).</p>

<p>[JPS16] Johnson, A., Pollard, T., Shen, L. et al. MIMIC-III, a freely accessible critical care database. Sci Data 3, 160035 (2016). https://doi.org/10.1038/sdata.2016.35</p>

<p>[JTT18] Jain, P., Thakkar, O. D., &amp; Thakurta, A. (2018, July). Differentially private matrix completion revisited. In International Conference on Machine Learning (pp. 2215-2224). PMLR.</p>

<p>[INS19] Iyengar, R., Near, J. P., Song, D., Thakkar, O., Thakurta, A., &amp; Wang, L. (2019, May). Towards practical differentially private convex optimization. In 2019 IEEE Symposium on Security and Privacy (SP) (pp. 299-316). IEEE.</p>

<p>[KST12] Kifer, D., Smith, A., &amp; Thakurta, A. (2012, June). Private convex empirical risk minimization and high-dimensional regression. In Conference on Learning Theory (pp. 25-1). JMLR Workshop and Conference Proceedings.</p>

<p>[KMA19] Kairouz, P., McMahan, H. B., Avent, B., Bellet, A., Bennis, M., Bhagoji, A. N., … &amp; Zhao, S. (2019). Advances and open problems in federated learning. arXiv preprint arXiv:1912.04977.</p>

<p>[KV05] Kalai, Adam, and Santosh Vempala. “Efficient algorithms for online decision problems.” Journal of Computer and System Sciences 71.3 (2005): 291-307.</p>

<p>[KLNRS08] Raskhodnikova, S., Smith, A., Lee, H. K., Nissim, K., &amp; Kasiviswanathan, S. P. (2008). What can we learn privately. In Proceedings of the 54th Annual Symposium on Foundations of Computer Science (pp. 531-540).</p>

<p>[LLV07] Li, N., Li, T., &amp; Venkatasubramanian, S. (2007, April). t-closeness: Privacy beyond k-anonymity and l-diversity. In 2007 IEEE 23rd International Conference on Data Engineering (pp. 106-115). IEEE.</p>

<p>[LT19] Liu, J., &amp; Talwar, K. (2019, June). Private selection from private candidates. In Proceedings of the 51st Annual ACM SIGACT Symposium on Theory of Computing (pp. 298-309).</p>

<p>[M17] Mironov, I. (2017, August). Renyi differential privacy. In Computer Security Foundations Symposium (CSF), 2017 IEEE 30th (pp. 263-275). IEEE.</p>

<p>[MKG07] Machanavajjhala, Ashwin; Kifer, Daniel; Gehrke, Johannes; Venkitasubramaniam, Muthuramakrishnan (March 2007). “L-diversity: Privacy Beyond K-anonymity”. ACM Transactions on Knowledge Discovery from Data.</p>

<p>[NRS07] Nissim, K., Raskhodnikova, S., &amp; Smith, A. (2007, June). Smooth sensitivity and sampling in private data analysis. In Proceedings of the thirty-ninth annual ACM symposium on Theory of computing (pp. 75-84).</p>

<p>[NS08] Narayanan, A., &amp; Shmatikov, V. (2008, May). Robust de-anonymization of large sparse datasets. In Security and Privacy, 2008. SP 2008. IEEE Symposium on (pp. 111-125). IEEE.</p>

<p>[PAE16] Papernot, N., Abadi, M., Erlingsson, U., Goodfellow, I., &amp; Talwar, K. (2016). Semi-supervised knowledge transfer for deep learning from private training data. ICLR 2017.</p>

<p>[PTS21] Papernot, N., Thakurta, A., Song, S., Chien, S., &amp; Erlingsson, U. (2020). Tempered sigmoid activations for deep learning with differential privacy. AAAI 2021.</p>

<p>[RCR15] Rudi, A., Camoriano, R., &amp; Rosasco, L. (2015, December). Less is More: Nyström Computational Regularization. In NIPS (pp. 1657-1665).</p>

<p>[SCS13] Shuang Song, Kamalika Chaudhuri, and Anand D Sarwate. Stochastic gradient descent with differentially private updates. In Proceedings of the 2013 IEEE Global Conference on Signal and Information Processing, GlobalSIP ’13, pages 245–248, Washington, DC, USA, 2013. IEEE Computer Society.</p>

<p>[SPG] Chasing Your Long Tails: Differentially Private Prediction in Health Care Settings. Vinith Suriyakumar, Nicolas Papernot, Anna Goldenberg, Marzyeh Ghassemi. Proceedings of the 2021 ACM Conference on Fairness, Accountability, and Transparency.</p>

<p>[SS98] Samarati, Pierangela; Sweeney, Latanya (1998). “Protecting privacy when disclosing information: k-anonymity and its enforcement through generalization and suppression” (PDF). Harvard Data Privacy Lab. Retrieved April 12, 2017</p>

<p>[SSS17] Shokri, R., Stronati, M., Song, C., &amp; Shmatikov, V. (2017, May). Membership inference attacks against machine learning models. In Security and Privacy (SP), 2017 IEEE Symposium on (pp. 3-18). IEEE.</p>

<p>[SSTT21] Song, S., Thakkar, O., &amp; Thakurta, A. (2020). Evading the Curse of Dimensionality in Unconstrained Private GLMs. In AISTATS 2021.</p>

<p>[XT07] Xiao X, Tao Y (2007) M-invariance: towards privacy preserving re-publication of dynamic datasets. In: SIGMOD conference, Beijing, China, pp 689–700</p>

<p>[YEO21] Yala, A., Esfahanizadeh, H., Oliveira, R. G. D., Duffy, K. R., Ghobadi, M., Jaakkola, T. S., … &amp; Medard, M. (2021). NeuraCrypt: Hiding Private Health Data via Random Neural Networks for Public Training. arXiv preprint arXiv:2106.02484.</p>

<p>[ZHS19] Jingzhao Zhang, Tianxing He, Suvrit Sra, and Ali Jadbabaie. Why gradient clipping accelerates training: A theoretical justification for adaptivity. In International Conference on Learning Representations, 2019.</p></div>
    </summary>
    <updated>2021-10-25T18:00:00Z</updated>
    <published>2021-10-25T18:00:00Z</published>
    <author>
      <name>Abhradeep Thakurta</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2021-10-31T22:55:57Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-8890204.post-8628666819453099327</id>
    <link href="http://mybiasedcoin.blogspot.com/feeds/8628666819453099327/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://www.blogger.com/comment.g?blogID=8890204&amp;postID=8628666819453099327" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/8890204/posts/default/8628666819453099327" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/8890204/posts/default/8628666819453099327" rel="self" type="application/atom+xml"/>
    <link href="http://mybiasedcoin.blogspot.com/2021/10/how-to-send-real-number-using-single.html" rel="alternate" type="text/html"/>
    <title>How to send a real number using a single bit (and some shared randomness)</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In this post, we'll look at the natural problem of how to communicate an estimate of a real value in [0,1], using just 1 bit.  The post is based on <a href="https://arxiv.org/abs/2010.02331" target="_blank">this paper</a> (by Ran Ben-Basat of UCL and Shay Vargaftik of VMware Research and myself -- they helped also with the post) that appeared in ICALP last year. </p><p>This question is motivated by various aggregation problems;  multiple sending devices may measure a value, and wish to send the value to an aggregator who will compute something from the received values, such as the average.  In our problem, the senders have a real value x in [0,1] to send, but are constrained to send just a single bit.  Variations of this problem have come up in recent work on distributed/federated learning, where clients compute a gradient vector and send it to a centralized parameter server to update a learning model;  we may want to compress the vector to a small number of bits, or even 1 bit, per coordinate.  (We'll have more to say on the federated learning problem in a future post.)  Of course, it's also just an interesting randomized algorithm problem that seems interesting in its own right.  </p><p>A natural way to look at the problem is as a variation on rounding.  Given a value x in [0,1], one natural approach if limited to one bit is to deterministically round it to X.  But what should the receiver do when they receive the (rounded) bit value X?  It depends on what one's optimization goal is, but to minimize the maximum possible error, the receiver should have their estimate x' take on the value 3/4 when X is 1, 1/4 otherwise.  Note though that deterministic rounding this way is biased -- the expectation E[x'] does not equal x.  Randomized rounding, where the sender sends 1 with probability x and 0 otherwise, and the receiver uses the received bit X as the estimate x', has the property that E[x'] = x.  Unbiased estimators are arguably more natural for many estimation problems.  Here the measure of performance would be the maximum variance for the estimate over all inputs x, so for randomized rounding the cost is 1/4 (when x = 1/2).  </p><p>Can one do better than these schemes?  It turns out that you can, if you have available shared randomness.  An approach that has been known in the engineering world (where it has been used in signal processing) is subtractive dithering:  </p><p>We assume that the sender and receiver have access to shared randomness ℎ∼𝑈[−1/2,1/2].  Given a value x, the sender sends 1 if x+h≥1/2, 0 otherwise.  The receiver estimates x' = X - h.  We leave as an exercise that this is unbiased, which can be shown by deriving the stronger fact that x' is distributed as 𝑈[𝑥−1/2,𝑥+1/2] , and thus Var[𝑥']=1/12.</p><p>Subtractive dithering ignores that generating a shared real number may be more costly or problematic than generating a finite number of shared bits.  So one of the results of our paper is developing a "finite shared random bits" unbiased estimator, that corresponds to randomized rounding with no shared bits and converges to subtractive dithering as the number of shared random bits goes to infinity.  (The approach does allow for generating a private random real value.)  </p><p>Also in our paper, we study biased schemes, aiming to minimize the worst-case expected mean-squared error (where the expectation is over randomness used in the algorithm).  For example, it's very odd in the setting of subtractive dithering that one can obtain estimates smaller than 0 or greater than 1, when the input is restricted to [0,1], but that's a price we pay for having an unbiased estimator.  For  a biased estimator, you might naturally truncate the result from subtractive dithering;  by truncating to [z,1-z] for an appropriate z &gt; 0, you can indeed slightly improve over the worst-case mean-squared error of 1/16 for deterministic rounding.</p><p>We then studied various algorithmic improvements to obtain better biased schemes.  We were able to progress by looking at limited shared randomness, namely finding the best algorithm with s shared bits.  For example, consider the case of just 1 shared random bit h in {0,1}.  The receiver receives 1 bit X from the sender, and thus can have four possible estimates x' depending on X and h.  If the 4 possible estimate values are v0, v1, v2, v3 (all between 0 and 1), then it is possible to show the largest possible expected squared error occurs at one of the five inputs 0, 1, (v0+v1)/2, (v1+v2)/2, (v2+v3)/2.   We can then write a quadratic program to find the values that minimizes the worst-case expected squared error.  The end result is the following rounding algorithm:  given 1 shared random bit h in {0,1} and the value x, let X = 1 if x ≥ 0.4 + 0.2h, and 0 otherwise;  then let the estimate x' = 0.1 + 0.2h + 0.6X.  This has a worst-case expected mean-squared error of 1/20, beating deterministic rounding and truncated subtractive dithering.  Using some additional arguments we can handle more shared random bits;  at 8 bits we improve the worst-case expected squared error to about 0.04599, which is quite close to our lower bound of about 0.0459, and this is better than anything we could come up with analytically.  The optimal solution is still not known (an open question for future work!).  </p><p>Overall there are many variants of the rounding problem, and few tight bounds currently.  So even for simple-seeming problems like rounding, there are still interesting things to do.  </p></div>
    </content>
    <updated>2021-10-25T15:00:00Z</updated>
    <published>2021-10-25T15:00:00Z</published>
    <author>
      <name>Michael Mitzenmacher</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/02161161032642563814</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-8890204</id>
      <category term="conferences"/>
      <category term="research"/>
      <category term="society"/>
      <category term="algorithms"/>
      <category term="administration"/>
      <category term="teaching"/>
      <category term="Harvard"/>
      <category term="papers"/>
      <category term="graduate students"/>
      <category term="funding"/>
      <category term="talks"/>
      <category term="blogs"/>
      <category term="codes"/>
      <category term="jobs"/>
      <category term="reviews"/>
      <category term="personal"/>
      <category term="travel"/>
      <category term="undergraduate students"/>
      <category term="books"/>
      <category term="open problems"/>
      <category term="PCs"/>
      <category term="consulting"/>
      <category term="randomness"/>
      <category term="CCC"/>
      <category term="blog book project"/>
      <category term="research labs"/>
      <category term="ISIT"/>
      <category term="tenure"/>
      <category term="comments"/>
      <category term="recommendations"/>
      <category term="outreach"/>
      <category term="students"/>
      <author>
        <name>Michael Mitzenmacher</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06738274256402616703</uri>
      </author>
      <link href="http://mybiasedcoin.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/8890204/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://mybiasedcoin.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/8890204/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">My take on computer science -- <br/> 
algorithms, networking, information theory -- <br/> 
and related items.</div>
      </subtitle>
      <title>My Biased Coin</title>
      <updated>2021-10-27T18:56:01Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://emanueleviola.wordpress.com/?p=936</id>
    <link href="https://emanueleviola.wordpress.com/2021/10/25/fibonacci-and-i/" rel="alternate" type="text/html"/>
    <title>Fibonacci and I</title>
    <summary>The other day I couldn’t remember Fibonacci’s original motivation/presentation of the sequence now famously named after him. This had to be corrected immediately, because of the picture above and my first publication (1994) which includes a simple algorithm to decompress sounds. The compression algorithm works by storing rather than the sound data — think of […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="wp-block-image size-large"><a href="https://emanueleviola.files.wordpress.com/2021/10/dsc01614.jpg"><img alt="" class="wp-image-945" src="https://emanueleviola.files.wordpress.com/2021/10/dsc01614.jpg?w=768"/></a></figure>



<p>The other day I couldn’t remember Fibonacci’s original motivation/presentation of the sequence now famously named after him.  This had to be corrected immediately, because of the picture above and my <a href="https://www.ccs.neu.edu/home/viola/papers/amigaMagazine.pdf">first publication</a> (1994) which includes a simple algorithm to decompress sounds.  The compression algorithm works by storing rather than the sound data — think of it as the key — the difference between consecutive keys.  The saving comes from not allowing every possible difference, but only those in… the Fibonacci sequence.  Why those differences are the right ones is part of the mystique which makes studying the sequence fun.  For further technical but not mystical details see the paper; an implementation of the decompressor is given in the Motorola 68000 assembly code.</p>



<p>This is me on my way to Fibonacci from Rome, some years ago:</p>



<figure class="wp-block-image size-large"><a href="https://emanueleviola.files.wordpress.com/2021/10/dsc01563-1.jpg"><img alt="" class="wp-image-947" src="https://emanueleviola.files.wordpress.com/2021/10/dsc01563-1.jpg?w=1024"/></a></figure>



<p>I actually find some presentations of the sequence a little hard to grasp, so I came up with a trivially different rendering which now will make it impossible for me to forget:</p>



<p>There are two types of trees: Young and old.  You start with one young tree. In one period, a young tree produces another young tree and becomes old, and an old tree produces a young tree and dies. How many young trees are there after t periods?</p>



<p/>



<figure class="wp-block-table"><table><tbody><tr><td>Period</td><td>Young trees</td><td>Old trees</td></tr><tr><td>1</td><td>1</td><td>0</td></tr><tr><td>2</td><td>1</td><td>1</td></tr><tr><td>3</td><td>2</td><td>1</td></tr><tr><td>4</td><td>3</td><td>2</td></tr><tr><td>5</td><td>5</td><td>3</td></tr><tr><td>6</td><td>8</td><td>5</td></tr></tbody></table></figure>



<p>I also couldn’t exactly remember the spiral you can make with these numbers.  But you can tile the plane with squares whose sides come from the sequence, if you arrange them in a spiral.</p></div>
    </content>
    <updated>2021-10-25T14:34:19Z</updated>
    <published>2021-10-25T14:34:19Z</published>
    <category term="Uncategorized"/>
    <category term="lecture"/>
    <category term="SpeakMemory"/>
    <author>
      <name>Manu</name>
    </author>
    <source>
      <id>https://emanueleviola.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>by Manu</subtitle>
      <title>Thoughts</title>
      <updated>2021-11-01T07:21:33Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-8402768071991338392</id>
    <link href="http://blog.computationalcomplexity.org/feeds/8402768071991338392/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/squaring-circle-is-mentioned-in-gilbert.html#comment-form" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/8402768071991338392" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/3722233/posts/default/8402768071991338392" rel="self" type="application/atom+xml"/>
    <link href="http://blog.computationalcomplexity.org/2021/10/squaring-circle-is-mentioned-in-gilbert.html" rel="alternate" type="text/html"/>
    <title>Squaring the circle is mentioned in a Gilbert and Sullivan comic Opera.</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The problem of <i>squaring the circle</i>: Given a circle, construct (with straightedge and compass) a square with the same area. While browsing the web for more information on this problem (for the blog entry on problems that might be similar to P vs NP: <a href="https://blog.computationalcomplexity.org/2021/10/is-math-ready-for-pnp-is-alexandra.html">here</a>)  I came across the following:</p><p>In the Gilbert and Sullivan comic opera <i>Princess Ida</i>, in the song <i>Gently, Gently</i>  is the line:</p><p>                                <i>    ... and the circle they will square it one fine day.</i></p><p>(To hear the song see <a href="https://www.youtube.com/watch?v=1r2hEcDmeIY">here</a>. The line is towards the end.) </p><p>They lyrics are <a href="https://www.gsarchive.net/princess_ida/webop/pi_12.html">here</a>. That website begins  <i>gsarchive.ne</i>t which made me wonder<i> Did I at one time set</i> u<i>p a website of math refs in Gilbert and Sullivan plays (gsarch is very close to gasarch) ? </i>which IS the kind of thing I would do. The answer is no: <i> gsarch</i> stands for <i>Gilbert and Sullivan archive.</i> They could have called it <i>gasarch </i>if they used the <i>and </i>in <i>Gilbert and Sullivan</i> but abbreviated <i>archive </i>as arch. Then I would have been far more confused. </p><p>Moving on...</p><p>In 1884<i> Princess Ida</i> opened in 1884. For more on this comic opera see <a href="https://en.wikipedia.org/wiki/Princess_Ida">here</a>.</p><p>In 1882 pi was proven  transcendental and hence one cannot square the circle. For more on pi being transcendental see <a href="https://en.wikipedia.org/wiki/Squaring_the_circle">here</a>.</p><p>Kolmogorov Random Thoughts on all of this</p><p>0) The song is sung my three men who are making fun of the notion of a women's college. The song is about all the things the women are trying to do that are absurd such as squaring the circle. They also mention perpetual motion machines. </p><p>1) Did G and S know that the squaring the circle had been proven impossible, or just that it was thought to be impossible, or just that it was thought to be hard?</p><p>2) Was it known that perpetual motion machines were impossible? Or just very hard? </p><p>3) G and S used Mathematics in at least one other song: <i> I am the very model of a modern major general, </i>from<i> The Pirates of Penzance  </i>has the lines:</p><p><br/></p><p>                                       <i>I'm very well acquainted too with matters mathematical</i></p><p><i>                                       I understand equations, both the simple and quadratical,</i></p><p><i>                                       About binomial theorems I'm teeming with the a lot o' news---</i></p><p><i>                                       With many cheerful facts about the square of the hypotenuse</i></p><p><br/></p><p>and later </p><p><i>                                        I'm very good at integral and differential calculus</i></p><p>See <a href="https://naic.edu/~gibson/poems/gilbert1.html">here</a> for all the lyrics. The website mentioned in the next point has a pointer to a YouTube video of people singing it. </p><p>4) There are many parodies of <i>Modern Major General. </i>The earliest ones I know of is Tom Lehrer's  <i>The Elements. </i>Since making a website of them IS the kind of thing I would do,  while writing this post I did it (Are we compelled to do things that fit our image of ourselves? Yup.) The website is <a href="http://www.cs.umd.edu/~gasarch/FUN//modmajgen.html">here</a>. It has 36 parodies (as of Oct 17, 2021 when I wrote this blog--- it may have more if you read this later.) That may seem like a lot, but it pales in comparison  to the most satirized song of all time: <i>The 12 days of Christmas </i>which I did an ugly lyrics-only website for back before html had nice tools, see <a href="http://www.cs.umd.edu/~gasarch/12days.html">here</a>. It has 143 songs on it but I am sure there are many more. (Note to self: redo that website when you have time. Maybe when I retire.) </p><p>4) I suspect that G and S knew more math, or perhaps knew of more math,  than Broadway composers know now. I suspect this is a more general trend: people are more specialized now. Having said that, I need to mention the off-Broadway musical <a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Tango">Fermat's last Tango</a> which I liked more than Lance (see his post on it <a href="https://blog.computationalcomplexity.org/2004/02/fermats-last-tango.html">here</a>). </p><p>5) How much math would you need to know in order to insert some into your play or movie? With Wikipedia and other web sources you could find out some things, but you would have to have some idea what you are looking for. And perhaps you would need some math background in order to even want to insert some math into your work in the first place. </p><p>6)  Here's hoping someone will make a musical about William Rowan Hamilton using this song <a href="https://www.youtube.com/watch?v=SZXHoWwBcDc">here</a> as a starting point. I blogged rather optimistically about that possibility <a href="https://blog.computationalcomplexity.org/2017/04/william-rowan-hamilton-musical.html#comment-form">here</a>.</p><p><br/></p></div>
    </content>
    <updated>2021-10-24T18:51:00Z</updated>
    <published>2021-10-24T18:51:00Z</published>
    <author>
      <name>gasarch</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03004932739846901628</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="http://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2021-10-31T22:33:48Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2021/10/24/new-computational-geometry</id>
    <link href="https://11011110.github.io/blog/2021/10/24/new-computational-geometry.html" rel="alternate" type="text/html"/>
    <title>New computational geometry journal</title>
    <summary>Over the past year or so I’ve been working with Marc van Kreveld and Wolfgang Mulzer to set up a new diamond open access computational geometry journal, Computing in Geometry and Topology, sponsored by the Society for Computational Geometry, the organization set up to run the annual Symposium on Computational Geometry. It is the second such journal to be established, after the Journal of Computational Geometry. This week the new journal went live and it is now available for submissions. Below is the official announcement we sent out to several mailing lists:</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Over the past year or so I’ve been working with Marc van Kreveld and Wolfgang Mulzer to set up a new <a href="https://en.wikipedia.org/wiki/Diamond_open_access">diamond open access</a> computational geometry journal, <em><a href="https://www.cgt-journal.org/index.php/cgt">Computing in Geometry and Topology</a></em>, sponsored by the <a href="https://www.computational-geometry.org/">Society for Computational Geometry</a>, the organization set up to run the annual <em>Symposium on Computational Geometry</em>. It is the second such journal to be established, after the <em><a href="https://jocg.org/index.php/jocg">Journal of Computational Geometry</a></em>. This week the new journal went live and it is now available for submissions. Below is the official announcement we sent out to several mailing lists:</p>

<hr/>

<p>Dear all,</p>

<p>As of this week, the new diamond open access journal</p>

<p style="text-align: center;"><em>Computing in Geometry and Topology</em></p>

<p>is welcoming submissions. The website of the journal is <a href="https://www.cgt-journal.org/index.php/cgt">https://www.cgt-journal.org/index.php/cgt</a></p>

<p>Here you can also find the editorial board, the submission guidelines, the scope, and a style file.</p>

<p>If you have any questions about the journal, please send them to info@cgt-journal.org</p>

<p>Best regards,
David Eppstein, Marc van Kreveld, and Wolfgang Mulzer</p>

<hr/>

<p><strong>Purpose and scope</strong></p>

<p><em>Computing in Geometry and Topology</em> aims to support the broader computational geometry and topology community by being a peer-reviewed scientific journal that provides diamond open access. <em>Computing in Geometry and Topology</em> is sponsored by the Society for Computational Geometry.</p>

<p>With the broader computational geometry and topology community, we include researchers in discrete and combinatorial geometry, and any application area of computational geometry and topology. We also include algorithm engineering for geometric computations.</p>

<p>The journal publishes two types of papers. Firstly, the journal publishes original research of sufficient depth and interest. Secondly, the journal publishes high-quality survey papers. Every paper has been thoroughly reviewed by experts in the area.</p>

<p>To emphasize the breadth of the interpretation of computational geometry and topology, the editorial board has different sections that represent the algorithmic and mathematical aspects, the applied aspects, and the engineering aspects.</p>

<p><a href="https://www.cgt-journal.org/index.php/cgt">https://www.cgt-journal.org/index.php/cgt</a></p>

<hr/>

<p>(<a href="https://mathstodon.xyz/@11011110/107159503144164449">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2021-10-24T17:42:00Z</updated>
    <published>2021-10-24T17:42:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2021-11-01T02:11:11Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2021/147</id>
    <link href="https://eccc.weizmann.ac.il/report/2021/147" rel="alternate" type="text/html"/>
    <title>TR21-147 |  Extractors for Sum of Two Sources | 

	Jyun-Jie Liao, 

	Eshan Chattopadhyay</title>
    <summary>We consider the problem of extracting randomness from \textit{sumset sources}, a general class of weak sources introduced by Chattopadhyay and Li (STOC, 2016). An $(n,k,C)$-sumset source $\mathbf{X}$ is a distribution on $\{0,1\}^n$ of the form $\mathbf{X}_1 + \mathbf{X}_2 + \ldots + \mathbf{X}_C$, where $\mathbf{X}_i$'s are independent sources on $n$ bits with min-entropy at least $k$. Prior extractors either required the number of sources $C$ to be a large constant or the min-entropy $k$ to be at least $0.51 n$. 

As our main result, we construct an explicit extractor for sumset sources in the setting of $C=2$ for min-entropy $\mathrm{poly}(\log n)$ and polynomially small error. We can further improve the min-entropy requirement  to $(\log n) \cdot (\log \log n)^{1 + o(1)}$ at the expense of worse error parameter of our extractor. We find applications of our sumset extractor for extracting randomness from other well-studied models of weak sources such as affine sources, small-space sources,  and interleaved sources.</summary>
    <updated>2021-10-24T11:46:03Z</updated>
    <published>2021-10-24T11:46:03Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2021-11-01T07:20:38Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=576</id>
    <link href="https://tcsplus.wordpress.com/2021/10/23/tcs-talk-wednesday-october-27-shravas-rao-northwestern-university/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, October 27 — Shravas Rao, Northwestern University</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, October 27th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). Shravas Rao from Northwestern University will speak about “Degree vs. Approximate Degree and Quantum Implications of Huang’s Sensitivity Theorem” (abstract below). You can reserve a spot as an […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, October 27th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). <a href="https://cims.nyu.edu/~rao/"><strong>Shravas Rao</strong></a> from Northwestern University will speak about “<em>Degree vs. Approximate Degree and Quantum Implications of Huang’s Sensitivity Theorem</em>” (abstract below).</p>
<p>You can reserve a spot as an individual or a group to join us live by signing up on <a href="https://sites.google.com/view/tcsplus/welcome/next-tcs-talk">the online form</a>. Registration is <em>not</em> required to attend the interactive talk, and the link will be posted on the website the day prior to the talk; however, by registering in the form, you will receive a reminder, along with the link. (The recorded talk will also be posted <a href="https://sites.google.com/view/tcsplus/welcome/past-talks">on our website</a> afterwards) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/view/tcsplus/welcome/suggest-a-talk">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/view/tcsplus/">the website</a>.</p>
<blockquote class="wp-block-quote"><p>Abstract: Based on the recent breakthrough of Huang (2019), we show that for any total Boolean function <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>,</p>
<ul>
<li>The degree of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/> is at most quadratic in the approximate degree of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>. This is optimal as witnessed by the OR function.</li>
<li>The deterministic query complexity of f is at most quartic in the quantum query complexity of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>. This matches the known separation (up to log factors) due to Ambainis, Balodis, Belovs, Lee, Santha, and Smotrovs (2017).</li>
</ul>
<p>We apply these results to resolve the quantum analogue of the Aanderaa–Karp–Rosenberg conjecture. We show that if <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/> is a nontrivial monotone graph property of an <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>-vertex graph specified by its adjacency matrix, then <img alt="Q(f)=\Omega(n)" class="latex" src="https://s0.wp.com/latex.php?latex=Q%28f%29%3D%5COmega%28n%29&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>, which is also optimal. We also show that the approximate degree of any read-once formula on <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/> variables is <img alt="\Theta(\sqrt{n})" class="latex" src="https://s0.wp.com/latex.php?latex=%5CTheta%28%5Csqrt%7Bn%7D%29&amp;bg=fff&amp;fg=444444&amp;s=0&amp;c=20201002"/>.</p>
<p>Based on joint work with Scott Aaronson, Shalev Ben-David, Robin Kothari, and Avishay Tal.</p></blockquote></div>
    </content>
    <updated>2021-10-23T07:14:06Z</updated>
    <published>2021-10-23T07:14:06Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2021-11-01T07:21:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://rjlipton.wpcomstaging.com/?p=19240</id>
    <link href="https://rjlipton.wpcomstaging.com/2021/10/22/an-annoying-problem/" rel="alternate" type="text/html"/>
    <title>An Annoying Problem</title>
    <summary>It’s the stupid questions that have some of the most surprising and interesting answers — Cory Doctorow ACM Turing Award source Robert Tarjan is well known to most—a Turing award winner in 1986 with John Hopcroft. Bob is a professor of Computer Science at Princeton University, and one of the world experts on linear time […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>It’s the stupid questions that have some of the most surprising and interesting answers — Cory Doctorow</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wpcomstaging.com/2021/10/22/an-annoying-problem/bt/" rel="attachment wp-att-19242"><img alt="" class="alignright wp-image-19242" height="180" src="https://i1.wp.com/rjlipton.wpcomstaging.com/wp-content/uploads/2021/10/bt.jpg?resize=120%2C180&amp;ssl=1" width="120"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">ACM Turing Award <a href="https://amturing.acm.org/photo/tarjan_1092048.cfm">source</a></font></td>
</tr>
</tbody>
</table>
<p>
Robert Tarjan is well known to most—a Turing award winner in 1986 with <a href="https://amturing.acm.org/award_winners/tarjan_1092048.cfm">John Hopcroft</a>. Bob is a professor of Computer Science at Princeton University, and one of the world experts on linear time graph algorithms. I always thought if some NP-complete graph problem had a linear time algorithm, then P=NP would have long been solved by Bob. </p>
<p>
Today we talk about a problem that hasn’t been solved by Bob.</p>
<p>
The problem I mean was <em>quasi-</em>solved by Bob. That is, he gave a quasi-polynomial time algorithm. The problem is <em>group isomorphism</em> (GpI). Laci Babai discusses its relation as a special case of <em>graph isomorphism</em> (GI) in section 13.2 of his famous 2016 <a href="https://arxiv.org/pdf/1512.03547.pdf">paper</a> giving a quasi-polynomial time algorithm for GI. He says that the annoyance of GpI should temper expectations for getting GI into polynomial time, because:</p>
<blockquote><p><b> </b> <em> [I]n spite of considerable effort and the availability of powerful algebraic machinery, Group Isomorphism is still not known to be in <img alt="{\mathsf{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/>. </em>
</p></blockquote>
<p>
</p><p/><h2> Bob’s Least Result </h2><p/>
<p/><p>
Bob has many great and deep results. For example, Donald Knuth <a href="https://www.informit.com/articles/article.aspx?p=2213858">described</a> Bob’s strong connected component algorithm for directed graphs in these words:</p>
<blockquote><p><b> </b> <em> The data structures that he devised for this problem fit together in an amazingly beautiful way, so that the quantities you need to look at while exploring a directed graph are always magically at your fingertips. </em>
</p></blockquote>
<p/><p>
Here is Ken’s slight editing of Wikipedia’s <a href="https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm">presentation</a>:</p>
<p><code><br/>
<font size="-1"><br/>
Input: Graph G = (V,E) whose nodes have fields int index, int lowlink, bool onStack<br/>
Output: The set of subsets of V denoting the strongly connected components</font></code></p><font size="-1">
<p>Stack S := empty stack;<br/>
int index := 0;  //global variable with invariant: index = smallest unused index</p>
<p>proc strongconnect(v):<br/>
   v.index := index; v.lowlink := index; index++;<br/>
   S.push(v); v.onStack := true;<br/>
   for each w such that (v,w) is in E: </p>
<p>      if w.index is undefined then:  //w not yet visited so recurse on it </p>
<p>         strongconnect(w);<br/>
         v.lowlink = min{v.lowlink,w.lowlink}  //lowest-indexed node reached</p>
<p>      else if w.onStack then: </p>
<p>         v.lowlink = min(v.lowlink, w.index);<br/>
         //clever: w.index was lowest unused index at the time </p>
<p>      else:<br/>
         pass;   //(v,w) goes to already-found component, so ignore.<br/>
      end if;<br/>
   end for </p>
<p>   if v.lowlink == v.index then: //we've completed a component so pop and output it<br/>
      repeat:<br/>
         Node w = S.pop();<br/>
         w.onStack = false;<br/>
         output w as part of the current strongly connected component;<br/>
      until w == v;<br/>
   end if;<br/>
end proc;</p>
</font><p><font size="-1">for each v in V do:<br/>
   if v.index is undefined then:<br/>
      strongconnect(v);<br/>
   end if;<br/>
end for;<br/>
</font><br/>
</p>
<p/><h2> The Annoying Problem </h2><p/>
<p/><p>
Just over ten years ago we talked about: How do we tell if two groups are isomorphic? Precisely on October 8, 2011 we talked about <a href="https://rjlipton.wpcomstaging.com/2011/10/08/an-annoying-open-problem/">group isomorphism</a>. We called it an annoying problem. It remains annoying. </p>
<p>
In the group isomorphism problem (GpI), we are given two finite groups <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> of order <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> in terms of their multiplication tables and must decide if <img alt="{G \cong H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Ccong+H%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>
Bob Tarjan famously noted that this could be done <img alt="{n^{\log_2 n + O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog_2+n+%2B+O%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> time. He never published this result and just orally told others about it. The insight was that every group of order <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> had a generator set of size at most <img alt="{\log_2 n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog_2+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Since his insight the group isomorphism problem remains roughly the same complexity. The best is the <a href="https://rjlipton.wpcomstaging.com/2013/05/11/advances-on-group-isomorphism/">improvement</a> due to David Rosenbaum. His algorithm is still of order <img alt="{n^{c \log n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7Bc+%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. See <a href="https://arxiv.org/pdf/1304.3935.pdf">here</a> for details. </p>
<blockquote><p><b>Theorem 1</b> <em> General group isomorphism is in <img alt="{n^{(1/2) log_p n+O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7B%281%2F2%29+log_p+n%2BO%281%29%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> deterministic time where <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> is the smallest prime dividing the order of the group. </em>
</p></blockquote>
<p/><p>
Better than Bob’s insight, but still not polynomial time. </p>
<p>
</p><p/><h2> Order Restriction </h2><p/>
<p/><p>
The results to date on GpI have relied mainly on basic group theory. Bob’s result uses an elementary fact about finite groups. David uses the same insight and adds a deep fact about isomorphism type problems. Neither use any of the “millions” of theorems known about finite groups. </p>
<p>
I wondered if there is some hope to start to exploit more of the papers on group structure? The trouble I think is that these results are quite difficult for those not in group theory to understand. But perhaps there is some hope. What do you think?</p>
<p>
I still wonder if there is a polynomial time algorithm for the general group isomorphism problem? Can we eliminate the <img alt="{\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> exponent somehow? This lead us to note the following simple theorem:</p>
<blockquote><p><b>Theorem 2</b> <em> Let <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> be finite groups of order <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> that is square free.Then <img alt="{G \cong H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Ccong+H%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> can be determined in time polynomial in <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> time. </em>
</p></blockquote>
<p/><p>
That is, <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> has no prime <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> so that <img alt="{p^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> divides <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>.</p>
<p>
</p><p/><h2> But Wait… </h2><p/>
<p/><p>
As I worked on this I found a nice <a href="https://arxiv.org/pdf/1806.08872.pdf">paper</a> by Heiko Dietrich and James Wilson, titled “Polynomial Time Isomorphism Tests Of Black-Box Type Groups Of Most Orders.” They reference another <a href="https://arxiv.org/pdf/1810.03467.pdf">paper</a> that proved a stronger theorem than our above one:</p>
<blockquote><p><b>Theorem 3</b> <em> There is an algorithm that given groups <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> of permutations on finitely many points, decides whether they are of cube-free order, and if so, decides that <img alt="{G \cong H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Ccong+H%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> or constructs an isomorphism <img alt="{G \rightarrow H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%5Crightarrow+H%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/>. The algorithm runs in time polynomial in the input size. </em>
</p></blockquote>
<p>
</p><p/><h2> Proof of Our Theorem </h2><p/>
<p>
</p><blockquote><p><b>Definition 4</b> <em> A finite group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> is <b>metacyclic</b> provided it has a normal subgroup <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> so that <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{G/N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%2FN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> are both cyclic. </em>
</p></blockquote>
<p/><p>
Every finite group of square-free order (i.e. the order is not divisible by the square of a natural number) is metacyclic.</p>
<p>
<em>Proof:</em>  We claim that <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> are both metacyclic. This follows from the <a href="https://en.wikipedia.org/wiki/Metacyclic_group">fact</a> that their order is square free. But then we know that both <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> are generated by at most two elements—see <a href="https://math.stackexchange.com/questions/1734406/prove-metacyclic-group-is-generated-by-two-elements">this</a>. This yields an isomorphism algorithm based on the above generator trick. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/></p>
<p>
Their stronger proof uses quite a bit more group theory. But our simple proof may give you some intuition why the restriction on the order of the group helps.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p>
The above result fits well with the belief that the worst case for isomorphism is when the order of the groups is a power of a prime. Some possible conjectures are:</p>
<ul>
<li>
Can we generalize “<img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> is square free” to “<img alt="{p^4}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%5E4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> does not divide <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>“? Or to “<img alt="{p^{5}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%5E%7B5%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> does not divide <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>?” And so on? <p/>
</li><li>
Let <img alt="{Z(G)=1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ%28G%29%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{|Aut(G)| \le |G|^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7CAut%28G%29%7C+%5Cle+%7CG%7C%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0&amp;c=20201002"/>. Then GpI is in polynomial time.
</li></ul>
<blockquote><p><b>Definition 5</b> <em> A finite group <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> is <b>metabelian</b> provided it has a normal subgroup <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> so that <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> and <img alt="{G/N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%2FN%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0&amp;c=20201002"/> are both abelian. </em>
</p></blockquote>
<ul>
<li>
What if we replace metacyclic by metabelian?
</li></ul></font></font></div>
    </content>
    <updated>2021-10-22T20:53:18Z</updated>
    <published>2021-10-22T20:53:18Z</published>
    <category term="algorithms"/>
    <category term="All Posts"/>
    <category term="graph isomorphism"/>
    <category term="History"/>
    <category term="Ideas"/>
    <category term="Oldies"/>
    <category term="Open Problems"/>
    <category term="P=NP"/>
    <category term="Results"/>
    <category term="Algorithms"/>
    <category term="group isomorphism"/>
    <category term="polynomial time"/>
    <category term="Robert Tarjan"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wpcomstaging.com</id>
      <logo>https://s0.wp.com/i/webclip.png</logo>
      <link href="https://rjlipton.wpcomstaging.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wpcomstaging.com" rel="alternate" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel's Lost Letter and P=NP</title>
      <updated>2021-11-01T07:20:53Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://scottaaronson.blog/?p=6088</id>
    <link href="https://scottaaronson.blog/?p=6088" rel="alternate" type="text/html"/>
    <link href="https://scottaaronson.blog/?p=6088#comments" rel="replies" type="text/html"/>
    <link href="https://scottaaronson.blog/?feed=atom&amp;p=6088" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">An Orthodox rabbi and Steven Weinberg walk into an email exchange…</title>
    <summary xml:lang="en-US">Ever since I posted my obituary for the great Steven Weinberg three months ago, I’ve gotten a steady trickle of emails—all of which I’ve appreciated enormously—from people who knew Steve, or were influenced by him, and who wanted to share their own thoughts and memories. Last week, I was contacted by one Moshe Katz, an […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>Ever since I posted my <a href="https://scottaaronson.blog/?p=5566">obituary for the great Steven Weinberg</a> three months ago, I’ve gotten a steady trickle of emails—all of which I’ve appreciated enormously—from people who knew Steve, or were influenced by him, and who wanted to share their own thoughts and memories.  Last week, I was contacted by one Moshe Katz, an Orthodox rabbi, who wanted to share a long email exchange that he’d had with Steve, about Steve’s reasons for rejecting his birth-religion of Judaism (along with every other religion).  Even though Rabbi Katz, rather than Steve, does most of the talking in this exchange, and even though Steve mostly expresses the same views he’d expressed in many of his public writings, I knew immediately on seeing this exchange that it could be of broader interest—so I secured permission to share it here on <em>Shtetl-Optimized</em>, both from Rabbi Katz and from Steve’s widow Louise.</p>



<p>While longtime readers can probably guess what <em>I</em> think about most of the topics discussed, I’ll refrain from any editorial commentary in this post—but of course, feel free to share your own thoughts in the comments, and maybe I’ll join in.  Mostly, reading this exchange reminded me that someone at some point should write a proper book-length biography of Steve, and someone should also curate and publish a selection of his correspondence, much like <a href="https://www.amazon.com/Perfectly-Reasonable-Deviations-Letters-Richard/dp/141934322X"><em>Perfectly Reasonable Deviations from the Beaten Track</em></a> did for Richard Feynman.  There must be a lot more gems to be mined.</p>



<p>Anyway, without further ado, <a href="https://www.scottaaronson.com/weinberg.pdf"><strong>here’s the exchange</strong></a> (10 pages, PDF).</p></div>
    </content>
    <updated>2021-10-22T15:28:51Z</updated>
    <published>2021-10-22T15:28:51Z</published>
    <category scheme="https://scottaaronson.blog" term="Metaphysical Spouting"/>
    <category scheme="https://scottaaronson.blog" term="Nerd Interest"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://scottaaronson.blog/?feed=atom</id>
      <icon>https://scottaaronson.blog/wp-content/uploads/2021/10/cropped-Jacket-32x32.gif</icon>
      <link href="https://scottaaronson.blog" rel="alternate" type="text/html"/>
      <link href="https://scottaaronson.blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2021-10-22T16:00:26Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://scottaaronson.blog/?p=6086</id>
    <link href="https://scottaaronson.blog/?p=6086" rel="alternate" type="text/html"/>
    <link href="https://scottaaronson.blog/?p=6086#comments" rel="replies" type="text/html"/>
    <link href="https://scottaaronson.blog/?feed=atom&amp;p=6086" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Welcome to scottaaronson.blog !</title>
    <summary xml:lang="en-US">If you’ve visited Shtetl-Optimized lately — which, uh, I suppose you have — you may have noticed that your URL was redirected from www.scottaaronson.com/blog to scottaaronson.blog. That’s because Automattic, makers of WordPress.com, volunteered to move my blog there from Bluehost, free of charge. If all goes according to plan, you should notice faster loading times, […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>If you’ve visited <em>Shtetl-Optimized</em> lately — which, uh, I suppose you have — you may have noticed that your URL was redirected from www.scottaaronson.com/blog to scottaaronson.blog.  That’s because Automattic, makers of <a href="https://wordpress.com">WordPress.com</a>, volunteered to move my blog there from Bluehost, free of charge.  If all goes according to plan, you should notice faster loading times, less downtime, and <em>hopefully</em> nothing else different.  Please let me know if you encounter any problems.  And <em>huge</em> thanks to the WordPress.com Special Projects Team, especially Christopher Jones and Mark Drovdahl, for helping me out with this.</p></div>
    </content>
    <updated>2021-10-21T21:35:56Z</updated>
    <published>2021-10-21T21:35:56Z</published>
    <category scheme="https://scottaaronson.blog" term="Announcements"/>
    <category scheme="https://scottaaronson.blog" term="Self-Referential"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://scottaaronson.blog/?feed=atom</id>
      <icon>https://scottaaronson.blog/wp-content/uploads/2021/10/cropped-Jacket-32x32.gif</icon>
      <link href="https://scottaaronson.blog" rel="alternate" type="text/html"/>
      <link href="https://scottaaronson.blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2021-10-22T16:00:26Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4576</id>
    <link href="https://lucatrevisan.wordpress.com/2021/10/21/postdoc-positions/" rel="alternate" type="text/html"/>
    <title>Postdoc Positions</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The call is out for two postdoctoral positions at Bocconi to work in my group [application link]. If you are interested and you have any questions, feel free to email me (L.Trevisan at Unibocconi dot it) The negotiable start date … <a href="https://lucatrevisan.wordpress.com/2021/10/21/postdoc-positions/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The<a href="https://jobmarket.unibocconi.eu/include/dwload.php?a=NTUwXjQ0M2QwY2Y4N2FhMjA2MDcxN2MwMzc3NGZjODM4NGU0Xi9kMC9qb2JtYXJrZXQudW5pYm9jY29uaS5ldS91cGxvYWQvQklEL3Nlc3Npb25fMTM3LTIwMjExMDE4Xmpta19zZXNfZmlsZV5qbWZfXmptZl9maWxlXjM2OQ=="> call is out</a> for two postdoctoral positions at Bocconi to work in my group [<a href="https://jobmarket.unibocconi.eu/application.php?f=MDJkYTc3YjUzZTNlMmNlMGIxMmNjOGQ0ZjRhNTc3MzBeMTM3">application link</a>]. If you are interested and you have any questions, feel free to email me (L.Trevisan at Unibocconi dot it)</p>



<p>The negotiable start date is September 1st, 2022. Each position is for one year, renewable for a second. The positions offer an internationally competitive salary (up to 65,000 Euro per year, tax-free, plus relocation assistance and travel allowance), in a wonderful location that, at long last, is back to more or less normal life. The application deadline is <strong>December 17, 2021</strong>.</p>



<p>Among the topics that I am interested in are spectral graph theory, average-case complexity, “applications” of semidefinite programming, random processes on networks, approximation algorithms, pseudorandomness and combinatorial constructions.</p>



<p>Bocconi Computer Science is building up a theory group: besides me, we have <a href="https://www.alonrosen.net/">Alon Rosen</a>, <a href="https://elias.ba30.eu/">Marek Elias</a>, a tenured person that will join next Fall, and more hires are on the horizon. Now that traveling is ok again, and considering that Alon and I both have ERC grants, we should expect a big stream of theory visitors coming and going through Bocconi from week-long visits to semester or year long sabbaticals.</p></div>
    </content>
    <updated>2021-10-21T17:04:44Z</updated>
    <published>2021-10-21T17:04:44Z</published>
    <category term="Milan"/>
    <category term="theory"/>
    <category term="postdoc"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2021-11-01T07:20:12Z</updated>
    </source>
  </entry>
</feed>
