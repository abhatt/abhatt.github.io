<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-03-30T13:22:18Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry>
    <id>tag:blogger.com,1999:blog-25562705.post-4686387049269740360</id>
    <link href="http://aaronsadventures.blogspot.com/feeds/4686387049269740360/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="http://www.blogger.com/comment.g?blogID=25562705&amp;postID=4686387049269740360" rel="replies" type="text/html"/>
    <link href="http://www.blogger.com/feeds/25562705/posts/default/4686387049269740360" rel="edit" type="application/atom+xml"/>
    <link href="http://www.blogger.com/feeds/25562705/posts/default/4686387049269740360" rel="self" type="application/atom+xml"/>
    <link href="http://aaronsadventures.blogspot.com/2020/03/forc-2020-accepted-papers.html" rel="alternate" type="text/html"/>
    <title>FORC 2020 Accepted Papers</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">When we <a href="https://aaronsadventures.blogspot.com/2019/10/forc-new-conference-you-should-know.html">announced </a>the new conference <a href="https://responsiblecomputing.org/accepted-papers/">FORC (Foundations of Responsible Computing)</a> we really had no idea what kind of papers folks would send us.<br/><br/>Fortunately, we got a really high quality set of submissions, from which we have accepted the papers that will make up the program of the inaugural FORC. Check out the accepted papers here: <a href="https://responsiblecomputing.org/accepted-papers/">https://responsiblecomputing.org/accepted-papers/</a></div>
    </content>
    <updated>2020-03-30T00:38:00Z</updated>
    <published>2020-03-30T00:38:00Z</published>
    <author>
      <name>Aaron</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/09952936358739421126</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-25562705</id>
      <category term="game theory"/>
      <category term="news"/>
      <author>
        <name>Aaron</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/09952936358739421126</uri>
      </author>
      <link href="http://aaronsadventures.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="http://www.blogger.com/feeds/25562705/posts/default" rel="self" type="application/atom+xml"/>
      <link href="http://aaronsadventures.blogspot.com/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="http://www.blogger.com/feeds/25562705/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <title>Adventures in Computation</title>
      <updated>2020-03-30T00:38:47Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.12460</id>
    <link href="http://arxiv.org/abs/2003.12460" rel="alternate" type="text/html"/>
    <title>An enhanced pinwheel algorithm for the bamboo garden trimming problem</title>
    <feedworld_mtime>1585526400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Croce:Federico_Della.html">Federico Della Croce</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.12460">PDF</a><br/><b>Abstract: </b>In the Bamboo Garden Trimming Problem (BGT), there is a garden populated by n
bamboos b(1), b(2), ... , b(n)$ with daily growth rates h(1) &gt;= h(2) &gt;= ... &gt;=
h(n). We assume that the initial heights of bamboos are zero. A gardener is in
charge of the bamboos and trims them to height zero according to some schedule.
The objective is to design a perpetual schedule of trimming so as to maintain
the height of the bamboo garden as low as possible. We consider the so-called
discrete BGT variant, where the gardener is allowed to trim only one bamboo at
the end of each day. For discrete BGT, the current state-of-the-art
approximation algorithm exploits the relationship between BGT and the classical
Pinwheel scheduling problem and provides a solution that guarantees a
2-approximation ratio. We propose an alternative Pinwheel scheduling algorithm
with approximation ratio converging to 12/7 when sum h(j) &gt; &gt; h(1). Also, we
show that the approximation ratio of the proposed algorithm never exceeds
32000/16947 approximately 1.888. This is the first algorithm reaching a ratio
strictly inferior to 19/10.
</p></div>
    </summary>
    <updated>2020-03-30T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.12293</id>
    <link href="http://arxiv.org/abs/2003.12293" rel="alternate" type="text/html"/>
    <title>Large independent sets on random $d$-regular graphs with $d$ small</title>
    <feedworld_mtime>1585526400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Marino:Raffaele.html">Raffaele Marino</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kirkpatrick:Scott.html">Scott Kirkpatrick</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.12293">PDF</a><br/><b>Abstract: </b>In this paper, we present a prioritized local algorithm that computes a
maximal independent set on a random $d$-regular graph with small and fixed
connectivity $d$. Combining different strategies, we compute new lower bounds
on the independence ratio $\forall d \in [5,100]$, $d\in \mathbb{N}$. All the
new bounds improve upon the best previous bounds. Moreover, for independent set
in random $3$-regular graph, we experimentally extrapolate, by finite-size
analysis, the asymptotic value of the independence ratio at
$\alpha_{LB}=0.445327$.
</p></div>
    </summary>
    <updated>2020-03-30T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.12283</id>
    <link href="http://arxiv.org/abs/2003.12283" rel="alternate" type="text/html"/>
    <title>LIMP: Learning Latent Shape Representations with Metric Preservation Priors</title>
    <feedworld_mtime>1585526400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cosmo:Luca.html">Luca Cosmo</a>, Antonio Norelli, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Halimi:Oshri.html">Oshri Halimi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kimmel:Ron.html">Ron Kimmel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rodol=agrave=:Emanuele.html">Emanuele Rodolà</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.12283">PDF</a><br/><b>Abstract: </b>In this paper, we advocate the adoption of metric preservation as a powerful
prior for learning latent representations of deformable 3D shapes. Key to our
construction is the introduction of a geometric distortion criterion, defined
directly on the decoded shapes, translating the preservation of the metric on
the decoding to the formation of linear paths in the underlying latent space.
Our rationale lies in the observation that training samples alone are often
insufficient to endow generative models with high fidelity, motivating the need
for large training datasets. In contrast, metric preservation provides a
rigorous way to control the amount of geometric distortion incurring in the
construction of the latent space, leading in turn to synthetic samples of
higher quality. We further demonstrate, for the first time, the adoption of
differentiable intrinsic distances in the backpropagation of a geodesic loss.
Our geometric priors are particularly relevant in the presence of scarce
training data, where learning any meaningful latent structure can be especially
challenging. The effectiveness and potential of our generative model is
showcased in applications of style transfer, content generation, and shape
completion.
</p></div>
    </summary>
    <updated>2020-03-30T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.12134</id>
    <link href="http://arxiv.org/abs/2003.12134" rel="alternate" type="text/html"/>
    <title>Miniature Robot Path Planning for Bridge Inspection: Min-Max Cycle Cover-Based Approach</title>
    <feedworld_mtime>1585526400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Michael.html">Michael Lin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/La:Richard_J=.html">Richard J. La</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.12134">PDF</a><br/><b>Abstract: </b>We study the problem of planning the deployments of a group of mobile robots.
While the problem and formulation can be used for many different problems, here
we use a bridge inspection as the motivating application for the purpose of
exposition. The robots are initially stationed at a set of depots placed
throughout the bridge. Each robot is then assigned a set of sites on the bridge
to inspect and, upon completion, must return to the same depot where it is
stored.
</p>
<p>The problem of robot planning is formulated as a rooted min-max cycle cover
problem, in which the vertex set consists of the sites to be inspected and
robot depots, and the weight of an edge captures either (i) the amount of time
needed to travel from one end vertex to the other vertex or (ii) the necessary
energy expenditure for the travel. In the first case, the objective function is
the total inspection time, whereas in the latter case, it is the maximum energy
expenditure among all deployed robots. We propose a novel algorithm with
approximation ratio of $5 + \epsilon$, where $0&lt;\epsilon&lt;1$. In addition, the
computational complexity of the proposed algorithm is shown to be $O\big(
n^2+2^{m-1} n \log(n+k) \big)$, where $n$ is the number of vertices, and $m$ is
the number of depots.
</p></div>
    </summary>
    <updated>2020-03-30T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.12110</id>
    <link href="http://arxiv.org/abs/2003.12110" rel="alternate" type="text/html"/>
    <title>Advanced Flow-Based Multilevel Hypergraph Partitioning</title>
    <feedworld_mtime>1585526400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gottesb=uuml=ren:Lars.html">Lars Gottesbüren</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hamann:Michael.html">Michael Hamann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schlag:Sebastian.html">Sebastian Schlag</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wagner:Dorothea.html">Dorothea Wagner</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.12110">PDF</a><br/><b>Abstract: </b>The balanced hypergraph partitioning problem is to partition a hypergraph
into $k$ disjoint blocks of bounded size such that the sum of the number of
blocks connected by each hyperedge is minimized. We present an improvement to
the flow-based refinement framework of KaHyPar-MF, the current state-of-the-art
multilevel $k$-way hypergraph partitioning algorithm for high-quality
solutions. Our improvement is based on the recently proposed HyperFlowCutter
algorithm for computing bipartitions of unweighted hypergraphs by solving a
sequence of incremental maximum flow problems. Since vertices and hyperedges
are aggregated during the coarsening phase, refinement algorithms employed in
the multilevel setting must be able to handle both weighted hyperedges and
weighted vertices -- even if the initial input hypergraph is unweighted. We
therefore enhance HyperFlowCutter to handle weighted instances and propose a
technique for computing maximum flows directly on weighted hypergraphs.
</p>
<p>We compare the performance of two configurations of our new algorithm with
KaHyPar-MF and seven other partitioning algorithms on a comprehensive benchmark
set with instances from application areas such as VLSI design, scientific
computing, and SAT solving. Our first configuration, KaHyPar-HFC, computes
slightly better solutions than KaHyPar-MF using significantly less running
time. The second configuration, KaHyPar-HFC*, computes solutions of
significantly better quality and is still slightly faster than KaHyPar-MF.
Furthermore, in terms of solution quality, both configurations also outperform
all other competing partitioners.
</p></div>
    </summary>
    <updated>2020-03-30T01:21:03Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16861</id>
    <link href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/" rel="alternate" type="text/html"/>
    <title>Logic and Star-Free, Part Deux</title>
    <summary>A visual proof with no abstract-algebra overhead Composite crop of src1, src2 Dominique Perrin and Jean-Éric Pin are French mathematicians who have done significant work in automata theory. Their 1986 paper “First-Order Logic and Star-Free Sets” gave a new proof that first-order logic plus the relation characterizes star-free regular sets. Today we present their proof […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>A visual proof with no abstract-algebra overhead</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/perrinpin/" rel="attachment wp-att-16863"><img alt="" class="alignright wp-image-16863" height="154" src="https://rjlipton.files.wordpress.com/2020/03/perrinpin.png?w=200&amp;h=154" width="200"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Composite crop of <a href="http://www-igm.univ-mlv.fr/~perrin/">src1</a>, <a href="https://www.ae-info.org/ae/Member/Pin_Jean-Eric">src2</a></font></td>
</tr>
</tbody>
</table>
<p>
Dominique Perrin and Jean-Éric Pin are French mathematicians who have done significant work in automata theory. Their 1986 <a href="https://core.ac.uk/download/pdf/82354218.pdf">paper</a> “First-Order Logic and Star-Free Sets” gave a new proof that first-order logic plus the <img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/> relation characterizes star-free regular sets.</p>
<p>
Today we present their proof in a new visual way, using “stacked words” rather than their “marked words.” We also sidestep algebra by appealing to the familiar theorem that every regular language has a unique minimal deterministic finite automaton (DFA). </p>
<p>
The first <a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/">post</a> in this series defined the classes <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> for star-free regular and <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> for first-order logic where variables <img alt="{u,v,w,\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%2Cv%2Cw%2C%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u,v,w,\dots}"/> range over the indices <img alt="{0,\dots,n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%2C%5Cdots%2Cn-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0,\dots,n-1}"/> of a string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> of length <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>. For any character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> in the alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> there is the predicate <img alt="{X_c(u)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28u%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(u)}"/> saying that the character in position <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> equals <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. The first part proved that for any language <img alt="{A \in \mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%5Cin+%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A \in \mathsf{SF}}"/> there is a sentence <img alt="{\psi_A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_A}"/> using only predicates <img alt="{X_c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c}"/> and the relation <img alt="{u &lt; v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu+%3C+v%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u &lt; v}"/> besides the usual quantifiers and Boolean operations of first-order logic. such that <img alt="{\psi_A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_A}"/> defined <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/>. That is, it proved <img alt="{\mathsf{SF}\subseteq\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%5Csubseteq%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}\subseteq\mathsf{FO}[&lt;]}"/>.</p>
<p>
A key trick was to focus not on <img alt="{\psi_A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_A}"/> but on a formula <img alt="{\phi_A(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_A%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_A(i,j)}"/> expressing that the part of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> from position <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> (inclusive) to <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> (exclusive) belongs to <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/>. To prove the converse direction, <img alt="{\mathsf{FO}[&lt;]\subseteq\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%5Csubseteq%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]\subseteq\mathsf{SF}}"/>, we focus not on middles of strings but on prefixes and suffixes. The previous <a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/">post</a> proved two lemmas showing that if <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> is star-free then for any string <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/>, so are its prefix and suffix languages: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  L\backslash y &amp;=&amp; \{z: yz \in L\}\\ L/y &amp;=&amp; \{x: xy \in L\}. \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++L%5Cbackslash+y+%26%3D%26+%5C%7Bz%3A+yz+%5Cin+L%5C%7D%5C%5C+L%2Fy+%26%3D%26+%5C%7Bx%3A+xy+%5Cin+L%5C%7D.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  L\backslash y &amp;=&amp; \{z: yz \in L\}\\ L/y &amp;=&amp; \{x: xy \in L\}. \end{array} "/></p>
<p>We will piece together star-free expressions for a multitude of <img alt="{L/y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fy%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/y}"/> and <img alt="{L \backslash y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL+%5Cbackslash+y%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L \backslash y}"/> sets that come from analyzing minimum DFAs <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> at each induction step, until we have built a big star-free expression <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> for <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/>. This sounds complex—and is complex—but all the steps are elementary. At the end we’ll try to see how big <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> gets. <b>Again the rest of this post up to end notes is written by Daniel Winton</b>.</p>
<p>
</p><p>
</p><p/><h2> Stacked Words and FO Formulas </h2><p/>
<p/><p>
We implement the “marked words” idea of Perrin and Pin by using extra dimensions rather than marks. Consider any formula <img alt="{\phi(u_1, \dots, u_j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%28u_1%2C+%5Cdots%2C+u_j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi(u_1, \dots, u_j)}"/> in FO[<img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/>] where <img alt="{u_1,\dots,u_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_1%2C%5Cdots%2Cu_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_1,\dots,u_j}"/> are the free variables. Our “stacked words” have <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> extra rows underneath the top level holding the string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>. Each row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> has the same length <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> as <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> and contains a single <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> and <img alt="{(n-1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28n-1%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(n-1)}"/> <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>s. The column <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> in which the <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> lies gives the value of the variable <img alt="{u_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_i}"/>. Thus the alphabet of our stacked words is <img alt="{\Sigma^{(j)} = \Sigma\times\{0,1\}^j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%5E%7B%28j%29%7D+%3D+%5CSigma%5Ctimes%5C%7B0%2C1%5C%7D%5Ej%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma^{(j)} = \Sigma\times\{0,1\}^j}"/>. Here is an example:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/stackedword/" rel="attachment wp-att-16865"><img alt="" class="aligncenter wp-image-16865" height="248" src="https://rjlipton.files.wordpress.com/2020/03/stackedword.jpg?w=242&amp;h=248" width="242"/></a></p>
<p/><p><br/>
Each column is really a single character <img alt="{C \in \Sigma^{(j)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC+%5Cin+%5CSigma%5E%7B%28j%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C \in \Sigma^{(j)}}"/>, but we picture its entries as characters in <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> or <img alt="{\{0,1\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{0,1\}}"/>. For any row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>, define <img alt="{Y_{i,0}(\cdot)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY_%7Bi%2C0%7D%28%5Ccdot%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y_{i,0}(\cdot)}"/> to be the disjunction of <img alt="{X_C(\cdot)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_C%28%5Ccdot%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_C(\cdot)}"/> over all <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/> that have a <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/> in entry <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>, and define <img alt="{Y_{i,1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY_%7Bi%2C1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y_{i,1}}"/> similarly. Then the following sentence expresses the “format condition” that row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> has exactly one <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>: </p>
<p align="center"><img alt="\displaystyle  (\exists k)[Y_{i,1}(k) \land (\forall \ell) [\ell \neq k \rightarrow Y_{i,0}(k)]]. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%28%5Cexists+k%29%5BY_%7Bi%2C1%7D%28k%29+%5Cland+%28%5Cforall+%5Cell%29+%5B%5Cell+%5Cneq+k+%5Crightarrow+Y_%7Bi%2C0%7D%28k%29%5D%5D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  (\exists k)[Y_{i,1}(k) \land (\forall \ell) [\ell \neq k \rightarrow Y_{i,0}(k)]]. "/></p>
<p>This readily transforms into a star-free expression for the language of stacked words with exactly one <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>: </p>
<p align="center"><img alt="\displaystyle  \alpha_i = C_{i,0}^* C_{i,1} C_{i,0}^*, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Calpha_i+%3D+C_%7Bi%2C0%7D%5E%2A+C_%7Bi%2C1%7D+C_%7Bi%2C0%7D%5E%2A%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \alpha_i = C_{i,0}^* C_{i,1} C_{i,0}^*, "/></p>
<p>Here <img alt="{C_{i,0}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_%7Bi%2C0%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C_{i,0}}"/> is the union of all stacked characters that have a <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/> in entry <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>, and <img alt="{C_{i,1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC_%7Bi%2C1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C_{i,1}}"/> is similarly defined. This is where the examples in the previous <a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/">post</a> about finite unions inside stars come in handy. The upshot is that </p>
<p align="center"><img alt="\displaystyle  \alpha_0 = \bigcap_{i=1}^j \alpha_i " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Calpha_0+%3D+%5Cbigcap_%7Bi%3D1%7D%5Ej+%5Calpha_i+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \alpha_0 = \bigcap_{i=1}^j \alpha_i "/></p>
<p>is a <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> expression that enforces the “format condition” over all rows. We will use this at the crux of the proof; whether <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/> is really needed is a question at the end. If we take the format for granted, then the main advantage of our stacked words will be visualizing how to decompose automata according to when the <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in a critical row is read.</p>
<p>
</p><p/><h2> From FO To SF </h2><p/>
<p/><p>
The proof manipulates formulas <img alt="{\phi(u_1,\dots,u_j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%28u_1%2C%5Cdots%2Cu_j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi(u_1,\dots,u_j)}"/> having the <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> free variables shown. The corresponding language <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> is the set of stacked words that make <img alt="{\phi(k_1,\dots,k_j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%28k_1%2C%5Cdots%2Ck_j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi(k_1,\dots,k_j)}"/> true, where for each <img alt="{i \leq j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%5Cleq+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i \leq j}"/>, <img alt="{k_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k_i}"/> is the position of the lone <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>, which gives the value of <img alt="{u_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_i}"/>. </p>
<blockquote><p><b>Theorem 1</b> <em> For all formulas <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\phi}"/> over <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>, <img alt="{L_\phi\in\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%5Cin%5Cmathsf%7BSF%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L_\phi\in\mathsf{SF}}"/>. </em>
</p></blockquote>
<p/><p>
Without loss of generality we may suppose <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> is in <em>prenex form</em>, meaning that it has all quantifiers out front. If there are <img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r}"/> variables of which <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> are free, this means </p>
<p align="center"><img alt="\displaystyle  \phi = (Q_{j+1} u_{j+1})\cdots (Q_r u_r)\mu, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cphi+%3D+%28Q_%7Bj%2B1%7D+u_%7Bj%2B1%7D%29%5Ccdots+%28Q_r+u_r%29%5Cmu%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \phi = (Q_{j+1} u_{j+1})\cdots (Q_r u_r)\mu, "/></p>
<p>where each <img alt="{Q_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_i}"/> is <img alt="{\forall}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cforall%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\forall}"/> or <img alt="{\exists}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cexists%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\exists}"/> and <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mu}"/> has no quantifiers. If we picture the variables <img alt="{u_1,\dots,u_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_1%2C%5Cdots%2Cu_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_1,\dots,u_j}"/> as once having had quantifiers <img alt="{Q_1,\dots,Q_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%2C%5Cdots%2CQ_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1,\dots,Q_j}"/>, then the proof—after dealing with <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mu}"/>—restores them one at a time, beginning with <img alt="{Q_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_j}"/>. That is the induction. We prove the base case <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mu}"/> here and the induction case in the coming sections.</p>
<p>
<em>Proof:</em>  Quantifier free formulas in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> are Boolean combinations of the <em>atomic predicates</em> <img alt="{X_c(u_i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28u_i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(u_i)}"/> and <img alt="{u_h &lt; u_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_h+%3C+u_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_h &lt; u_i}"/>. Here <img alt="{X_c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c}"/> is only for the characters <img alt="{c \in \Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc+%5Cin+%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c \in \Sigma}"/>, not the stacked characters <img alt="{C \in \Sigma^{(j)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC+%5Cin+%5CSigma%5E%7B%28j%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C \in \Sigma^{(j)}}"/>. But inside <img alt="{\mu}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mu}"/> (when we have <img alt="{j = r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = r}"/>) we have to deal with the whole stack to represent <img alt="{X_c(u_i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28u_i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(u_i)}"/>. Putting <img alt="{\Sigma = \{c_1,\dots,c_{\ell}\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma+%3D+%5C%7Bc_1%2C%5Cdots%2Cc_%7B%5Cell%7D%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma = \{c_1,\dots,c_{\ell}\}}"/>, the expression can be viewed schematically as:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/xcstackedexp/" rel="attachment wp-att-16867"><img alt="" class="aligncenter size-large wp-image-16867" height="126" src="https://rjlipton.files.wordpress.com/2020/03/xcstackedexp.jpg?w=600&amp;h=126" width="600"/></a></p>
<p/><p><br/>
As illustrated above, using the initial lemma in the part-1 <a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/">post</a>, this is equivalent to a star-free regular expression. The other atomic predicate, <img alt="{u_h &lt; u_i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_h+%3C+u_i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_h &lt; u_i}"/>, is true when we have a stacked word <img alt="{Y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y}"/> of the form: </p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/ltstackedword2/" rel="attachment wp-att-16891"><img alt="" class="aligncenter wp-image-16891" height="250" src="https://rjlipton.files.wordpress.com/2020/03/ltstackedword2.jpg?w=300&amp;h=250" width="300"/></a></p>
<p/><p><br/>
It is not important to have <img alt="{h &lt; i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh+%3C+i%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{h &lt; i}"/>; these are just the labels of the variables. Their values <img alt="{k_1,k_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk_1%2Ck_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k_1,k_2}"/> must obey <img alt="{k_1 &lt; k_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk_1+%3C+k_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k_1 &lt; k_2}"/>, meaning that the <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in row <img alt="{h}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bh%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{h}"/> comes in an earlier column than the <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in row <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>. The characters of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> in the top row are immaterial. We can capture this condition over all strings <img alt="{Y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y}"/> over <img alt="{\Sigma^{(j)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%5E%7B%28j%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma^{(j)}}"/> by the expression:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/ltstackedexp/" rel="attachment wp-att-16872"><img alt="" class="aligncenter size-large wp-image-16872" height="212" src="https://rjlipton.files.wordpress.com/2020/03/ltstackedexp.jpg?w=600&amp;h=212" width="600"/></a></p>
<p/><p><br/>
Again by the lemma in Part 1, this yields a star-free expression. To complete the basis, we note that if <img alt="{L_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_1}"/> and <img alt="{L_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_2}"/> have star-free expressions <img alt="{\alpha_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_1}"/> and <img alt="{\alpha_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_2}"/> corresponding to <img alt="{\phi_1, \phi_2\in \mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_1%2C+%5Cphi_2%5Cin+%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_1, \phi_2\in \mathsf{FO}[&lt;]}"/>, then <img alt="{\lnot\phi_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clnot%5Cphi_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\lnot\phi_1}"/> is represented by <img alt="{\sim{\alpha_1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csim%7B%5Calpha_1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sim{\alpha_1}}"/> and <img alt="{\phi_1\lor\phi_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_1%5Clor%5Cphi_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_1\lor\phi_2}"/> by <img alt="{\alpha_1\cup\alpha_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_1%5Ccup%5Calpha_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_1\cup\alpha_2}"/>, both of which are clearly star-free. </p>
<p>
</p><p/><h2> Strategy For the Induction Case </h2><p/>
<p/><p>
Assume that all formulas in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> with <img alt="{\ell = r - j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell+%3D+r+-+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell = r - j}"/> quantifiers have star-free translations. We will show that any formula in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> with <img alt="{\ell+1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell+1}"/> quantifiers also has a star-free translation. Let <img alt="{\psi(u_1,... ,u_{j-1})=\exists u_j \phi(u_1,..., u_j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi%28u_1%2C...+%2Cu_%7Bj-1%7D%29%3D%5Cexists+u_j+%5Cphi%28u_1%2C...%2C+u_j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi(u_1,... ,u_{j-1})=\exists u_j \phi(u_1,..., u_j)}"/> where <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> is a formula in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> that has <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> total variables, <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> free variables and <img alt="{m-j=\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm-j%3D%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m-j=\ell}"/> quantifiers. We are allowed to assume the first quantifier in <img alt="{\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi}"/> is existential as <img alt="{\exists \equiv \lnot (\forall \lnot)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cexists+%5Cequiv+%5Clnot+%28%5Cforall+%5Clnot%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\exists \equiv \lnot (\forall \lnot)}"/> and we observed above that the star-free expressible formulas in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> are closed under negation. </p>
<p>
The language of <img alt="{\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi}"/> is given by: </p>
<p>
<img alt="{L_\psi=\{z\in(\Sigma\times \{0,1\}^{j-1})^*:}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cpsi%3D%5C%7Bz%5Cin%28%5CSigma%5Ctimes+%5C%7B0%2C1%5C%7D%5E%7Bj-1%7D%29%5E%2A%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\psi=\{z\in(\Sigma\times \{0,1\}^{j-1})^*:}"/> we can add a <img alt="{{(j+1)}^{th}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%28j%2B1%29%7D%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{(j+1)}^{th}}"/> row to each of the <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> characters of <img alt="{z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z}"/> using <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> minus one <img alt="{0'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0'}"/>s and one <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> such that the resulting string <img alt="{z'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z'}"/> belongs to <img alt="{L_\phi\}.}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%5C%7D.%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi\}.}"/> </p>
<p>We must show that <img alt="{L_\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\psi}"/> is star-free. As <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> has <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell}"/> quantifiers, then by assumption <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> is star-free regular. </p>
<p>
Note that <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> has one more row than <img alt="{L_\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\psi}"/> because it has one more free variable. Without loss of generality we may suppose it is the bottom row. </p>
<p>
</p><p/><h3> The Tricky Point </h3><p/>
<p/><p>
Since we have an existential quantifier we might think we can simply delete the last row of <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/>. But here is a counterexample to show why we must be careful not to “lose information”:</p>
<p>
Let <img alt="{\alpha=}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%3D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha=}"/> </p>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/alphastackedexp/" rel="attachment wp-att-16875"><img alt="" class="aligncenter size-large wp-image-16875" height="56" src="https://rjlipton.files.wordpress.com/2020/03/alphastackedexp.jpg?w=600&amp;h=56" width="600"/></a></p>
<p>
and <img alt="{\alpha'=}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%27%3D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha'=}"/> </p>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/alphaprime/" rel="attachment wp-att-16876"><img alt="" class="aligncenter size-large wp-image-16876" height="43" src="https://rjlipton.files.wordpress.com/2020/03/alphaprime.jpg?w=600&amp;h=43" width="600"/></a></p>
<p>
Notice that <img alt="{\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha'}"/> equals <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> with its final row removed. We have <img alt="{L_\alpha=}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Calpha%3D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\alpha=}"/></p>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/lalpha/" rel="attachment wp-att-16878"><img alt="" class="aligncenter wp-image-16878" height="44" src="https://rjlipton.files.wordpress.com/2020/03/lalpha.jpg?w=357&amp;h=44" width="357"/></a></p>
<p>
and <img alt="{L_{\alpha'}=}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7B%5Calpha%27%7D%3D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{\alpha'}=}"/></p>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/lalphaprime/" rel="attachment wp-att-16880"><img alt="" class="aligncenter wp-image-16880" height="44" src="https://rjlipton.files.wordpress.com/2020/03/lalphaprime.jpg?w=300&amp;h=44" width="300"/></a></p>
<p/><p><br/>
Then <img alt="{L_\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\alpha}"/> is the language of strings with at least three zeroes in a row and <img alt="{L_{\alpha'}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7B%5Calpha%27%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{\alpha'}}"/> is the language of strings with at least two zeroes in a row.</p>
<p>
We cannot add a second row consisting of zeroes and one 1 to each word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> in <img alt="{L_\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\alpha'}"/> to force <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> to be in <img alt="{L_\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\alpha}"/>. For a trivial example, consider the word <img alt="{w=}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%3D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w=}"/></p>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/w00/" rel="attachment wp-att-16881"><img alt="" class="aligncenter wp-image-16881" height="36" src="https://rjlipton.files.wordpress.com/2020/03/w00.jpg?w=75&amp;h=36" width="75"/></a></p>
<p/><p/>
<p>
The fault can be interpreted as <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/> not being recoverable uniquely from <img alt="{\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha'}"/> owing to a loss of information. We could also pin the fault in this case on the central <img alt="{\cap}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccap%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\cap}"/>, noting that <img alt="{(\exists u)(f(u) \wedge g(u))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cexists+u%29%28f%28u%29+%5Cwedge+g%28u%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\exists u)(f(u) \wedge g(u))}"/> is generally not equivalent to <img alt="{(\exists u)f(u) \wedge (\exists u)g(u)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cexists+u%29f%28u%29+%5Cwedge+%28%5Cexists+u%29g%28u%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\exists u)f(u) \wedge (\exists u)g(u)}"/>. </p>
<p>
Either way, this means we must be careful with how we express (the final row of) <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/>. The idea is to give <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> in segments such that the final row of each segment is all-zero or a single <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>, so that the act of removing the final row could be inverted. This is the crux of the proof. To handle it we employ the unique DFA for the regular expression already obtained by induction for <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/>. </p>
<p>
</p><p/><h2> Main Part of the Proof </h2><p/>
<p/><p>
By the Myhill-Nerode Theorem, there must exist a unique minimal automaton <img alt="{M_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M_\phi}"/> over the alphabet of our stacked words defining the language <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> of <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/>. </p>
<p>
The state set <img alt="{Q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q}"/> of <img alt="{M_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M_\phi}"/> can be partitioned into the set <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> of states before any <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> is read in the final row, the set <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/> of states reached after reading a <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in the final row, plus a dead state <img alt="{q_D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq_D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q_D}"/> belonging to neither <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> nor <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/>. The start state belongs to <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> and all accepting states belong to <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/>. Since any stacked word and therefore accepting computation has exactly one <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in any row, all arcs within <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> and <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/> must have a only <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>s in their final row, while the letters connecting states in <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> and <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/> must have a <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in their final row. The minimality of <img alt="{M_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M_\phi}"/> enforces these properties. Here is a sketch, omitting <img alt="{q_D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq_D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q_D}"/>: </p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/03/29/logic-and-star-free-part-deux/lphidfa/" rel="attachment wp-att-16883"><img alt="" class="aligncenter size-large wp-image-16883" height="324" src="https://rjlipton.files.wordpress.com/2020/03/lphidfa.jpg?w=600&amp;h=324" width="600"/></a></p>
<p/><p><br/>
Let <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> be the set of edges that cross from <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> to <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/>. With <img alt="{m = |E|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+%7CE%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = |E|}"/> we can label their origins by states <img alt="{p_1,\dots,p_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_1%2C%5Cdots%2Cp_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_1,\dots,p_m}"/> (not necessarily all distinct), and similarly label their characters by <img alt="{c_1,\dots,c_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc_1%2C%5Cdots%2Cc_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c_1,\dots,c_m}"/> and the destination states by <img alt="{r_1,\dots,r_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_1%2C%5Cdots%2Cr_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_1,\dots,r_m}"/>. Then <img alt="{C = \{c_1,\dots,c_m\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC+%3D+%5C%7Bc_1%2C%5Cdots%2Cc_m%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C = \{c_1,\dots,c_m\}}"/> collects all the characters used by <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> that have a <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in row <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> (except those into or at the dead state <img alt="{q_D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq_D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q_D}"/>). We can identify <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> with the set of instructions <img alt="{\{(p_e, c_e, r_e): 1 \leq e \leq m\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B%28p_e%2C+c_e%2C+r_e%29%3A+1+%5Cleq+e+%5Cleq+m%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{(p_e, c_e, r_e): 1 \leq e \leq m\}}"/>. </p>
<p>
Finally let <img alt="{L_{p,q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bp%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{p,q}}"/> denote the set of strings that take <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> from state <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> to state <img alt="{q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q}"/>, and let <img alt="{L_{r,F} = \cup_{f \in F} L_{r,f}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Br%2CF%7D+%3D+%5Ccup_%7Bf+%5Cin+F%7D+L_%7Br%2Cf%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{r,F} = \cup_{f \in F} L_{r,f}}"/>. Then we can define <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> by the expression <a name="expansion"/></p><a name="expansion">
<p align="center"><img alt="\displaystyle  L_\phi =\bigcup_{(p_e, c_e, r_e)\in E} L_{s,p_e}\cdot c_e \cdot L_{r_e,F}. \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++L_%5Cphi+%3D%5Cbigcup_%7B%28p_e%2C+c_e%2C+r_e%29%5Cin+E%7D+L_%7Bs%2Cp_e%7D%5Ccdot+c_e+%5Ccdot+L_%7Br_e%2CF%7D.+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  L_\phi =\bigcup_{(p_e, c_e, r_e)\in E} L_{s,p_e}\cdot c_e \cdot L_{r_e,F}. \ \ \ \ \ (1)"/></p>
</a><p><a name="expansion"/> What remains is to find <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> expressions for <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/> and <img alt="{L_{r_e,F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Br_e%2CF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{r_e,F}}"/> for each <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/>. The latter is easy: Pick any string <img alt="{y_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y_e}"/> in <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/>. Then </p>
<p align="center"><img alt="\displaystyle  L_{r_e,F} = \{z: y_e\cdot c_e \cdot z \in L(M)\} = L_{\phi} \backslash y_e c_e. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++L_%7Br_e%2CF%7D+%3D+%5C%7Bz%3A+y_e%5Ccdot+c_e+%5Ccdot+z+%5Cin+L%28M%29%5C%7D+%3D+L_%7B%5Cphi%7D+%5Cbackslash+y_e+c_e.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  L_{r_e,F} = \{z: y_e\cdot c_e \cdot z \in L(M)\} = L_{\phi} \backslash y_e c_e. "/></p>
<p>The closure of <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> under left quotients supplies expressions <img alt="{\beta_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta_e}"/> for <img alt="{L_{r_e,F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Br_e%2CF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{r_e,F}}"/>. </p>
<p>
The case of <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/>, however, is harder. What we would like to do is choose some (any) string <img alt="{w_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w_e}"/> that goes from <img alt="{r_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_e}"/> to an accepting state and claim that <img alt="{L_{s,p_e} = L(M)/c_e w_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D+%3D+L%28M%29%2Fc_e+w_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e} = L(M)/c_e w_e}"/>. The problem is that <img alt="{w_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w_e}"/> might be accepted from some state <img alt="{r_d \neq r_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_d+%5Cneq+r_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_d \neq r_e}"/> that has an incoming arc on the same character <img alt="{c_d = c_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc_d+%3D+c_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c_d = c_e}"/> from some other state <img alt="{p_d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d}"/>. Then <img alt="{L_{s,p_d}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_d%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_d}}"/>, which is disjoint from <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/>, is included also in <img alt="{L(M)/c_e w_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28M%29%2Fc_e+w_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(M)/c_e w_e}"/>. There may, however, be strings <img alt="{y_d \in L_{s,p_d}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By_d+%5Cin+L_%7Bs%2Cp_d%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y_d \in L_{s,p_d}}"/> and <img alt="{w'_e \in L_{r_e,F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27_e+%5Cin+L_%7Br_e%2CF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'_e \in L_{r_e,F}}"/> such that <img alt="{y = y_d c_e w'_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By+%3D+y_d+c_e+w%27_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y = y_d c_e w'_e}"/> is <b>not</b> accepted by <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>. Then the string <img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/> would be wrongly included if we substituted <img alt="{L(M)/c_e z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28M%29%2Fc_e+z_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(M)/c_e z_e}"/> for <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/> (or for <img alt="{L_{s,p_e} \cup L_{s,p_d}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D+%5Ccup+L_%7Bs%2Cp_d%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e} \cup L_{s,p_d}}"/>) in (1). </p>
<p>
There is also a second issue when crossing edges on the same character <img alt="{c_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c_e}"/> come in from distinct states <img alt="{p_d,p_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d%2Cp_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d,p_e}"/> to the same state <img alt="{r_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_e}"/>. To fix all this, we need to use sets of strings that distinguish <img alt="{p_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_e}"/> from all the other states <img alt="{p_d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d}"/>. This requires the most particular use of the minimality of <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>: If <img alt="{p_d \neq p_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d+%5Cneq+p_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d \neq p_e}"/>, then there is either (or both):</p>
<ul>
<li>
a string <img alt="{z_{e,d}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_%7Be%2Cd%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z_{e,d}}"/> in <img alt="{L_{p_e,F} - L_{p_d,F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bp_e%2CF%7D+-+L_%7Bp_d%2CF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{p_e,F} - L_{p_d,F}}"/>, or <p/>
</li><li>
a string <img alt="{z_{d,e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz_%7Bd%2Ce%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z_{d,e}}"/> in <img alt="{L_{p_d,F} - L_{p_e,F}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bp_d%2CF%7D+-+L_%7Bp_e%2CF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{p_d,F} - L_{p_e,F}}"/>.
</li></ul>
<p>
The strings in question need not begin with a character in <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/>—they need not cross right away. Let <img alt="{Z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Z_e}"/> stand for a choice of strings of the former kind, <img alt="{Z'_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ%27_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Z'_e}"/> the latter kind, covering all states <img alt="{p_d \neq p_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d+%5Cneq+p_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d \neq p_e}"/>. Then <a name="distinct"/></p><a name="distinct">
<p align="center"><img alt="\displaystyle  L_{s,p_e} = \left(\bigcap_{z \in Z_e} L_{\phi}/z\right) \cap \left(\bigcap_{z' \in Z'_e} (\alpha_0 \cap \tilde{L}_{\phi})/z'\right). \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++L_%7Bs%2Cp_e%7D+%3D+%5Cleft%28%5Cbigcap_%7Bz+%5Cin+Z_e%7D+L_%7B%5Cphi%7D%2Fz%5Cright%29+%5Ccap+%5Cleft%28%5Cbigcap_%7Bz%27+%5Cin+Z%27_e%7D+%28%5Calpha_0+%5Ccap+%5Ctilde%7BL%7D_%7B%5Cphi%7D%29%2Fz%27%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  L_{s,p_e} = \left(\bigcap_{z \in Z_e} L_{\phi}/z\right) \cap \left(\bigcap_{z' \in Z'_e} (\alpha_0 \cap \tilde{L}_{\phi})/z'\right). \ \ \ \ \ (2)"/></p>
</a><p><a name="distinct"/> We could not use just the complement <img alt="{\tilde{L}_{\phi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ctilde%7BL%7D_%7B%5Cphi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\tilde{L}_{\phi}}"/> of <img alt="{L_{\phi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7B%5Cphi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{\phi}}"/> because that would allow strings that violate the “one <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>” condition in the rows. Note that <img alt="{\alpha_0 \cap \tilde{L}_{\phi} = L_{\neg\phi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0+%5Ccap+%5Ctilde%7BL%7D_%7B%5Cphi%7D+%3D+L_%7B%5Cneg%5Cphi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0 \cap \tilde{L}_{\phi} = L_{\neg\phi}}"/>. Whether one can do the induction for <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> and <img alt="{\neg\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cneg%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\neg\phi}"/> in tandem without invoking <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/> is a riddle we pose at the end. </p>
<p>
Either way, the closure of <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> under right quotients yields a star-free expression <img alt="{\alpha_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_e}"/> for <img alt="{L_{s,p_e}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7Bs%2Cp_e%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_{s,p_e}}"/>. Then we just have to plug our expressions <img alt="{\alpha_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_e}"/> and <img alt="{\beta_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta_e}"/> into (1) to get a star-free expression <img alt="{\beta_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta_\phi}"/> for <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/>. Now we are ready for the crude final step:</p>
<blockquote><p><b> </b> <em> Form <img alt="{\beta'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\beta'}"/> by knocking out the last entry in every character occurring in <img alt="{\beta_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta_%5Cphi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\beta_\phi}"/>. Then <img alt="{\beta'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\beta'}"/> represents <img alt="{L_{\psi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%7B%5Cpsi%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L_{\psi}}"/>. </em>
</p></blockquote>
<p/><p>
To prove this final statement, first suppose <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> is a stacked word in <img alt="{L_\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\psi}"/>. Then <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> satisfies <img alt="{(\exists u)\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cexists+u%29%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\exists u)\phi}"/>, so there is a value <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> so that <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> satisfies <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> with <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> set equal to the value <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>. This means that the stacked word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> formed from <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> and a last row with <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in position <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> belongs to <img alt="{L_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_\phi}"/> and hence matches <img alt="{\beta_\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta_%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta_\phi}"/>. Since <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> is obtained by knocking out the last row of <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/>, <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> matches <img alt="{\beta'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta'}"/>. </p>
<p>
The converse is the part where the tricky point we noted at the outset could trip us up. Suppose <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> matches <img alt="{\beta'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta'}"/>. From the form of (1) as a union of terms <img alt="{\alpha_e c_e \beta_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_e+c_e+%5Cbeta_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_e c_e \beta_e}"/>, we can trace how <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> is matched to identify a place in <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> that matches a “middle character” <img alt="{c'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c'}"/> obtained from a <img alt="{c_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c_e}"/> in a crossing edge. Putting a <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> in a new row underneath this place and <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>s elsewhere hence makes a word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> that matches the unique regular expression <img alt="{\beta''}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta''}"/> obtained by appending a <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> component to every “middle character” <img alt="{c'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c'}"/> and a <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/> to all other characters in <img alt="{\beta'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta'}"/>. Then <img alt="{\beta''}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%27%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta''}"/> is equivalent to <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/>, so <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> satisfies <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/>. Since the last row that was added to <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> amounts to supplying a value <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> for the variable <img alt="{u_j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_j}"/>, it follows that <img alt="{w'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w'}"/> satisfies <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> with <img alt="{u_j = k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu_j+%3D+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u_j = k}"/>, hence satisfies <img alt="{\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi}"/>. This yields <img alt="{L(\beta') = L_{\psi}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28%5Cbeta%27%29+%3D+L_%7B%5Cpsi%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(\beta') = L_{\psi}}"/> and so the entire induction goes through. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
First, as an end note, the end of the proof wound up different from what we envisioned until polishing this post. It originally applied the distinct-states argument to states <img alt="{r_d,r_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_d%2Cr_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_d,r_e}"/> on the far side of the crossing, but we had to backtrack on having previously thought that the “second issue” did not matter. Two other questions we pose for our readers:</p>
<ul>
<li>
Do the definitions of <img alt="{Z_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Z_e}"/> and <img alt="{Z'_e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ%27_e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Z'_e}"/> need to extend over all states <img alt="{p \in Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp+%5Cin+Q_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p \in Q_1}"/>, not just the other states <img alt="{p_d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp_d%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p_d}"/> on the border? <p/>
</li><li>
Is <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/> needed in (2), or in the proof overall?
</li></ul>
<p>
A larger question concerns how the size of the translated expressions increases as we add more quantifiers. We discuss the blowup in terms of quantifier depth <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> and length <img alt="{n=|x|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%3D%7Cx%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n=|x|}"/>. Let <img alt="{\psi_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_0}"/> be a first-order formula with no quantifiers and let <img alt="{\psi_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_m}"/> denote <img alt="{\psi_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_0}"/> with <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> quantifiers applied to it. Also let <img alt="{\alpha_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_m}"/> be a star-free translation of <img alt="{\psi_m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_m}"/> and the length of <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/>, denoted by len<img alt="{(\alpha_0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Calpha_0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\alpha_0)}"/>, equal <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>. </p>
<p>
To obtain <img alt="{\alpha_{1}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_{1}}"/> from <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/> we represent <img alt="{\alpha_0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha_0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha_0}"/> by a union over crossing edges between <img alt="{Q_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_1}"/> and <img alt="{Q_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_2}"/> and the final states of <img alt="{Q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q}"/> of the concatenation of prefix and suffix languages and a crossing character between them. We have that <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> gives a decent approximation for—worst-case—length of the prefix languages, suffix languages and the product of crossing edges and final states. Using these approximations we have <img alt="{\mathit{len}(\alpha_1)\approx(2n+1)(n)\approx n^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathit%7Blen%7D%28%5Calpha_1%29%5Capprox%282n%2B1%29%28n%29%5Capprox+n%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathit{len}(\alpha_1)\approx(2n+1)(n)\approx n^2}"/>. Iterating gives <img alt="{\mathit{len}(\alpha_2)\approx(2\mathit{len}(\alpha_1)+1)\mathit{len}(\alpha_1)\approx n^4}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathit%7Blen%7D%28%5Calpha_2%29%5Capprox%282%5Cmathit%7Blen%7D%28%5Calpha_1%29%2B1%29%5Cmathit%7Blen%7D%28%5Calpha_1%29%5Capprox+n%5E4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathit{len}(\alpha_2)\approx(2\mathit{len}(\alpha_1)+1)\mathit{len}(\alpha_1)\approx n^4}"/>, <img alt="{\mathit{len}(\alpha_3)\approx n^8}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathit%7Blen%7D%28%5Calpha_3%29%5Capprox+n%5E8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathit{len}(\alpha_3)\approx n^8}"/>, and in general, <img alt="{\mathit{len}(\alpha_m)\approx ({n^{2}})^m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathit%7Blen%7D%28%5Calpha_m%29%5Capprox+%28%7Bn%5E%7B2%7D%7D%29%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathit{len}(\alpha_m)\approx ({n^{2}})^m}"/>. This says that our blowup could be doubly exponential. Is there a tighter estimate?</p>
<p>
Our final question is: how well do our “stacked words” help to visualize the proof? Are they helpful for framing proofs of equivalences between language classes and logics that are higher up?</p>
<p/></font></font></div>
    </content>
    <updated>2020-03-29T19:40:03Z</updated>
    <published>2020-03-29T19:40:03Z</published>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="Oldies"/>
    <category term="Proofs"/>
    <category term="Teaching"/>
    <category term="trick"/>
    <category term="Daniel Winton"/>
    <category term="descriptive complexity"/>
    <category term="Dominique Perrin"/>
    <category term="formal languages"/>
    <category term="Jean-Eric Pin"/>
    <category term="Logic"/>
    <category term="marked words"/>
    <category term="stacked words"/>
    <category term="star-free regular sets"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-03-30T13:20:59Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4346</id>
    <link href="https://lucatrevisan.wordpress.com/2020/03/29/4346/" rel="alternate" type="text/html"/>
    <title>Another dispatch from Milan</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">By virtue of being one or two weeks ahead of the rest of the Western world, Italy has been giving advance notices to other countries about what to expect in the covid19 epidemic. For this reason, friends from other countries … <a href="https://lucatrevisan.wordpress.com/2020/03/29/4346/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>By virtue of being one or two weeks ahead of the rest of the Western world, Italy has been giving advance notices to other countries about what to expect in the covid19 epidemic. For this reason, friends from other countries have been frequently asking me some questions, whose answers I would like to share.</p>
<p><span id="more-4346"/></p>
<p><b>Will lockdowns work in countries that are not big on rules-following?</b></p>
<p>Apparently, yes. The number of confirmed cases is not a very reliable signal of what is happening, because it is tied as much to the testing capacity as to the actual diffusion of the infection, while the number of deaths is a more informative one (although read below about some issues with how this number is reported). Schools were closed 34 days ago in Lombardy, which went on lockdown 21 days ago, and all of Italy went on lockdown 19 days ago. For the last several days there has been a slowing down in the number of reported deaths, and daily numbers have been decreasing for the last two days. This is a graph updated today of the cumulative number of deaths:</p>
<p><img alt="italy" class="alignnone size-full wp-image-4349" src="https://lucatrevisan.files.wordpress.com/2020/03/italy.png?w=584"/><br/>
(Data from Protezione Civile, chart by me)</p>
<p><b>How does this compare to other places?</b></p>
<p>This graph shows cumulative number of deaths in NYC and in Lombardy, which have a similar population, shifting the NYC data by 17 days:</p>
<p><img alt="lombardy-nyc" class="alignnone size-full wp-image-4350" src="https://lucatrevisan.files.wordpress.com/2020/03/lombardy-nyc.png?w=584"/><br/>
(Data from Protezione Civile and NYT, chart by me)</p>
<p>In Lombardy, schools were closed on February 24 (along with universities, museums, cinemas and several other places) and the lockdown started on March 8; in the shifted timeline, the New York lockdown started on March 3, so one should hope for an earlier slowdown and that NYC will do a lot better than Lombardy.</p>
<p><b>But how bad would things be without restrictive measures?</b></p>
<p>Some smaller towns in Lombardy, where the virus might have circulated for several weeks before the lockdown, have had substantial increases in all-cause deaths. These go from 4x the usual number over the last three months to 7x the usual number during the first three weeks of March. These excess deaths are more than the number of reported covid19 deaths from such towns, and this should be taken into account when looking at reported mortality in Lombardy. Already, the excess deaths in these small towns account for about 0.7% of the population, suggesting that worst-case scenarios of 2 million deaths in the US and of half a million in the UK without mitigation/containment measures made sense.</p>
<p><b>What’s it like after three weeks of lockdown?</b></p>
<p>The mood in the country seems to be shifting: after all  the singing from the balconies, and the baking of cakes, and the practicing of yoga and the posting on Instagram of all of the above, the mood is souring a bit. Unions and employers are at odds on when to reopen factories and many families are living on their savings and wondering how long they can manage to do so. People whose work relates to tourism and hospitality (which accounts for a  very large fraction of the country’s GDP) are wondering not just when  they will be able to reopen their business or return to their job, but if they will be able to do so.</p>
<p>Because of the way the Euro works, Italy cannot just decide to embark on a massive stimulus program. This is because each state’s budget deficit “creates” Euros, and so there is a common policy in the “Eurozone” that limits each state deficit-spending. While this is being negotiated, the Italian government has committed to 25 billions of extra spending, and there is already a big scramble to lobby for who and how should get various parts of this stimulus program.</p>
<p><b>What will it be like after the lockdown is lifted?</b></p>
<p>I am worried that there is no official plan for that. </p>
<p>I hope that there are lots of competent experts working in secret on a plan that takes the best of the contact-tracing and isolation strategies of Korea, Singapore and Taiwan, injects in it the strong tradition of privacy laws that (little known fact) Italy pioneered in Europe even before the GDPR, and creates a wonderfully functioning system.</p>
<p>Hey, once you are hoping, you may as well hope big!</p>
<p><b>What are good sources for predictions of future scenarios?</b></p>
<p>Memes! It has been mind-bending how yesterday’s satire becomes tomorrow’s news.</p>
<p>For example, this meme started circulating on March 14, in which Johnson says “because of the coronavirus, we should prepare to lose some of our loved ones,” to which the queen replies “I am sorry for you and your family.” Johnson tested positive two weeks later.</p>
<p><img alt="fullsizeoutput_18d8" class="alignnone size-full wp-image-4351" src="https://lucatrevisan.files.wordpress.com/2020/03/fullsizeoutput_18d8.jpeg?w=584"/></p>
<p>On March 15, the Pope visited a church in (a deserted) central Rome, where there is a crucifix that, according to tradition, survived unscathed a fire in 1519 and, in 1522, was taken around the city and stopped an epidemic of bubonic plague. The pope prayed for the end of the covid19 epidemic.</p>
<p>On March 24, Lercio, the Italian equivalent of The Onion, published an article titled <a href="https://www.lercio.it/forse-non-ha-capito-bene-papa-francesco-chiede-di-nuovo-a-dio-di-fermare-lepidemia/">“‘Maybe He didn’t hear me the first time’: Pope Francis asks God again to stop the epidemic”</a>.</p>
<p>Sure enough, on March 27 the Pope prayed again for the end of the epidemic, alone in a deserted Saint Peter square.</p>
<p><img alt="Pope Francis extraordinary Urbi et Orbi blessing during the coronavirus crisis" class="alignnone size-full wp-image-4352" src="https://lucatrevisan.files.wordpress.com/2020/03/8e6a2f2ff6542ea2870a1a4c13f6fd06.jpg?w=584"/><br/>
(Photo credit: Yara Nardi and Vatican Press Office)</p>
<p>The images of the pope walking alone at dusk toward the stage on which he prayed were something no disaster movie had prepared us for. Of course people were able to see the humor in that as well.</p>
<p><img alt="IMG_9423" class="alignnone size-full wp-image-4354" src="https://lucatrevisan.files.wordpress.com/2020/03/img_9423.jpg?w=584"/></p>
<p><b>Edited to add:</b> On March 13, The Onion published an article titled <a href="https://www.theonion.com/health-experts-worry-coronavirus-will-overwhelm-america-1842314132">Health Experts Worry Coronavirus Will Overwhelm America’s GoFundMe System</a>. On March 26, The New York Times published an article titled <a href="https://www.nytimes.com/2020/03/26/style/gofundme-coronavirus.html">GoFundMe Confronts Coronavirus Demand</a>.</p></div>
    </content>
    <updated>2020-03-29T18:27:41Z</updated>
    <published>2020-03-29T18:27:41Z</published>
    <category term="Milan"/>
    <category term="New York"/>
    <category term="covid-19"/>
    <category term="Pope Francis"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-03-30T13:20:10Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/03/29/postdoctoral-researchers-at-millennium-institute-for-foundational-research-on-data-imfd-chile-apply-by-january-7-2020/</id>
    <link href="https://cstheory-jobs.org/2020/03/29/postdoctoral-researchers-at-millennium-institute-for-foundational-research-on-data-imfd-chile-apply-by-january-7-2020/" rel="alternate" type="text/html"/>
    <title>Postdoctoral Researchers at Millennium Institute for Foundational Research on Data, IMFD Chile (apply by January 7, 2020)</title>
    <summary>The Millennium Institute for Foundational Research on Data (IMFD Chile, http://www.imfd.cl) offers a postdoc position to advance the understanding of theoretical aspects of neural network architectures, in particular, its expressive and computational power. The coordinators of this project are Professors Pablo Barceló (http://pbarcelo.ing.uc.cl/) and Jorge Pérez (https://users.dcc.uchile.cl/~jperez/). Website: https://docs.google.com/document/d/1PyHp-MRAPWg_0aeinpDGmzJGZbwMtsqC6BqE_4T3KFc/edit Email: pbarcelo@ing.puc.cl</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Millennium Institute for Foundational Research on Data (IMFD Chile, <a href="http://www.imfd.cl" rel="nofollow">http://www.imfd.cl</a>) offers a postdoc position to advance the understanding of theoretical aspects of neural network architectures, in particular, its expressive and computational power. The coordinators of this project are Professors Pablo Barceló (<a href="http://pbarcelo.ing.uc.cl/">http://pbarcelo.ing.uc.cl/</a>) and Jorge Pérez (<a href="https://users.dcc.uchile.cl/~jperez/">https://users.dcc.uchile.cl/~jperez/</a>).</p>
<p>Website: <a href="https://docs.google.com/document/d/1PyHp-MRAPWg_0aeinpDGmzJGZbwMtsqC6BqE_4T3KFc/edit">https://docs.google.com/document/d/1PyHp-MRAPWg_0aeinpDGmzJGZbwMtsqC6BqE_4T3KFc/edit</a><br/>
Email: pbarcelo@ing.puc.cl</p></div>
    </content>
    <updated>2020-03-29T16:18:42Z</updated>
    <published>2020-03-29T16:18:42Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-03-30T13:21:02Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/03/29/backyard-sunlight</id>
    <link href="https://11011110.github.io/blog/2020/03/29/backyard-sunlight.html" rel="alternate" type="text/html"/>
    <title>Backyard sunlight</title>
    <summary>A few photos from my garden:</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A few photos from my garden:</p>

<div><table style="margin-left: auto; margin-right: auto;">
<tbody><tr style="text-align: center; vertical-align: middle;">
<td style="padding: 10px;"><a href="http://www.ics.uci.edu/~eppstein/pix/backyard/CrissCrossShadow.html"><img alt="Criss cross shadow" src="http://www.ics.uci.edu/~eppstein/pix/backyard/CrissCrossShadow-m.jpg" style="border-style: solid; border-color: black;" width="315"/></a></td>
<td style="padding: 10px;"><a href="http://www.ics.uci.edu/~eppstein/pix/backyard/DiagonalRosemary.html"><img alt="Diagonal rosemary" src="http://www.ics.uci.edu/~eppstein/pix/backyard/DiagonalRosemary-m.jpg" style="border-style: solid; border-color: black;" width="378"/></a></td>
</tr><tr style="text-align: center; vertical-align: middle;">
<td style="padding: 10px;"><a href="http://www.ics.uci.edu/~eppstein/pix/backyard/RockAndTreeShadow.html"><img alt="Rock and tree shadow" src="http://www.ics.uci.edu/~eppstein/pix/backyard/RockAndTreeShadow-m.jpg" style="border-style: solid; border-color: black;" width="350"/></a></td>
<td style="padding: 10px;"><a href="http://www.ics.uci.edu/~eppstein/pix/backyard/TruffulaTree.html"><img alt="Truffula tree" src="http://www.ics.uci.edu/~eppstein/pix/backyard/TruffulaTree-m.jpg" style="border-style: solid; border-color: black;" width="252"/></a></td>
</tr></tbody></table></div>

<p>(<a href="https://mathstodon.xyz/@11011110/103908517022371423">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2020-03-29T14:34:00Z</updated>
    <published>2020-03-29T14:34:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-03-29T21:43:43Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-03-29-private-set-intersection-a-soft-introduction/</id>
    <link href="https://decentralizedthoughts.github.io/2020-03-29-private-set-intersection-a-soft-introduction/" rel="alternate" type="text/html"/>
    <title>Private Set Intersection</title>
    <summary>Private Set Intersection (PSI) is a problem within the broader field of secure computation. The PSI problem There are two friends Alice and Bob such that Alice has a set of items $A=(a_1,\ldots,a_n)$ and Bob has the set $B=(b_1,\ldots,b_n)$. The goal is to design a protocol by which Alice and...</summary>
    <updated>2020-03-29T08:00:00Z</updated>
    <published>2020-03-29T08:00:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-03-29T23:35:41Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/041</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/041" rel="alternate" type="text/html"/>
    <title>TR20-041 |  A Polynomial Degree Bound on Defining Equations of Non-rigid Matrices and  Small Linear Circuits | 

	Mrinal Kumar, 

	Ben Lee Volk</title>
    <summary>We show that there is a defining equation of degree at most poly(n) for the (Zariski closure of the) set of the non-rigid matrices: that is, we show that for every large enough field $\mathbb{F}$, there is a non-zero $n^2$-variate polynomial $P \in \mathbb{F}(x_{1, 1}, \ldots, x_{n, n})$ of degree at most poly(n) such that  every matrix $M$ which can be written as a sum of a matrix of rank at most $n/100$ and sparsity at most $n^2/100$ satisfies $P(M) = 0$. This  confirms a conjecture of Gesmundo, Hauenstein, Ikenmeyer and Landsberg [GHIL16] and improves the best upper bound known for this problem down from $\exp(n^2)$ [KLPS14, GHIL16] to $poly(n)$. 

We also show a similar polynomial degree bound for the (Zariski closure of the) set of all matrices $M$ such that the linear transformation represented by $M$ can be computed by an algebraic circuit with at most  $n^2/200$ edges (without any restriction on the depth). As far as we are aware, no such bound was known prior to this work when the depth of the circuits is unbounded. 

Our methods are elementary and short and rely on a polynomial map of Shpilka and Volkovich [SV15] to construct low degree ``universal'' maps for non-rigid matrices and small linear circuits. Combining this construction with a simple dimension counting argument to show that any such polynomial map has a low degree annihilating polynomial completes the proof.</summary>
    <updated>2020-03-29T06:14:01Z</updated>
    <published>2020-03-29T06:14:01Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-30T13:20:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11998</id>
    <link href="http://arxiv.org/abs/2003.11998" rel="alternate" type="text/html"/>
    <title>A Blind Permutation Similarity Algorithm</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Barszcz:Eric.html">Eric Barszcz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11998">PDF</a><br/><b>Abstract: </b>This paper introduces a polynomial blind algorithm that determines when two
square matrices, $A$ and $B$, are permutation similar. The shifted and
translated matrices $(A+\beta I+\gamma J)$ and $(B+\beta I+\gamma J)$ are used
to color the vertices of two square, edge weighted, rook's graphs. Then the
orbits are found by repeated symbolic squaring of the vertex colored and edge
weighted adjacency matrices. Multisets of the diagonal symbols from
non-permutation similar matrices are distinct within a few iterations,
typically four or less.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11974</id>
    <link href="http://arxiv.org/abs/2003.11974" rel="alternate" type="text/html"/>
    <title>A Topological Characterization of Modulo-p Arguments and Implications for Necklace Splitting</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Filos=Ratsikas:Aris.html">Aris Filos-Ratsikas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hollender:Alexandros.html">Alexandros Hollender</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sotiraki:Katerina.html">Katerina Sotiraki</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zampetakis:Manolis.html">Manolis Zampetakis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11974">PDF</a><br/><b>Abstract: </b>The classes PPA-$p$ have attracted attention lately, because they are the
main candidates for capturing the complexity of Necklace Splitting with $p$
thieves, for prime $p$. However, these classes are not known to have complete
problems of a topological nature, which impedes any progress towards settling
the complexity of the problem. On the contrary, such problems have been pivotal
in obtaining completeness results for PPAD and PPA, for several important
problems, such as finding a Nash equilibrium [Daskalakis et al., 2009, Chen et
al., 2009b] and Necklace Splitting with 2 thieves [Filos-Ratsikas and Goldberg,
2019].
</p>
<p>In this paper, we provide the first topological characterization of the
classes PPA-$p$. First, we show that the computational problem associated with
a simple generalization of Tucker's Lemma, termed $p$-polygon-Tucker, as well
as the associated Borsuk-Ulam-type theorem, $p$-polygon-Borsuk-Ulam, are
PPA-$p$-complete. Then, we show that the computational version of the
well-known BSS Theorem [Barany et al., 1981], as well as the associated
BSS-Tucker problem are PPA-$p$-complete. Finally, using a different
generalization of Tucker's Lemma (termed $\mathbb{Z}_p$-star-Tucker), which we
prove to be PPA-$p$-complete, we prove that $p$-thieves Necklace Splitting is
in PPA-$p$. All of our containment results are obtained through a new
combinatorial proof for $\mathbb{Z}_p$-versions of Tucker's lemma that is a
natural generalization of the standard combinatorial proof of Tucker's lemma by
Freund and Todd [1981]. We believe that this new proof technique is of
independent interest.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11951</id>
    <link href="http://arxiv.org/abs/2003.11951" rel="alternate" type="text/html"/>
    <title>On the Complexity and Approximability of Optimal Sensor Selection and Attack for Kalman Filtering</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Ye:Lintao.html">Lintao Ye</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Woodford:Nathaniel.html">Nathaniel Woodford</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Roy:Sandip.html">Sandip Roy</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sundaram:Shreyas.html">Shreyas Sundaram</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11951">PDF</a><br/><b>Abstract: </b>Given a linear dynamical system affected by stochastic noise, we consider the
problem of selecting an optimal set of sensors (at design-time) to minimize the
trace of the steady state a priori or a posteriori error covariance of the
Kalman filter, subject to certain selection budget constraints. We show the
fundamental result that there is no polynomial-time constant-factor
approximation algorithm for this problem. This contrasts with other classes of
sensor selection problems studied in the literature, which typically pursue
constant-factor approximations by leveraging greedy algorithms and
submodularity (or supermodularity) of the cost function. Here, we provide a
specific example showing that greedy algorithms can perform arbitrarily poorly
for the problem of design-time sensor selection for Kalman filtering. We then
study the problem of attacking (i.e., removing) a set of installed sensors,
under predefined attack budget constraints, to maximize the trace of the steady
state a priori or a posteriori error covariance of the Kalman filter. Again, we
show that there is no polynomial-time constant-factor approximation algorithm
for this problem, and show specifically that greedy algorithms can perform
arbitrarily poorly.
</p></div>
    </summary>
    <updated>2020-03-29T23:20:30Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11914</id>
    <link href="http://arxiv.org/abs/2003.11914" rel="alternate" type="text/html"/>
    <title>Geometric Sparsification of Closeness Relations: Eigenvalue Clustering for Computing Matrix Functions</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Goren:Nir.html">Nir Goren</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Halperin:Dan.html">Dan Halperin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Toledo:Sivan.html">Sivan Toledo</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11914">PDF</a><br/><b>Abstract: </b>We show how to efficiently solve a clustering problem that arises in a method
to evaluate functions of matrices. The problem requires finding the connected
components of a graph whose vertices are eigenvalues of a real or complex
matrix and whose edges are pairs of eigenvalues that are at most \delta away
from each other. Davies and Higham proposed solving this problem by enumerating
the edges of the graph, which requires at least $\Omega(n^{2})$ work. We show
that the problem can be solved by computing the Delaunay triangulation of the
eigenvalues, removing from it long edges, and computing the connected
components of the remaining edges in the triangulation. This leads to an
$O(n\log n)$ algorithm. We have implemented both algorithms using CGAL, a
mature and sophisticated computational-geometry software library, and we
demonstrate that the new algorithm is much faster in practice than the naive
algorithm. We also present a tight analysis of the naive algorithm, showing
that it performs $\Theta(n^{2})$ work, and correct a misrepresentation in the
original statement of the problem. To the best of our knowledge, this is the
first application of computational geometry to solve a real-world problem in
numerical linear algebra.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11890</id>
    <link href="http://arxiv.org/abs/2003.11890" rel="alternate" type="text/html"/>
    <title>Geometric Pattern Matching Reduces to k-SUM</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aronov:Boris.html">Boris Aronov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cardinal:Jean.html">Jean Cardinal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11890">PDF</a><br/><b>Abstract: </b>We prove that some exact geometric pattern matching problems reduce in linear
time to $k$-SUM when the pattern has a fixed size $k$. This holds in the real
RAM model for searching for a similar copy of a set of $k\geq 3$ points within
a set of $n$ points in the plane, and for searching for an affine image of a
set of $k\geq d+2$ points within a set of $n$ points in $d$-space.
</p>
<p>As corollaries, we obtain improved real RAM algorithms and decision trees for
the two problems. In particular, they can be solved by algebraic decision trees
of near-linear height.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11835</id>
    <link href="http://arxiv.org/abs/2003.11835" rel="alternate" type="text/html"/>
    <title>Succinct Dynamic Ordered Sets with Random Access</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pibiri:Giulio_Ermanno.html">Giulio Ermanno Pibiri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Venturini:Rossano.html">Rossano Venturini</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11835">PDF</a><br/><b>Abstract: </b>The representation of a dynamic ordered set of $n$ integer keys drawn from a
universe of size $m$ is a fundamental data structuring problem. Many solutions
to this problem achieve optimal time but take polynomial space, therefore
preserving time optimality in the \emph{compressed} space regime is the problem
we address in this work. For a polynomial universe $m = n^{\Theta(1)}$, we give
a solution that takes $\textsf{EF}(n,m) + o(n)$ bits, where $\textsf{EF}(n,m)
\leq n\lceil \log_2(m/n)\rceil + 2n$ is the cost in bits of the
\emph{Elias-Fano} representation of the set, and supports random access to the
$i$-th smallest element in $O(\log n/ \log\log n)$ time, updates and
predecessor search in $O(\log\log n)$ time. These time bounds are optimal.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11775</id>
    <link href="http://arxiv.org/abs/2003.11775" rel="alternate" type="text/html"/>
    <title>On Structural Parameterizations of Node Kayles</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kobayashi:Yasuaki.html">Yasuaki Kobayashi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11775">PDF</a><br/><b>Abstract: </b>Node Kayles is a well-known two-player impartial game on graphs: Given an
undirected graph, each player alternately chooses a vertex not adjacent to
previously chosen vertices, and a player who cannot choose a new vertex loses
the game. The problem of deciding if the first player has a winning strategy in
this game is known to be PSPACE-complete. There are a few studies on
algorithmic aspects of this problem. In this paper, we consider the problem
from the viewpoint of fixed-parameter tractability. We show that the problem is
fixed-parameter tractable parameterized by the size of a minimum vertex cover
or the modular-width of a given graph. Moreover, we give a polynomial
kernelization with respect to neighborhood diversity.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11764</id>
    <link href="http://arxiv.org/abs/2003.11764" rel="alternate" type="text/html"/>
    <title>No-Rainbow Problem is NP-Hard</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhuk:Dmitriy.html">Dmitriy Zhuk</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11764">PDF</a><br/><b>Abstract: </b>Surjective Constraint Satisfaction Problem (SCSP) is the problem of deciding
whether there exists a surjective assignment to a set of variables subject to
some specified constraints. In this paper we show that one of the most popular
variants of the SCSP, called No-Rainbow Problem, is NP-Hard.
</p></div>
    </summary>
    <updated>2020-03-29T23:22:41Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.11604</id>
    <link href="http://arxiv.org/abs/2003.11604" rel="alternate" type="text/html"/>
    <title>Further Results on Colored Range Searching</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chan:Timothy_M=.html">Timothy M. Chan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/He:Qizheng.html">Qizheng He</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nekrich:Yakov.html">Yakov Nekrich</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.11604">PDF</a><br/><b>Abstract: </b>We present a number of new results about range searching for colored (or
"categorical") data:
</p>
<p>1. For a set of $n$ colored points in three dimensions, we describe
randomized data structures with $O(n\mathop{\rm polylog}n)$ space that can
report the distinct colors in any query orthogonal range (axis-aligned box) in
$O(k\mathop{\rm polyloglog} n)$ expected time, where $k$ is the number of
distinct colors in the range, assuming that coordinates are in
$\{1,\ldots,n\}$. Previous data structures require $O(\frac{\log n}{\log\log n}
+ k)$ query time. Our result also implies improvements in higher constant
dimensions.
</p>
<p>2. Our data structures can be adapted to halfspace ranges in three dimensions
(or circular ranges in two dimensions), achieving $O(k\log n)$ expected query
time. Previous data structures require $O(k\log^2n)$ query time.
</p>
<p>3. For a set of $n$ colored points in two dimensions, we describe a data
structure with $O(n\mathop{\rm polylog}n)$ space that can answer colored
"type-2" range counting queries: report the number of occurrences of every
distinct color in a query orthogonal range. The query time is $O(\frac{\log
n}{\log\log n} + k\log\log n)$, where $k$ is the number of distinct colors in
the range. Naively performing $k$ uncolored range counting queries would
require $O(k\frac{\log n}{\log\log n})$ time.
</p>
<p>Our data structures are designed using a variety of techniques, including
colored variants of randomized incremental construction (which may be of
independent interest), colored variants of shallow cuttings, and bit-packing
tricks.
</p></div>
    </summary>
    <updated>2020-03-29T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2003.10712</id>
    <link href="http://arxiv.org/abs/2003.10712" rel="alternate" type="text/html"/>
    <title>Information-theoretically-sound non-interactive classical verification of quantum computing with trusted center</title>
    <feedworld_mtime>1585440000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Morimae:Tomoyuki.html">Tomoyuki Morimae</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2003.10712">PDF</a><br/><b>Abstract: </b>The posthoc verification protocol [J. F. Fitzsimons, M. Hajdu{\v s}ek, and T.
Morimae, Physical Review Letters {\bf120}, 040501 (2018)] enables an
information-theoretically-sound non-interactive verification of quantum
computing, but the message from the prover to the verifier is quantum and the
verifier has to do single-qubit measurements. The Mahadev protocol removes
these quantum parts, but the soundness becomes the computational one. In this
paper, we construct an information-theoretically-sound non-interactive
classical verification protocol for quantum computing with a trusted center.
The trusted center sends random BB84 states to the prover, and the classical
descriptions of these BB84 states to the verifier. The messages from the center
to the prover and the verifier are independent of the instance. By slightly
modifying our protocol, we also construct a non-interactive statistical
zero-knowledge proof system for QMA with the trusted center.
</p></div>
    </summary>
    <updated>2020-03-29T23:22:34Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-03-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=19560</id>
    <link href="https://gilkalai.wordpress.com/2020/03/29/game-theory-on-line-course-at-idc-herzliya/" rel="alternate" type="text/html"/>
    <title>Game Theory – on-line Course at IDC, Herzliya</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Game theory, a graduate course at IDC, Herzliya; Lecturer: Gil Kalai; TA: Einat Wigderson,  ZOOM mentor: Ethan. Starting Tuesday March 31, I am giving an on-line course (in Hebrew) on Game theory at IDC, Herzliya (IDC English site; IDC Chinese … <a href="https://gilkalai.wordpress.com/2020/03/29/game-theory-on-line-course-at-idc-herzliya/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><h3>Game theory, a graduate course at IDC, Herzliya; Lecturer: Gil Kalai; TA: Einat Wigderson,  ZOOM mentor: Ethan.</h3>
<p>Starting Tuesday March 31, I am giving an on-line course (in Hebrew) on Game theory at <a href="https://www.idc.ac.il/he/pages/home.aspx">IDC, Herzliya</a> (<a href="https://www.idc.ac.il/en/pages/home.aspx">IDC English site</a>; <a href="https://www.idc.ac.il/chinese/pages/home.aspx">IDC Chinese site</a>). There will be a page here on the blog devoted to this course.</p>
<p>In addition to the IDC moodle (course site) that allows IDC students to listen to recorded lectures, submit solutions to problem sets , etc., there will be a page here on the blog devoted to the course.</p>
<p>A small memory: In 1970 there was a strike in Israelis’ high schools and I took a few classes at the university. One of these classes was Game theory and it was taught by <a href="https://gilkalai.wordpress.com/?s=Michael+Maschler">Michael Maschler</a>. (I also took that trimester a course on art taught by Ziva <span class="st"><span dir="ltr">Meisels</span></span>.) Our department at HUJI is very strong in game theory, but once all the “professional” game theorists retired, I gave twice a game theory course which I enjoyed a lot and it was well accepted by students. In term of the number of registered students, it seems that this year’s course at IDC is quite popular and I hope it will be successful.</p>
<h2>The first six slides of the first presentation</h2>
<p>(Click to enlarge)</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt1.png"><img alt="" class="alignnone size-medium wp-image-19661" height="225" src="https://gilkalai.files.wordpress.com/2020/03/gt1.png?w=300&amp;h=225" width="300"/></a></p>
<p>Game Theory 2020, games, decisions, competition, strategies, mechanisms, cooperation</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt2.png"><img alt="" class="alignnone size-medium wp-image-19662" height="131" src="https://gilkalai.files.wordpress.com/2020/03/gt2.png?w=300&amp;h=131" width="300"/></a></p>
<p>The course deals with basic notions, central mathematical results, and important examples in non-cooperative game theory and in cooperative game theory, and with connections of game theory with computer science, economics and other areas.</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt3.png"><img alt="" class="alignnone size-medium wp-image-19663" height="226" src="https://gilkalai.files.wordpress.com/2020/03/gt3.png?w=300&amp;h=226" width="300"/></a></p>
<p>What we will learn</p>
<p>1. Full information zero-sum games. The value of a game. Combinatorial games.</p>
<p>2. Zero-sum games with incomplete information. Mixed strategies, the Minmax Theorem and the value of the game.</p>
<p>3. Non cooperative games, the prisoner dilemma, Nash equilibrium, Nash’s theorem on the existence of equilibrium.</p>
<p>4. Cooperative games, the core and the Shapley value. Nash bargaining problem, voting rules and social choice.</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt4.png"><img alt="" class="alignnone size-medium wp-image-19664" height="225" src="https://gilkalai.files.wordpress.com/2020/03/gt4.png?w=300&amp;h=225" width="300"/></a></p>
<p>Background material:</p>
<p><a href="https://homes.cs.washington.edu/~karlin/GameTheoryBook.pdf">Game theory alive</a> by Anna Karlin and Yuval Peres (available on-line).</p>
<p>In addition I may use material from several books in Hebrew by Maschler, Solan, Zamir, by Hefetz, and by Megiddo (based on lectures by Peleg). (If only I will manage to unite with my books that are not here.) We will also use a site by Ariel Rubinstein for playing games and some material from the book by Osborne and Rubinstein.</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt5.png"><img alt="" class="alignnone size-medium wp-image-19665" height="226" src="https://gilkalai.files.wordpress.com/2020/03/gt5.png?w=300&amp;h=226" width="300"/></a></p>
<p>Requirement and challenges:</p>
<ul>
<li><strong>Play, play, play games</strong>, in Ariel Rubinshtein site and various other games.</li>
<li>Solve 10 short theoretical problem set.</li>
<li>Final assignment, including some programming project that can be carried out during the semester.</li>
<li>Of course, we will experience on-line study which is a huge challenge for us all.</li>
</ul>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/gt6.png"><img alt="" class="alignnone size-medium wp-image-19667" height="226" src="https://gilkalai.files.wordpress.com/2020/03/gt6.png?w=300&amp;h=226" width="300"/></a></p>
<p>Games and computers</p>
<ul>
<li>Computer games</li>
<li>Algorithms for playing games</li>
<li>algorithmic game theory:
<ul>
<li>Mechanism design</li>
<li>Analyzing games in tools of computer science</li>
<li>Electronic commerce</li>
</ul>
</li>
<li>Games, logic and automata: there will be a parallel course by <a href="http://www.faculty.idc.ac.il/udiboker/">Prof. Udi Boker</a></li>
</ul>
<p><a href="https://gilkalai.files.wordpress.com/2020/03/z9.png"><img alt="" class="alignnone size-large wp-image-19668" height="192" src="https://gilkalai.files.wordpress.com/2020/03/z9.png?w=640&amp;h=192" width="640"/></a></p>
<p><span style="color: #ff0000;">I still have some difficulty with the virtual background in ZOOM.</span></p></div>
    </content>
    <updated>2020-03-28T21:19:41Z</updated>
    <published>2020-03-28T21:19:41Z</published>
    <category term="Combinatorics"/>
    <category term="Computer Science and Optimization"/>
    <category term="Economics"/>
    <category term="Games"/>
    <category term="Rationality"/>
    <category term="Teaching"/>
    <category term="Game theory"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-03-30T13:20:53Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=410</id>
    <link href="https://tcsplus.wordpress.com/2020/03/28/tcs-talk-wednesday-april-1-venkat-guruswami-cmu/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, April 1 — Venkat Guruswami, CMU</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, April 1th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). Venkat Guruswami from CMU will speak about “Arıkan meets Shannon: Polar codes with near-optimal convergence to channel capacity” (abstract below). You can reserve a spot as an individual […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, April 1th at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). <strong>Venkat Guruswami</strong> from CMU will speak about “<em>Arıkan meets Shannon: Polar codes with near-optimal convergence to channel capacity</em>” (abstract below).</p>
<p>You can reserve a spot as an individual or a group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk/live-seat-reservation">the online form</a>. (The link will also be posted <a href="https://sites.google.com/site/plustcs/livetalk">on our website</a> on the day of the talk, so people who did not sign up will still be able to join, until the maximum capacity of 300 seats is reached.) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>
<blockquote><p>Abstract: We establish a constructive version of Shannon’s noisy coding theorem for binary codes, with information rate converging near-optimally fast to channel capacity as a function of code length. Specifically, let <img alt="W" class="latex" src="https://s0.wp.com/latex.php?latex=W&amp;bg=fff&amp;fg=444444&amp;s=0" title="W"/> be an arbitrary binary-input memoryless symmetric channel with Shannon capacity <img alt="I(W)" class="latex" src="https://s0.wp.com/latex.php?latex=I%28W%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="I(W)"/>, and fix any <img alt="\delta &gt;0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdelta+%3E0&amp;bg=fff&amp;fg=444444&amp;s=0" title="\delta &gt;0"/>. We construct, for any sufficiently small <img alt="\varepsilon &gt;0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cvarepsilon+%3E0&amp;bg=fff&amp;fg=444444&amp;s=0" title="\varepsilon &gt;0"/>, binary linear codes of block length <img alt="O(1/\varepsilon^{2+\delta})" class="latex" src="https://s0.wp.com/latex.php?latex=O%281%2F%5Cvarepsilon%5E%7B2%2B%5Cdelta%7D%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="O(1/\varepsilon^{2+\delta})"/> and rate <img alt="I(W)-\varepsilon" class="latex" src="https://s0.wp.com/latex.php?latex=I%28W%29-%5Cvarepsilon&amp;bg=fff&amp;fg=444444&amp;s=0" title="I(W)-\varepsilon"/> that enable reliable communication on <img alt="W" class="latex" src="https://s0.wp.com/latex.php?latex=W&amp;bg=fff&amp;fg=444444&amp;s=0" title="W"/> with quasi-linear time encoding and decoding. Shannon’s theorem implies the existence of such codes (without efficient constructions or decoding) with block length <img alt="O(1/\varepsilon^2)" class="latex" src="https://s0.wp.com/latex.php?latex=O%281%2F%5Cvarepsilon%5E2%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="O(1/\varepsilon^2)"/>. This quadratic dependence on the gap epsilon to capacity is known to be best possible. Previously such a construction was only known for the case of the erasure channel.</p>
<p>Our codes are a variant of Arıkan’s polar codes based on multiple carefully constructed local kernels, one for each intermediate channel that arises in the decoding. A key technical ingredient in the analysis is a strong converse to the noisy coding theorem that shows extreme unpredictability of even a single message bit when communicating via random linear codes at rates slightly above capacity.</p>
<p>Joint work with Andrii Riazanov and Min Ye.</p></blockquote>
<p> </p></div>
    </content>
    <updated>2020-03-28T16:46:12Z</updated>
    <published>2020-03-28T16:46:12Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2020-03-30T13:21:43Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-655863126004196531</id>
    <link href="https://blog.computationalcomplexity.org/feeds/655863126004196531/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/robin-thomas.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/655863126004196531" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/655863126004196531" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/robin-thomas.html" rel="alternate" type="text/html"/>
    <title>Robin Thomas</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-i5UN1hxg7RI/Xn9uVPL8h1I/AAAAAAABygU/5THjPemeT9UhN3yQenJkO_3cM_c2Awi5QCLcBGAsYHQ/s1600/Thomas.jpg" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img border="0" height="200" src="https://1.bp.blogspot.com/-i5UN1hxg7RI/Xn9uVPL8h1I/AAAAAAABygU/5THjPemeT9UhN3yQenJkO_3cM_c2Awi5QCLcBGAsYHQ/s200/Thomas.jpg" width="133"/></a></div>
Graph Theorist and Georgia Tech Math Professor Robin Thomas passed away Thursday after his long battle with ALS. He was one of the giants of the field and a rare double winner of the Fulkerson Prize, for the six-color case of the <a href="https://en.wikipedia.org/wiki/Hadwiger_conjecture_(graph_theory)">Hadwiger Conjecture</a> and the proof of the <a href="https://en.wikipedia.org/wiki/Strong_perfect_graph_theorem">strong perfect graph theorem</a>.<br/>
<br/>
If you start with a graph G and either delete some vertices or merge vertices connected by an edge, you get a minor of G. The Hadwiger conjecture asks whether every graph that is not (k+1)-colorable graph has a clique of size k as a minor. Neil Robertson, Paul Seymour and Thomas proved the k=6 case in 1993 and still the k&gt;6 cases remain open.<br/>
<br/>
A graph is perfect if its maximum clique size is equal to its chromatic number. In 2002 Maria Chudnovsky, Robertson, Seymour and Thomas showed that a graph G is not perfect if and only if either G or the complement of G has an induced odd cycle of length greater than 3.<br/>
<br/>
Robin Thomas was already confined to a wheelchair when I arrived at Georgia Tech in 2012. He was incredibly inspiring as he continued to teach and lead the Algorithms, Combinatorics and Optimization PhD program until quite recently. Our department <a href="https://youtu.be/e4FdY9eiWDs">did the ALS challenge</a> for him. In 2016 he <a href="https://provost.gatech.edu/updates/thomas-earns-top-faculty-honor">received</a> the Class of 1934 Distinguished Professor Award, the highest honor for a professor at Georgia Tech.  He'll be terribly missed.</div>
    </content>
    <updated>2020-03-28T15:40:00Z</updated>
    <published>2020-03-28T15:40:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-03-30T09:16:08Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3461</id>
    <link href="https://agtb.wordpress.com/2020/03/27/calendar-of-virtual-csecon-seminars/" rel="alternate" type="text/html"/>
    <title>Calendar of Virtual CS+Econ Seminars</title>
    <summary>Our community has some outstanding long-running virtual seminars, and there are many traditional seminars now moving to a virtual format.  Northwestern Ph.D. students Modibo Camara and Yiding Feng have a collection of them in a Google Calendar at Virtual CS+Econ Seminars.  Don’t miss any of the action! The topics include but not limited to theoretical […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Our community has some outstanding long-running virtual seminars, and there are many traditional seminars now moving to a virtual format.  Northwestern Ph.D. students <a href="https://mkcamara.github.io/">Modibo Camara</a> and <a href="https://sites.northwestern.edu/yiding/">Yiding Feng</a> have a collection of them in a Google Calendar at <a href="https://sites.google.com/view/virtualcseconseminars/">Virtual CS+Econ Seminars</a>.  Don’t miss any of the action!</p>
<p>The topics include but not limited to theoretical computer science, economic theory, theoretical machine learning, and econometrics.  The calendar currently tracks talks in <a href="https://mobile.twitter.com/CaltechEconThry">Caltech Econ Theory</a>, <a href="https://www.chamberlainseminar.org">Chamberlain Seminar in Econometrics</a>, <a href="https://www.ideal.northwestern.edu/">IDEAL</a>, <a href="http://md4sg.com">MD4SG</a>, and <a href="https://sites.google.com/site/plustcs">TCS+</a>. Send other relevant talk series or one-off events to Modibo and Yiding at <a class="c-link" href="mailto:VirtualCSEconSeminar@gmail.com" rel="noopener noreferrer" target="_blank">VirtualCSEconSeminar@gmail.com</a>.</p></div>
    </content>
    <updated>2020-03-26T22:24:40Z</updated>
    <published>2020-03-26T22:24:40Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Jason Hartline</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2020-03-30T13:20:55Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/040</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/040" rel="alternate" type="text/html"/>
    <title>TR20-040 |  Topology and adjunction in promise constraint satisfaction | 

	Andrei Krokhin, 

	Jakub Opršal, 

	Marcin Wrochna, 

	Stanislav Zivny</title>
    <summary>The approximate graph colouring problem concerns colouring a $k$-colourable
  graph with $c$ colours, where $c\geq k$. This problem naturally generalises
  to promise graph homomorphism and further to promise constraint satisfaction
  problems. Complexity analysis of all these problems is notoriously difficult.
  In this paper, we introduce two new techniques to analyse the complexity of
  promise CSPs: one is based on topology and the other on adjunction. We apply
  these techniques, together with the previously introduced algebraic approach,
  to obtain new NP-hardness results for a significant class of approximate
  graph colouring and promise graph homomorphism problems.</summary>
    <updated>2020-03-26T14:25:32Z</updated>
    <published>2020-03-26T14:25:32Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-30T13:20:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7660</id>
    <link href="https://windowsontheory.org/2020/03/26/technology-for-theory-covid-19-edition/" rel="alternate" type="text/html"/>
    <title>Technology for theory: COVID-19 edition</title>
    <summary>The new coronavirus upended much of society, including our little corner of it. I believe at this point almost all theorists are teaching and doing research at home, and I thought it would be good to share some of the tools we use for doing so. Below I will describe my setup, but I hope […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The new coronavirus upended much of society, including our little corner of it. I believe at this point almost all theorists are teaching and doing research at home, and I thought it would be good to share some of the tools we use for doing so. Below I will describe my setup, but I hope other people share theirs too.</p>



<h2>Teaching and virtual whiteboards</h2>



<p>I am teaching using Zoom and using an iPad pro with a pencil to simulate a whiteboard. I use a laptop to connect to Zoom and for the camera, laptop, and chat window, and then join the iPad.There are several ways to connect an iPad to a Zoom session:</p>



<ol><li>Join the session from the iPad separately using the iPad Zoom app. (To do so you need to logout of your other account.)</li><li>Within desktop Zoom you can choose “share screen” and then one of the option is to join an iPad connected to the same wireless network as the laptop/desktop and use “screen mirroring”.</li><li>You can use a wired connection, which is either by just connecting through USB (in a Mac) or a complex combination of combining an adapter to take an HDMI signal out of an iPad with an HDMI capture card to stream this signal to the computer.</li></ol>



<p>I use option 2. The main reason I prefer it is because the application I use for a whiteboard –  <a href="https://www.goodnotes.com/">GoodNotes</a> – has a <a href="https://support.goodnotes.com/hc/en-us/articles/360001100576-How-to-use-Presentation-Mode">presentation mode</a> that behaves differently when you are connected to an external display or use AirPlay (which is what option 2 does). In this presentation mode the students don’t see your interface, and so you can Zoom, go to the page selector and more without it disturbing what they see. GoodNotes also has a great “laser pointer”. I set the pages at a landscape orientation,  and pre-write a good chunk of what I plan to present before the lecture. I also use the ability to “duplicate pages” to achieve the PowerPoint like effect of gradual reveal.</p>



<p>It is not perfect – I’ve discovered that the screen share sometimes stops refreshing and I need to leave GoodNotes and return to it for it to go back.</p>



<p>Monitoring the chat window and raised hands in Zoom is non-trivial. It helps a lot that I have a teaching assistant that participates in lecture and notices if I missed something. </p>



<p>Some people say that a “matte screen protector” such as <a href="https://paperlike.com/">PaperLike</a> makes the iPad more comfortable to write on – haven’t yet tried it.</p>



<p>I have a good Webcam (<a href="https://www.amazon.com/Logitech-BRIO-Conferencing-Recording-Streaming/dp/B01N5UOYC4">Logitech Brio</a>) but at the moment I’m not using it since it seems too taxing on my laptop and so I went back to the native webcam. I have a very nice wireless headset/mic combo (<a href="https://www.amazon.com/Jabra-Bluetooth-Headphones-Including-Packaging/dp/B072JWYJMC">Jabra Evolve 75</a>) that I am constantly using and have been very happy with. I particularly like the feature of being able to unmute and mute yourself by raising and lowering the mike. </p>



<p/>



<h2>Research</h2>



<p>For research Slack continues to extremely useful. For working jointly on a paper <a href="https://www.overleaf.com/">Overleaf </a> is of course great, but for maintaining a shared document it sometimes useful to use simpler platform that are not full fledged LaTeX. Some options include:</p>



<ul><li><a href="https://hackmd.io/">Hackmd.io</a> for markdown (supports LaTeX math)</li><li>Google docs of course. I heard about the <a href="https://gsuite.google.com/marketplace/app/autolatex_equations/850293439076">Auto-LaTeX plugin</a> but haven’t used it yet.</li><li><a href="https://www.dropbox.com/paper">Dropbox Paper</a> supports LaTeX natively.</li></ul>



<p><a href="https://jamboard.google.com/">Google JamBoard</a> is an interactive whiteboard, also with an <a href="https://apps.apple.com/us/app/jamboard/id1143591418">iPad app</a>. I haven’t tried it yet but it seems promising.</p>



<p/>



<h2>Keeping children busy</h2>



<p>For many people I imagine childcare is one of the most challenging aspects. At the moment at least the Cambridge Public Schools are not keeping my kids too busy. While probably most of their time is spent in non educational pursuits, we try to also encourage (i.e., bribe/extort/threaten/beg) them to do some learning. If your kids are interested in math, I highly recommend the courses offered by the <a href="https://artofproblemsolving.com/">Art of Problem Solving</a> (they also have a theory connection: one of their books was co-authored by theorist Ravi Boppana). For younger kids you can also try their <a href="https://beastacademy.com/">Beast Academy</a>.</p>



<p>The AOPS program is not free but over the years my kids (especially my 13 year old daughter Alma) have also spent a lot of time on the free and amazing <a href="https://www.khanacademy.org/">Khan Academy</a>. In fact, last year she was inspired enough by Khan’s JavaScript course to write the following poem which (for obvious reasons)  moved me very much:</p>



<p>Tending / Alma Barak</p>



<p>My mind is a desert<br/>of boredom<br/>of blankness<br/>of leaning-back-in-your-chairness<br/>and of simply-staring-at-the-ceilingness<br/>I kick at a crumpled<br/>deserted baby-blonde post-it<br/>with my spotted socked feet<br/>waiting for Aba to come.</p>



<p>We dive when he comes<br/>into the seas of Khan<br/>free-styling our way<br/>into the lakes of Java<br/>we pass codes we already<br/>knew<br/>while loops<br/>for loops<br/>arrays<br/>reminding me of what I’d learned</p>



<p>We frog-kick to an<br/>uncharted<br/>unfamiliar<br/>lagoon of code I don’t know<br/>sometimes I get swept away by currents<br/>of confusion<br/>but my aba, my dad<br/>grabs my hand<br/>and shows me the way through<br/>teaching me<br/>tending to me<br/>washing away the sands of boredom with the sea of Khan.</p>



<p/></div>
    </content>
    <updated>2020-03-26T12:52:26Z</updated>
    <published>2020-03-26T12:52:26Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-03-30T13:21:18Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/039</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/039" rel="alternate" type="text/html"/>
    <title>TR20-039 |  Lower bounds on the sum of 25th-powers of univariates lead to complete derandomization of PIT | 

	Pranjal Dutta, 

	Nitin Saxena, 

	Thomas Thierauf</title>
    <summary>We consider the univariate polynomial $f_d:=(x+1)^d$ when represented as a sum of constant-powers of univariate polynomials. We define a natural measure for the model, the support-union, and conjecture that it is $\Omega(d)$ for $f_d$. 

We show a stunning connection of the conjecture to the two main problems in algebraic complexity: Polynomial Identity Testing (PIT) and VP vs VNP. Our conjecture on $f_d$ implies blackbox-PIT in P. Assuming the  Generalized Riemann Hypothesis (GRH), it also implies VP $\neq$ VNP. No such connection to PIT, from lower bounds on constant-powers representation of polynomials was known before. We establish that studying the expression of $(x+1)^d$, as the sum of $25^{th}$-powers of univariates, suffices to solve the two major open questions.   

In support, we show that our conjecture holds over the integer ring of any number field. We also establish a connection with the well-studied notion of matrix rigidity.</summary>
    <updated>2020-03-25T21:21:25Z</updated>
    <published>2020-03-25T21:21:25Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-30T13:20:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7657</id>
    <link href="https://windowsontheory.org/2020/03/25/new-cs-theory-talk-aggragator/" rel="alternate" type="text/html"/>
    <title>New CS theory talk aggragator</title>
    <summary>Shcachar Lovett has put together a new website aggregating information about virtual talks in CS theory: https://cstheorytalks.wordpress.com/  It has a Google calendar that people can add to their own, and a form to submit a new talk that automatically gets added to the Google calendar.  This can be a fantastic resource these days that almost […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Shcachar Lovett has put together a new website aggregating information about virtual talks in CS theory: <a href="https://cstheorytalks.wordpress.com/">https://cstheorytalks.wordpress.com/</a></p>



<p> It has a Google calendar that people can add to their own, and a form to submit a new talk that automatically gets added to the Google calendar. </p>



<p>This can be a fantastic resource these days that almost no one can travel – please publicize this and also submit to it talks that you are organizing.</p></div>
    </content>
    <updated>2020-03-25T17:00:17Z</updated>
    <published>2020-03-25T17:00:17Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-03-30T13:21:17Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/03/24/full-professor-w3-at-tu-dortmund-university-apply-by-april-15-2020/</id>
    <link href="https://cstheory-jobs.org/2020/03/24/full-professor-w3-at-tu-dortmund-university-apply-by-april-15-2020/" rel="alternate" type="text/html"/>
    <title>Full Professor (W3)  at TU Dortmund University (apply by April 15, 2020)</title>
    <summary>The Department of Computer Science at TU Dortmund University (https://tu-dortmund.de/en) is seeking to fill the position of a Full Professor Position (W3) in “Efficient Algorithms and Complexity Theory” commencing as soon as possible. Website: https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f Email: thomas.schwentick@tu-dortmund.de</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science at TU Dortmund University (<a href="https://tu-dortmund.de/en">https://tu-dortmund.de/en</a>) is seeking to fill the position of a Full Professor Position (W3) in “Efficient Algorithms and Complexity Theory” commencing as soon as possible.</p>
<p>Website: <a href="https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f">https://service.tu-dortmund.de/documents/18/2120803/Professor+W3+in+Efficient+Algorithms+and+Complexity+Theory.pdf/64785b24-b188-fbaa-e337-a2405661868f</a><br/>
Email: thomas.schwentick@tu-dortmund.de</p></div>
    </content>
    <updated>2020-03-24T10:41:04Z</updated>
    <published>2020-03-24T10:41:04Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-03-30T13:21:02Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-7044506782591278327</id>
    <link href="https://blog.computationalcomplexity.org/feeds/7044506782591278327/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-do-do-while-stuck-at-homeother.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/7044506782591278327" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/7044506782591278327" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2020/03/what-do-do-while-stuck-at-homeother.html" rel="alternate" type="text/html"/>
    <title>What to do while ``stuck'' at home/Other thoughts on the virus</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Lance had a great post on what to do while you are stuck at home, which is of course relevant to whats happening now. Lance's post is <a href="https://blog.computationalcomplexity.org/2020/03/what-to-do-while-stuck-at-home-part-i.html">here</a>.<br/>
<br/>
I will add to it, and then have other comments.<br/>
<br/>
1) In our current electronic society we can do a lot from home. Don't think of it as being `stuck at home'<br/>
<br/>
2) Lance points out that you should read a paper, read a textbook, etc. I of course agree and add some advice. Be Goldlocks!<br/>
<br/>
This paper is too hard (e.g., a text on quantum gravity)<br/>
<br/>
This paper is too easy (e.g., a discrete  math textbook for a freshman course)<br/>
<br/>
This paper is just right (e.g., working out the large canonical Ramsey theorem)<br/>
<br/>
3) If you catch up on your TV viewing on your DVR then beware: you will see commercials for Bloomberg.<br/>
<br/>
4) DO NOT binge watch TV.  You will hate yourself in the morning.<br/>
<br/>
5) Simons Inst Theory talks:<br/>
<br/>
<a href="https://simons.berkeley.edu/videos">https://simons.berkeley.edu/videos</a><br/>
<br/>
TCS+ talks<br/>
<br/>
<a href="https://sites.google.com/site/plustcs/past-talks">https://sites.google.com/site/plustcs/past-talks</a><br/>
<br/>
or<br/>
<a href="https://sites.google.com/site/plustcs/">https://sites.google.com/site/plustcs/</a><br/>
<br/>
The Gathering for Gardner records all of their talks and puts the on you-tube<br/>
so goto youtube and search for Gathering for Gardners. These are Goldilocks talks since they<br/>
are easy but on stuff you prob don't know.<br/>
<br/>
6) Keep fit. I used to go on treadmill for 45 minutes a day, now I am doing an hour.<br/>
<br/>
7) Go for walks with a person who already shares your house, but avoid other people.<br/>
<br/>
8) Book reviews, surveys, orig articles, that you were putting off writing- now write them.<br/>
but see next item.<br/>
<br/>
10) Catch up on your blog reading. My favorite was Scott Aaronson's blog post about Davos:<a href="https://www.scottaaronson.com/blog/?p=4536">here</a>. I also read every single comment. I hated myself in the morning. So that part may have been a mistake.<br/>
<br/>
OTHER THOUGHTS<br/>
<br/>
1) Do you really have more free time? No commuting, no teaching, but you still have the rest of your job, and perhaps it is harder if some things are easier at work. And calling relatives and friends to make sure they are okay, and just to talk, is a great thing to do, but its time consuming.<br/>
<br/>
2) I'm beginning to lose track of what day-of-the-week it is since I don't have school to keep me on track, and I only watch TV shows on DVR so I watching a show on a day does not mean I know what day it is.<br/>
<br/>
3) Avoid being price-gouged. The first few days that I tried to buy TP for my mom on amazon (I do this in normal times--- I order lots for my mom on amazon--- she is tech shy. She is also over 90.) her usual brand was out of stock, and the other brands were either higher quality so higher prices or just<br/>
absurdly priced. She wisely said to wait a week. She was right- it was easy to get at the usual price.<br/>
<br/>
4) More generally, it seems like the shortages are people-created. For example, if in a store you see they are low on X, then you buy LOTS of X, and everyone does that, so then their really is a shortage of X. But I think thats calmed down some.<br/>
<br/>
5) It important to have a `we will recover from this, life will go on' attitude (while following the things ALL experts say- wash your hands a lot, drink lots of water, get lots of sleep, which is prob<br/>
good advice anyway) and hence I will try to, for the next few weeks, blog on NORMAL things----Hilberts's 10th problem, Large Ramsey, etc.<br/>
<br/>
ADDED LATER- there is a very nice contrarian view in the comment by Steve, the first comment. You should read that!<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/></div>
    </content>
    <updated>2020-03-24T04:01:00Z</updated>
    <published>2020-03-24T04:01:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2020-03-30T09:16:08Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4340</id>
    <link href="https://lucatrevisan.wordpress.com/2020/03/22/on-virus-containment-as-dieting/" rel="alternate" type="text/html"/>
    <title>On virus containment as dieting</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">The Protezione Civile, the Italian equivalent of FEMA, holds a daily press conference to announce coronavirus data from the previous 24 hours. Today they had relatively good news, of which we hope to hear more soon. The Protezione Civile puts … <a href="https://lucatrevisan.wordpress.com/2020/03/22/on-virus-containment-as-dieting/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Protezione Civile, the Italian equivalent of FEMA, holds a daily press conference to announce coronavirus data from the previous 24 hours. Today they had relatively good news, of which we hope to hear more soon. The Protezione Civile  puts a lot of data online every day, on <a href="https://github.com/pcm-dpc/COVID-19">github</a>, which allows any interested party to monitor the situation and will allow people in other countries to see the effect of our various restrictive measures over time. </p>
<p>The graph below, which is courtesy of <a href="http://didattica.unibocconi.it/mypage/index.php?IdUte=202443&amp;cognome=LUCIBELLO&amp;nome=CARLO&amp;urlBackMy=">Carlo Lucibello</a>, shows the number of deaths in Italy on a logarithmic scale, compared with data from China from 36 days before.<br/>
<img alt="90441248_574660963135651_9199184881282711552_n" class="alignnone size-full wp-image-4342" src="https://lucatrevisan.files.wordpress.com/2020/03/90441248_574660963135651_9199184881282711552_n.png?w=584"/><br/>
(Image credit: Carlo Lucibello)</p>
<p>At the start, Italian deaths rose like in China, at the same exponential rate. About twenty days after the lockdown of Wuhan, the Chinese data started deviating from the exponential rate and leveled off. In Italy, about ten days ago, there was a slowdown, which followed the institution of the “yellow zone” by about 15 days. The “yellow zone” measures closed schools, universities, museums, cinemas, and clubs, and restricted hours of bars and coffee shops, in Lombardy. Apparently, although these measures made a difference, they still allowed the spread of the virus to continue at an exponential rate.</p>
<p>On March 8, Lombardy was put on a stricter lockdown, with travel restrictions, and on March 10 the lockdown was extended to the rest of the country. So we may hope to see a stronger slowdown and maybe a leveling-off two or three weeks after these measures, that is, any day now. It may seem premature to ask this question, but what happens next?</p>
<p>Today the Italian government announced additional measures to facilitate “social distancing,” halting all “non-essential” manufacturing and other work activities, forbidding people from leaving the house to walk or jog (even alone), and  further restricting the cases in which it is allowed to travel between different cities.</p>
<p>These measures, which apply nationwide, are meant to be in place for two weeks. They will be economically devastating (even more so than the already devastating nationwide lockdown of March 10), and they will be difficult to keep in place for longer than the expected two weeks.</p>
<p>When a nationwide “lockdown” was first instituted, the prime minister announced it by saying “let’s be distant today in order to more warmly hug each other tomorrow”. In general, the spirit of these measures has been to suffer for a short time and then return to normal.</p>
<p>This feels like the national mood in general, and the government took today’s further restrictive measures somewhat reluctantly, because there was strong popular support for them.</p>
<p>Here I am worried that we are approaching this crisis the way many people attempt to lose weight: by going on a starvation diet, then losing some weight, then celebrating and finally gaining back more weight than they lost.</p>
<p>The point being that I worry about what will happen once the worst is over and these restrictive measures will be lifted. Until there is a vaccine or a cure, we will not be able to really go back to normal, and we will have to make some sustainable “lifestyle changes” to “maintain” what we got, just like people who maintain weight loss for a long time do so by making sustainable changes for the long term.</p>
<p>Concretely, we will need a very efficient system to monitor new cases and trace contacts, perhaps similar to Taiwan’s, and to follow the kind of stricter hygiene precautions in public places that have been common in East Asia since SARS. Let’s hope that we will have to worry about such problems soon.</p></div>
    </content>
    <updated>2020-03-22T22:08:31Z</updated>
    <published>2020-03-22T22:08:31Z</published>
    <category term="Milan"/>
    <category term="covid-19"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-03-30T13:20:10Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/03/22/uci-ecological-preserve</id>
    <link href="https://11011110.github.io/blog/2020/03/22/uci-ecological-preserve.html" rel="alternate" type="text/html"/>
    <title>UCI Ecological Preserve</title>
    <summary>The UCI Ecological Preserve is a 60-acre patch of coastal sage scrub, adjoining the housing complex in which I live.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The <a href="http://ecopreserve.ucnrs.org/">UCI Ecological Preserve</a> is a 60-acre patch of <a href="https://en.wikipedia.org/wiki/Coastal_sage_scrub">coastal sage scrub</a>, adjoining <a href="https://en.wikipedia.org/wiki/University_Hills,_Irvine">the housing complex in which I live</a>.</p>

<p>Like most of the rest of the world, I’m stuck at home for an indefinite duration, but the level of lockdown that we’re under allows us to go for walks outside, and like many of my neighbors (keeping a safe distance from each other) I took advantage of the opportunity to do so yesterday in the preserve. It was a gorgeous day, with very clear air from the recent rains: so clear that I could see individual buildings in downtown Los Angeles, 40 miles away.</p>

<p>I brought my camera along, but chose to focus on the nearby brush rather than the more distant views. Here’s one of my shots:</p>

<p style="text-align: center;"><img alt="UCI Ecological Preserve" src="https://www.ics.uci.edu/~eppstein/pix/uciep/6-m.jpg" style="border-style: solid; border-color: black;"/></p>

<p>The rest are in <a href="https://www.ics.uci.edu/~eppstein/pix/uciep/index.html">my online gallery</a>.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/103869119505106054">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2020-03-22T15:28:00Z</updated>
    <published>2020-03-22T15:28:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-03-29T21:43:43Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=19400</id>
    <link href="https://gilkalai.wordpress.com/2020/03/22/kelman-kindler-lifshitz-minzer-and-safra-towards-the-entropy-influence-conjecture/" rel="alternate" type="text/html"/>
    <title>Kelman, Kindler, Lifshitz, Minzer, and Safra: Towards the Entropy-Influence Conjecture</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Let me briefly report on a remarkable new paper by Esty Kelman, Guy Kindler, Noam Lifshitz, Dor Minzer, and Muli Safra, Revisiting Bourgain-Kalai and Fourier Entropies. The paper describes substantial progress towards the Entropy-Influence conjecture, posed by Ehud Friedgut and … <a href="https://gilkalai.wordpress.com/2020/03/22/kelman-kindler-lifshitz-minzer-and-safra-towards-the-entropy-influence-conjecture/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Let me briefly report on a remarkable new paper by Esty Kelman, Guy Kindler, Noam Lifshitz, Dor Minzer, and Muli Safra, <a href="https://arxiv.org/abs/1911.10579">Revisiting Bourgain-Kalai and Fourier Entropies</a>. The paper describes substantial progress towards the Entropy-Influence conjecture, posed by <a href="https://www.ams.org/journals/proc/1996-124-10/S0002-9939-96-03732-X/S0002-9939-96-03732-X.pdf">Ehud Friedgut and me in 1996</a>. (See this <a href="https://terrytao.wordpress.com/2007/08/16/gil-kalai-the-entropyinfluence-conjecture/">blog post from 2007</a>.)</p>
<p><strong>Abstract:</strong> The total inﬂuence of a function is a central notion in analysis of Boolean functions, and characterizing functions that have small total inﬂuence is one of the most fundamental questions associated with it. The KKL theorem and the Friedgut junta theorem give a strong characterization of such functions whenever the bound on the total inﬂuence is <em>o(logn)</em>, however, both results become useless when the total inﬂuence of the function is <em>ω(logn)</em>. The only case in which this logarithmic barrier has been broken for an interesting class of function was proved by Bourgain and Kalai, who focused on functions that are symmetric under large enough subgroups of <img alt="S_n" class="latex" src="https://s0.wp.com/latex.php?latex=S_n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S_n"/>.</p>
<p>In this paper, we revisit the key ideas of the Bourgain-Kalai paper. We prove a new general inequality that upper bounds the correlation between a Boolean function <em>f</em> and a real-valued, low degree function<em> g</em> in terms of their norms, Fourier coefﬁcients and total inﬂuences.</p>
<p>Some corollaries of this inequality are:</p>
<ol>
<li>The Bourgain-Kalai result.</li>
<li>A slightly weaker version of the Fourier-Entropy Conjecture. More precisely, we prove that the Fourier entropy of the low-degree part of<em> f</em> is at most <img alt="O(I[f]log^2 I[f])" class="latex" src="https://s0.wp.com/latex.php?latex=O%28I%5Bf%5Dlog%5E2+I%5Bf%5D%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="O(I[f]log^2 I[f])"/>, where<em> I[f]</em> is the total inﬂuence of <em>f</em>. In particular, we conclude that the Fourier spectrum of a Boolean function is concentrated on at most <img alt="2O(I[f]log^2 I[f])" class="latex" src="https://s0.wp.com/latex.php?latex=2O%28I%5Bf%5Dlog%5E2+I%5Bf%5D%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2O(I[f]log^2 I[f])"/> Fourier coefﬁcients.</li>
<li>Using well-known learning algorithms of sparse functions, the previous point implies that the class of functions with sub-logarithmic total inﬂuence (i.e. at most <img alt="O(\log n/(\log \log n)2))" class="latex" src="https://s0.wp.com/latex.php?latex=O%28%5Clog+n%2F%28%5Clog+%5Clog+n%292%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="O(\log n/(\log \log n)2))"/> is learnable in polynomial time, using membership queries.</li>
</ol>
<h2><a href="https://gilkalai.files.wordpress.com/2020/03/bour-kal.png"><img alt="" class="alignnone size-large wp-image-19597" height="435" src="https://gilkalai.files.wordpress.com/2020/03/bour-kal.png?w=640&amp;h=435" width="640"/></a></h2>
<p>Our theorem on influence under symmetry. From my <a href="https://youtu.be/35saSZ93PlI">videotaped lecture</a> on Jean Bourgain. See <a href="https://gilkalai.wordpress.com/2019/01/02/jean/">this post</a> about Jean Bourgain.</p>
<h2>A few remarks:</h2>
<p>A) Given a Boolean function <img alt="f:\{-1,1\}^n\to \{-1,1\}" class="latex" src="https://s0.wp.com/latex.php?latex=f%3A%5C%7B-1%2C1%5C%7D%5En%5Cto+%5C%7B-1%2C1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f:\{-1,1\}^n\to \{-1,1\}"/> let <img alt="f=\sum_{S \subset \{1,2,\dots ,n\}}\hat f(S)W_S" class="latex" src="https://s0.wp.com/latex.php?latex=f%3D%5Csum_%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%28S%29W_S&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f=\sum_{S \subset \{1,2,\dots ,n\}}\hat f(S)W_S"/> be its Fourier-Walsh expansion. (Here <img alt="W_S(x_1,x_2,\dots ,x_n)=\prod_{i\in S}x_i" class="latex" src="https://s0.wp.com/latex.php?latex=W_S%28x_1%2Cx_2%2C%5Cdots+%2Cx_n%29%3D%5Cprod_%7Bi%5Cin+S%7Dx_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="W_S(x_1,x_2,\dots ,x_n)=\prod_{i\in S}x_i"/>.) The total influence <img alt="I(f)" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f)"/> of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> is described by</p>
<p style="text-align: center;"><img alt="I(f)=\sum {S \subset \{1,2,\dots ,n\}}\hat f^2(S)|S|" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29%3D%5Csum+%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%5E2%28S%29%7CS%7C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f)=\sum {S \subset \{1,2,\dots ,n\}}\hat f^2(S)|S|"/>.</p>
<p>The spectral entropy <img alt="E(f)" class="latex" src="https://s0.wp.com/latex.php?latex=E%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E(f)"/> of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> is defined by</p>
<p style="text-align: center;"><img alt="E(f)=\sum_{S \subset \{1,2,\dots ,n\}}\hat f^2(S) \log (\hat f^2(S))" class="latex" src="https://s0.wp.com/latex.php?latex=E%28f%29%3D%5Csum_%7BS+%5Csubset+%5C%7B1%2C2%2C%5Cdots+%2Cn%5C%7D%7D%5Chat+f%5E2%28S%29+%5Clog+%28%5Chat+f%5E2%28S%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E(f)=\sum_{S \subset \{1,2,\dots ,n\}}\hat f^2(S) \log (\hat f^2(S))"/>.</p>
<p>The entropy-influence conjecture (here called the Fourier-entropy conjecture) asserts that for some universal constant <em>C</em></p>
<p style="text-align: center;"><img alt="I(f) \ge C E(f)" class="latex" src="https://s0.wp.com/latex.php?latex=I%28f%29+%5Cge+C+E%28f%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I(f) \ge C E(f)"/>.</p>
<p>B) One interesting feature of the conjecture is that the RHS is invariant under arbitrary linear transformations of <img alt="\{-1,1\}^n" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B-1%2C1%5C%7D%5En&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{-1,1\}^n"/> (regarded as an <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/>-dimensional vector space) while the LHS is invariant only to permutations of the variables.</p>
<p>C) My paper with Jean Bourgain, <a href="http://www.ma.huji.ac.il/~kalai/bki.pdf">Influences of variables and threshold intervals under group symmetries</a>, describes lower bounds on total influences for Boolean function invariant under certain groups of permutations (of the variables). Those results are stronger (but more restrictive) than what the Entropy/influence conjecture directly implies. (This was overlooked for a while.) The new paper gives (much hoped for, see below) simpler proofs and stronger results compared to those in my paper with Jean Bourgain.</p>
<p>D) <a href="https://terrytao.wordpress.com/2018/12/29/jean-bourgain/#comment-509792">Ryan O’Donnel wrote</a> about Bourgain and some of his contributions to the analysis of Boolean functions:</p>
<p><em>“I spent close to 5 years understanding one 6-page paper of his (“On the distribution of the Fourier spectrum of Boolean functions”), and also close to 10 years understanding a 10-page paper of his (the k-SAT sharp threshold ‘appendix’). If anyone’s up for a challenge, I’m pretty sure no one on earth fully understands the second half of his paper “Influences of variables and threshold intervals under group symmetries” with Kalai (including Gil <img alt="&#x1F642;" class="wp-smiley" src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f642.png" style="height: 1em;"/> )”</em></p>
<p>It looks that by now we have pretty good understanding and even some far-reaching progress regarding all three papers that Ryan mentioned. (It is unclear if we can hope now for an exponential spread of understanding for Bourgain’s proofs.)</p>
<p> </p></div>
    </content>
    <updated>2020-03-22T10:43:00Z</updated>
    <published>2020-03-22T10:43:00Z</published>
    <category term="Combinatorics"/>
    <category term="Computer Science and Optimization"/>
    <category term="Open problems"/>
    <category term="Dor Minzer"/>
    <category term="Esty Kelman"/>
    <category term="Guy Kindler"/>
    <category term="Muli Safra"/>
    <category term="Noam Lifshitz"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-03-30T13:20:53Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/038</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/038" rel="alternate" type="text/html"/>
    <title>TR20-038 |  Error Correcting Codes for Uncompressed Messages | 

	Ofer Grossman, 

	Justin Holmgren</title>
    <summary>Most types of messages we transmit (e.g., video, audio, images, text) are not fully compressed, since they do not have known efficient and information theoretically optimal compression algorithms.  When transmitting such messages, standard error correcting codes fail to take advantage of the fact that messages are not fully compressed.

We show that in this setting, it is sub-optimal to use standard error correction. We consider a model where there is a set of “valid messages” which the sender may send that may not be efficiently compressible, but where it is possible for the receiver to recognize valid messages. In this model, we construct a (probabilistic) encoding procedure that achieves better tradeoffs between data rates and error-resilience (compared to just applying a standard error correcting code).

Additionally, our techniques yield improved efficiently decodable (probabilistic) codes for fully compressed messages (the standard setting where the set of valid messages is all binary strings) in the high-rate regime.</summary>
    <updated>2020-03-22T08:59:44Z</updated>
    <published>2020-03-22T08:59:44Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-30T13:20:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16828</id>
    <link href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/" rel="alternate" type="text/html"/>
    <title>Star-Free Regular Languages and Logic</title>
    <summary>Part 1 of a two-part series Daniel Winton is a graduate student in mathematics at Buffalo. He did an independent study with me last semester on descriptive complexity. Today we begin a two-part series written by Daniel on a foundational result in this area involving first-order logic and star-free languages. Dick and I have discussed […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Part 1 of a two-part series</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/wintonprofile/" rel="attachment wp-att-16830"><img alt="" class="alignright wp-image-16830" height="165" src="https://rjlipton.files.wordpress.com/2020/03/wintonprofile.png?w=150&amp;h=165" width="150"/></a></p>
<p>
Daniel Winton is a graduate student in mathematics at Buffalo. He did an independent study with me last semester on descriptive complexity.</p>
<p>
Today we begin a two-part series written by Daniel on a foundational result in this area involving first-order logic and <em>star-free</em> languages.</p>
<p><span id="more-16828"/></p>
<p>
Dick and I have discussed how GLL might act during the terrible coronavirus developments. We could collect quantitative and theoretical insights to help understand what is happening and possibly contribute to background for attempts to deal with it. Our March 12 <a href="https://rjlipton.wordpress.com/2020/03/12/group-testing-for-the-coronavirus/">post</a> was this kind, and was on the wavelength of an actual advance in group testing announced in Israel two days ago, as noted in a <a href="https://rjlipton.wordpress.com/2020/03/12/group-testing-for-the-coronavirus/#comment-109506">comment</a>. We could try to be even more active than that. We could focus on entertainment and diversion. Our annual St. Patrick’s Day <a href="https://rjlipton.wordpress.com/2020/03/17/leprechauns-stay-home/">post</a> mentioned the ongoing <a href="https://en.candidates-2020.com/main">Candidates</a> <a href="https://new.uschess.org/news/2020-candidates-couch-potatoes/">Tournament</a> in chess, with links to follow it live 7am–noon EDT. Game analysis may be found <a href="http://www.thechessmind.net/">here</a> and elsewhere.</p>
<p>
Here we’re doing what we most often do: present a hopefully sprightly angle on a technical subject. We offer this in solidarity with the many professors and teachers who are beginning to teach online to many students. The subject of regular languages is the start of many theory courses and sometimes taught in high schools. Accordingly, Dick and I decided to prefix a section introducing regular languages as a teaching topic and motivating the use of logic, before entering the main body written by Daniel.</p>
<p>
</p><p/><h2> Regular Languages and Logic </h2><p/>
<p/><p>
<a href="https://en.wikipedia.org/wiki/Regular_language">Regular</a> languages are building blocks used throughout computer science. They can be defined in many ways. Two major types of descriptions are:</p>
<ol>
<li>
Regular expressions. For example, the regular expression <p/>
<p align="center"><img alt="\displaystyle  b^{*}(a b^{*} a b^{*})^{*} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++b%5E%7B%2A%7D%28a+b%5E%7B%2A%7D+a+b%5E%7B%2A%7D%29%5E%7B%2A%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  b^{*}(a b^{*} a b^{*})^{*} "/></p>
<p>describes the set of strings over the alphabet <img alt="{\{a,b\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7Ba%2Cb%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{a,b\}}"/> that have an even number of <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/>‘s. </p>
</li><li>
Finite automata, for example:
</li></ol>
<p>
<a href="https://rjlipton.wordpress.com/2020/03/21/star-free-regular-languages-and-logic/evendfa/" rel="attachment wp-att-16832"><img alt="" class="aligncenter wp-image-16832" height="140" src="https://rjlipton.files.wordpress.com/2020/03/evendfa.jpg?w=300&amp;h=140" width="300"/></a></p>
<p>
The regular languages defined by (1) and (2) are the same. All regular expressions have corresponding finite automata. This equivalence makes a powerful statement about the concept of regular languages. The more and more diverse definitions we have, the better we understand a concept. This leads us to consider other possible definitions.</p>
<p>
A natural kind of definition involves <em>logic</em>. Studying complexity classes through logic and <a href="https://en.wikipedia.org/wiki/Model_theory">model theory</a> has proven fruitful, creating <a href="https://en.wikipedia.org/wiki/Descriptive_complexity_theory">descriptive complexity</a> as an area. <em>Good news:</em> there are logic definitions equivalent to the regular languages. <em>Bad news:</em> they require going up to second-order logic. We would like to stay with first-order logic. So we ask:</p>
<blockquote><p><b> </b> <em> What kind of languages can we define using only first-order logic (FOL) and simple predicates like “the <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{i}"/>th bit of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/> is <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{a}"/>” and “place <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{i}"/> comes before place <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{j}"/>“? </em>
</p></blockquote>
<p/><p>
The answer is the <em>star-free</em> languages, which form a subclass <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> of the regular languages. They were made famous in the book <em>Counter-Free Automata</em> by Robert McNaughton and Seymour Papert, where the equivalence to FOL was proved. A portentous fact is that these automata cannot solve simple tasks involving modular counting. Nor can <em>perceptrons</em>—the title subject of a book at the same time by Papert with Marvin Minsky, which we <a href="https://rjlipton.wordpress.com/2016/01/27/minsky-the-theorist/">discussed</a> in relation to both AI and circuit complexity. This post will introduce <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> and FOL, prove the easier direction of the characterization, and give two lemmas for next time. The second post will present a new way to visualize the other direction. <b>The rest of this post is by Daniel Winton.</b></p>
<p>
</p><p/><h2> No Stars Upon Thars </h2><p/>
<p/><p>
A regular language over an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is one with an expression that can be obtained by applying the union, concatenation, and Kleene star operations a finite number of times on the empty set and singleton subsets of <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>. Star-free languages are defined similarly but give up the use of the Kleene star <img alt="{{}^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%7D%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{}^*}"/> operation, while adding complementation (<img alt="{\sim}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csim%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sim}"/>) as a basic operation. The star-free languages are a subset of the regular languages, because regular languages are closed under complementation. </p>
<p>
Complementation often helps find star-free expressions that we ordinarily write using stars. For instance, if the alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is <img alt="{\{a,b\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7Ba%2Cb%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{a,b\}}"/>, then <img alt="{(\sim \emptyset)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Csim+%5Cemptyset%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\sim \emptyset)}"/> gives <img alt="{(a + b)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28a+%2B+b%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(a + b)^*}"/>. The following lemma gives a family of regular expressions that use Kleene star but are really star-free.</p>
<blockquote><p><b>Lemma 1</b> <em> The language given by taking the Kleene star operation on a union of singleton elements in an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\Sigma}"/> is star-free. </em>
</p></blockquote>
<p/><p>
<em>Proof.</em> For <img alt="{\Sigma=\{a_1, ..., a_n, b_1, ..., b_m\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%3D%5C%7Ba_1%2C+...%2C+a_n%2C+b_1%2C+...%2C+b_m%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma=\{a_1, ..., a_n, b_1, ..., b_m\}}"/> we have that <img alt="{(b_1+ ... + b_m)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28b_1%2B+...+%2B+b_m%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(b_1+ ... + b_m)^*}"/> can be given by </p>
<p align="center"><img alt="\displaystyle  \sim((\sim\emptyset) (a_1+ ... + a_n) (\sim\emptyset)). \quad  " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csim%28%28%5Csim%5Cemptyset%29+%28a_1%2B+...+%2B+a_n%29+%28%5Csim%5Cemptyset%29%29.+%5Cquad++&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sim((\sim\emptyset) (a_1+ ... + a_n) (\sim\emptyset)). \quad  "/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>For example, the language <img alt="{b^*ab^*ab^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2Aab%5E%2Aab%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*ab^*ab^*}"/> is star-free because <img alt="{b^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*}"/> is by this lemma. This idea extends also to forbidden substrings—e.g., the set of strings with no <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> is <img alt="{\;\sim((\sim\emptyset)aa(\sim\emptyset))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%3B%5Csim%28%28%5Csim%5Cemptyset%29aa%28%5Csim%5Cemptyset%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\;\sim((\sim\emptyset)aa(\sim\emptyset))}"/>. </p>
<p>
The language <img alt="{(ab + ba + bb)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28ab+%2B+ba+%2B+bb%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(ab + ba + bb)^*}"/> is not the same, however, and it is not star-free. Intuitively this is because it involves modular counting: an <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> in an odd position is OK but not even. The parity language <img alt="{b^*(ab^*ab^*)^*}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%5E%2A%28ab%5E%2Aab%5E%2A%29%5E%2A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b^*(ab^*ab^*)^*}"/> from the introduction is another example. So <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> is a proper subset of the regular languages. What kind of subset? This is where having a third description via logic is really useful.</p>
<p>
</p><p/><h2> The First Order of Business </h2><p/>
<p/><p>
In addition to the familiar Boolean operations <img alt="{\wedge,\vee,\neg,\rightarrow,\leftrightarrow}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwedge%2C%5Cvee%2C%5Cneg%2C%5Crightarrow%2C%5Cleftrightarrow%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\wedge,\vee,\neg,\rightarrow,\leftrightarrow}"/> and truth values, <em>first-order logic</em> provides variables that range over elements of a structure and quantifiers on those variables. Since we will be concerned with Boolean strings <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, the variables will range over places in the string <img alt="{0,\dots,n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%2C%5Cdots%2Cn-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0,\dots,n-1}"/>, where <img alt="{n = |x|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+%7Cx%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = |x|}"/>. A logic also specifies a set of predicates that relate variables and interact with the structure. For strings we have:</p>
<ul>
<li>
<img alt="{X_c(i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(i)}"/>, meaning that the symbol indexed <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> in <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> is the character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. The logic gives one such predicate for each <img alt="{c \in \Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc+%5Cin+%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c \in \Sigma}"/>. <p/>
</li><li>
<img alt="{i &lt; j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3C+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i &lt; j}"/>, with the obvious meaning for natural numbers <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/>.
</li></ul>
<p>
We can take the <img alt="{X_c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c}"/> for granted since we are talking about strings, but we need to say that predicates like <img alt="{i + j = k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%2B+j+%3D+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i + j = k}"/> and <img alt="{i\cdot j = k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%5Ccdot+j+%3D+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i\cdot j = k}"/> are excluded, so we call this <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>. We could define equality by <img alt="{i = j \equiv \lnot(i &lt; j \lor j &lt; i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3D+j+%5Cequiv+%5Clnot%28i+%3C+j+%5Clor+j+%3C+i%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i = j \equiv \lnot(i &lt; j \lor j &lt; i)}"/> but we regard equality as inherent.</p>
<p>
We can use <img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/> to define the successor relation <img alt="{S(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S(i,j)}"/>, which denotes that position <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> comes immediately after position <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/>:</p>
<p/><p align="center"><img alt="\displaystyle  S(i,j) \equiv i&lt;j \land \forall k (i&lt;k \rightarrow j\leq k). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S%28i%2Cj%29+%5Cequiv+i%3Cj+%5Cland+%5Cforall+k+%28i%3Ck+%5Crightarrow+j%5Cleq+k%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S(i,j) \equiv i&lt;j \land \forall k (i&lt;k \rightarrow j\leq k). "/></p>
<p>
Note the use of quantifiers. We can use quantifiers to say things about the string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> too. For instance, the language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> of strings having no <img alt="{aa}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Baa%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{aa}"/> substrings is defined by the logical sentence</p>
<p/><p align="center"><img alt="\displaystyle  \sigma_L = (\forall i,j):S(i,j) \rightarrow \neg (X_a(i) \land X_a(j)). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csigma_L+%3D+%28%5Cforall+i%2Cj%29%3AS%28i%2Cj%29+%5Crightarrow+%5Cneg+%28X_a%28i%29+%5Cland+X_a%28j%29%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sigma_L = (\forall i,j):S(i,j) \rightarrow \neg (X_a(i) \land X_a(j)). "/></p>
<p>
It is implicit here that <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> are always in-bounds. If <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> were a legal constant with <img alt="{X_c(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_c%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_c(n)}"/> always false then a string like <img alt="{bbba}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bbbba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{bbba}"/> (which belongs to <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>) would falsify <img alt="{\sigma_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csigma_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sigma_L}"/> with <img alt="{i = n-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3D+n-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i = n-1}"/> and <img alt="{j = n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = n}"/>. </p>
<p>
How big is <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>? We'll see it is no more and no less than <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/>.</p>
<p>
</p><p/><h2> From SF to FO </h2><p/>
<p/><p>
To prove that any language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> has a definition in <img alt="{\mathsf{FO}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}}"/>, we will not only give a sentence <img alt="{\sigma_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csigma_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sigma_L}"/> but also a <em>formula</em> <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/>. We will define this formula to indicate that for a given string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, the portion of the string between indices <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j-1}"/> is in <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. Then for the correct choices of <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/>, <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> gives <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. We define <img alt="{\phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi}"/> to test middle portions of strings, because it handles lengths better for the induction in the concatenation case. </p>
<blockquote><p><b>Theorem 2</b> <em/></p><em>
<p>
Every language in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/> is definable in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>.</p>
</em><p><em>
</em>
</p></blockquote>
<p>
The proof is a nice example where “building up” to prove something more general—involving two extra variables—makes induction go smoothly.</p>
<p>
<em>Proof:</em>  Let <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> be a star-free regular language and <img alt="{L'=\{\langle x, i ,j \rangle:}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%27%3D%5C%7B%5Clangle+x%2C+i+%2Cj+%5Crangle%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L'=\{\langle x, i ,j \rangle:}"/> the portion of the string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> between indices <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> (inclusive) and <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> (exclusive) is contained in <img alt="{L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\}}"/>. Let <img alt="{\phi_L(i,j)\in \sf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%5Cin+%5Csf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)\in \sf{FO}[&lt;]}"/> be the formula denoting that for a given string <img alt="{x, x[i,j)\in L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2C+x%5Bi%2Cj%29%5Cin+L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x, x[i,j)\in L}"/>, that is, <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> is the representation of <img alt="{L'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L'}"/> in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/>. We will show that such a <img alt="{\phi_L(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(i,j)}"/> exists via induction on <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. This is sufficient, as for a given symbol <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> that always represents the length of a string <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, <img alt="{\phi_L(0,n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%280%2Cn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L(0,n)}"/> is the formula in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> representing the language <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/>. </p>
<p>
First, we must show that <img alt="{\phi_L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_L%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_L}"/> is in <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> for <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> one of the basis languages, <img alt="{\emptyset, \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cemptyset%2C+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\emptyset, \epsilon}"/>, and <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>, for some <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> in <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>. We have that:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  \phi_\emptyset(i,j) &amp;=&amp; \texttt{false};\\ \phi_\epsilon(i,j) &amp;=&amp; i=j;\\ \phi_c(i,j) &amp;=&amp; (X_c(i)\land S(i,j)). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%5Cphi_%5Cemptyset%28i%2Cj%29+%26%3D%26+%5Ctexttt%7Bfalse%7D%3B%5C%5C+%5Cphi_%5Cepsilon%28i%2Cj%29+%26%3D%26+i%3Dj%3B%5C%5C+%5Cphi_c%28i%2Cj%29+%26%3D%26+%28X_c%28i%29%5Cland+S%28i%2Cj%29%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  \phi_\emptyset(i,j) &amp;=&amp; \texttt{false};\\ \phi_\epsilon(i,j) &amp;=&amp; i=j;\\ \phi_c(i,j) &amp;=&amp; (X_c(i)\land S(i,j)). \end{array} "/></p>
<p>
Now, we must show that given star-free languages <img alt="{L_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_1}"/> and <img alt="{L_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L_2}"/> with FO<img alt="{[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{[&lt;]}"/> translations <img alt="{\psi_1(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_1%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_1(i,j)}"/> and <img alt="{\psi_2(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi_2%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi_2(i,j)}"/> respectively, we have <img alt="{\phi_{L_1\cup L_2}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7BL_1%5Ccup+L_2%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{L_1\cup L_2}(i,j)}"/>, <img alt="{\phi_{L_1\cdot L_2}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7BL_1%5Ccdot+L_2%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{L_1\cdot L_2}(i,j)}"/>, and <img alt="{\phi_{\sim L_1}(i,j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cphi_%7B%5Csim+L_1%7D%28i%2Cj%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\phi_{\sim L_1}(i,j)}"/> are in <img alt="{\sf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sf{FO}[&lt;]}"/>. Then: </p>
<p align="center"><img alt="\displaystyle  \begin{array}{rcl}  \phi_{L_1\cup L_2}(i,j)&amp;=&amp;\psi_1(i,j) \lor \psi_2(i,j);\\ \\ \phi_{L_1\cdot L_2}(i,j)&amp;=&amp;\exists k(i\leq k \land k \leq j) (\psi_1(i,k) \land \psi_2(k,j));\\ \\ \phi_{\sim L_1}(i,j)&amp;=&amp;\lnot \psi_{1}(i,j). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++%5Cphi_%7BL_1%5Ccup+L_2%7D%28i%2Cj%29%26%3D%26%5Cpsi_1%28i%2Cj%29+%5Clor+%5Cpsi_2%28i%2Cj%29%3B%5C%5C+%5C%5C+%5Cphi_%7BL_1%5Ccdot+L_2%7D%28i%2Cj%29%26%3D%26%5Cexists+k%28i%5Cleq+k+%5Cland+k+%5Cleq+j%29+%28%5Cpsi_1%28i%2Ck%29+%5Cland+%5Cpsi_2%28k%2Cj%29%29%3B%5C%5C+%5C%5C+%5Cphi_%7B%5Csim+L_1%7D%28i%2Cj%29%26%3D%26%5Clnot+%5Cpsi_%7B1%7D%28i%2Cj%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  \phi_{L_1\cup L_2}(i,j)&amp;=&amp;\psi_1(i,j) \lor \psi_2(i,j);\\ \\ \phi_{L_1\cdot L_2}(i,j)&amp;=&amp;\exists k(i\leq k \land k \leq j) (\psi_1(i,k) \land \psi_2(k,j));\\ \\ \phi_{\sim L_1}(i,j)&amp;=&amp;\lnot \psi_{1}(i,j). \end{array} "/></p>
<p>
Since star-free languages can be obtained by applying the union, concatenation, and complementation operations a finite number of times on <img alt="{\emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\emptyset}"/> and singleton subsets of <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/>, this completes the proof of <img alt="{\mathsf{SF} \subseteq \mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D+%5Csubseteq+%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF} \subseteq \mathsf{FO}[&lt;]}"/>. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Two Lemmas For Next Time </h2><p/>
<p/><p>
Prefatory to showing (in the next post) that <img alt="{\mathsf{FO}[&lt;]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;]}"/> is contained in <img alt="{\mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{SF}}"/>, we prove properties about substrings on the ends of star-free languages, rather than in the middle as with the trick in the proof of Theorem 2.</p>
<p>
Let <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> be a language over an alphabet <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> and <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> be a word in <img alt="{\Sigma^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma^n}"/> for some <img alt="{n\in \mathbb{N}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5Cin+%5Cmathbb%7BN%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n\in \mathbb{N}}"/>. Define <img alt="{L/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/w}"/>, the <em>right quotient</em> of <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> by <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/>, by <img alt="{L/w =\{v: vw \in L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw+%3D%5C%7Bv%3A+vw+%5Cin+L%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/w =\{v: vw \in L\}}"/> and <img alt="{L\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash w}"/>, the <em>left quotient</em> of <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L}"/> by <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/>, by <img alt="{L\backslash w=\{v:wv \in L\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%3D%5C%7Bv%3Awv+%5Cin+L%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash w=\{v:wv \in L\}}"/>.  First we handle right quotients:</p>
<blockquote><p><b>Lemma 3</b> <em> If <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L}"/> is star-free, then <img alt="{L/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2Fw%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L/w}"/> is star-free. </em>
</p></blockquote>
<p/><p>
<em>Proof:</em>  For any word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> over <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> we define a function <img alt="{f_w(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)}"/> by <img alt="{f_w(\alpha)=\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha'}"/> where <img alt="{L(\alpha')=L(\alpha)/w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28%5Calpha%27%29%3DL%28%5Calpha%29%2Fw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(\alpha')=L(\alpha)/w}"/>. If <img alt="{w = \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = \epsilon}"/>, then <img alt="{f_w(\alpha)=\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha}"/>, and so the statement of the lemma trivially holds. So let <img alt="{w = vc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+vc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = vc}"/> for some string <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> and character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. Note that <img alt="{L/(vc) = (L/c)/v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%2F%28vc%29+%3D+%28L%2Fc%29%2Fv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L/(vc) = (L/c)/v}"/>. Thus <img alt="{f_{vc}(\alpha) = f_v(f_c(\alpha))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_%7Bvc%7D%28%5Calpha%29+%3D+f_v%28f_c%28%5Calpha%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_{vc}(\alpha) = f_v(f_c(\alpha))}"/> for all <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. Hence it suffices to define <img alt="{f_c(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_c%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_c(\alpha)}"/> for any single character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> by recursion on <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. We have:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset, \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Cemptyset%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28%5Cepsilon%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28c%29%26%3D%26%5Cepsilon%3B%5C%5C+f_c%28a%29%26%3D%26%5Cemptyset%2C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset, \end{array} "/></p>
<p>
and recursively:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\alpha \cup\beta)&amp;=&amp;f_c(\alpha) \cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} \alpha\cdot f_c(\beta) &amp; \epsilon\not\in L(\beta), \\ \alpha\cdot f_c(\beta) \cup f_c(\alpha) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim\alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Calpha+%5Ccup%5Cbeta%29%26%3D%26f_c%28%5Calpha%29+%5Ccup+f_c%28%5Cbeta%29%3B%5C%5C%5C%5C+f_c%28%5Calpha%5Ccdot%5Cbeta%29%26%3D%26%5Cbegin%7Bcases%7D+%5Calpha%5Ccdot+f_c%28%5Cbeta%29+%26+%5Cepsilon%5Cnot%5Cin+L%28%5Cbeta%29%2C+%5C%5C+%5Calpha%5Ccdot+f_c%28%5Cbeta%29+%5Ccup+f_c%28%5Calpha%29+%26+otherwise%5Ctext%7B%3B%7D+%5Cend%7Bcases%7D%5C%5C%5C%5C+f_c%28%5Csim%5Calpha%29%26%3D%26%5Csim+f_c%28%5Calpha%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\alpha \cup\beta)&amp;=&amp;f_c(\alpha) \cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} \alpha\cdot f_c(\beta) &amp; \epsilon\not\in L(\beta), \\ \alpha\cdot f_c(\beta) \cup f_c(\alpha) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim\alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} "/></p>
<p>
In general, if <img alt="{w = c_1 c_2 \cdots c_{n-1} c_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+c_1+c_2+%5Ccdots+c_%7Bn-1%7D+c_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = c_1 c_2 \cdots c_{n-1} c_n}"/>, then</p>
<p/><p align="center"><img alt="\displaystyle L/w = f_{c_1}(f_{c_2}(\dots f_{c_{n-1}}(f_{c_n}(\alpha))\dots))." class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L%2Fw+%3D+f_%7Bc_1%7D%28f_%7Bc_2%7D%28%5Cdots+f_%7Bc_%7Bn-1%7D%7D%28f_%7Bc_n%7D%28%5Calpha%29%29%5Cdots%29%29.&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle L/w = f_{c_1}(f_{c_2}(\dots f_{c_{n-1}}(f_{c_n}(\alpha))\dots))."/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<blockquote><p><b>Lemma 4</b> <em> If <img alt="{L}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L}"/> is star-free, then <img alt="{L\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash+w%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{L\backslash w}"/> is star-free. </em>
</p></blockquote>
<p/><p>
The proof of Lemma 4 is similar to the proof of Lemma 3. The main differences lie in the concatenation subcase for the <img alt="{w=c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%3Dc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w=c}"/> case and the order of quotienting when using this operation repeatedly.</p>
<p>
<em>Proof:</em>  For any word <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> over <img alt="{\Sigma}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Sigma}"/> we define a function <img alt="{f_w(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)}"/> by <img alt="{f_w(\alpha)=\alpha'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha'}"/> where <img alt="{L(\alpha')=L(\alpha)\backslash w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%28%5Calpha%27%29%3DL%28%5Calpha%29%5Cbackslash+w%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L(\alpha')=L(\alpha)\backslash w}"/>. If <img alt="{w = \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = \epsilon}"/>, then <img alt="{f_w(\alpha)=\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_w%28%5Calpha%29%3D%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_w(\alpha)=\alpha}"/>, and so the statement of the lemma trivially holds. So let <img alt="{w = vc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+vc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = vc}"/> for some string <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> and character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/>. Note that <img alt="{L\backslash(vc) = (L\backslash v)\backslash c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BL%5Cbackslash%28vc%29+%3D+%28L%5Cbackslash+v%29%5Cbackslash+c%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{L\backslash(vc) = (L\backslash v)\backslash c}"/>. Thus <img alt="{f_{vc}(\alpha) = f_c(f_v(\alpha))}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_%7Bvc%7D%28%5Calpha%29+%3D+f_c%28f_v%28%5Calpha%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_{vc}(\alpha) = f_c(f_v(\alpha))}"/> for all <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. Hence it suffices to define <img alt="{f_c(\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_c%28%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_c(\alpha)}"/> for any single character <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> by recursion on <img alt="{\alpha}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha}"/>. We have:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset.\\ \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Cemptyset%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28%5Cepsilon%29%26%3D%26%5Cemptyset%3B%5C%5C+f_c%28c%29%26%3D%26%5Cepsilon%3B%5C%5C+f_c%28a%29%26%3D%26%5Cemptyset.%5C%5C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\emptyset)&amp;=&amp;\emptyset;\\ f_c(\epsilon)&amp;=&amp;\emptyset;\\ f_c(c)&amp;=&amp;\epsilon;\\ f_c(a)&amp;=&amp;\emptyset.\\ \end{array} "/></p>
<p>
and recursively:</p>
<p/><p align="center"><img alt="\displaystyle  \begin{array}{rcl}  f_c(\alpha\cup\beta)&amp;=&amp;f_c(\alpha)\cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} f_c(\alpha)\cdot\beta &amp; \epsilon\not\in L(\alpha), \\ f_c(\alpha)\cdot\beta \cup f_c\beta) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim \alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cbegin%7Barray%7D%7Brcl%7D++f_c%28%5Calpha%5Ccup%5Cbeta%29%26%3D%26f_c%28%5Calpha%29%5Ccup+f_c%28%5Cbeta%29%3B%5C%5C%5C%5C+f_c%28%5Calpha%5Ccdot%5Cbeta%29%26%3D%26%5Cbegin%7Bcases%7D+f_c%28%5Calpha%29%5Ccdot%5Cbeta+%26+%5Cepsilon%5Cnot%5Cin+L%28%5Calpha%29%2C+%5C%5C+f_c%28%5Calpha%29%5Ccdot%5Cbeta+%5Ccup+f_c%5Cbeta%29+%26+otherwise%5Ctext%7B%3B%7D+%5Cend%7Bcases%7D%5C%5C%5C%5C+f_c%28%5Csim+%5Calpha%29%26%3D%26%5Csim+f_c%28%5Calpha%29.+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \begin{array}{rcl}  f_c(\alpha\cup\beta)&amp;=&amp;f_c(\alpha)\cup f_c(\beta);\\\\ f_c(\alpha\cdot\beta)&amp;=&amp;\begin{cases} f_c(\alpha)\cdot\beta &amp; \epsilon\not\in L(\alpha), \\ f_c(\alpha)\cdot\beta \cup f_c\beta) &amp; otherwise\text{;} \end{cases}\\\\ f_c(\sim \alpha)&amp;=&amp;\sim f_c(\alpha). \end{array} "/></p>
<p>
In general, if <img alt="{w = c_1 c_2 \cdots c_{n-1} c_n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw+%3D+c_1+c_2+%5Ccdots+c_%7Bn-1%7D+c_n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w = c_1 c_2 \cdots c_{n-1} c_n}"/>, then</p>
<p/><p align="center"><img alt="\displaystyle L\backslash w = f_{c_n}(f_{c_{n-1}}(\dots f_{c_{2}}(f_{c_1}(\alpha))\dots))." class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+L%5Cbackslash+w+%3D+f_%7Bc_n%7D%28f_%7Bc_%7Bn-1%7D%7D%28%5Cdots+f_%7Bc_%7B2%7D%7D%28f_%7Bc_1%7D%28%5Calpha%29%29%5Cdots%29%29.&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle L\backslash w = f_{c_n}(f_{c_{n-1}}(\dots f_{c_{2}}(f_{c_1}(\alpha))\dots))."/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
There are richer systems such as <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/> and <img alt="{\mathsf{FO}(+,\cdot)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%2C%5Ccdot%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+,\cdot)}"/>. Note that <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/> allows defining the <img alt="{&lt;}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&lt;}"/> relation via <img alt="{i &lt; j \equiv (\exists k) \lnot(k= 0) \land i + k = j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi+%3C+j+%5Cequiv+%28%5Cexists+k%29+%5Clnot%28k%3D+0%29+%5Cland+i+%2B+k+%3D+j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i &lt; j \equiv (\exists k) \lnot(k= 0) \land i + k = j}"/>. We can define non-regular languages such as <img alt="{{a^n b^n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7Ba%5En+b%5En%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{a^n b^n}}"/> in <img alt="{\mathsf{FO}(+)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+)}"/>. The class <img alt="{\mathsf{FO}(+,\times)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%28%2B%2C%5Ctimes%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}(+,\times)}"/> famously equals uniform <img alt="{\mathsf{AC^0}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BAC%5E0%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{AC^0}}"/>, see chapter 5 of Neil Immerman's <a href="https://link.springer.com/book/10.1007/978-1-4612-0539-5">book</a> <em>Descriptive Complexity</em>. Thus we hope our new style for proving <img alt="{\mathsf{FO}[&lt;] \subseteq \mathsf{SF}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BFO%7D%5B%3C%5D+%5Csubseteq+%5Cmathsf%7BSF%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{FO}[&lt;] \subseteq \mathsf{SF}}"/> (to come in the next part) will build a nice foundation for visualizing these higher results.</p>
<p/></font></font></div>
    </content>
    <updated>2020-03-21T20:54:45Z</updated>
    <published>2020-03-21T20:54:45Z</published>
    <category term="All Posts"/>
    <category term="History"/>
    <category term="Oldies"/>
    <category term="Proofs"/>
    <category term="Teaching"/>
    <category term="trick"/>
    <category term="Daniel Winton"/>
    <category term="descriptive complexity"/>
    <category term="formal languages"/>
    <category term="Logic"/>
    <category term="Robert McNaughton"/>
    <category term="Seymour Papert"/>
    <category term="star-free regular sets"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-03-30T13:20:58Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/037</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/037" rel="alternate" type="text/html"/>
    <title>TR20-037 |  Failure of Feasible Disjunction Property for $k$-DNF Resolution and NP-hardness of Automating It | 

	Michal Garlik</title>
    <summary>We show that for every integer $k \geq 2$, the Res($k$) propositional proof system does not have the weak feasible disjunction property. Next, we generalize a recent result of Atserias and Müller [FOCS, 2019] to Res($k$). We show that if NP is not included in P (resp. QP, SUBEXP) then for every integer $k \geq 1$, Res($k$) is not automatable in polynomial (resp. quasi-polynomial, subexponential) time.</summary>
    <updated>2020-03-21T11:53:33Z</updated>
    <published>2020-03-21T11:53:33Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-03-30T13:20:49Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4331</id>
    <link href="https://lucatrevisan.wordpress.com/2020/03/20/what-is-next/" rel="alternate" type="text/html"/>
    <title>What is next?</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Greetings from the future! The progression of covid-19 in Italy is running about eight days ahead of France and Spain and about 16 days ahead of the United States. Here in Lombardy, which is about ten days ahead of NYC, … <a href="https://lucatrevisan.wordpress.com/2020/03/20/what-is-next/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Greetings from the future! The progression of covid-19 in Italy is running about eight days ahead of France and Spain and about 16 days ahead of the United States. Here in Lombardy, which is about ten days ahead of NYC, we have been “sheltering at home” for 13 days already.</p>
<p>How is social distancing working out for me? I thought that I was well prepared for it, but it is still not easy. I have started to talk to the furniture, and apparently this is perfectly normal, at least as long as the furniture does not talk back. </p>
<p>As I have been telling my dining table, it has been very dismaying to read news from the US, where there seemed to be a very dangerous complacency. I am relieved to see that this is changing, especially at the state level, which makes me much more hopeful.</p>
<p>I have also found media coverage to be disappointing. Apparently, many highly educated people, including people whose job involves understanding policy issues, have no idea how numbers work (<a href="https://www.youtube.com/watch?v=ordODDzVso8">source</a>). This is a problem because a lot of issues concerning this epidemic have to do with numbers, which can be misleading if they are not reported in context.</p>
<p>For example, before the time when Trump decided that he had retroactively been concerned about a pandemic since January, conservative media emphasized the estimate of a 2% mortality rate, in a way that made it sound, well, 98% of people survive, and 98% is approximately 100%, so what is the big deal. For context, the Space Shuttle only exploded 1.5% of the times, and this was deemed <i>too dangerous for astronauts</i>. This is the kind of intuitive reference that I would like to see more of.</p>
<p>Even now, there is a valid debate on whether measures that will cost the economy trillions of dollars are justified. After all, it would be absurd to spend trillions of dollars to save, say, 10,000 lives, it would be questionable to do so to save 100,000 lives, and it would be undoubtedly right to do so to save millions of lives and a collapse of the health care system (especially considering that a collapse of the health care system might create its own financial panic that would also cost trillions of dollars).</p>
<p>So which one is it? Would doing nothing cost 10,000 American lives? A million? How long will people have to “shelter at home”? And what is next? I can recommend two well-researched articles: <a href="https://www.nytimes.com/2020/03/20/opinion/coronavirus-outcomes.html">this</a> on plausible scenarios and <a href="https://www.nytimes.com/2020/03/17/opinion/coronavirus-social-distancing-effect.html">this</a> on what’s next.</p>
<p>Kristof’s article cites an <a href="https://www.statnews.com/2020/03/17/a-fiasco-in-the-making-as-the-coronavirus-pandemic-takes-hold-we-are-making-decisions-without-reliable-data/">essay</a> by Stanford professor John Ioannidis who notes that it is within the realm of possibilities, given the available data, that the true mortality rate could be as low as 0.05%, that is, wait for it, lower than the mortality rate of the flu. Accordingly, in a plausible scenario, “If we had not known about a new virus out there, and had not checked individuals with PCR tests, the number of total deaths due to “influenza-like illness” would not seem unusual this year.”</p>
<p>Ioannidis’ essay was written without reference to data from Italy, which was probably not available in peer-reviewed form at the time of writing.</p>
<p>I would not want professor Ioannidis to tell me how to design graph algorithms, and I don’t mean to argue for the plausibility of the above scenario, but let me complement it with some data from Italy.</p>
<p>Lombardy is Italy’s richest and most developed region, and the second richest (in absolute and PPP GDP) administrative region in Europe after the Ile de France (<a href="https://en.wikipedia.org/wiki/List_of_European_regions_by_GDP">source</a>). It has a rather good health care system. In 2018, on average, 273 people died per day in Lombardy of all causes (<a href="https://ugeo.urbistat.com/AdminStat/it/it/demografia/popolazione/lombardia/3/2">source</a>). Yesterday, 381 people died in Lombardy with coronavirus (<a href="https://github.com/pcm-dpc/COVID-19/tree/master/schede-riepilogative/regioni">source</a>). This is spread out over a region with more than 10 million residents.</p>
<p>Some areas are harder-hit hotspots. Three days ago, a Bergamo newspaper <a href="https://www.bergamonews.it/2020/03/17/coronavirus-a-bergamo-in-una-settimana-330-morti-14-volte-in-piu-rispetto-a-un-anno-fa/360586/">reported</a> that 330 people had died in the previous week of all causes in the city. In the same week of March in 2019, 23 people had died. That’s a 14x increase of mortality of all causes. <b>Edited to add (3/22/2020):</b> <i>the mayor of Bergamo <a href="https://www.reuters.com/article/us-health-coronavirus-italy-homes-insigh/uncounted-among-coronavirus-victims-deaths-sweep-through-italys-nursing-homes-idUSKBN2152V0">told Reuters</a> that 164 people died in Bergamo of all causes in the first two weeks of March 2020, versus 56 in the first two weeks of March 2019, a 3x increase instead of the 14x increase reported by Bergamo News.</i></p>
<p>Bergamo’s hospital had 16 beds in its intensive care unit, in line with international standards (it is typical to have of the order of an ICU bed per 5000-10,000 people, and Bergamo has a population of 120,000). Right now there are 80 people in intensive care in Bergamo, a 5x increase in capacity that was possible by bringing in a lot of ventilators and moving other sick people to other hospitals. Nonetheless, there have been reports of shortages of ICU beds, and of people needing to intubated that could not be. There are also reports of people dying of pneumonia at home, without being tested.</p>
<p>Because of this surge in deaths, Bergamo’s funeral homes have not been able to keep up. It’s not that they have not been able to keep up with arranging funerals, because funerals are banned. They just do not have the capacity to perform the burials.</p>
<p>So coffins have been accumulating. A couple of days ago, a motorcade of army vehicles came to Bergamo to pick up 70 coffins and take them to other cities.</p>
<p/>
<p>It should be noted that this is happening after 20 days of “social distancing” measures and after 13 days of “sheltering at home” in Lombardy.</p>
<p>My point being, if we had not known that a news virus was going around, the number of excess deaths in Bergamo would have not been hidden by the random noise in the number of deaths due to influenza-like illness.</p></div>
    </content>
    <updated>2020-03-20T19:37:09Z</updated>
    <published>2020-03-20T19:37:09Z</published>
    <category term="Italy"/>
    <category term="lies damn lies and ..."/>
    <category term="Bergamo"/>
    <category term="covid-19"/>
    <category term="things that are terrible"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-03-30T13:20:09Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://blog.simons.berkeley.edu/?p=113</id>
    <link href="https://blog.simons.berkeley.edu/2020/03/workshop-lattices-new-cryptographic-capabilities/" rel="alternate" type="text/html"/>
    <title>Workshop “Lattices: New Cryptographic Capabilities”</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">On the behalf of the organizers, I am excited to announce that the next Simons workshop Lattices: New Cryptographic Capabilities will take place next week Mar 23-27, 2020 over Zoom! schedule 8.20 am-noon PDT (4.20 – 8 pm, CET) zoom … <a href="https://blog.simons.berkeley.edu/2020/03/workshop-lattices-new-cryptographic-capabilities/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>On the behalf of the organizers, I am excited to announce that the next Simons workshop <a href="https://simons.berkeley.edu/workshops/lattices-2020-2">Lattices: New Cryptographic Capabilities</a> will take place next week <strong>Mar 23-27, 2020</strong> over Zoom!</p>
<ul>
<li><a href="https://simons.berkeley.edu/workshops/schedule/10566">schedule</a> 8.20 am-noon PDT (4.20 – 8 pm, CET)</li>
<li>zoom <a href="https://berkeley.zoom.us/j/912850168">berkeley.zoom.us/j/912850168</a></li>
</ul>
<p>The workshop will cover advanced lattice-based cryptographic constructions, while also highlighting some of the recurring themes and techniques, reiterated through a game of Bingo! The rest of this post provides a sneak preview along with the Bingo puzzle.</p>
<p><!--
Here is a quick overview of
the workshop

* Day 1: fully homomorphic encryption, attribute-based encryption, homomorphic signatures and non-interactive zero knowledge, all from a simple equation!

* Day 2: obfuscation, obfuscation, obfuscation

* Day 3: -->Looking forward to seeing everyone at the workshop!</p>
<p>Hoeteck, together with Shweta, Zvika and Vinod</p>
<hr/>
<h2 id="zoom-guidelinestips">Zoom Guidelines/Tips</h2>
<ul>
<li>To ask a question, use the “raise hand” feature.</li>
<li>If the speaker’s slide is not displaying in its entirety, try “side-by-side mode” under “view options”.</li>
<li>Please log in to Zoom with your full name.</li>
</ul>
<h2 id="a-sneak-preview">A Sneak Preview</h2>
<p>Let <span class="math inline"><strong>A</strong><sub>1</sub>, <strong>A</strong><sub>2</sub></span> be square matrices and <span class="math inline"><strong>t</strong></span> a row vector such that</p>
<p><span class="math display"><strong>t</strong><strong>A</strong><sub>1</sub> = <em>x</em><sub>1</sub><strong>t</strong>, <strong>t</strong><strong>A</strong><sub>2</sub> = <em>x</em><sub>2</sub><strong>t</strong></span><br/>
Using high-school algebra lingo, we would refer to <span class="math inline"><strong>t</strong></span> as the eigenvector of <span class="math inline"><strong>A</strong><sub>1</sub>, <strong>A</strong><sub>2</sub></span>. It is easy to see that</p>
<p><span class="math display"><strong>t</strong> ⋅ (<strong>A</strong><sub>1</sub> + <strong>A</strong><sub>2</sub>) = (<em>x</em><sub>1</sub> + <em>x</em><sub>2</sub>)<strong>t</strong>, <em>t</em> ⋅ <strong>A</strong><sub>1</sub><strong>A</strong><sub>2</sub> = <em>x</em><sub>1</sub><em>x</em><sub>2</sub><strong>t</strong></span><br/>
This extends readily to any polynomial <span class="math inline"><em>p</em>(<em>x</em><sub>1</sub>, …, <em>x</em><sub><em>n</em></sub>)</span>, namely: if <span class="math inline"><strong>t</strong><strong>A</strong><sub><em>i</em></sub> = <em>x</em><sub><em>i</em></sub><strong>t</strong></span>, then</p>
<p><span class="math display"><strong>t</strong> ⋅ <em>f</em>(<strong>A</strong><sub>1</sub>, …, <strong>A</strong><sub><em>n</em></sub>) = <em>f</em>(<em>x</em><sub>1</sub>, …, <em>x</em><sub><em>n</em></sub>)<strong>t</strong></span><br/>
As in turns out, much of advanced lattice-based crypto boils down to a generalization of this statement! The generalization is along two orthogonal dimensions:</p>
<ol type="i">
<li>arbitrary matrices <span class="math inline"><strong>A</strong><sub>1</sub>, …, <strong>A</strong><sub><em>n</em></sub></span> that may not share the same eigenvector <span class="math inline"><strong>t</strong></span>, and</li>
<li>a relaxation to “approximate” equality, namely <span class="math inline"><strong>t</strong><strong>A</strong><sub><em>i</em></sub> ≈ <em>x</em><sub><em>i</em></sub><strong>t</strong></span>.</li>
</ol>
<p>The generalization underlies fully homomorphic encryption, homomorphic signatures, attribute-based encryption schemes and many more!</p>
<h2 id="bingo">Bingo!</h2>
<p>Here’s the 4×4 bingo puzzle:</p>
<table>
<tbody>
<tr class="odd">
<td>GGH15</td>
<td>Bonsai</td>
<td><span class="math inline"><strong>A</strong><strong>R</strong> <strong>+</strong> <strong>G</strong></span></td>
<td>noise growth</td>
</tr>
<tr class="even">
<td><span class="math inline"><strong>G</strong><sup> − 1</sup></span></td>
<td>LWE</td>
<td>Vinod</td>
<td>LHL</td>
</tr>
<tr class="odd">
<td>Gaussian</td>
<td><span class="math inline"><strong>A</strong><sub><em>f</em></sub></span></td>
<td>FHE Dec <span class="math inline">≈</span> linear</td>
<td>noise flooding</td>
</tr>
<tr class="even">
<td>homomorphic</td>
<td>trapdoor</td>
<td>smoothing parameter</td>
<td><span class="math inline"><strong>H</strong><sub><em>f</em>, <em>x</em></sub></span></td>
</tr>
</tbody>
</table></div>
    </content>
    <updated>2020-03-20T15:07:05Z</updated>
    <published>2020-03-20T15:07:05Z</published>
    <category term="General"/>
    <author>
      <name>Hoeteck Wee</name>
    </author>
    <source>
      <id>https://blog.simons.berkeley.edu</id>
      <link href="https://blog.simons.berkeley.edu/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://blog.simons.berkeley.edu" rel="alternate" type="text/html"/>
      <subtitle>What's New at the Simons Institute for the Theory of Computing.</subtitle>
      <title>Calvin Café: The Simons Institute Blog</title>
      <updated>2020-03-29T23:35:02Z</updated>
    </source>
  </entry>
</feed>
