<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2019-08-30T14:22:20Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11358</id>
    <link href="http://arxiv.org/abs/1908.11358" rel="alternate" type="text/html"/>
    <title>Private Heavy Hitters and Range Queries in the Shuffled Model</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Ghazi:Badih.html">Badih Ghazi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Golowich:Noah.html">Noah Golowich</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kumar:Ravi.html">Ravi Kumar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pagh:Rasmus.html">Rasmus Pagh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Velingker:Ameya.html">Ameya Velingker</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11358">PDF</a><br/><b>Abstract: </b>An exciting new development in differential privacy is the shuffled model,
which makes it possible to circumvent the large error lower bounds that are
typically incurred in the local model, while relying on much weaker trust
assumptions than in the central model. In this work, we study two basic
statistical problems, namely, heavy hitters and $d$-dimensional range counting
queries, in the shuffled model of privacy. For both problems we devise
algorithms with polylogarithmic communication per user and polylogarithmic
error; a consequence is an algorithm for approximating the median with similar
communication and error. These bounds significantly improve on what is possible
in the local model of differential privacy, where the error must provably grow
polynomially with the number of users.
</p></div>
    </summary>
    <updated>2019-08-30T01:24:54Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11335</id>
    <link href="http://arxiv.org/abs/1908.11335" rel="alternate" type="text/html"/>
    <title>Nearly Tight Bounds for Robust Proper Learning of Halfspaces with a Margin</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Diakonikolas:Ilias.html">Ilias Diakonikolas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kane:Daniel_M=.html">Daniel M. Kane</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Manurangsi:Pasin.html">Pasin Manurangsi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11335">PDF</a><br/><b>Abstract: </b>We study the problem of {\em properly} learning large margin halfspaces in
the agnostic PAC model. In more detail, we study the complexity of properly
learning $d$-dimensional halfspaces on the unit ball within misclassification
error $\alpha \cdot \mathrm{OPT}_{\gamma} + \epsilon$, where
$\mathrm{OPT}_{\gamma}$ is the optimal $\gamma$-margin error rate and $\alpha
\geq 1$ is the approximation ratio. We give learning algorithms and
computational hardness results for this problem, for all values of the
approximation ratio $\alpha \geq 1$, that are nearly-matching for a range of
parameters. Specifically, for the natural setting that $\alpha$ is any constant
bigger than one, we provide an essentially tight complexity characterization.
On the positive side, we give an $\alpha = 1.01$-approximate proper learner
that uses $O(1/(\epsilon^2\gamma^2))$ samples (which is optimal) and runs in
time $\mathrm{poly}(d/\epsilon) \cdot 2^{\tilde{O}(1/\gamma^2)}$. On the
negative side, we show that {\em any} constant factor approximate proper
learner has runtime $\mathrm{poly}(d/\epsilon) \cdot 2^{(1/\gamma)^{2-o(1)}}$,
assuming the Exponential Time Hypothesis.
</p></div>
    </summary>
    <updated>2019-08-30T01:20:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11260</id>
    <link href="http://arxiv.org/abs/1908.11260" rel="alternate" type="text/html"/>
    <title>A Time-space Trade-off for Computing the Geodesic Center of a Simple Polygon</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kavand:Pardis.html">Pardis Kavand</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mohades:Ali.html">Ali Mohades</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kazemi:Mohammad_Reza.html">Mohammad Reza Kazemi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11260">PDF</a><br/><b>Abstract: </b>In this paper we study the problem of computing the geodesic center of a
simple polygon when the available workspace is limited. For an $n$-vertex
simple polygon, we give a time-space trade-off algorithm that finds the
geodesic center in $O(T(n, s) \log^2 n+ \frac{n^2}{s} \log n)$ expected time
and uses $O(s)$ additional words of space where $s\in \Omega(\log n) \cap
O(n)$, and $T(n, s)$ is the time needed for constructing the shortest path tree
of a given point inside a simple polygon, in depth-first order, with $O(s)$
extra space. Applying the best current known time-space trade-off of Oh and Ahn
(Algorithmica 2019) for shortest path tree, our algorithm runs in
$O(\frac{n^2}{s} \log^3 n)$ expected time.
</p></div>
    </summary>
    <updated>2019-08-30T01:26:24Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11248</id>
    <link href="http://arxiv.org/abs/1908.11248" rel="alternate" type="text/html"/>
    <title>Efficient Implementation of Color Coding Algorithm for Subgraph Isomorphism Problem</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mal=iacute=k:Josef.html">Josef Malík</a>, Ondřej Suchý, Tomáš Valla <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11248">PDF</a><br/><b>Abstract: </b>We consider the subgraph isomorphism problem where, given two graphs G
(source graph) and F (pattern graph), one is to decide whether there is a (not
necessarily induced) subgraph of G isomorphic to F. While many practical
heuristic algorithms have been developed for the problem, as pointed out by
McCreesh et al. [JAIR 2018], for each of them there are rather small instances
which they cannot cope. Therefore, developing an alternative approach that
could possibly cope with these hard instances would be of interest.
</p>
<p>A seminal paper by Alon, Yuster and Zwick [J. ACM 1995] introduced the color
coding approach to solve the problem, where the main part is a dynamic
programming over color subsets and partial mappings. As with many
exponential-time dynamic programming algorithms, the memory requirements
constitute the main limiting factor for its usage. Because these requirements
grow exponentially with the treewidth of the pattern graph, all existing
implementations based on the color coding principle restrict themselves to
specific pattern graphs, e.g., paths or trees. In contrast, we provide an
efficient implementation of the algorithm significantly reducing its memory
requirements so that it can be used for pattern graphs of larger treewidth.
Moreover, our implementation not only decides the existence of an isomorphic
subgraph, but it also enumerates all such subgraphs (or given number of them).
</p>
<p>We provide an extensive experimental comparison of our implementation to
other available solvers for the problem.
</p></div>
    </summary>
    <updated>2019-08-30T01:20:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11213</id>
    <link href="http://arxiv.org/abs/1908.11213" rel="alternate" type="text/html"/>
    <title>The Grover search as a naturally occurring phenomenon</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Stéphane Guillet, Mathieu Roget, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Arrighi:Pablo.html">Pablo Arrighi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Molfetta:Giuseppe_Di.html">Giuseppe Di Molfetta</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11213">PDF</a><br/><b>Abstract: </b>We provide the first evidence that under certain conditions, electrons may
naturally behave like a Grover search, looking for defects in a material. The
theoretical framework is that of discrete-time quantum walks (QW), i.e. local
unitary matrices that drive the evolution of a single particle on the lattice.
Some of these are well-known to recover the $(2+1)$--dimensional Dirac equation
in continuum limit, i.e. the free propagation of the electron. We study two
such Dirac QW, one on the square grid and the other on a triangular grid
reminiscent of graphene-like materials. The numerical simulations show that the
walker localises around a defect in $O(\sqrt{N})$ steps with probability
$O(1/\log{N})$. This in line with previous QW formulations of the Grover search
on the 2D grid. But these Dirac QW are `naturally occurring' and require no
specific oracle step other than a hole defect in a material.
</p></div>
    </summary>
    <updated>2019-08-30T01:25:58Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11181</id>
    <link href="http://arxiv.org/abs/1908.11181" rel="alternate" type="text/html"/>
    <title>Compacted binary trees admit a stretched exponential</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Andrew Elvey Price, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fang:Wenjie.html">Wenjie Fang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wallner:Michael.html">Michael Wallner</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11181">PDF</a><br/><b>Abstract: </b>A compacted binary tree is a directed acyclic graph encoding a binary tree in
which common subtrees are factored and shared, such that they are represented
only once. We show that the number of compacted binary trees of size $n$ is
asymptotically given by $$ \Theta\left( n! \, 4^n e^{3a_1n^{1/3}} n^{3/4}
\right), $$ where $a_1\approx-2.338$ is the largest root of the Airy function.
Our method involves a new two parameter recurrence which yields an algorithm of
quadratic arithmetic complexity for computing the number of compact trees of a
given size. We use empirical methods to estimate the values of all terms
defined by the recurrence, then we prove by induction that these estimates are
sufficiently accurate for large $n$ to determine the asymptotic form of the
number of compacted trees.
</p></div>
    </summary>
    <updated>2019-08-30T01:22:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11105</id>
    <link href="http://arxiv.org/abs/1908.11105" rel="alternate" type="text/html"/>
    <title>FunSeqSet: Towards a Purely Functional Data Structure for the Linearisation Case of Dynamic Trees Problem</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Juan Carlos Saenz-Carrasco <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11105">PDF</a><br/><b>Abstract: </b>Dynamic trees, originally described by Sleator and Tarjan, have been studied
deeply for non persistent structures providing $\mathcal{O}(\log n)$ time for
update and lookup operations as shown in theory and practice by Werneck.
However, discussions on how the most common dynamic trees operations (i.e. link
and cut) are computed over a purely functional data structure have not been
studied. Even more, asking whether vertices $u$ and $v$ are connected (i.e.
within the same forest) assumes that corresponding indices or locations for $u$
and $v$ are taken for granted in most of the literature, and not performed as
part of the whole computation for such a question. We present FunSeqSet, based
on the primitive version of finger trees, i.e. the de facto sequence data
structure for the purely functional programming language Haskell, augmented
with variants of the collection (i.e. sets) data structures in order to manage
efficiently $k$-ary trees for the linearisation case of the dynamic trees
problem. Different implementations are discussed, and the performance is
measured.
</p></div>
    </summary>
    <updated>2019-08-30T01:20:41Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.11071</id>
    <link href="http://arxiv.org/abs/1908.11071" rel="alternate" type="text/html"/>
    <title>Solving Discounted Stochastic Two-Player Games with Near-Optimal Time and Sample Complexity</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sidford:Aaron.html">Aaron Sidford</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Mengdi.html">Mengdi Wang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yang:Lin_F=.html">Lin F. Yang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Ye:Yinyu.html">Yinyu Ye</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.11071">PDF</a><br/><b>Abstract: </b>In this paper, we settle the sampling complexity of solving discounted
two-player turn-based zero-sum stochastic games up to polylogarithmic factors.
Given a stochastic game with discount factor $\gamma\in(0,1)$ we provide an
algorithm that computes an $\epsilon$-optimal strategy with high-probability
given $\tilde{O}((1 - \gamma)^{-3} \epsilon^{-2})$ samples from the transition
function for each state-action-pair. Our algorithm runs in time nearly linear
in the number of samples and uses space nearly linear in the number of
state-action pairs. As stochastic games generalize Markov decision processes
(MDPs) our runtime and sample complexities are optimal due to Azar et al
(2013). We achieve our results by showing how to generalize a near-optimal
Q-learning based algorithms for MDP, in particular Sidford et al (2018), to
two-player strategy computation algorithms. This overcomes limitations of
standard Q-learning and strategy iteration or alternating minimization based
approaches and we hope will pave the way for future reinforcement learning
results by facilitating the extension of MDP results to multi-agent settings
with little loss.
</p></div>
    </summary>
    <updated>2019-08-30T01:22:46Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10950</id>
    <link href="http://arxiv.org/abs/1908.10950" rel="alternate" type="text/html"/>
    <title>Constrained Hybrid Monte Carlo algorithms for gauge-Higgs models</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/G=uuml=nther:Michael.html">Michael Günther</a>, Roman Höllwieser, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Knechtli:Francesco.html">Francesco Knechtli</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10950">PDF</a><br/><b>Abstract: </b>We present the construction of Hybrid Monte Carlo (HMC) algorithms for
constrained Hamiltonian systems of gauge-Higgs models in order to measure the
constraint effective Higgs potential. In particular we focus on SU(2)
Gauge-Higgs Unification models in five dimensions, where the Higgs field is
identified with (some of) the five-dimensional components of the gauge field.
Previous simulations have identified regions in the Higgs phase of these models
which have properties of 4D adjoint or Abelian gauge-Higgs models. We develop
new methods to measure constraint effective potentials, using an extension of
the so-called Rattle algorithm to general Hamiltonians for constrained systems,
which we adapt to the 4D Abelian gauge-Higgs model and the 5D SU(2) gauge
theory on the torus and on the orbifold. The derivative of the potential is
determined via the expectation value of the Lagrange multiplier for the
constraint. To our knowledge, this is the first time this problem has been
addressed for theories with gauge fields. The algorithm can also be used in
four dimensions to study finite temperature and density transitions via
effective Polyakov loop actions.
</p></div>
    </summary>
    <updated>2019-08-30T01:24:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10942</id>
    <link href="http://arxiv.org/abs/1908.10942" rel="alternate" type="text/html"/>
    <title>The Single-Face Ideal Orientation Problem in Planar Graphs</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Yipu.html">Yipu Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10942">PDF</a><br/><b>Abstract: </b>We consider the ideal orientation problem in planar graphs. In this problem,
we are given an undirected graph $G$ with positive edge lengths and $k$ pairs
of distinct vertices $(s_1, t_1), \dots, (s_k, t_k)$ called terminals, and we
want to assign an orientation to each edge such that for all $i$ the distance
from $s_i$ to $t_i$ is preserved or report that no such orientation exists. We
show that the problem is NP-hard in planar graphs. On the other hand, we show
that the problem is polynomial-time solvable in planar graphs when $k$ is
fixed, the vertices $s_1, t_1, \dots, s_k, t_k$ are all on the same face, and
no two of terminal pairs cross (a pair $(s_i, t_i)$ crosses $(s_j, t_j)$ if the
cyclic order of the vertices is $s_i,s_j,t_i,t_j$). For serial instances, we
give a simpler and faster algorithm running in $O(n \log n)$ time, even if $k$
is part of the input. (An instance is serial if the terminals appear in cyclic
order $u_1, v_1, \dots, u_k, v_k$, where for each $i$ we have either $(u_i,
v_i) = (s_i, t_i)$ or $(u_i, v_i) = (t_i, s_i)$.) Finally, we consider a
generalization of the problem in which the sum of the distances from $s_i$ to
$t_i$ is to be minimized; in this case we give an algorithm for serial
instances running in $O(kn^5)$ time.
</p></div>
    </summary>
    <updated>2019-08-30T01:26:18Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10888</id>
    <link href="http://arxiv.org/abs/1908.10888" rel="alternate" type="text/html"/>
    <title>Eliminating Left Recursion without the Epsilon</title>
    <feedworld_mtime>1567123200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Smith:James.html">James Smith</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10888">PDF</a><br/><b>Abstract: </b>The standard algorithm to eliminate indirect left recursion takes a
preventative approach, reorganising a grammar in such a way that indirect left
recursion is no longer possible, rather than eliminating it only as and when it
occurs. This approach results in many of the grammar's rules being lost,
however, so that the resulting parse trees are often devoid of the detail that
the grammar was supposed to pick out in the first place. To avoid this pitfall,
we extend a revised version of the standard algorithm to eliminate immediate
left recursion to a recursive algorithm to explicitly eliminate indirect left
recursion. By taking this approach, all of the grammar's original rules are
retained, resulting in parse trees that are still useful in practice. A novel
quirk of this approach is that the usual empty definitions with $\epsilon$
parts are eschewed in favour of optional parts in the right recursive rules
that the algorithm generates.
</p></div>
    </summary>
    <updated>2019-08-30T01:20:25Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-30T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/08/29/grid-majors</id>
    <link href="https://11011110.github.io/blog/2019/08/29/grid-majors.html" rel="alternate" type="text/html"/>
    <title>Grid majors</title>
    <summary>I’ve written here about grid minors before, more than once. These are grid graphs that you can get from a given graph as a minor (that is, by removing edges or vertices from and contracting others of its edges). So, in the other direction, a “grid major” of must be a grid graph that has as a minor. These are the subject of my new preprint, “Homotopy height, grid-major height and graph-drawing height” (arXiv:1908.05706, with Therese Biedl, Erin Chambers, Arnaud De Mesmay, and Tim Ophelders, to appear at Graph Drawing).</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I’ve <a href="https://11011110.github.io/blog/2012/12/16/grid-minors-in.html">written here about grid minors</a> before, <a href="https://11011110.github.io/blog/2013/03/05/more-on-grid.html">more than once</a>. These are <a href="https://en.wikipedia.org/wiki/Lattice_graph">grid graphs</a> that you can get from a given graph  as a <a href="https://en.wikipedia.org/wiki/Graph_minor">minor</a> (that is, by removing edges or vertices from  and contracting others of its edges). So, in the other direction, a “grid major” of  must be a grid graph that has  as a minor. These are the subject of my new preprint, “Homotopy height, grid-major height and graph-drawing height” (<a href="https://arxiv.org/abs/1908.05706">arXiv:1908.05706</a>, with Therese Biedl, Erin Chambers, Arnaud De Mesmay, and Tim Ophelders, to appear at Graph Drawing).</p>

<p>You can define the terms in the paper’s title for any planar graph, but our results are cleanest for <a href="https://en.wikipedia.org/wiki/Maximal_planar_graph">maximal planar graphs</a>. If we define the height of a grid to be the smaller of its two dimensions, then the grid-major height of a graph  is just the smallest height of a grid that has  as a minor. The detailed definition of homotopy height is trickier to explain, but the rough idea is that (after choosing one face of your graph to be the outer one) you should sweep a path from one edge of the outer face, across the graph, to another edge of the outer face, trying as you do to keep the path as short as possible. Paths can move across triangular faces (changing the number of vertices by ) or path vertices can “slide” along edges  (leaving the total number unchanged. The smallest length  such that you can do this sweep and always maintain length at most  turns out to equal the grid-major height, and both are lower bounds on the height of a conventional drawing of the graph (with its vertices at grid points and its edges as straight line segments).</p>

<p>For instance, the following drawing shows a height- grid drawing of a maximal planar graph, a sequence of  paths of length at most  sweeping from the left to the right edge of the graph, and the subsets of vertices to contract in a  grid to produce the graph as a minor. Each column of the grid has the same vertices as the corresponding path in the walk. For this graph, the drawing height, homotopy height, and grid-major height are all equal, but it is possible for the drawing height to be much larger than the other two quantities.</p>

<p style="text-align: center;"><img alt="Grid drawing of a maximal planar graph, homotopy sequence for the graph, and grid major representation of the graph" src="https://11011110.github.io/blog/assets/2019/grid-majors.svg"/></p>

<p>Both homotopy height and grid-major height come in simple and non-simple variations. They are equal for both variations, and both variations give a valid lower bound on graph drawing height. In simple homotopy height the swept path is required to stay simple (as it is in the example here) while more generally we allow walks that can repeat vertices. (In particular they can have “spikes”, parts of paths that double back along a single edge.) Correspondingly, non-simple grid-major height does not restrict how  is formed as a minor of a grid while the simple variant requires the parts of the grid corresponding to a single vertex of  to be contiguous within each column of the grid (as they are in the example here).</p>

<p>Because grid-major height behaves nicely under graph minor operations, it is automatically fixed-parameter tractable, but in a non-uniform way. What this means is that for each  there are finitely many graphs that, when they are a minor of , prevent  from having grid-major height . We can find the grid-major height of  by looking for these “obstacles” and returning the smallest  for which no obstacles are found. And, whenever  is bounded, the time of the resulting algorithm is a polynomial whose exponent is independent of the size of . So an algorithm exists for any fixed , but we don’t know how to actually write it down as a program because we don’t know what the obstacles are or even whether the number of obstacles is computable.</p>

<p>Simple grid-major height is nicer from the algorithmic point of view, but still not entirely satisfactory. Our paper describes the existence of a simple grid major using the <a href="https://en.wikipedia.org/wiki/Logic_of_graphs">logic of graphs</a>. When  is bounded this gives us a linear-time algorithm via <a href="https://en.wikipedia.org/wiki/Courcelle%27s_theorem">Courcelle’s theorem</a>. The algorithm could in principle be written out explicitly as a program,
with  given as an input to the program rather than hardcoded into it. There is no problem with unknown lists of obstacles. But the logical description is huge and the dependence of Courcelle’s theorem on the size of the logical description is very high, so although the time is linear in the size of the graph it gets multiplied by a very quickly growing function <span style="white-space: nowrap;">of .</span></p>

<p>(<a href="https://mathstodon.xyz/@11011110/102703909560253906">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2019-08-29T20:47:00Z</updated>
    <published>2019-08-29T20:47:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-08-30T03:55:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16208</id>
    <link href="https://rjlipton.wordpress.com/2019/08/29/danny-cohen-passed-away/" rel="alternate" type="text/html"/>
    <title>Danny Cohen Passed Away</title>
    <summary>Not a theorist but … [ Internet Hall of Fame] Danny Cohen was a pioneer who advanced many areas of computer science. He made contributions to computer graphics, networking, and flight simulation, and much more. Today I want to remember him and his work. Danny is hard to label. Leonard Kleinrock, said that Cohen “had […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>Not a theorist but …</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2019/08/29/danny-cohen-passed-away/unknown-125/" rel="attachment wp-att-16212"><img alt="" class="alignright  wp-image-16212" src="https://rjlipton.files.wordpress.com/2019/08/unknown.jpeg?w=170" width="170"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">[ Internet Hall of Fame]</font></td>
</tr>
</tbody>
</table>
<p>
Danny Cohen was a pioneer who advanced many areas of computer science. He made contributions to computer graphics, networking, and flight simulation, and much more.</p>
<p>
Today I want to remember him and his work.</p>
<p>
Danny is hard to label. Leonard Kleinrock, said that Cohen “had the uncanny ability to employ his deep mathematical intellect and insight to real world challenges, with enormous impact.” Indeed. This is quoted in last week’s New York Times <a href="https://www.nytimes.com/2019/08/16/obituaries/danny-cohen-who-helped-set-the-stage-for-a-digital-era-dies-at-81.html">obit</a>. The Los Angeles Times <a href="https://www.latimes.com/obituaries/story/2019-08-20/danny-cohen-computer-scientist-dead">obit</a> noted his 1981 <a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1667115">paper</a> addressed to warring “Big Endian” and “Little Endian” camps.</p>
<p>
Obituaries for Danny do not, in my opinion, explain why Danny was so remarkable. For example, he impacted theory even though he never worked in it. Let me explain in a moment. But first <img alt="{\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\dots}"/></p>
<p>
</p><p/><h2> Danny—isms </h2><p/>
<p/><p>
I worked with Danny. I was on a government committee that he chaired, years ago. He was an excellent leader, a tough chair, and ran a tight ship. He had been a fighter pilot, perhaps that is why he was such a great leader. On that committee—I will not identify it—he once fired a new committee member as he left the first meeting. Really as he walked out the door, while the rest of us were still meeting. He immediately said that he would not be staying on the committee. Tough. Yes. But Danny knew how to run a meeting.</p>
<p>
Danny had a clever wit. One of his favorite jokes was based on a form he had printed out:</p>
<blockquote><p>
The_____________________________technology is a promising technology and always will be.
</p></blockquote>
<p>He then would fill in the blank with whatever you thought was a great technology and hand it to you. Today perhaps we might fill in “quantum computing”—or is that wrong to say?</p>
<p>
Danny loved irony. His son revealed that Danny had joined the Flat Earth <a href="https://en.wikipedia.org/wiki/Modern_flat_Earth_societies">Society</a>. Danny was initially rejected—no scientists allowed. After he got in—this time he did not list his profession—he framed the certificate of membership, the rejection letter and the Flat Earth Society’s map of the world, complete with an emblazoned “Australia Not Down Under..”</p>
<p>
</p><p/><h2> MOSIS </h2><p/>
<p/><p>
A key contribution that seems to be missed in obits I’ve seen is that he helped create the VLSI revolution. <a href="https://en.wikipedia.org/wiki/MOSIS">MOSIS</a> is the <i>Metal Oxide Semiconductor Implementation Service</i>. Danny created it, <a href="https://core.ac.uk/download/pdf/9412602.pdf">styling</a> it after the earlier work of the pioneer Lynn Conway. Ten points if you know what <a href="https://en.wikipedia.org/wiki/Very_Large_Scale_Integration">VLSI</a> stands for.</p>
<p>
MOSIS allowed researchers to actually fabricate their designs: to convert digital plans into chips that worked. You designed the chips yourself, encoded in a strange digital file format. Then you sent the files to MOSIS. They then placed you design along with other designs onto one wafer. A wafer held many designs. The wafer files were finally sent to a commercial foundry. There they were converted from digital into silicon. When MOSIS got them back they broke the wafers up and sent you the chips that you designed. </p>
<p>
This was magical. The beauty was we could make working chips without having to have our own foundry. At that time frame many companies in the computer business would boast that they had they own <i>captive foundry</i>. Few could afford the huge cost of having their own fabrication foundry. Danny liked to say: </p>
<blockquote><p><b> </b> <em> A captive foundry was one that captured you. </em>
</p></blockquote>
<p>His point was that if you had your own foundry, you probably would be forced to use it, even if it was not the right type for your needs. Captive indeed.</p>
<p>
Since 1981, when it started, countless projects have been fabricated. MOSIS was a brilliant idea that made it possible for many to build working VLSI chips. We did that more that once while I was at Princeton University. While at Princeton my students and I sent several designs to MOSIS. For example, Dan Lopresti sent in a design that we discussed before <a href="https://rjlipton.wordpress.com/2009/07/08/nsf-workshop-on-design-automation-and-theory/">here</a>.</p>
<p>
<a href="https://rjlipton.wordpress.com/2019/08/29/danny-cohen-passed-away/lop/" rel="attachment wp-att-16217"><img alt="" class="aligncenter size-medium wp-image-16217" height="300" src="https://rjlipton.files.wordpress.com/2019/08/lop.png?w=140&amp;h=300" width="140"/></a></p>
<p>
The ability to make chips was a terrific motivator. I believe that the excitement of being able to make your own devices helped move the field forward. Without MOSIS, without Danny, the field would have advanced much slower. </p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Perhaps the lesson of MOSIS is not lost on us. Today there are “MOSIS” like systems that allow even theorists to execute physically real quantum computations. This is indirectly thanks to Danny. We owe him much.</p>
<p/></font></font></div>
    </content>
    <updated>2019-08-29T12:25:03Z</updated>
    <published>2019-08-29T12:25:03Z</published>
    <category term="History"/>
    <category term="News"/>
    <category term="People"/>
    <category term="chips"/>
    <category term="Cohen"/>
    <category term="MOSIS"/>
    <category term="VLSI"/>
    <author>
      <name>rjlipton</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-08-30T14:20:37Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10859</id>
    <link href="http://arxiv.org/abs/1908.10859" rel="alternate" type="text/html"/>
    <title>High-Order Langevin Diffusion Yields an Accelerated MCMC Algorithm</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mou:Wenlong.html">Wenlong Mou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Ma:Yi=An.html">Yi-An Ma</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wainwright:Martin_J=.html">Martin J. Wainwright</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bartlett:Peter_L=.html">Peter L. Bartlett</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jordan:Michael_I=.html">Michael I. Jordan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10859">PDF</a><br/><b>Abstract: </b>We propose a Markov chain Monte Carlo (MCMC) algorithm based on third-order
Langevin dynamics for sampling from distributions with log-concave and smooth
densities. The higher-order dynamics allow for more flexible discretization
schemes, and we develop a specific method that combines splitting with more
accurate integration. For a broad class of $d$-dimensional distributions
arising from generalized linear models, we prove that the resulting third-order
algorithm produces samples from a distribution that is at most $\varepsilon &gt;
0$ in Wasserstein distance from the target distribution in
$O\left(\frac{d^{1/3}}{ \varepsilon^{2/3}} \right)$ steps. This result requires
only Lipschitz conditions on the gradient. For general strongly convex
potentials with $\alpha$-th order smoothness, we prove that the mixing time
scales as $O \left(\frac{d^{1/3}}{\varepsilon^{2/3}} +
\frac{d^{1/2}}{\varepsilon^{1/(\alpha - 1)}} \right)$.
</p></div>
    </summary>
    <updated>2019-08-29T23:21:02Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10846</id>
    <link href="http://arxiv.org/abs/1908.10846" rel="alternate" type="text/html"/>
    <title>Quantum Approximate Counting, Simplified</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aaronson:Scott.html">Scott Aaronson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rall:Patrick.html">Patrick Rall</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10846">PDF</a><br/><b>Abstract: </b>In 1998, Brassard, Hoyer, Mosca, and Tapp (BHMT) gave a quantum algorithm for
approximate counting. Given a list of $N$ items, $K$ of them marked, their
algorithm estimates $K$ to within relative error $\varepsilon$ by making only
$O\left( \frac{1}{\varepsilon}\sqrt{\frac{N}{K}}\right) $ queries. Although
this speedup is of "Grover" type, the BHMT algorithm has the curious feature of
relying on the Quantum Fourier Transform (QFT), more commonly associated with
Shor's algorithm. Is this necessary? This paper presents a simplified
algorithm, which we prove achieves the same query complexity using Grover
iterations only. We also generalize this to a QFT-free algorithm for amplitude
estimation. Related approaches to approximate counting were sketched previously
by Grover, Abrams and Williams, Suzuki et al., and Wie (the latter two as we
were writing this paper), but in all cases without rigorous analysis.
</p></div>
    </summary>
    <updated>2019-08-29T23:37:39Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10844</id>
    <link href="http://arxiv.org/abs/1908.10844" rel="alternate" type="text/html"/>
    <title>The Tessellation Cover Number of Good Tessellable Graphs</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Alexandre Abreu, Luís Cunha, Celina de Figueiredo, Luis Kowada, Franklin Marquezino, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Portugal:Renato.html">Renato Portugal</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Posner:Daniel.html">Daniel Posner</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10844">PDF</a><br/><b>Abstract: </b>A tessellation of a graph is a partition of its vertices into vertex disjoint
cliques. A tessellation cover of a graph is a set of tessellations that covers
all of its edges, and the tessellation cover number, denoted by $T(G)$, is the
size of a smallest tessellation cover. The \textsc{$t$-tessellability} problem
aims to decide whether a graph $G$ has $T(G)\leq t$ and is
$\mathcal{NP}$-complete for $t\geq 3$. Since the number of edges of a maximum
induced star of $G$, denoted by $is(G)$, is a lower bound on $T(G)$, we define
good tessellable graphs as the graphs~$G$ such that $T(G)=is(G)$. The
\textsc{good tessellable recognition (gtr)} problem aims to decide whether $G$
is a good tessellable graph. We show that \textsc{gtr} is
$\mathcal{NP}$-complete not only if $T(G)$ is known or $is(G)$ is fixed, but
also when the gap between $T(G)$ and $is(G)$ is large. As a byproduct, we
obtain graph classes that obey the corresponding computational complexity
behaviors.
</p></div>
    </summary>
    <updated>2019-08-29T23:20:32Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10805</id>
    <link href="http://arxiv.org/abs/1908.10805" rel="alternate" type="text/html"/>
    <title>Logical depth for reversible Turing machines with an application to the rate of decrease in logical depth for general Turing machines</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Paul MB Vitanyi <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10805">PDF</a><br/><b>Abstract: </b>The logical depth of a {\em reversible} Turing machine equals the shortest
running time of a shortest program for it. This is applied to show that the
result in L.F. Antunes, A. Souto, and P.M.B. Vit\'anyi, On the Rate of Decrease
in Logical Depth, Theor. Comput. Sci., 702(2017), 60--64 is valid
notwithstanding the error noted in Corrigendum P.M.B. Vit\'anyi, Corrigendum to
"On the rate of decrease in logical depth" by L.F. Antunes, A. Souto, and
P.M.B. Vit\'anyi [Theoret. Comput. Sci. 702 (2017) 60--64], {\em Theoret.
Comput. Sci.}, https://doi.org/10.1016/j.tcs.2018.07.009 . /
</p></div>
    </summary>
    <updated>2019-08-29T23:20:58Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10693</id>
    <link href="http://arxiv.org/abs/1908.10693" rel="alternate" type="text/html"/>
    <title>DDSketch: A fast and fully-mergeable quantile sketch with relative-error guarantees</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Masson:Charles.html">Charles Masson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rim:Jee_E=.html">Jee E. Rim</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lee:Homin_K=.html">Homin K. Lee</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10693">PDF</a><br/><b>Abstract: </b>Summary statistics such as the mean and variance are easily maintained for
large, distributed data streams, but order statistics (i.e., sample quantiles)
can only be approximately summarized. There is extensive literature on
maintaining quantile sketches where the emphasis has been on bounding the rank
error of the sketch while using little memory. Unfortunately, rank error
guarantees do not preclude arbitrarily large relative errors, and this often
occurs in practice when the data is heavily skewed. Given the distributed
nature of contemporary large-scale systems, another crucial property for
quantile sketches is mergeablility, i.e., several combined sketches must be as
accurate as a single sketch of the same data. We present the first
fully-mergeable, relative-error quantile sketching algorithm with formal
guarantees. The sketch is extremely fast and accurate, and is currently being
used by Datadog at a wide-scale.
</p></div>
    </summary>
    <updated>2019-08-29T23:33:54Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10644</id>
    <link href="http://arxiv.org/abs/1908.10644" rel="alternate" type="text/html"/>
    <title>Bloom filter variants for multiple sets: a comparative assessment</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Calderoni:Luca.html">Luca Calderoni</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Maio:Dario.html">Dario Maio</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Palmieri:Paolo.html">Paolo Palmieri</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10644">PDF</a><br/><b>Abstract: </b>In this paper we compare two probabilistic data structures for association
queries derived from the well-known Bloom filter: the shifting Bloom filter
(ShBF), and the spatial Bloom filter (SBF). With respect to the original data
structure, both variants add the ability to store multiple subsets in the same
filter, using different strategies. We analyse the performance of the two data
structures with respect to false positive probability, and the inter-set error
probability (the probability for an element in the set of being recognised as
belonging to the wrong subset). As part of our analysis, we extended the
functionality of the shifting Bloom filter, optimising the filter for any
non-trivial number of subsets. We propose a new generalised ShBF definition
with applications outside of our specific domain, and present new probability
formulas. Results of the comparison show that the ShBF provides better space
efficiency, but at a significantly higher computational cost than the SBF.
</p></div>
    </summary>
    <updated>2019-08-29T23:33:15Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10583</id>
    <link href="http://arxiv.org/abs/1908.10583" rel="alternate" type="text/html"/>
    <title>Efficient Algorithms for Approximate Single-Source Personalized PageRank Queries</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Sibo.html">Sibo Wang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yang:Renchi.html">Renchi Yang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Runhui.html">Runhui Wang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xiao:Xiaokui.html">Xiaokui Xiao</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wei:Zhewei.html">Zhewei Wei</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Wenqing.html">Wenqing Lin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yang:Yin.html">Yin Yang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tang:Nan.html">Nan Tang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10583">PDF</a><br/><b>Abstract: </b>Given a graph $G$, a source node $s$ and a target node $t$, the personalized
PageRank (PPR) of $t$ with respect to $s$ is the probability that a random walk
starting from $s$ terminates at $t$. An important variant of the PPR query is
single-source PPR (SSPPR), which enumerates all nodes in $G$, and returns the
top-$k$ nodes with the highest PPR values with respect to a given source $s$.
PPR in general and SSPPR in particular have important applications in web
search and social networks, e.g., in Twitter's Who-To-Follow recommendation
service. However, PPR computation is known to be expensive on large graphs, and
resistant to indexing. Consequently, previous solutions either use heuristics,
which do not guarantee result quality, or rely on the strong computing power of
modern data centers, which is costly.
</p>
<p>Motivated by this, we propose effective index-free and index-based algorithms
for approximate PPR processing, with rigorous guarantees on result quality. We
first present FORA, an approximate SSPPR solution that combines two existing
methods Forward Push (which is fast but does not guarantee quality) and Monte
Carlo Random Walk (accurate but slow) in a simple and yet non-trivial way,
leading to both high accuracy and efficiency. Further, FORA includes a simple
and effective indexing scheme, as well as a module for top-$k$ selection with
high pruning power. Extensive experiments demonstrate that the proposed
solutions are orders of magnitude more efficient than their respective
competitors. Notably, on a billion-edge Twitter dataset, FORA answers a top-500
approximate SSPPR query within 1 second, using a single commodity server.
</p></div>
    </summary>
    <updated>2019-08-29T23:38:40Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10561</id>
    <link href="http://arxiv.org/abs/1908.10561" rel="alternate" type="text/html"/>
    <title>One-Exact Approximate Pareto Sets</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Herzel:Arne.html">Arne Herzel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bazgan:Cristina.html">Cristina Bazgan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Ruzika:Stefan.html">Stefan Ruzika</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Thielen:Clemens.html">Clemens Thielen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vanderpooten:Daniel.html">Daniel Vanderpooten</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10561">PDF</a><br/><b>Abstract: </b>Papadimitriou and Yannakakis show that the polynomial-time solvability of a
certain singleobjective problem determines the class of multiobjective
optimization problems that admit a polynomial-time computable $(1+\varepsilon,
\dots , 1+\varepsilon)$-approximate Pareto set (also called an
$\varepsilon$-Pareto set). Similarly, in this article, we characterize the
class of problems having a polynomial-time computable approximate
$\varepsilon$-Pareto set that is exact in one objective by the efficient
solvability of an appropriate singleobjective problem. This class includes
important problems such as multiobjective shortest path and spanning tree, and
the approximation guarantee we provide is, in general, best possible.
Furthermore, for biobjective problems from this class, we provide an algorithm
that computes a one-exact $\varepsilon$-Pareto set of cardinality at most twice
the cardinality of a smallest such set and show that this factor of 2 is best
possible. For three or more objective functions, however, we prove that no
constant-factor approximation on the size of the set can be obtained
efficiently.
</p></div>
    </summary>
    <updated>2019-08-29T23:36:43Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10550</id>
    <link href="http://arxiv.org/abs/1908.10550" rel="alternate" type="text/html"/>
    <title>Streaming and Batch Algorithms for Truss Decomposition</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jakkula:Venkata_Rohit.html">Venkata Rohit Jakkula</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Karypis:George.html">George Karypis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10550">PDF</a><br/><b>Abstract: </b>Truss decomposition is a method used to analyze large sparse graphs in order
to identify successively better connected subgraphs. Since in many domains the
underlying graph changes over time, its associated truss decomposition needs to
be updated as well. This work focuses on the problem of incrementally updating
an existing truss decomposition and makes the following three significant
contributions. First, it presents a theory that identifies how the truss
decomposition can change as new edges get added. Second, it develops an
efficient incremental algorithm that incorporates various optimizations to
update the truss decomposition after every edge addition. These optimizations
are designed to reduce the number of edges that are explored by the algorithm.
Third, it extends this algorithm to batch updates (i.e., where the truss
decomposition needs to be updated after a set of edges are added), which
reduces the overall computations that need to be performed. We evaluated the
performance of our algorithms on real-world datasets. Our incremental algorithm
achieves over 250000x average speedup for inserting an edge in a graph with 10
million edges relative to the non-incremental algorithm. Further, our
experiments on batch updates show that our batch algorithm consistently
performs better than the incremental algorithm.
</p></div>
    </summary>
    <updated>2019-08-29T23:34:09Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10410</id>
    <link href="http://arxiv.org/abs/1908.10410" rel="alternate" type="text/html"/>
    <title>Visualization of Very Large High-Dimensional Data Sets as Minimum Spanning Trees</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Probst:Daniel.html">Daniel Probst</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Reymond:Jean=Louis.html">Jean-Louis Reymond</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10410">PDF</a><br/><b>Abstract: </b>Here, we introduce a new data visualization and exploration method, TMAP
(tree-map), which exploits locality sensitive hashing, Kruskal's
minimum-spanning-tree algorithm, and a multilevel multipole-based graph layout
algorithm to represent large and high dimensional data sets as a tree
structure, which is readily understandable and explorable. Compared to other
data visualization methods such as t-SNE or UMAP, TMAP increases the size of
data sets that can be visualized due to its significantly lower memory
requirements and running time and should find broad applicability in the age of
big data. We exemplify TMAP in the area of cheminformatics with interactive
maps for 1.16 million drug-like molecules from ChEMBL, 10.1 million small
molecule fragments from FDB17, and 131 thousand 3D- structures of biomolecules
from the PDB Databank, and to visualize data from literature (GUTENBERG data
set), cancer biology (PANSCAN data set) and particle physics (MiniBooNE data
set). TMAP is available as a Python package. Installation, usage instructions
and application examples can be found at <a href="http://tmap.gdb.tools.">this http URL</a>
</p></div>
    </summary>
    <updated>2019-08-29T23:40:39Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1908.10388</id>
    <link href="http://arxiv.org/abs/1908.10388" rel="alternate" type="text/html"/>
    <title>Singletons for Simpletons: Revisiting Windowed Backoff using Chernoff Bounds</title>
    <feedworld_mtime>1567036800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhou:Qian_M=.html">Qian M. Zhou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Calvert:Aiden.html">Aiden Calvert</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Young:Maxwell.html">Maxwell Young</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1908.10388">PDF</a><br/><b>Abstract: </b>For the well-known problem of balls dropped uniformly at random into bins,
the number of singletons --- those bins with a single ball --- is important to
the analysis of backoff algorithms. Existing arguments employ advanced tools to
obtain concentration bounds. Here we show that standard Chernoff bounds can be
used instead, and the simplicity of this approach is illustrated by
re-analyzing several fundamental backoff algorithms.
</p></div>
    </summary>
    <updated>2019-08-29T23:36:27Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-08-29T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3416</id>
    <link href="https://agtb.wordpress.com/2019/08/27/gt-postdoc-positions-in-the-technion/" rel="alternate" type="text/html"/>
    <title>GT postdoc positions in the Technion</title>
    <summary>The Strong Game Theory (incl. AGT) Group at the Technion (in Haifa, Israel) is inviting applications for fully funded postdoctoral positions in Game Theory (broadly defined). Advertisements</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p style="font-weight: 400;">The Strong <a href="https://gametheory.net.technion.ac.il/">Game Theory (incl. AGT) Group at the Technion</a> (in Haifa, Israel) is inviting applications for <a href="https://gametheory.net.technion.ac.il/post-doc-positions/">fully funded postdoctoral positions in Game Theory (broadly defined)</a>.</p></div>
    </content>
    <updated>2019-08-27T19:16:58Z</updated>
    <published>2019-08-27T19:16:58Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Noam Nisan</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-08-30T14:20:34Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/08/27/congratulations-dr-besa</id>
    <link href="https://11011110.github.io/blog/2019/08/27/congratulations-dr-besa.html" rel="alternate" type="text/html"/>
    <title>Congratulations, Dr. Besa!</title>
    <summary>Juan Besa’s successful dissertation defense was last Thursday, but I’ve been holding off posting about it here because one of his committee members took ill and couldn’t sign off on it until today.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="http://sites.uci.edu/juanbesa/">Juan Besa’s</a> successful dissertation defense was last Thursday, but I’ve been holding off posting about it here because one of his committee members took ill and couldn’t sign off on it until today.</p>

<p>Juan started his graduate work in embedded systems, but for the last several years he has been one of the theory students at UCI, advised by Mike Goodrich. <a href="https://www.ics.uci.edu/~eppstein/pubs/a-besa.html">My joint papers with him</a> have included <a href="https://11011110.github.io/blog/2016/09/16/directing-traffic.html">algorithms for scheduling traffic signals to allow groups of vehicles to move through them quickly</a> and <a href="https://11011110.github.io/blog/2018/05/09/sorting-when-sorted.html">maintaining an approximately sorted list</a> of items whose sorted order is changing dynamically in a context where comparisons are expensive.</p>

<p>He also has papers on which I was not involved, on chess knights’ tours with few crossings or bends (mentioned briefly with links <a href="https://11011110.github.io/blog/2019/01/31/linkage.html">here</a>), <a href="https://arxiv.org/abs/1907.01630">embedding planar digraphs so each vertex has few alternations between incoming and outgoing edges</a> (to appear at ESA), and another one on low-width tree drawing that has yet to appear publicly as a paper but forms part of his dissertation.</p>

<p>Juan has dual Chilean and Spanish citizenship, and (having the usual double-barreled Spanish surname “Besa Vial”) had to deal with the difficulties of getting that name format understood in non-Spanish-speaking countries; he ended up choosing to truncate it to “Besa” in his recent publications. He is heading to England to work at a machine learning company there. With Brexit coming up quickly, I worry about how that will work out, but I hope it does work well for him.</p>

<p>Congratulations, Juan!</p>

<p>(<a href="https://mathstodon.xyz/@11011110/102692015309277308">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2019-08-27T18:11:00Z</updated>
    <published>2019-08-27T18:11:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-08-30T03:55:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3409</id>
    <link href="https://agtb.wordpress.com/2019/08/27/ec-2020-in-budapest/" rel="alternate" type="text/html"/>
    <title>EC 2020 in Budapest</title>
    <summary>The Twenty-First ACM Conference on Economics and Computation (EC’20) will be held on July 13-17, 2020 in Budapest, Hungary.  The conference is co-located with the Sixth World Congress of the Game Theory Society. The call for papers is now out. EC’20 has four technical tracks. In contrast to previous editions of EC, the tracks differ by the […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The <a href="http://ec20.sigecom.org/">Twenty-First ACM Conference on Economics and Computation (EC’20)</a> will be held on July 13-17, 2020 in Budapest, Hungary.  The conference is co-located with the<a href="http://gametheorysociety.org/6th-world-congress-of-the-game-theory-society-in-budapest-july-13-17-2020/"> Sixth World Congress of the Game Theory Society</a>.</p>
<p>The <a href="http://ec20.sigecom.org/call-for-submissions/papers/">call for papers</a> is now out.</p>
<blockquote><p>EC’20 has four technical tracks. <strong>In contrast to previous editions of EC, the tracks differ by the types of contributions they emphasize</strong><strong>;</strong> they are orthogonal to content areas. Papers submitted to each track will be evaluated primarily according to the criteria described below.</p>
<ul>
<li><strong>Theory: </strong>Typical papers in this track make progress on existing theoretical problems, propose new ones, or introduce significant new techniques that could be applied more broadly.</li>
<li><strong>Applied Modeling:</strong> Typical papers in this track propose and analyze novel models that capture real-world phenomena or provide fresh perspectives on previously studied applied problems.</li>
<li><strong>AI and Computation: </strong>Typical papers in this track rely on computer-aided techniques to tackle complex problems that were previously beyond reach, or develop new such techniques</li>
<li><strong>Empirics: </strong>Typical papers in this track draw significant insights from real or synthetic data, through access to new data sources or experiments, or through novel analysis of existing data sources.</li>
</ul>
</blockquote></div>
    </content>
    <updated>2019-08-27T18:07:24Z</updated>
    <published>2019-08-27T18:07:24Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Noam Nisan</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-08-30T14:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://ptreview.sublinear.info/?p=1172</id>
    <link href="https://ptreview.sublinear.info/?p=1172" rel="alternate" type="text/html"/>
    <title>Open Problems From the Workshop on Data Summarization and the Workshop on Local Algorithms</title>
    <summary>A blast from the (recent) past: the open problems from the Workshop on Data Summarization held in March 2018 in the University of Warwick have been posted online, and are available here. Fast-forward to this summer: the recently concluded 3rd Workshop on Local Algorithms, which took place last month at ETH Zurich, featured an open […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>A blast from the (recent) past: the open problems from the <a href="https://warwick.ac.uk/fac/sci/dcs/research/focs/conf2017/">Workshop on Data Summarization</a> held in March 2018 in the University of Warwick have been posted online, and are available <a href="https://sublinear.info/index.php?title=Workshops:Warwick_2018">here</a>.</p>



<p>Fast-forward to this summer: the recently concluded <a href="https://people.inf.ethz.ch/gmohsen/WOLA19/">3<sup>rd</sup> Workshop on Local Algorithms</a>, which took place last month at ETH Zurich, featured an open problems session. The list of open problems can be found in this <a href="https://sublinear.info/index.php?title=Workshops:WOLA_2019">link</a>, or <a href="https://people.inf.ethz.ch/gmohsen/WOLA19/Slides/Open.pdf">here</a> for a PDF version.</p></div>
    </content>
    <updated>2019-08-26T22:09:27Z</updated>
    <published>2019-08-26T22:09:27Z</published>
    <category term="Conference reports"/>
    <category term="Open problem"/>
    <author>
      <name>Clement Canonne</name>
    </author>
    <source>
      <id>https://ptreview.sublinear.info</id>
      <link href="https://ptreview.sublinear.info/?feed=rss2" rel="self" type="application/atom+xml"/>
      <link href="https://ptreview.sublinear.info" rel="alternate" type="text/html"/>
      <subtitle>The latest in property testing and sublinear time algorithms</subtitle>
      <title>Property Testing Review</title>
      <updated>2019-08-29T23:42:45Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16196</id>
    <link href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/" rel="alternate" type="text/html"/>
    <title>A Matroid-Quantum Connection</title>
    <summary>With tighter links between notions of rank? Composite of src1, src2 (our congrats) James Oxley and Geoff Whittle are mathematicians at LSU and Victoria University (Wellington, New Zealand), respectively. They have written many joint papers on matroid theory, but none on quantum computing. Today we observe that they really have indirectly written a paper on […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>With tighter links between notions of rank?</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/oxleywhittle/" rel="attachment wp-att-16198"><img alt="" class="alignright wp-image-16198" height="145" src="https://rjlipton.files.wordpress.com/2019/08/oxleywhittle.png?w=218&amp;h=145" width="218"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Composite of <a href="https://www.math.lsu.edu/conferences/oxley65">src1</a>, <a href="https://nzmathsoc.org.nz/downloads/profiles/NZMSprofile84_Geoff_Whittle.pdf?t=1263006137">src2</a> (our congrats)</font></td>
</tr>
</tbody>
</table>
<p>
James Oxley and Geoff Whittle are mathematicians at LSU and Victoria University (Wellington, New Zealand), respectively. They have written many joint papers on matroid theory, but none on quantum computing.</p>
<p>
Today we observe that they really have <i>indirectly</i> written a paper on quantum computing.</p>
<p><span id="more-16196"/></p>
<p>
Their <a href="http://homepages.mcs.vuw.ac.nz/~whittle/pubs/Tutte_invariants_of_2-polymatroids.pdf">paper</a>, “A Characterization of Tutte Invariants of 2-Polymatroids,” has implications for quantum complexity theory. It introduced a polynomial <img alt="{S_G(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v)}"/> where <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> is a graph and <img alt="{u,v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%2Cv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u,v}"/> are numbers. Like many polynomials defined on graphs this one is in general hard to compute—it is <img alt="{\mathsf{\#P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{\#P}}"/>-hard, so if it is polynomial time computable, then surprising stuff happens. </p>
<p>
The same paper observes that <img alt="{S_G(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v)}"/> is easy to compute when 	</p>
<p align="center"><img alt="\displaystyle  uv = 1 \text{ for rational } u,v. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++uv+%3D+1+%5Ctext%7B+for+rational+%7D+u%2Cv.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  uv = 1 \text{ for rational } u,v. "/></p>
<p>However, a 2006 <a href="https://bura.brunel.ac.uk/bitstream/2438/818/1/polymatroid.pdf">paper</a> by Steve Noble proves that <em>all</em> other rational cases are <img alt="{\mathsf{\#P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{\#P}}"/>-hard. Our work finds easy cases in another family where <img alt="{v = \pm \sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv+%3D+%5Cpm+%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v = \pm \sqrt{2}i}"/> and <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> is a rational multiple of <img alt="{\sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sqrt{2}i}"/>. This result goes through quantum complexity theory. </p>
<p>
It is interesting to note that quantum computations welcome complex numbers such as <img alt="{\sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sqrt{2}i}"/>. In mathematics insights to behavior of real functions are often found when we extend them to the complex functions. A beautiful example to compare is that the behavior of 	</p>
<p align="center"><img alt="\displaystyle  f(x) = \frac{1}{1 + x^{2}} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%28x%29+%3D+%5Cfrac%7B1%7D%7B1+%2B+x%5E%7B2%7D%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  f(x) = \frac{1}{1 + x^{2}} "/></p>
<p>is best understood by noting that <img alt="{1+x^{2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2Bx%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1+x^{2}}"/> can be zero at <img alt="{x=i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%3Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x=i}"/>. </p>
<p>
</p><p/><h2> Matroids and Polymatroids </h2><p/>
<p/><p>
In order to best understand the above results it is helpful to look at matroids and generalizations. Matroids are a bit scary, since they seem quite abstract. But that is wrong. The matroid concept is a natural generalization of the notion of rank in an ordinary vector space. </p>
<p>
Let’s take a look. A <em>matroid</em> is defined by a set <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> and a function <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f}"/> from finite subsets of <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> to <img alt="{\mathbb{N}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BN%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathbb{N}}"/> that obeys the following rules:</p>
<ol>
<li>
<img alt="{f(\emptyset) = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28%5Cemptyset%29+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(\emptyset) = 0}"/>; <p/>
</li><li>
for all <img alt="{a \in U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba+%5Cin+U%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a \in U}"/>, <img alt="{f(\{a\}) \leq 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28%5C%7Ba%5C%7D%29+%5Cleq+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(\{a\}) \leq 1}"/>; <p/>
</li><li>
if <img alt="{A \subseteq B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%5Csubseteq+B%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A \subseteq B}"/> then <img alt="{f(A) \leq f(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28A%29+%5Cleq+f%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(A) \leq f(B)}"/>; and <p/>
</li><li>
if <img alt="{A \subseteq B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%5Csubseteq+B%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A \subseteq B}"/> and <img alt="{c \notin B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc+%5Cnotin+B%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c \notin B}"/> then <img alt="{f(A \cup \{c\}) - f(A) \geq f(B \cup \{c\}) - f(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28A+%5Ccup+%5C%7Bc%5C%7D%29+-+f%28A%29+%5Cgeq+f%28B+%5Ccup+%5C%7Bc%5C%7D%29+-+f%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(A \cup \{c\}) - f(A) \geq f(B \cup \{c\}) - f(B)}"/>.
</li></ol>
<p>
The notion of <em>rank</em> in an ordinary vector space obeys these axioms. The rules are: </p>
<ol>
<li>
The empty set has rank <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>; <p/>
</li><li>
Each vector has rank at most <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>; <p/>
</li><li>
The rank of a set of vectors can increase only by adding more vectors; <p/>
</li><li>
Suppose that adding <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> to a set <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> increases the rank. Then <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> also increases the rank of any subset of <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/>. Or if <img alt="{c}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{c}"/> is independent of a set of vectors <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/>, then it is independent of any subset of <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/>.
</li></ol>
<p>
The definition of a <em>polymatroid</em> simply wipes out rule 2. OK, a <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-polymatroid replaces it by the rule that for all singleton sets <img alt="{\{a\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7Ba%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{a\}}"/> have <img alt="{f(\{a\}) \leq k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28%5C%7Ba%5C%7D%29+%5Cleq+k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(\{a\}) \leq k}"/>. An important kind of 2-polymatroid springs from the following idea:</p>
<blockquote><p><b> </b> <em> The “<img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{f}"/>-rank” of a subset <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/> of the <b>edges</b> in a graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> is the number of vertices collectively touched by edges in <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/>. </em>
</p></blockquote>
<p/><p>
In a simple undirected graph, every edge has <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f}"/>-rank 2. In graphs with self-loops, however, the loops have rank <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>. We can also allow the universe <img alt="{U}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BU%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{U}"/> to include members of <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f}"/>-rank <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>. Those are visualized as loops without a vertex and called <em>circles</em>. We could also visualize edges of rank <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> that stick out from a vertex <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> into empty space, but those are formally the same as loops at <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/>. This defines a <em>graphic(al) 2-polymatroid</em> <img alt="{M = (U,f)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM+%3D+%28U%2Cf%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M = (U,f)}"/>. </p>
<p>
The theory of polymatroids ignores the notion of “vertex” apart from the definition of the rank function <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f}"/>. Hence all graphs composed of <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> isolated vertices define the empty 2-polymatroid. To preserve the distinction, we define an <em>m-graph</em> to be a graph with circles allowed. The empty m-graph is denoted by <img alt="{\oslash}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Coslash%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\oslash}"/> and called a “wisp.” Every m-graph specializes to a unique graphical polymatroid but we can include isolated nodes when thinking of it as a graph (plus circles).</p>
<p>
</p><p/><h2> Explosion and Contraction Again </h2><p/>
<p/><p>
We revisit the definition of “exploding” an edge <img alt="{e = (u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be+%3D+%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e = (u,v)}"/> in a graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> from the previous <a href="https://rjlipton.wordpress.com/2019/06/17/contraction-and-explosion/">post</a> in this series:</p>
<ul>
<li>
If there are an odd number of edges incident only to <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and/or <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/>, then <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> become a circle and a wisp, else they become two wisps. <p/>
</li><li>
Any other edge incident to <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> or <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> from another vertex <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/> becomes a loop at <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/>.
</li></ul>
<p>
If we ignore vertices, then the rank function <img alt="{f'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f'}"/> of the resulting m-graph <img alt="{G'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G'}"/> is such that for all subsets <img alt="{A'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A'}"/> of its edge set <img alt="{E' = E \setminus \{e\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%27+%3D+E+%5Csetminus+%5C%7Be%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E' = E \setminus \{e\}}"/>, <a name="contract"/></p><a name="contract">
<p align="center"><img alt="\displaystyle  f'(A) = f(A \cup \{e\}) - f(\{e\}). \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%27%28A%29+%3D+f%28A+%5Ccup+%5C%7Be%5C%7D%29+-+f%28%5C%7Be%5C%7D%29.+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  f'(A) = f(A \cup \{e\}) - f(\{e\}). \ \ \ \ \ (1)"/></p>
</a><p><a name="contract"/> One can verify that the “explosion” description obeys (<a href="https://rjlipton.wordpress.com/feed/#contract">1</a>). Glancing at our picture helps—we have varied the one in the previous post by showing how one exploded node becomes a wisp while the loop at the other leaves a circle:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2019/08/26/a-matroid-quantum-connection/explosion3/" rel="attachment wp-att-16200"><img alt="" class="aligncenter size-medium wp-image-16200" height="204" src="https://rjlipton.files.wordpress.com/2019/08/explosion3.png?w=300&amp;h=204" width="300"/></a></p>
<p/><p><br/>
The equation (<a href="https://rjlipton.wordpress.com/feed/#contract">1</a>), however, is more fundamentally natural. The simple extension </p>
<p align="center"><img alt="\displaystyle  f'(A) = f(A \cup T) - f(T) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%27%28A%29+%3D+f%28A+%5Ccup+T%29+-+f%28T%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  f'(A) = f(A \cup T) - f(T) "/></p>
<p>
defines the <em>matroid contraction</em> by any subset <img alt="{T}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T}"/> of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/>. When <img alt="{T = \{e\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT+%3D+%5C%7Be%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T = \{e\}}"/>, it supersedes the graph-theory notion of contraction <img alt="{G/e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%2Fe%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G/e}"/> in matroid contexts. Since we are talking about both, we will write <img alt="{G\backslash\!\backslash e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G\backslash\!\backslash e}"/> for the matroid version. The <img alt="{\backslash\!\backslash}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbackslash%5C%21%5Cbackslash%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\backslash\!\backslash}"/> notation conveys that the edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> gets deleted emphatically.</p>
<p>
</p><p/><h2> The Polynomial <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> </h2><p/>
<p/><p>
In a previous <a href="https://rjlipton.wordpress.com/2019/06/17/contraction-and-explosion/">post</a> we derived a recurrence for the <em>amplitude</em> <img alt="{a(G)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%28G%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a(G)}"/> in terms of explosion. The presence of circles and use of the function <img alt="{f(e)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e)}"/> now allows us to write it as: </p>
<p align="center"><img alt="\displaystyle  a(G) = a(G \setminus e) - \frac{1}{f(e)} a(G \backslash\!\backslash e). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a%28G%29+%3D+a%28G+%5Csetminus+e%29+-+%5Cfrac%7B1%7D%7Bf%28e%29%7D+a%28G+%5Cbackslash%5C%21%5Cbackslash+e%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  a(G) = a(G \setminus e) - \frac{1}{f(e)} a(G \backslash\!\backslash e). "/></p>
<p>We can omit the “<img alt="{(-1)^r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28-1%29%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(-1)^r}"/>” from the previous version because the circles keep track of this. The rule is valid even when <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a self-loop, using <img alt="{f(e) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 1}"/>. The following is thus a complete basis:</p>
<ul>
<li>
For a wisp <img alt="{\oslash}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Coslash%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\oslash}"/> or isolated node <img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/>, <img alt="{a(\oslash) = a(\bullet) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%28%5Coslash%29+%3D+a%28%5Cbullet%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a(\oslash) = a(\bullet) = 1}"/>. <p/>
</li><li>
For a circle <img alt="{\bigcirc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbigcirc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bigcirc}"/>, <img alt="{a(\bigcirc) = -1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%28%5Cbigcirc%29+%3D+-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a(\bigcirc) = -1}"/>. <p/>
</li><li>
If <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> is the disjoint union of <img alt="{G_1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_1}"/> and <img alt="{G_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_2}"/>, then <img alt="{a(G) = a(G_1)a(G_2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%28G%29+%3D+a%28G_1%29a%28G_2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a(G) = a(G_1)a(G_2)}"/>.
</li></ul>
<p>
To get more mileage out of this, we want to emulate William Tutte’s idea and define a polynomial <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> whose evaluation at <img alt="{x = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x = 1}"/> gives <img alt="{a(G)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%28G%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a(G)}"/>, and whose other evaluations may give more information. Without further ado:</p>
<blockquote><p><b>Definition 1</b> <em> For an m-graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/>, define its <b>amplitude polynomial</b> <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> inductively by: </em></p><em>
<ul>
<li>
<img alt="{Q_G(x) = (-1)^k x^{\ell}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29+%3D+%28-1%29%5Ek+x%5E%7B%5Cell%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Q_G(x) = (-1)^k x^{\ell}}"/>, if <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> consists of <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\ell}"/> isolated nodes, <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{k}"/> circles, and any number of wisps. <p/>
</li><li>
For any edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{e}"/>, <a name="recurse"><p/>
<p align="center"><img alt="\displaystyle  Q_G(x) = Q_{G\setminus e} - \frac{1}{f(e)} Q_{G\backslash\!\backslash e}. \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Q_G%28x%29+%3D+Q_%7BG%5Csetminus+e%7D+-+%5Cfrac%7B1%7D%7Bf%28e%29%7D+Q_%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D.+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  Q_G(x) = Q_{G\setminus e} - \frac{1}{f(e)} Q_{G\backslash\!\backslash e}. \ \ \ \ \ (2)"/></p>
</a><p><a name="recurse"/>
</p></li></ul>
</em><p><em/>
</p></blockquote>
<p/><p>
Recall <img alt="{f(e) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 1}"/> if <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a loop, else <img alt="{f(e) = 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 2}"/>. When <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> consists of a single node with a loop, the recursion gives <img alt="{Q_{loop} = x - 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_%7Bloop%7D+%3D+x+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_{loop} = x - 1}"/>. When it is a single edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> between two nodes, we get <img alt="{Q_e(x) = x^2 - \frac{1}{2}.}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_e%28x%29+%3D+x%5E2+-+%5Cfrac%7B1%7D%7B2%7D.%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_e(x) = x^2 - \frac{1}{2}.}"/></p>
<p>
If we have a single node <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> with <em>two</em> loops, something portentous happens. Exploding one of the loops <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> leaves a circle. Removing <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> still leaves one loop. So we get: </p>
<p align="center"><img alt="\displaystyle  Q_{G}(x) = Q_{loop}(x) - Q_{\bigcirc}(x) = x - 1 - (-1) = x. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Q_%7BG%7D%28x%29+%3D+Q_%7Bloop%7D%28x%29+-+Q_%7B%5Cbigcirc%7D%28x%29+%3D+x+-+1+-+%28-1%29+%3D+x.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  Q_{G}(x) = Q_{loop}(x) - Q_{\bigcirc}(x) = x - 1 - (-1) = x. "/></p>
<p>This agrees with the value on one isolated node. Similarly, if <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> has just a double edge between two nodes <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/>, then one edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> becomes a circle upon exploding the other edge, so recursing on the other edge makes </p>
<p align="center"><img alt="\displaystyle  Q_{G}(x) = Q_e(x) - \frac{1}{2}Q_{\bigcirc}(x) = x^2 - \frac{1}{2} + \frac{1}{2} = x^2. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Q_%7BG%7D%28x%29+%3D+Q_e%28x%29+-+%5Cfrac%7B1%7D%7B2%7DQ_%7B%5Cbigcirc%7D%28x%29+%3D+x%5E2+-+%5Cfrac%7B1%7D%7B2%7D+%2B+%5Cfrac%7B1%7D%7B2%7D+%3D+x%5E2.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  Q_{G}(x) = Q_e(x) - \frac{1}{2}Q_{\bigcirc}(x) = x^2 - \frac{1}{2} + \frac{1}{2} = x^2. "/></p>
<p>Thus the double edge gives the same result as having two isolated nodes. The upshot is that equation (<a href="https://rjlipton.wordpress.com/feed/#recurse">2</a>) naturally treats edges modulo two. We can recurse on a <em>non</em>-edge as if it were a double-edge, and the circle left by the explosion (i.e., by the matroid contraction) becomes a <img alt="{-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{-1}"/> multiplier on the entire remainder of that branch of the recursion. The <em>circle</em> thus becomes a placeholder for calculating phase flips and cancellations, which is why we believe the matroid notions are useful in analyzing quantum processes.</p>
<p>
It may not be obvious, however, that <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> is well-defined when <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> has more than one edge. That is, does it come out the same for any order of choosing edges <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> for the recursion? We will prove this by connecting <img alt="{Q_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G}"/> to the polynomial <img alt="{S_G(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v)}"/> mentioned above.</p>
<p>
</p><p/><h2> Relation to the Rank-Generating Function <img alt="{S_G(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(x,y)}"/> </h2><p/>
<p/><p>
The original non-recursive definition of the <em>rank-generating function</em> of a graphical 2-polymatroid <img alt="{G = (E,f)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%3D+%28E%2Cf%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G = (E,f)}"/> is: <a name="rankgen"/></p><a name="rankgen">
<p align="center"><img alt="\displaystyle  S_G(u,v) = \sum_{A \subseteq E} u^{f(E) - f(A)} v^{2|A| - f(A)}. \ \ \ \ \ (3)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S_G%28u%2Cv%29+%3D+%5Csum_%7BA+%5Csubseteq+E%7D+u%5E%7Bf%28E%29+-+f%28A%29%7D+v%5E%7B2%7CA%7C+-+f%28A%29%7D.+%5C+%5C+%5C+%5C+%5C+%283%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S_G(u,v) = \sum_{A \subseteq E} u^{f(E) - f(A)} v^{2|A| - f(A)}. \ \ \ \ \ (3)"/></p>
</a><p><a name="rankgen"/> We compute some basic cases:</p>
<ol>
<li>
For the empty graph <img alt="{\oslash}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Coslash%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\oslash}"/>, or any graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> with only isolated nodes, we have only the term <img alt="{A = E = \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+E+%3D+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = E = \emptyset}"/>, so <img alt="{S_G(u,v) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v) = 1}"/>. <p/>
</li><li>
For a circle <img alt="{\bigcirc}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbigcirc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bigcirc}"/>, we still have <img alt="{f(\bigcirc) = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28%5Cbigcirc%29+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(\bigcirc) = 0}"/> even though <img alt="{E \neq \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE+%5Cneq+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E \neq \emptyset}"/>. The term <img alt="{A = \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = \emptyset}"/> still gives <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/>, but <img alt="{A = E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = E}"/> now gives <img alt="{u^{0 - 0} v^{2 - 0} = v^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%5E%7B0+-+0%7D+v%5E%7B2+-+0%7D+%3D+v%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u^{0 - 0} v^{2 - 0} = v^2}"/>. Thus <img alt="{S_{\bigcirc}(u,v) = 1 + v^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7B%5Cbigcirc%7D%28u%2Cv%29+%3D+1+%2B+v%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_{\bigcirc}(u,v) = 1 + v^2}"/>. <p/>
</li><li>
For the graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> consisting loop at a single node, we have <img alt="{f(E) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E) = 1}"/>, so the term for <img alt="{A = \emptyset}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+%5Cemptyset%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = \emptyset}"/> becomes <img alt="{u^{1 - 0} v^{0 - 0} = u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%5E%7B1+-+0%7D+v%5E%7B0+-+0%7D+%3D+u%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u^{1 - 0} v^{0 - 0} = u}"/>. And the term for <img alt="{A = E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%3D+E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A = E}"/> is <img alt="{u^{1 - 1}v^{2 - 1} = v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%5E%7B1+-+1%7Dv%5E%7B2+-+1%7D+%3D+v%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u^{1 - 1}v^{2 - 1} = v}"/>. So <img alt="{S_G(u,v) = u + v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29+%3D+u+%2B+v%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v) = u + v}"/>. <p/>
</li><li>
For <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> with a single edge between two nodes, <img alt="{S_{G}(u,v) = u^{2 - 0}v^{0 - 0} + u^{2 - 2}v^{2 - 2} = u^2 + 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7BG%7D%28u%2Cv%29+%3D+u%5E%7B2+-+0%7Dv%5E%7B0+-+0%7D+%2B+u%5E%7B2+-+2%7Dv%5E%7B2+-+2%7D+%3D+u%5E2+%2B+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_{G}(u,v) = u^{2 - 0}v^{0 - 0} + u^{2 - 2}v^{2 - 2} = u^2 + 1}"/>.
</li></ol>
<p>
Note the symmetry in <img alt="{u}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{u}"/> and <img alt="{v}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{v}"/> between cases 2 and 4 in particular, which could be brought out more by discussing how (graphical poly-)matroids foster higher notions of <em>duality</em> than graphs do. Our theorem breaks this symmetry, but perhaps there is a deeper underlying law that would restore it:</p>
<blockquote><p><b>Theorem 2</b> <em> For any m-graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{G}"/> with <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{n}"/> nodes, of which <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{k}"/> are isolated, and all <img alt="{x \in \mathbb{C}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cin+%5Cmathbb%7BC%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x \in \mathbb{C}}"/>, taking <img alt="{\alpha = -\sqrt{2} i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha+%3D+-%5Csqrt%7B2%7D+i%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\alpha = -\sqrt{2} i}"/>, <a name="specialize"/></em></p><em><a name="specialize">
<p align="center"><img alt="\displaystyle  Q_G(x) = \left(\frac{1}{\alpha}\right)^n S_{G}(\alpha x, -\alpha)(\alpha x)^k. \ \ \ \ \ (4)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Q_G%28x%29+%3D+%5Cleft%28%5Cfrac%7B1%7D%7B%5Calpha%7D%5Cright%29%5En+S_%7BG%7D%28%5Calpha+x%2C+-%5Calpha%29%28%5Calpha+x%29%5Ek.+%5C+%5C+%5C+%5C+%5C+%284%29&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  Q_G(x) = \left(\frac{1}{\alpha}\right)^n S_{G}(\alpha x, -\alpha)(\alpha x)^k. \ \ \ \ \ (4)"/></p>
</a></em><p><em><a name="specialize"/> </em>
</p></blockquote>
<p/><p>
<em>Proof:</em>  Call <img alt="{R_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G(x)}"/> the right-hand side of (<a href="https://rjlipton.wordpress.com/feed/#specialize">4</a>). Note first that if <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> consists only of <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell}"/> isolated nodes then <img alt="{S_G(\cdot,\cdot) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28%5Ccdot%2C%5Ccdot%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(\cdot,\cdot) = 1}"/> so the right-hand side becomes </p>
<p align="center"><img alt="\displaystyle  \left(\frac{1}{\alpha}\right)^\ell (\alpha x)^\ell = x^\ell = Q_G(x). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28%5Cfrac%7B1%7D%7B%5Calpha%7D%5Cright%29%5E%5Cell+%28%5Calpha+x%29%5E%5Cell+%3D+x%5E%5Cell+%3D+Q_G%28x%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \left(\frac{1}{\alpha}\right)^\ell (\alpha x)^\ell = x^\ell = Q_G(x). "/></p>
<p>Now we verify the other base cases:</p>
<ol>
<li>
<img alt="{R_{\oslash}(x) = (1/\alpha)^0 \cdot 1 \cdot (\alpha x)^0 = 1 = Q_{\oslash}(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7B%5Coslash%7D%28x%29+%3D+%281%2F%5Calpha%29%5E0+%5Ccdot+1+%5Ccdot+%28%5Calpha+x%29%5E0+%3D+1+%3D+Q_%7B%5Coslash%7D%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{\oslash}(x) = (1/\alpha)^0 \cdot 1 \cdot (\alpha x)^0 = 1 = Q_{\oslash}(x)}"/>. <p/>
</li><li>
<img alt="{R_{\bigcirc} = 1 \cdot (1 + (-\alpha)^2)\cdot 1 = 1 - 2 = -1 = Q_{\bigcirc}(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7B%5Cbigcirc%7D+%3D+1+%5Ccdot+%281+%2B+%28-%5Calpha%29%5E2%29%5Ccdot+1+%3D+1+-+2+%3D+-1+%3D+Q_%7B%5Cbigcirc%7D%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{\bigcirc} = 1 \cdot (1 + (-\alpha)^2)\cdot 1 = 1 - 2 = -1 = Q_{\bigcirc}(x)}"/>. <p/>
</li><li>
<img alt="{R_{loop} = \frac{1}{\alpha} (\alpha x - \alpha) = x - 1 = Q_{loop}(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_%7Bloop%7D+%3D+%5Cfrac%7B1%7D%7B%5Calpha%7D+%28%5Calpha+x+-+%5Calpha%29+%3D+x+-+1+%3D+Q_%7Bloop%7D%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_{loop} = \frac{1}{\alpha} (\alpha x - \alpha) = x - 1 = Q_{loop}(x)}"/>. <p/>
</li><li>
For <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> with a single edge between two nodes, <img alt="{R_G(x) = (\frac{1}{\alpha}^2)((\alpha x)^2 + 1) = x^2 + \frac{1}{\alpha^2} = x^2 - \frac{1}{2} = Q_{G}(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%28x%29+%3D+%28%5Cfrac%7B1%7D%7B%5Calpha%7D%5E2%29%28%28%5Calpha+x%29%5E2+%2B+1%29+%3D+x%5E2+%2B+%5Cfrac%7B1%7D%7B%5Calpha%5E2%7D+%3D+x%5E2+-+%5Cfrac%7B1%7D%7B2%7D+%3D+Q_%7BG%7D%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G(x) = (\frac{1}{\alpha}^2)((\alpha x)^2 + 1) = x^2 + \frac{1}{\alpha^2} = x^2 - \frac{1}{2} = Q_{G}(x)}"/>.
</li></ol>
<p>
To verify the recursion, we note facts observed by Oxley and Whittle as consequences of (<a href="https://rjlipton.wordpress.com/feed/#rankgen">3</a>):</p>
<ul>
<li>
(a) If <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a loop at a vertex with other incident edges, so <img alt="{f(e) = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 1}"/> and <img alt="{f(E \setminus \{e\}) = f(E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E+%5Csetminus+%5C%7Be%5C%7D%29+%3D+f%28E%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E \setminus \{e\}) = f(E)}"/>, then <p/>
<p align="center"><img alt="\displaystyle  S_{G}(u,v) = S_{G \setminus e}(u,v) + vS_{G\backslash\!\backslash e}(u,v). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S_%7BG%7D%28u%2Cv%29+%3D+S_%7BG+%5Csetminus+e%7D%28u%2Cv%29+%2B+vS_%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D%28u%2Cv%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S_{G}(u,v) = S_{G \setminus e}(u,v) + vS_{G\backslash\!\backslash e}(u,v). "/></p>
</li><li>
(b) If <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is a <em>pendant edge</em>, i.e., between a node of degree 1 and a node of larger degree, so <img alt="{f(e) = 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 2}"/> and <img alt="{f(E \setminus \{e\}) = f(E) - 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E+%5Csetminus+%5C%7Be%5C%7D%29+%3D+f%28E%29+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E \setminus \{e\}) = f(E) - 1}"/>, then <p/>
<p align="center"><img alt="\displaystyle  S_{G}(u,v) = uS_{G \setminus e}(u,v) + S_{G\backslash\!\backslash e}(u,v). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S_%7BG%7D%28u%2Cv%29+%3D+uS_%7BG+%5Csetminus+e%7D%28u%2Cv%29+%2B+S_%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D%28u%2Cv%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S_{G}(u,v) = uS_{G \setminus e}(u,v) + S_{G\backslash\!\backslash e}(u,v). "/></p>
</li><li>
(c) If <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> is an edge between nodes of degree at least <img alt="{2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2}"/>, so <img alt="{f(e) = 2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28e%29+%3D+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(e) = 2}"/> and <img alt="{f(E \setminus \{e\}) = f(E)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E+%5Csetminus+%5C%7Be%5C%7D%29+%3D+f%28E%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E \setminus \{e\}) = f(E)}"/>, then <p/>
<p align="center"><img alt="\displaystyle  S_{G}(u,v) = S_{G \setminus e}(u,v) + S_{G\backslash\!\backslash e}(u,v). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++S_%7BG%7D%28u%2Cv%29+%3D+S_%7BG+%5Csetminus+e%7D%28u%2Cv%29+%2B+S_%7BG%5Cbackslash%5C%21%5Cbackslash+e%7D%28u%2Cv%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  S_{G}(u,v) = S_{G \setminus e}(u,v) + S_{G\backslash\!\backslash e}(u,v). "/></p>
</li></ul>
<p>
Every connected graph other than those we put in our basis has an edge <img alt="{e}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e}"/> that falls into one of these three cases. So we can prove (<a href="https://rjlipton.wordpress.com/feed/#specialize">4</a>) by induction on them. The details convey why we need to use the particular value <img alt="{\alpha = -\sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha+%3D+-%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha = -\sqrt{2}i}"/> but are otherwise straightforward and tedious, so we’ve put them in a longer PDF <a href="https://cse.buffalo.edu/~regan/GLL/wmatroids.pdf">version</a>. Since the equation (<a href="https://rjlipton.wordpress.com/feed/#rankgen">3</a>) for <img alt="{S_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G}"/> involves no recursion, this also proves that the recursive definition of <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> is confluent. <img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p>
Note how the sum in the case (c) echoes the sum defining the Tutte polynomial, but with “explosion” in place of ordinary graph contraction. A more salient difference is that whereas the Tutte polynomial is the same on all <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>-vertex trees, <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> differs on them. </p>
<p>
</p><p/><h2> What Does It All Mean? </h2><p/>
<p/><p>
As remarked in Noble’s paper, Oxley and Whittle noted the significance of a host of specializations of the <img alt="{S_G(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(u,v)}"/> polynomial. We suppose <img alt="{G }" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G }"/> has <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> nodes with <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell}"/> isolated, so <img alt="{f(E) = n - \ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28E%29+%3D+n+-+%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(E) = n - \ell}"/>, and we put <img alt="{m = |E|}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm+%3D+%7CE%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m = |E|}"/>. The first two presume <img alt="{\ell = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell = 0}"/>.</p>
<ol>
<li>
<img alt="{S_G(0,0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%280%2C0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(0,0)}"/> is the number of perfect matchings of <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. <p/>
</li><li>
<img alt="{S_G(0,1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%280%2C1%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(0,1)}"/> is the number of spanning subsets of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> (not necessarily spanning trees). <p/>
</li><li>
<img alt="{S_G(1,0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%281%2C0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(1,0)}"/> is the number of (partial) matchings of <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/>. <p/>
</li><li>
<img alt="{S_G(-u,-v) = (-1)^{n-\ell}S_G(u,v)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28-u%2C-v%29+%3D+%28-1%29%5E%7Bn-%5Cell%7DS_G%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(-u,-v) = (-1)^{n-\ell}S_G(u,v)}"/>. <p/>
</li><li>
<img alt="{S_G(\frac{1}{x},x) = (1 + x^2)^m x^{\ell-n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%28%5Cfrac%7B1%7D%7Bx%7D%2Cx%29+%3D+%281+%2B+x%5E2%29%5Em+x%5E%7B%5Cell-n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G(\frac{1}{x},x) = (1 + x^2)^m x^{\ell-n}}"/> (for <img alt="{x \neq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cneq+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x \neq 0}"/>). <p/>
</li><li>
The generating function <img alt="{\sum_{k \geq 0} m_k x^k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csum_%7Bk+%5Cgeq+0%7D+m_k+x%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sum_{k \geq 0} m_k x^k}"/> for the number <img alt="{m_k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm_k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m_k}"/> of matchings of size <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> equals <img alt="{x^{(n-\ell)/2}S_G(\frac{1}{\sqrt{x}},0)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5E%7B%28n-%5Cell%29%2F2%7DS_G%28%5Cfrac%7B1%7D%7B%5Csqrt%7Bx%7D%7D%2C0%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x^{(n-\ell)/2}S_G(\frac{1}{\sqrt{x}},0)}"/> (valid for real <img alt="{x \neq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cneq+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x \neq 0}"/>). <p/>
</li><li>
The generating function <img alt="{\sum_{k\geq 0} r_k x^k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csum_%7Bk%5Cgeq+0%7D+r_k+x%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sum_{k\geq 0} r_k x^k}"/> for the number <img alt="{r_k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br_k%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r_k}"/> of subsets of <img alt="{E}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BE%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{E}"/> spanning <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> vertices equals <img alt="{x^{n-\ell}S_G(\frac{1}{x},1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5E%7Bn-%5Cell%7DS_G%28%5Cfrac%7B1%7D%7Bx%7D%2C1%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x^{n-\ell}S_G(\frac{1}{x},1)}"/> (again valid for real <img alt="{x \neq 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%5Cneq+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x \neq 0}"/>).
</li></ol>
<p>
Also interesting is that if <img alt="{\ell = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell = 0}"/> and we delete each of the <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> edges independently with probability <img alt="{(1-p)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281-p%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(1-p)}"/>, then the probability that the deletions did not cause any isolated vertices is </p>
<p align="center"><img alt="\displaystyle  (1-p)^{m - n/2} p^{n/2} S_G(0,\sqrt{\frac{p}{1-p}}). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%281-p%29%5E%7Bm+-+n%2F2%7D+p%5E%7Bn%2F2%7D+S_G%280%2C%5Csqrt%7B%5Cfrac%7Bp%7D%7B1-p%7D%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  (1-p)^{m - n/2} p^{n/2} S_G(0,\sqrt{\frac{p}{1-p}}). "/></p>
<p>Of course, this is classical probability. What interests us here is the import of <img alt="{S_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_G}"/> for quantum amplitude and probability. We have already observed in <a href="https://rjlipton.wordpress.com/2019/06/04/a-quantum-connection-for-matrix-rank/">previous</a> <a href="https://rjlipton.wordpress.com/2019/06/10/net-zero-graphs/">posts</a> that <img alt="{Q_{G}(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_%7BG%7D%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_{G}(1)}"/> gives the amplitude for an outcome in a special kind of quantum circuit. This means that <img alt="{S_{G}(\alpha,-\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7BG%7D%28%5Calpha%2C-%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_{G}(\alpha,-\alpha)}"/> gives the same information, where <img alt="{\alpha^2 = -2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%5E2+%3D+-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha^2 = -2}"/>. </p>
<p>
We are curious about is the significance of <img alt="{S_{G}(\alpha x,-\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7BG%7D%28%5Calpha+x%2C-%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_{G}(\alpha x,-\alpha)}"/> for other values of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> besides <img alt="{x = 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x = 1}"/>. The complex value <img alt="{\alpha = -\sqrt{2}i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha+%3D+-%5Csqrt%7B2%7Di%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha = -\sqrt{2}i}"/> takes us outside the real-valued domain of Noble’s paper. His proof that most real cases are <img alt="{\mathsf{\#P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{\#P}}"/>-hard to compute does not extend because <img alt="{\alpha^2 = -2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Calpha%5E2+%3D+-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\alpha^2 = -2}"/>, which causes a denominator in his proof to vanish. Thus <img alt="{S_{G}(\alpha x,-\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BS_%7BG%7D%28%5Calpha+x%2C-%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{S_{G}(\alpha x,-\alpha)}"/> and hence <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> may be polynomial-time computable for various other real <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>.</p>
<p>
The specialization <img alt="{Q_G(x) = S_G(\alpha x, -\alpha)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29+%3D+S_G%28%5Calpha+x%2C+-%5Calpha%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x) = S_G(\alpha x, -\alpha)}"/> (times other easily-computed factors) does not seem to intersect with any of the above cases. Hence the field is wide open for finding new interpretations of it. Whatever we find, however, is bound to relate to the analysis of quantum circuits. It might help fulfill the aim in our <a href="https://rjlipton.wordpress.com/2019/06/10/net-zero-graphs/">post</a> drawing analogy to Gustav Kirchhoff’s laws for electrical circuits.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
How useful is the matroid-based framework for analyzing graph entities associated to quantum circuits? Can we say more about the significance of <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> for other particular values of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>?</p>
<p>
We had thought to imitate how the Tutte polynomial <img alt="{T(x,y)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BT%28x%2Cy%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{T(x,y)}"/> has base monomials <img alt="{x^q y^r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%5Eq+y%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x^q y^r}"/> for graphs composed of <img alt="{q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q}"/> “bridge” edges and <img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r}"/> loop edges at otherwise-isolated nodes. One can base a polynomial <img alt="{R_G(x,y,z,w)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%28x%2Cy%2Cz%2Cw%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G(x,y,z,w)}"/> on monomials </p>
<p align="center"><img alt="\displaystyle  x^\ell y^r z^s w^t " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x%5E%5Cell+y%5Er+z%5Es+w%5Et+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  x^\ell y^r z^s w^t "/></p>
<p>for <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> composed of <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell}"/> isolated nodes, <img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r}"/> disjoint single-node loops, <img alt="{s}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{s}"/> circles, and <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/> “wisps.” The recursion is the same: </p>
<p align="center"><img alt="\displaystyle  R_G(x,y,z,w) = R_{G \setminus e}(x,y,z,w) - \frac{1}{f(e)} R_{G \backslash\!\backslash e}(x,y,z,w). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++R_G%28x%2Cy%2Cz%2Cw%29+%3D+R_%7BG+%5Csetminus+e%7D%28x%2Cy%2Cz%2Cw%29+-+%5Cfrac%7B1%7D%7Bf%28e%29%7D+R_%7BG+%5Cbackslash%5C%21%5Cbackslash+e%7D%28x%2Cy%2Cz%2Cw%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  R_G(x,y,z,w) = R_{G \setminus e}(x,y,z,w) - \frac{1}{f(e)} R_{G \backslash\!\backslash e}(x,y,z,w). "/></p>
<p>
The point is that in the explosion case, the inclusion of the factors for wisps and circles (namely, <img alt="{w^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w^2}"/> if the explosion leaves two wisps, <img alt="{wz}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bwz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{wz}"/> if it leaves a wisp and a circle, or <img alt="{z^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bz%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{z^2}"/> for two circles) keeps <img alt="{R_G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BR_G%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{R_G}"/> homogeneous of degree <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> for an <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>-vertex graph. The conditions for this recursion to be confluent, however, essentially leave something equivalent to <img alt="{Q_G(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BQ_G%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Q_G(x)}"/> with <img alt="{w}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{w}"/> as a homogenizing variable. In particular, this idea appears not to yield a two-variable polynomial that gives more leverage.</p>
<p>
[made S_G(u,v) not S_G(x,y) consistent at top]</p></font></font></div>
    </content>
    <updated>2019-08-26T21:29:58Z</updated>
    <published>2019-08-26T21:29:58Z</published>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="Results"/>
    <category term="#P"/>
    <category term="2-polymatroids"/>
    <category term="amplitude"/>
    <category term="complexity"/>
    <category term="Geoff Whittle"/>
    <category term="graphs"/>
    <category term="James Oxley"/>
    <category term="matroid theory"/>
    <category term="quantum"/>
    <category term="rank"/>
    <category term="rank-generation polynomial"/>
    <category term="Tutte polynomial"/>
    <author>
      <name>Chaowen Guan and K.W. Regan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-08-30T14:20:37Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-8615276220589503260</id>
    <link href="https://blog.computationalcomplexity.org/feeds/8615276220589503260/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/08/are-you-math-genius-can-you-fix-my.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/8615276220589503260" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/8615276220589503260" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/08/are-you-math-genius-can-you-fix-my.html" rel="alternate" type="text/html"/>
    <title>`Are you a math genius?' `Can you fix my Iphone?' `What do you think about Facebook and Privacy?'</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><br/>
When I meet non-math people and tell them I am a computer science professor I get a range of responses. Here are some and my responses.<br/>
<br/>
<br/>
1) <i>Are you a math genius?</i><br/>
<br/>
Here is the answer I give:<br/>
<br/>
<i>I know some things in math, frankly obscure things, that most people in math don't know. On the other hand, I probably can't help your teenage daughter with her trigonometry homework.  Academics, like most people, forget what they don't use, and there are some things in math I rarely use, so I've forgotten them.</i><br/>
<br/>
I wonder how a Fields' Medal winner would answer the question.<br/>
<br/>
Although the above is the answer I give I really think its an ill defined and pointless question. Its very hard to measure genius or even define what it means (there are exceptions). After a certain age, what you've done is more important than how smart you allegedly are.  <br/>
<br/>
2)<i> Can you fix my iPhone?</i><br/>
<br/>
That's an easy one: <i>No. I work on the math end of computer science.</i> I don't elaborate.<br/>
<br/>
3) <i>What do you think of Facebook and  privacy?</i><br/>
<br/>
This is an odd one. I DO have opinions on this but they are NOT better informed just because I'm a comp sci professor. Since I don't have a Facebook account my opinions might be worse informed. So how do I respond? I show them<br/>
<br/>
<a href="https://www.youtube.com/watch?v=cqggW08BWO0">this Onion News Network Video about how the CIA created Facebook </a><br/>
<br/>
Some think it's real. They may be right.<br/>
<br/></div>
    </content>
    <updated>2019-08-25T17:39:00Z</updated>
    <published>2019-08-25T17:39:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2019-08-30T11:05:59Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/111</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/111" rel="alternate" type="text/html"/>
    <title>TR19-111 |  Noisy Beeps | 

	Klim Efremenko, 

	Gillat Kol, 

	Raghuvansh Saxena</title>
    <summary>We study the effect of noise on the $n$-party beeping model. In this model, in every round, each party may decide to either `beep' or not. All parties hear a beep if and only if at least one party beeps. The beeping model is becoming increasingly popular, as it offers a very  simple abstraction of wireless networks and is very well suited for studying biological phenomena. Still, the noise resilience of the beeping model is yet to be understood.

Our main result is a lower bound, showing that making protocols in the beeping model resilient to noise may have a large performance overhead. Specifically, we give a protocol that works over the (noiseless) beeping model, and prove that any scheme that simulates this protocol over the beeping model with correlated stochastic noise will blow up the number of rounds by an $\Omega(\log n)$ multiplicative factor.

We complement this result by a matching upper bound, constructing a noise-resilient simulation scheme with $\mathcal{O}(\log n)$ overhead for any noiseless beeping protocol.</summary>
    <updated>2019-08-25T06:39:55Z</updated>
    <published>2019-08-25T06:39:55Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-08-30T14:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/110</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/110" rel="alternate" type="text/html"/>
    <title>TR19-110 |  Improved bounds for the sunflower lemma | 

	Jiapeng Zhang, 

	Shachar Lovett, 

	Ryan Alweiss, 

	Kewen Wu</title>
    <summary>A sunflower with $r$ petals is a collection of $r$ sets so that the
intersection of each pair is equal to the intersection of all. Erd\H{o}s and Rado proved the sunflower lemma: for any fixed $r$, any family of sets of size $w$, with at least about $w^w$ sets, must contain a sunflower. The famous sunflower conjecture is that the bound on the number of sets can be improved to $c^w$ for some constant $c$. In this paper, we improve the bound to about $(\log w)^w$. In fact, we prove the result for a robust notion of sunflowers, for which the bound we obtain is tight up to lower order terms.</summary>
    <updated>2019-08-25T06:38:51Z</updated>
    <published>2019-08-25T06:38:51Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-08-30T14:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3407</id>
    <link href="https://agtb.wordpress.com/2019/08/24/2020-call-for-profiles-of-sigecom-job-market-candidates/" rel="alternate" type="text/html"/>
    <title>2020 Call for profiles of SIGecom job market candidates</title>
    <summary>Continuing the tradition from 2016, 2017, 2018, and 2019, this year there will be an article in the upcoming edition of the SIGecom Exchanges, profiling junior job market candidates (both for postdoc and faculty positions) of the SIGecom community for 2019-2020. These profiles will include the candidates’ thesis title, research summary, brief biography, and citations to three representative papers, as well as links to each candidate’s homepage and CV. To be considered, each candidate should complete the submission form by September […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div>Continuing the tradition from <a href="http://www.sigecom.org/exchanges/volume_14/1/PROFILES.pdf" rel="noopener noreferrer" target="_blank">2016</a>, <a href="http://www.sigecom.org/exchanges/volume_15/1/PROFILES.pdf" rel="noopener noreferrer" target="_blank">2017</a>, <a href="http://www.sigecom.org/exchanges/volume_16/1/PROFILES.pdf" rel="noopener noreferrer" target="_blank">2018</a>, and <a href="http://www.sigecom.org/exchanges/volume_17/1/PROFILES.pdf" rel="noopener noreferrer" target="_blank" title="http://www.sigecom.org/exchanges/volume_17/1/PROFILES.pdf">2019</a>, this year there will be an article in the upcoming edition of the SIGecom Exchanges, profiling junior job market candidates (both for postdoc and faculty positions) of the SIGecom community for 2019-2020. These profiles will include the candidates’ thesis title, research summary, brief biography, and citations to three representative papers, as well as links to each candidate’s homepage and CV.</div>
<div/>
<div>To be considered, each candidate should complete the <a href="https://docs.google.com/forms/d/1Xv7dfnaHOXgKKPs3cyaBKcWKq0QLTHwQhOJ6T0pGnJc" rel="noopener noreferrer" target="_blank" title="https://docs.google.com/forms/d/1Xv7dfnaHOXgKKPs3cyaBKcWKq0QLTHwQhOJ6T0pGnJc">submission form</a> by <b>September 2</b>, and then submit the final version of their LaTeX source files (a link to which is provided in the form) by <b>September 5</b>. The article will be co-edited by Vasilis Gkatzelis and myself. Please forward this call to whoever you think would be interested.</div></div>
    </content>
    <updated>2019-08-24T14:57:19Z</updated>
    <published>2019-08-24T14:57:19Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Jason Hartline</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-08-30T14:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/109</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/109" rel="alternate" type="text/html"/>
    <title>TR19-109 |  Decoding Downset codes over a finite grid | 

	Utkarsh Tripathi, 

	Srikanth Srinivasan, 

	S Venkitesh</title>
    <summary>In a recent paper, Kim and Kopparty (Theory of Computing, 2017) gave a deterministic algorithm for the unique decoding problem for polynomials of bounded total degree over a general grid $S_1\times\cdots \times S_m.$ We show that their algorithm can be adapted to solve the unique decoding problem for the general family of Downset codes. Here, a downset code is specified by a family $\mathcal{D}$ of monomials closed under taking factors: the corresponding code is the space of evaluations of all polynomials that can be written as linear combinations of monomials from $\mathcal{D}.$</summary>
    <updated>2019-08-23T13:39:00Z</updated>
    <published>2019-08-23T13:39:00Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-08-30T14:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/108</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/108" rel="alternate" type="text/html"/>
    <title>TR19-108 |  Beating the probabilistic lower bound on perfect hashing | 

	Chaoping Xing, 

	chen yuan</title>
    <summary>For an interger $q\ge 2$, a perfect $q$-hash code $C$  is a  block code over $\ZZ_q:=\ZZ/ q\ZZ$ of length $n$ in which every subset $\{\bc_1,\bc_2,\dots,\bc_q\}$ of $q$ elements is separated, i.e., there exists $i\in[n]$ such that $\{\proj_i(\bc_1),\proj_i(\bc_2),\dots,\proj_i(\bc_q)\}=\ZZ_q$, where $\proj_i(\bc_j)$ denotes the $i$th position of $\bc_j$. Finding the maximum size $M(n,q)$ of  perfect $q$-hash codes of length $n$, for given $q$ and $n$, is  a fundamental problem in combinatorics, information theory, and computer science. In this paper, we are interested in asymptotical behavior of this problem. More precisely speaking, we will focus on the quantity $R_q:=\limsup_{n\rightarrow\infty}\frac{\log_2 M(n,q)}n$.

A well-known probabilistic argument shows an existence lower bound on $R_q$, namely $R_q\ge\frac1{q-1}\log_2\left(\frac1{1-q!/q^q}\right)$ \cite{FK,K86}.  This is still the best-known lower bound till now except for the case $q=3$  for which K\"{o}rner and Matron \cite{KM} found that the concatenation technique could lead to a perfect $3$-hash code beating this the probabilistic lower bound. The improvement on the lower bound on $R_3$ was discovered in 1988 and there has been no any progress on lower bound on $R_q$ for more than 30 years despite of some work on upper bounds on $R_q$.
 In this paper we show that this  probabilistic lower bound can be improved for $q=4,8$ and all odd integers between $3$ and $25$, and \emph{every sufficiently large odd} $q$. Our idea is based on a modified concatenation which is different from the classical concatenation for which both the inner and outer codes are separated. However, for our concatenation we do not require that the inner code is a perfect $q$-hash code. This gives  a more flexible choice of inner codes and hence we are able to beat the  probabilistic  existence lower bound on $R_q$.</summary>
    <updated>2019-08-23T13:37:39Z</updated>
    <published>2019-08-23T13:37:39Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-08-30T14:20:28Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=14329</id>
    <link href="https://gilkalai.wordpress.com/2019/08/23/amazing-ryan-alweiss-shachar-lovett-kewen-wu-jiapeng-zhang-made-dramatic-progress-on-the-sunflower-conjecture/" rel="alternate" type="text/html"/>
    <title>Amazing:  Ryan Alweiss, Shachar Lovett, Kewen Wu, Jiapeng Zhang made dramatic progress on the Sunflower Conjecture</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">WOW! The new paper https://arxiv.org/abs/1908.08483 improved bounds for the sunflower lemma gives the most dramatic progress on the sunflower conjecture since it was asked. Congratulations to Ryan Alweiss, Shachar Lovett, Kewen Wu, Jiapeng Zhang. (Written on my smartphone will expand … <a href="https://gilkalai.wordpress.com/2019/08/23/amazing-ryan-alweiss-shachar-lovett-kewen-wu-jiapeng-zhang-made-dramatic-progress-on-the-sunflower-conjecture/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>WOW! The new paper <a href="https://arxiv.org/abs/1908.08483" rel="nofollow">https://arxiv.org/abs/1908.08483</a> improved bounds for the sunflower lemma gives the most dramatic progress on the sunflower conjecture since it was asked. Congratulations to Ryan Alweiss, Shachar Lovett, Kewen Wu, Jiapeng Zhang.</p>
<p>(Written on my smartphone will expand it when reconnected to my laptop.)  (Reconnected) Rather, I will write about it again in a few weeks. Let me mention now that while the old difficult and ingenious improvements stayed in the neighborhood of Erdos and Rado <a href="https://gilkalai.wordpress.com/2008/09/28/extremal-combinatorics-iii-some-basic-theorems/">initial upper bound</a> the new result is in the neighborhood of the conjecture! (And is tight for a certain robust version of the problem!)</p>
<p>Let me also mention that we <a href="https://gilkalai.wordpress.com/?s=sunflower+conjecture">discussed</a> the sunflower conjecture here many times and polymath10 (<a href="http://michaelnielsen.org/polymath1/index.php?title=The_Erdos-Rado_sunflower_lemma">wiki page</a>,  <a href="https://gilkalai.wordpress.com/2015/11/03/polymath10-the-erdos-rado-delta-system-conjecture">first post</a>, <a href="https://gilkalai.wordpress.com/2017/01/17/polymath10-conclusion/">last post</a>) was devoted to the problem.)</p></div>
    </content>
    <updated>2019-08-23T05:47:59Z</updated>
    <published>2019-08-23T05:47:59Z</published>
    <category term="Combinatorics"/>
    <category term="Uncategorized"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2019-08-30T14:20:32Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/08/22/serpentine-belts</id>
    <link href="https://11011110.github.io/blog/2019/08/22/serpentine-belts.html" rel="alternate" type="text/html"/>
    <title>Serpentine belts</title>
    <summary>Many car engines use a serpentine belt, passing across multiple pulleys and tensioner wheels, to transmit mechanical power and timing information from the car’s crankshaft to its alternator, engine fan, water pump, air conditioning, steering pump, and other systems. Another (usually separate) belt, the timing belt, similarly connects the crankshaft to the camshaft, which controls and drives the timing of the engine’s valves. The Volvo bus engine below shows both of these belts:</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Many car engines use a <a href="https://en.wikipedia.org/wiki/Serpentine_belt">serpentine belt</a>, passing across multiple pulleys and <a href="https://en.wikipedia.org/wiki/Tensioner">tensioner wheels</a>, to transmit mechanical power and timing information from the car’s crankshaft to its alternator, engine fan, water pump, air conditioning, steering pump, and other systems. Another (usually separate) belt, the <a href="https://en.wikipedia.org/wiki/Timing_belt_(camshaft)">timing belt</a>, similarly connects the crankshaft to the camshaft, which controls and drives the timing of the engine’s valves.
The <a href="https://commons.wikimedia.org/wiki/File:Belt_drive_systen_01.JPG">Volvo bus engine</a> below shows both of these belts:</p>

<p style="text-align: center;"><img alt="Timing and serpentine belts of a Volvo bus engine; CC-BY-SA photo by Miya.m from https://commons.wikimedia.org/wiki/File:Belt_drive_systen_01.JPG" src="https://11011110.github.io/blog/assets/2019/Volvo-bus-engine-belts.jpg" style="border-style: solid; border-color: black;" width="60%"/></p>

<p>But suppose you encounter such an engine with its belt removed. How can you tell where to run the belt to connect it all back together again? There may be many different orderings in which you can connect a given set of wheels by a belt. On a real engine (such as the one in a Ford Escort on which I loosely modeled the top image below), you might get a little more information from which of the wheels are ribbed (inside the belt) and which are smooth (outside the belt) but even that extra information won’t always give you a unique solution:</p>

<p style="text-align: center;"><img alt="Two serpentine belts for the Ford Escort" src="https://11011110.github.io/blog/assets/2019/escort.svg"/></p>

<p>Connecting wheels with belts like this is the topic of my latest preprint, “Existence and hardness of conveyor belts” (<a href="https://arxiv.org/abs/1908.07668">arXiv:1908.07668</a>, with a large group of co-authors merging groups from the University of Washington and the Bellairs workshops). The name isn’t really accurate, because most conveyor belts have simpler geometry, but that’s what the question was called in past work. At least we managed to avoid the misspelling “conveyer” of some of that work.</p>

<p>To be tight, a belt for a system of disjoint disks (representing the pulleys and wheels) must be a smooth simple closed curve, made by connecting arcs of the disks with <a href="https://en.wikipedia.org/wiki/Tangent_lines_to_circles#Tangent_lines_to_two_circles">bitangents</a> between pairs of disks. It was already known that some systems of disks have no belt, and conjectured that unit disks always have one. Our work shows that it’s -complete to tell whether a belt exists, that they do exist for certain special systems of disks (e.g. when no vertical line crosses multiple disks), and that by adding a linear number of extra disks one can always make a belt exist.</p>

<p>The question of how many different belts can connect the same system of disks (posed to me by co-author Sara Billey) was to a large extent the inspiration for <a href="https://11011110.github.io/blog/2019/03/12/counting-polygon-triangulations.html">my earlier paper on counting triangulations</a>. If counting simple polygons through a set of points is hard, then so is counting belts for tiny disks. And when I couldn’t prove that counting simple polygons is hard, I turned to other problems for which the proof was easier.</p>

<p>As part of this project I wrote <a href="https://11011110.github.io/blog/assets/2019/drawbelts.py">a little Python program to draw systems of disks and their belts</a>, used for the image above and for some of the images in the paper. It doesn’t find which belts are possible itself; instead, you have to specify the belt by listing the disks that it touches in order (allowing repetitions although some of the versions of the problem that we studied do not) and specifying for each disk which direction it turns when the belt touches it (equivalently, whether it is inside or outside the belt). To use it, you’ll need my <a href="https://www.ics.uci.edu/~eppstein/PADS/">PADS Python library</a>, or at least <a href="https://www.ics.uci.edu/~eppstein/PADS/SVG.py">the package in it for generating SVG files</a>.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/102664433496197083">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2019-08-22T21:19:00Z</updated>
    <published>2019-08-22T21:19:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-08-30T03:55:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3404</id>
    <link href="https://agtb.wordpress.com/2019/08/21/papafest-schedule-announced/" rel="alternate" type="text/html"/>
    <title>PapaFest schedule announced</title>
    <summary>The schedule for PapaFest (celebrating Christos Papadimitriou) has been posted at http://papafest.cs.columbia.edu/ When/where: September 6-8, 2019, at Columbia University in Davis Auditorium. (Register at the URL above, for free.) Confirmed speakers: Sanjeev Arora, Michael Collins, Michael Jordan, Anna Karlin, Jon Kleinberg, Elias Koutsoupias, Adi Livnat, Noam Nisan, Prabhakar Raghavan, Scott Shenker, Eva Tardos, John Tsitsiklis, Leslie […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The schedule for PapaFest (celebrating Christos Papadimitriou) has been posted at <a href="http://papafest.cs.columbia.edu/">http://papafest.cs.columbia.edu/</a></p>
<p>When/where: September 6-8, 2019, at Columbia University in Davis Auditorium. (Register at the URL above, for free.)</p>
<p>Confirmed speakers: Sanjeev Arora, Michael Collins, Michael Jordan, Anna Karlin, Jon Kleinberg, Elias Koutsoupias, Adi Livnat, Noam Nisan, Prabhakar Raghavan, Scott Shenker, Eva Tardos, John Tsitsiklis, Leslie Valiant, Umesh Vazirani, and Santosh Vempala.</p>
<p>There will also be two panels led by Richard Karp and Jitendra Malik, and a rock concert by Errors in Bars on Saturday night!</p></div>
    </content>
    <updated>2019-08-21T15:12:07Z</updated>
    <published>2019-08-21T15:12:07Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>timroughgarden</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-08-30T14:20:34Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/08/21/assistant-professor-tenure-track-and-professor-positions-in-computer-science-at-institute-of-science-and-technology-austria-apply-by-october-31-2019/</id>
    <link href="https://cstheory-jobs.org/2019/08/21/assistant-professor-tenure-track-and-professor-positions-in-computer-science-at-institute-of-science-and-technology-austria-apply-by-october-31-2019/" rel="alternate" type="text/html"/>
    <title>Assistant professor (tenure-track) and professor positions in computer science at Institute of Science and Technology Austria (apply by October 31, 2019)</title>
    <summary>We invite applications in all areas of computer science for several open positions. Female researchers are strongly encouraged to apply. Website: https://ist.ac.at/en/jobs/faculty/ Email: professors@ist.ac.at</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>We invite applications in all areas of computer science for several open positions. Female researchers are strongly encouraged to apply.</p>
<p>Website: <a href="https://ist.ac.at/en/jobs/faculty/">https://ist.ac.at/en/jobs/faculty/</a><br/>
Email: <a href="mailto:professors@ist.ac.at" rel="noopener" target="_blank"> professors@ist.ac.at</a></p></div>
    </content>
    <updated>2019-08-21T11:55:31Z</updated>
    <published>2019-08-21T11:55:31Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-08-30T14:20:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=17855</id>
    <link href="https://gilkalai.wordpress.com/2019/08/21/the-argument-against-quantum-computers-a-cern-colloquium-and-a-new-paper/" rel="alternate" type="text/html"/>
    <title>The Argument against Quantum Computers – a CERN Colloquium and a New Paper</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Let me announce my CERN colloquium this Thursday, August 22, 2019, 16:30-17:30 entitled “The argument against quantum computers.” If you are at CERN or the neighborhood, please please come to the lecture. (Tea and coffee will be served at 16:00. … <a href="https://gilkalai.wordpress.com/2019/08/21/the-argument-against-quantum-computers-a-cern-colloquium-and-a-new-paper/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Let me announce <a href="https://indico.cern.ch/event/839574/?fbclid=IwAR0JHF8kcQ_tQKJrbJcNYTu9lQvMjOEvcSk6Jsh_Tq4uH4EbjeaDz7qv30k">my CERN colloquium</a> this Thursday, August 22, 2019, 16:30-17:30 entitled “The argument against quantum computers.” If you are at CERN or the neighborhood, please please come to the lecture. (Tea and coffee will be served at 16:00. ) If you are further away, there is a <a href="https://webcast.web.cern.ch/event/i839574">live broadcast</a>.</p>
<p>A few weeks ago I uploaded to the arXive a new paper with the same title “<a href="https://arxiv.org/abs/1908.02499">The argument against quantum computers</a>“. The paper will appear in the volume: Quantum, Probability, Logic: Itamar Pitowsky’s Work and Influence, Springer, Nature (2019), edited by Meir Hemmo and Orly Shenker. A short abstract for the lecture and the paper is:</p>
<blockquote><p><em><strong><span style="color: #008080;">We give a computational complexity argument against the feasibility of quantum computers. We identify a very low complexity class of probability distributions described by noisy intermediate-scale quantum computers, and explain why it will allow neither good-quality quantum error-correction nor a demonstration of “quantum supremacy.”  Some general principles governing the behavior of noisy quantum systems are derived.</span></strong></em></p></blockquote>
<p>The new paper and lecture have the same title as my 2018 <a href="https://www.quantamagazine.org/gil-kalais-argument-against-quantum-computers-20180207/">interview</a> with Katia Moskvitch at Quanta Magazine (see also <a href="https://gilkalai.wordpress.com/2018/02/08/my-argument-against-quantum-computers-an-interview-with-katia-moskvitch-on-quanta-magazine/">this post</a>).  Note that Christopher Monroe has recently <a href="https://www.quantamagazine.org/gil-kalais-argument-against-quantum-computers-20180207/#comment-4559220424">contributed a very interesting comment</a> to the Quanta article. My paper is dedicated to the memory of Itamar Pitowsky, and for more on Itamar see the post <a href="https://gilkalai.wordpress.com/2010/02/15/itamar-pitowski-probability-in-physics-where-does-it-come-from/" rel="bookmark">Itamar Pitowsky: Probability in Physics, Where does it Come From?</a> See also this <a href="https://gilkalai.wordpress.com/2019/08/09/two-important-quantum-announcements/">previous post</a> for two other quantum events in Jerusalem: a seminar in the first semester and a winter school on <a href="http://ias.huji.ac.il/SchoolCSE4">The Mathematics of Quantum Computation </a> on December 15 – December 19, 2019.</p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/sasb.png"><img alt="" class="alignnone size-full wp-image-17856" height="481" src="https://gilkalai.files.wordpress.com/2019/08/sasb.png?w=640&amp;h=481" width="640"/></a></p>
<p><strong><span style="color: #ff0000;">A slide from a lecture by Scott Aaronson where he explains why soap bubble computers cannot solve the NP-complete Steiner-tree problem. Noisy intermediate scale quantum (NISQ) circuits are <em>computationally </em>much more primitive than Scott’s soap bubble computers and this will prevent them from achieving neither “quantum supremacy” nor good quality quantum error correcting codes.  </span></strong><span style="color: #ff0000;">(<a href="https://www.scottaaronson.com/blog/?p=4199">source</a> for the picture)</span></p>
<p> </p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/entn.png"><img alt="" class="alignnone size-full wp-image-17860" height="360" src="https://gilkalai.files.wordpress.com/2019/08/entn.png?w=640&amp;h=360" width="640"/></a></p>
<p><strong><span style="color: #ff0000;">Low-entropy quantum states give probability distributions described by low degree polynomials, and very low-entropy quantum states give chaotic behavior. Higher entropy enables classical information. </span></strong></p>
<p><a href="https://gilkalai.files.wordpress.com/2019/08/cern.png"><img alt="" class="alignnone size-full wp-image-17862" height="371" src="https://gilkalai.files.wordpress.com/2019/08/cern.png?w=640&amp;h=371" width="640"/></a></p>
<p> </p>
<p> </p></div>
    </content>
    <updated>2019-08-21T01:26:28Z</updated>
    <published>2019-08-21T01:26:28Z</published>
    <category term="Computer Science and Optimization"/>
    <category term="Physics"/>
    <category term="Quantum"/>
    <category term="CERN"/>
    <category term="Quantum computers"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2019-08-30T14:20:31Z</updated>
    </source>
  </entry>
</feed>
