<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-04-22T01:33:12Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.10163</id>
    <link href="http://arxiv.org/abs/2004.10163" rel="alternate" type="text/html"/>
    <title>Competing Optimally Against An Imperfect Prophet</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Allen.html">Allen Liu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Leme:Renato_Paes.html">Renato Paes Leme</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pal:Martin.html">Martin Pal</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schneider:Jon.html">Jon Schneider</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sivan:Balasubramanian.html">Balasubramanian Sivan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.10163">PDF</a><br/><b>Abstract: </b>Consider a gambler who observes the realizations of $n$ independent,
non-negative, distribution-labeled random variables arriving in a uniform
random order and can stop the sequence at any time to obtain a reward of the
most recent observation. In 2017, Correa et al. showed that when all
distributions are identical, it is possible to design a stopping time that
achieves a $\beta \approx 0.745$ fraction of the maximum value (the ``prophet''
benchmark), matching an upper bound of Hill and Kertz. In 2019, Correa et al.
showed that when the distributions differ, it is no longer possible to achieve
this bound: they prove an upper bound of $\sqrt{3} - 1 &lt; 0.74$ on the best
approximation ratio.
</p>
<p>We show that it is possible to asymptotically achieve the $\beta \approx
0.745$ bound even in the case of non-identical distributions, as long as we are
allowed to remove a small constant number of distributions. Formally, we show
that for any $\varepsilon$, there exists a constant $C_{\varepsilon} =
\mathrm{poly}(1/\varepsilon)$ (independent of $n$) such that after removing
$C_{\varepsilon}$ distributions of our choice, we can achieve a $(\beta -
\varepsilon)$-approximation to the resulting maximum. We additionally show it
is possible to asymptotically achieve an exact $\beta$ approximation ratio for
several natural classes of problem instances, including small prophets (where
each distribution is concentrated near zero) and frequent prophets (where each
distribution occurs at least some number of times).
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.10090</id>
    <link href="http://arxiv.org/abs/2004.10090" rel="alternate" type="text/html"/>
    <title>A Sub-linear Time Framework for Geometric Optimization with Outliers in High Dimensions</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Ding:Hu.html">Hu Ding</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.10090">PDF</a><br/><b>Abstract: </b>Many real-world problems can be formulated as geometric optimization problems
in high dimensions, especially in the fields of machine learning and data
mining. Moreover, we often need to take into account of outliers when
optimizing the objective functions. However, the existence of outliers could
make the problems to be much more challenging than their vanilla versions. In
this paper, we study the fundamental minimum enclosing ball (MEB) with outliers
problem first; partly inspired by the core-set method from B\u{a}doiu and
Clarkson, we propose a sub-linear time bi-criteria approximation algorithm
based on two novel techniques, the Uniform-Adaptive Sampling method and
Sandwich Lemma. To the best of our knowledge, our result is the first
sub-linear time algorithm having the sample size independent of both the input
number of points $n$ and dimensionality $d$. Furthermore, we observe that these
two techniques can be generalized to deal with a broader range of geometric
optimization problems with outliers in high dimensions, including flat fitting,
$k$-center clustering, and SVM with outliers, and therefore achieve sub-linear
time bi-criteria approximation algorithms for these problems respectively.
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.10019</id>
    <link href="http://arxiv.org/abs/2004.10019" rel="alternate" type="text/html"/>
    <title>Almost Optimal Model-Free Reinforcement Learning via Reference-Advantage Decomposition</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Zihan.html">Zihan Zhang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhou:Yuan.html">Yuan Zhou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Ji:Xiangyang.html">Xiangyang Ji</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.10019">PDF</a><br/><b>Abstract: </b>We study the reinforcement learning problem in the setting of finite-horizon
episodic Markov Decision Processes (MDPs) with $S$ states, $A$ actions, and
episode length $H$. We propose a model-free algorithm UCB-Advantage and prove
that it achieves $\tilde{O}(\sqrt{H^2SAT})$ regret where $T = KH$ and $K$ is
the number of episodes to play. Our regret bound improves upon the results of
[Jin et al., 2018] and matches the best known model-based algorithms as well as
the information theoretic lower bound up to logarithmic factors. We also show
that UCB-Advantage achieves low local switching cost and applies to concurrent
reinforcement learning, improving upon the recent results of [Bai et al.,
2019].
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09938</id>
    <link href="http://arxiv.org/abs/2004.09938" rel="alternate" type="text/html"/>
    <title>On the Parameterised Complexity of Induced Multipartite Graph Parameters</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mann:Ryan_L=.html">Ryan L. Mann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mathieson:Luke.html">Luke Mathieson</a>, Catherine Greenhill <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09938">PDF</a><br/><b>Abstract: </b>We introduce a family of graph parameters, called induced multipartite graph
parameters, and study their computational complexity. First, we consider the
following decision problem: an instance is an induced multipartite graph
parameter $p$ and a given graph $G$, and for natural numbers $k\geq2$ and
$\ell$, we must decide whether the maximum value of $p$ over all induced
$k$-partite subgraphs of $G$ is at most $\ell$. We prove that this problem is
W[1]-hard. Next, we consider a variant of this problem, where we must decide
whether the given graph $G$ contains a sufficiently large induced $k$-partite
subgraph $H$ such that $p(H)\leq\ell$. We show that for certain parameters this
problem is para-NP-hard, while for others it is fixed-parameter tractable.
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09885</id>
    <link href="http://arxiv.org/abs/2004.09885" rel="alternate" type="text/html"/>
    <title>Enumerating Maximal Induced Subgraphs</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cao:Yixin.html">Yixin Cao</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09885">PDF</a><br/><b>Abstract: </b>Given a graph $G$, the maximal induced subgraphs problem asks to enumerate
all maximal induced subgraphs of $G$ that belong to a certain hereditary graph
class. While its optimization version, known as the minimum vertex deletion
problem in literature, has been intensively studied, enumeration algorithms are
known for a few simple graph classes, e.g., independent sets, cliques, and
forests, until very recently [Conte and Uno, STOC 2019]. There is also a
connected variation of this problem, where one is concerned with only those
induced subgraphs that are connected. We introduce two new approaches, which
enable us to develop algorithms that solve both variations for a number of
important graph classes. A general technique that has been proved very powerful
in enumeration algorithms is to build a solution map, i.e., a multiple digraph
on all the solutions of the problem, and the key of this approach is to make
the solution map strongly connected, so that a simple traversal of the solution
map solves the problem. We introduce retaliation-free paths to certificate
strong connectedness of the solution map we build. Generalizing the idea of
Cohen, Kimelfeld, and Sagiv [JCSS 2008], we introduce the $t$-restricted
version, $t$ being a positive integer, of the maximal (connected) induced
subgraphs problem, and show that it is equivalent to the original problem in
terms of solvability in incremental polynomial time. Moreover, we give
reductions between the two variations, so that it suffices to solve one of the
variations for each class we study. Our work also leads to direct and simpler
proofs of several important known results.
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09806</id>
    <link href="http://arxiv.org/abs/2004.09806" rel="alternate" type="text/html"/>
    <title>Commutative automata networks</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bridoux:Florian.html">Florian Bridoux</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gadouleau:Maximilien.html">Maximilien Gadouleau</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Theyssier:Guillaume.html">Guillaume Theyssier</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09806">PDF</a><br/><b>Abstract: </b>Automata networks are mappings of the form f : Q Z $\rightarrow$ Q Z , where
Q is a finite alphabet and Z is a set of entities; they generalise Cellular
Automata and Boolean networks. An update schedule dictates when each entity
updates its state according to its local function fi : Q Z $\rightarrow$ Q. One
major question is to study the behaviour of a given automata networks under
different update schedules. In this paper, we study automata networks that are
invariant under many different update schedules. This gives rise to two
definitions, locally commutative and globally commu-tative networks. We
investigate the relation between commutativity and different forms of locality
of update functions; one main conclusion is that globally commutative networks
have strong dynamical properties, while locally commutative networks are much
less constrained. We also give a complete classification of all globally
commutative Boolean networks.
</p></div>
    </summary>
    <updated>2020-04-22T01:20:35Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09784</id>
    <link href="http://arxiv.org/abs/2004.09784" rel="alternate" type="text/html"/>
    <title>An O(log log m) Prophet Inequality for Subadditive Combinatorial Auctions</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/D=uuml=tting:Paul.html">Paul Dütting</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kesselheim:Thomas.html">Thomas Kesselheim</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lucier:Brendan.html">Brendan Lucier</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09784">PDF</a><br/><b>Abstract: </b>Prophet inequalities compare the expected performance of an online algorithm
for a stochastic optimization problem to the expected optimal solution in
hindsight. They are a major alternative to classic worst-case competitive
analysis, of particular importance in the design and analysis of simple
(posted-price) incentive compatible mechanisms with provable approximation
guarantees.
</p>
<p>A central open problem in this area concerns subadditive combinatorial
auctions. Here $n$ agents with subadditive valuation functions compete for the
assignment of $m$ items. The goal is to find an allocation of the items that
maximizes the total value of the assignment. The question is whether there
exists a prophet inequality for this problem that significantly beats the best
known approximation factor of $O(\log m)$.
</p>
<p>We make major progress on this question by providing an $O(\log \log m)$
prophet inequality. Our proof goes through a novel primal-dual approach. It is
also constructive, resulting in an online policy that takes the form of static
and anonymous item prices that can be computed in polynomial time given
appropriate query access to the valuations. As an application of our approach,
we construct a simple and incentive compatible mechanism based on posted prices
that achieves an $O(\log \log m)$ approximation to the optimal revenue for
subadditive valuations under an item-independence assumption.
</p></div>
    </summary>
    <updated>2020-04-22T01:30:16Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09682</id>
    <link href="http://arxiv.org/abs/2004.09682" rel="alternate" type="text/html"/>
    <title>Scheduling with Communication Delays via LP Hierarchies and Clustering</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Davies:Sami.html">Sami Davies</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kulkarni:Janardhan.html">Janardhan Kulkarni</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rothvoss:Thomas.html">Thomas Rothvoss</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tarnawski:Jakub.html">Jakub Tarnawski</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Yihao.html">Yihao Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09682">PDF</a><br/><b>Abstract: </b>We consider the classic problem of scheduling jobs with precedence
constraints on identical machines to minimize makespan, in the presence of
communication delays. In this setting, denoted by $\mathsf{P} \mid
\mathsf{prec}, c \mid C_{\mathsf{max}}$, if two dependent jobs are scheduled on
different machines, then at least $c$ units of time must pass between their
executions. Despite its relevance to many applications, this model remains one
of the most poorly understood in scheduling theory. Even for a special case
where an unlimited number of machines is available, the best known
approximation ratio is $2/3 \cdot (c+1)$, whereas Graham's greedy list
scheduling algorithm already gives a $(c+1)$-approximation in that setting. An
outstanding open problem in the top-10 list by Schuurman and Woeginger and its
recent update by Bansal asks whether there exists a constant-factor
approximation algorithm.
</p>
<p>In this work we give a polynomial-time $O(\log c \cdot \log m)$-approximation
algorithm for this problem, where $m$ is the number of machines and $c$ is the
communication delay. Our approach is based on a Sherali-Adams lift of a linear
programming relaxation and a randomized clustering of the semimetric space
induced by this lift.
</p></div>
    </summary>
    <updated>2020-04-22T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09640</id>
    <link href="http://arxiv.org/abs/2004.09640" rel="alternate" type="text/html"/>
    <title>Mechanism Design for Online Resource Allocation: A Unified Approach</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tan:Xiaoqi.html">Xiaoqi Tan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sun:Bo.html">Bo Sun</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Leon=Garcia:Alberto.html">Alberto Leon-Garcia</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wu:Yuan.html">Yuan Wu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tsang:Danny_H=_K=.html">Danny H. K. Tsang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09640">PDF</a><br/><b>Abstract: </b>This paper concerns the mechanism design for online resource allocation in a
strategic setting. In this setting, a single supplier allocates
capacity-limited resources to requests that arrive in a sequential and
arbitrary manner. Each request is associated with an agent who may act
selfishly to misreport the requirement and valuation of her request. The
supplier charges payment from agents whose requests are satisfied, but incurs a
load-dependent supply cost. The goal is to design an incentive compatible
online mechanism, which determines not only the resource allocation of each
request, but also the payment of each agent, so as to (approximately) maximize
the social welfare (i.e., aggregate valuations minus supply cost). We study
this problem under the framework of competitive analysis. The major
contribution of this paper is the development of a unified approach that
achieves the best-possible competitive ratios for setups with different supply
costs. Specifically, we show that when there is no supply cost or the supply
cost function is linear, our model is essentially a standard 0-1 knapsack
problem, for which our approach achieves logarithmic competitive ratios that
match the state-of-the-art (which is optimal). For the more challenging setup
when the supply cost is strictly-convex, we provide online mechanisms, for the
first time, that lead to the optimal competitive ratios as well. To the best of
our knowledge, this is the first approach that unifies the characterization of
optimal competitive ratios in online resource allocation for different setups
including zero, linear and strictly-convex supply costs.
</p></div>
    </summary>
    <updated>2020-04-22T01:25:09Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08847</id>
    <link href="http://arxiv.org/abs/2004.08847" rel="alternate" type="text/html"/>
    <title>Minimizing Total Interference in Asymmetric Sensor Networks</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Abu=Affash:A=_Karim.html">A. Karim Abu-Affash</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Carmi:Paz.html">Paz Carmi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Katz:Matthew_J=.html">Matthew J. Katz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08847">PDF</a><br/><b>Abstract: </b>The problem of computing a connected network with minimum interference is a
fundamental problem in wireless sensor networks. Several models of interference
have been studied in the literature. The most common model is the
receiver-centric, in which the interference of a node $p$ is defined as the
number of other nodes whose transmission range covers $p$. In this paper, we
study the problem of assigning a transmission range to each sensor, such that
the resulting network is strongly connected and the total interference of the
network is minimized. For the one-dimensional case, we show how to solve the
problem optimally in $O(n^3)$ time. For the two-dimensional case, we show that
the problem is NP-complete and give a polynomial-time 2-approximation algorithm
for the problem.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1812.01845</id>
    <link href="http://arxiv.org/abs/1812.01845" rel="alternate" type="text/html"/>
    <title>Generating an equidistributed net on a unit n-sphere using random rotations</title>
    <feedworld_mtime>1587513600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chakraborty:Somnath.html">Somnath Chakraborty</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Narayanan:Hariharan.html">Hariharan Narayanan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1812.01845">PDF</a><br/><b>Abstract: </b>We develop a randomized algorithm (that succeeds with high probability) for
generating an $\epsilon$-net in a sphere of dimension n. The basic scheme is to
pick $O(n \ln(1/n) + \ln(1/\delta))$ random rotations and take all possible
words of length $O(n \ln(1/\epsilon))$ in the same alphabet and act them on a
fixed point. We show this set of points is equidistributed at a scale of
$\epsilon$. Our main application is to approximate integration of Lipschitz
functions over an n-sphere.
</p></div>
    </summary>
    <updated>2020-04-22T01:31:24Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-22T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3472</id>
    <link href="https://agtb.wordpress.com/2020/04/21/ec-2020-will-be-virtual/" rel="alternate" type="text/html"/>
    <title>SIGecom Announcement: EC 2020 will be virtual</title>
    <summary>As many of you have probably anticipated, due to concerns regarding the novel coronavirus COVID-19, the 2020 ACM Conference on Economics and Computation (EC 2020) will be held virtually. This change of format will of course present us with difficult challenges, but we believe it will offer exciting new opportunities as well.  (And not to […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>As many of you have probably anticipated, due to concerns regarding the novel coronavirus COVID-19, the <a href="http://ec20.sigecom.org/">2020 ACM Conference on Economics and Computation (EC 2020)</a> will be held virtually.</p>
<p>This change of format will of course present us with difficult challenges, but we believe it will offer exciting new opportunities as well.  (And not to worry, your opportunity to attend EC in Budapest is just deferred to 2021.)</p>
<p>The <a href="http://sigecom.org/officers.html">SIGecom Executive Committee</a> has appointed and will serve on a Virtual Transition Team that additionally includes the following new conference officers:</p>
<ul>
<li>Virtual General Chair: <a href="https://sites.northwestern.edu/hartline/">Jason Hartline</a></li>
<li>Virtual Local Chair: <a href="https://yannai.gonch.name/">Yannai Gonczarowski</a></li>
<li>Virtual Global Outreach Chairs: <a href="https://www.cs.cornell.edu/~red/">Rediet Abebe</a> and <a href="https://research.fb.com/people/sodomka-eric/">Eric Sodomka</a></li>
</ul>
<p>This team is working with the <a href="http://ec20.sigecom.org/committees-acm/organizing-committee/">EC 2020 organizing committee</a> and <a href="http://ec20.sigecom.org/committees-acm/program-committee/">EC 2020 PC chairs</a> to put together a plan that leverages the opportunities of the virtual format to the fullest extent. Though these plans are still in the works, we have identified the following “minimal commitment” for authors of accepted papers to the main EC conference: at least one author will need to</p>
<ul>
<li>register for the conference;</li>
<li>be available virtually on the conference dates (July 14-16);</li>
<li>provide a camera-ready paper or abstract by the camera-ready deadline;</li>
<li>provide a pre-recorded talk presenting the paper two weeks in advance (by June 28).</li>
</ul>
<p>We are optimistic that, while a virtual EC may lack some of the positive features of a classical conference, the format will also provide opportunities that improve on the classical experience.  As with any conference there will be opportunities to participate beyond the “minimal commitment.”  We hope that speakers and participants will join in other activities, which may include preview sessions for talks before the conference proper, watch parties for speakers and attendees, and mechanisms for reaching a wider audience with the technical program. With many academic interactions moving virtual, the barriers to collaboration with distant colleagues have lowered, and we hope that EC 2020 will kindle and rekindle global collaborations.</p>
<div>
<p>Further details about these activities as well as the minimal requirements will be circulated by June 1.</p>
<p>Tutorial speakers and workshop organizers will receive separate emails from the Tutorial and Workshop Chairs about plans for moving these events online.</p>
</div></div>
    </content>
    <updated>2020-04-21T14:05:08Z</updated>
    <published>2020-04-21T14:05:08Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Jason Hartline</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2020-04-22T01:31:56Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://kamathematics.wordpress.com/?p=118</id>
    <link href="https://kamathematics.wordpress.com/2020/04/21/a-primer-on-private-statistics-part-ii/" rel="alternate" type="text/html"/>
    <title>A Primer on Private Statistics – Part II</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">By Gautam Kamath and Jonathan Ullman The second part of our brief survey of differentially private statistics. This time, we show how to privately estimate the CDF of a distribution (i.e., estimate the distribution in Kolmogorov distance), and conclude with pointers to some other work in the space. The first part of this series is here, and you … <a class="more-link" href="https://kamathematics.wordpress.com/2020/04/21/a-primer-on-private-statistics-part-ii/">Continue reading<span class="screen-reader-text"> "A Primer on Private Statistics – Part II"</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>By <a href="http://www.gautamkamath.com/">Gautam Kamath</a> and <a href="http://www.ccs.neu.edu/home/jullman/">Jonathan Ullman</a></p>
<p>The second part of our brief survey of differentially private statistics. This time, we show how to privately estimate the CDF of a distribution (i.e., estimate the distribution in Kolmogorov distance), and conclude with pointers to some other work in the space.</p>
<p>The first part of this series is <a href="https://kamathematics.wordpress.com/2020/04/14/a-primer-on-private-statistics-part-i/">here</a>, and you can download both parts in PDF form <a href="http://www.gautamkamath.com/writings/primer.pdf">here</a>.</p>
<p><b>1. CDF Estimation for Discrete, Univariate Distributions </b></p>
<p>Suppose we have a distribution <img alt="{P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{P}"/> over the ordered, discrete domain <img alt="{\{1,\dots,D\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C%5Cdots%2CD%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,\dots,D\}}"/> and let <img alt="{\mathcal{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathcal%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathcal{P}}"/> be the family of all such distributions. The CDF of the distribution is the function <img alt="{\Phi_{P} : \{1,\dots,D\} \rightarrow [0,1]}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi_%7BP%7D+%3A+%5C%7B1%2C%5Cdots%2CD%5C%7D+%5Crightarrow+%5B0%2C1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi_{P} : \{1,\dots,D\} \rightarrow [0,1]}"/> given by</p>
<p align="center"><img alt="\displaystyle \Phi_{P}(j) = \mathop{\mathbb P}(P \leq j). \ \ \ \ \ (1)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPhi_%7BP%7D%28j%29+%3D+%5Cmathop%7B%5Cmathbb+P%7D%28P+%5Cleq+j%29.+%5C+%5C+%5C+%5C+%5C+%281%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \Phi_{P}(j) = \mathop{\mathbb P}(P \leq j). \ \ \ \ \ (1)"/></p>
<p>A natural measure of distance between CDFs is the <img alt="{\ell_\infty}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell_\infty}"/> distance, as this is the sort of convergence guarantee that the empirical CDF satisfies. That is, in the non-private setting, the empirical CDF will achieve the minimax rate, which it known by [<a href="https://kamathematics.wordpress.com/feed/#DKW56">DKW56</a>, <a href="https://kamathematics.wordpress.com/feed/#Mas90">Mas90</a>] to be <a name="eqdkw"/></p>
<p><a name="eqdkw"/></p>
<p><a name="eqdkw"/></p>
<p align="center"><img alt="\displaystyle \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| \Phi_{X} - \Phi_{P} \|_{\infty}) = O\left(\sqrt{\frac{1}{n}} \right). \ \ \ \ \ (2)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cmax_%7BP+%5Cin+%5Cmathcal%7BP%7D%7D+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%28%5C%7C+%5CPhi_%7BX%7D+-+%5CPhi_%7BP%7D+%5C%7C_%7B%5Cinfty%7D%29+%3D+O%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D+%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%282%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| \Phi_{X} - \Phi_{P} \|_{\infty}) = O\left(\sqrt{\frac{1}{n}} \right). \ \ \ \ \ (2)"/></p>
<p><a name="eqdkw"/><a name="eqdkw"/><a name="eqdkw"/></p>
<p><b> 1.1. Private CDF Estimation </b></p>
<blockquote><p><b>Theorem 1</b> <em> <a name="thmcdf-ub"/> For every <img alt="{n \in {\mathbb N}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%5Cin+%7B%5Cmathbb+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n \in {\mathbb N}}"/> and every <img alt="{\epsilon,\delta &gt; 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%2C%5Cdelta+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon,\delta &gt; 0}"/>, there exists an <img alt="{(\epsilon,\delta)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28%5Cepsilon%2C%5Cdelta%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(\epsilon,\delta)}"/>-differentially private mechanism <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> such that </em></p>
<p align="center"><img alt="\displaystyle \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}) = O\left(\sqrt{\frac{1}{n}} + \frac{\log^{3/2}(D) \log^{1/2}(1/\delta)}{\epsilon n} \right). \ \ \ \ \ (3)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cmax_%7BP+%5Cin+%5Cmathcal%7BP%7D%7D+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%28%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BP%7D+%5C%7C_%7B%5Cinfty%7D%29+%3D+O%5Cleft%28%5Csqrt%7B%5Cfrac%7B1%7D%7Bn%7D%7D+%2B+%5Cfrac%7B%5Clog%5E%7B3%2F2%7D%28D%29+%5Clog%5E%7B1%2F2%7D%281%2F%5Cdelta%29%7D%7B%5Cepsilon+n%7D+%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%283%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}) = O\left(\sqrt{\frac{1}{n}} + \frac{\log^{3/2}(D) \log^{1/2}(1/\delta)}{\epsilon n} \right). \ \ \ \ \ (3)"/></p>
</blockquote>
<p><em>Proof:</em> Assume without loss of generality that <img alt="{D = 2^{d}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD+%3D+2%5E%7Bd%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D = 2^{d}}"/> for an integer <img alt="{d \geq 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd+%5Cgeq+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d \geq 1}"/>. Let <img alt="{X_{1 \cdots n} \sim P}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_{1 \cdots n} \sim P}"/> be a sample. By the triangle inequality, we have</p>
<p align="center"><img alt="\displaystyle \begin{array}{rll} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}{\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}} &amp;\leq{} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| \Phi_{X} - \Phi_{P} \|_{\infty} + \| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}) \\ &amp;\leq{} O(\sqrt{1/n}) + \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}), \end{array} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cbegin%7Barray%7D%7Brll%7D+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%7B%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BP%7D+%5C%7C_%7B%5Cinfty%7D%7D+%26%5Cleq%7B%7D+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%28%5C%7C+%5CPhi_%7BX%7D+-+%5CPhi_%7BP%7D+%5C%7C_%7B%5Cinfty%7D+%2B+%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BX%7D+%5C%7C_%7B%5Cinfty%7D%29+%5C%5C+%26%5Cleq%7B%7D+O%28%5Csqrt%7B1%2Fn%7D%29+%2B+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%28%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BX%7D+%5C%7C_%7B%5Cinfty%7D%29%2C+%5Cend%7Barray%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \begin{array}{rll} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}{\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}} &amp;\leq{} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| \Phi_{X} - \Phi_{P} \|_{\infty} + \| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}) \\ &amp;\leq{} O(\sqrt{1/n}) + \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}), \end{array} "/></p>
<p>so we will focus on constructing <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> to approximate <img alt="{\Phi_{X}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi_%7BX%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi_{X}}"/>.</p>
<p>For any <img alt="{\ell = 0,\dots,d-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell+%3D+0%2C%5Cdots%2Cd-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell = 0,\dots,d-1}"/> and <img alt="{j = 1,\dots,2^{d - \ell}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+1%2C%5Cdots%2C2%5E%7Bd+-+%5Cell%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = 1,\dots,2^{d - \ell}}"/>, consider the statistics</p>
<p align="center"><img alt="\displaystyle f_{\ell,j}(X_{1 \cdots n}) = \frac{1}{n} \sum_{i=1}^{n} {\bf 1}\{ (j-1)2^{\ell} + 1 \leq X_i \leq j 2^{\ell} \}. \ \ \ \ \ (4)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+f_%7B%5Cell%2Cj%7D%28X_%7B1+%5Ccdots+n%7D%29+%3D+%5Cfrac%7B1%7D%7Bn%7D+%5Csum_%7Bi%3D1%7D%5E%7Bn%7D+%7B%5Cbf+1%7D%5C%7B+%28j-1%292%5E%7B%5Cell%7D+%2B+1+%5Cleq+X_i+%5Cleq+j+2%5E%7B%5Cell%7D+%5C%7D.+%5C+%5C+%5C+%5C+%5C+%284%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle f_{\ell,j}(X_{1 \cdots n}) = \frac{1}{n} \sum_{i=1}^{n} {\bf 1}\{ (j-1)2^{\ell} + 1 \leq X_i \leq j 2^{\ell} \}. \ \ \ \ \ (4)"/></p>
<p>Let <img alt="{f : \{1,\dots,D\}^n \rightarrow [0,1]^{2D - 2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf+%3A+%5C%7B1%2C%5Cdots%2CD%5C%7D%5En+%5Crightarrow+%5B0%2C1%5D%5E%7B2D+-+2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f : \{1,\dots,D\}^n \rightarrow [0,1]^{2D - 2}}"/> be the function whose output consists of all <img alt="{2D-2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2D-2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2D-2}"/> such counts. To decipher this notation, for a given <img alt="{\ell}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell}"/>, the counts <img alt="{f_{\ell,\cdot}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf_%7B%5Cell%2C%5Ccdot%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f_{\ell,\cdot}}"/> form a histogram of <img alt="{X_{1 \cdots n}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX_%7B1+%5Ccdots+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X_{1 \cdots n}}"/> using consecutive bins of width <img alt="{2^{\ell}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5E%7B%5Cell%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2^{\ell}}"/>, and we consider the <img alt="{\log(D)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog%28D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log(D)}"/> histograms of geometrically increasing width <img alt="{1,2,4,\dots,D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%2C2%2C4%2C%5Cdots%2CD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1,2,4,\dots,D}"/>. First, we claim that the function <img alt="{f}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f}"/> has low sensitivity—for adjacent samples <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X}"/> and <img alt="{X'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X'}"/>,</p>
<p align="center"><img alt="\displaystyle \| f(X) - f(X') \|_2^2 \leq \frac{2 \log(D)}{n^2}. \ \ \ \ \ (5)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5C%7C+f%28X%29+-+f%28X%27%29+%5C%7C_2%5E2+%5Cleq+%5Cfrac%7B2+%5Clog%28D%29%7D%7Bn%5E2%7D.+%5C+%5C+%5C+%5C+%5C+%285%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \| f(X) - f(X') \|_2^2 \leq \frac{2 \log(D)}{n^2}. \ \ \ \ \ (5)"/></p>
<p>Thus, we can use the Gaussian mechanism:</p>
<p align="center"><img alt="\displaystyle M'(X_{1 \cdots n}) = f(X_{1 \cdots n}) + \mathcal{N}\left(0, \frac{2 \log(D) \log(1/\delta)}{\epsilon^2 n^2} \cdot \mathbb{I}_{2D \times 2D}\right). \ \ \ \ \ (6)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+M%27%28X_%7B1+%5Ccdots+n%7D%29+%3D+f%28X_%7B1+%5Ccdots+n%7D%29+%2B+%5Cmathcal%7BN%7D%5Cleft%280%2C+%5Cfrac%7B2+%5Clog%28D%29+%5Clog%281%2F%5Cdelta%29%7D%7B%5Cepsilon%5E2+n%5E2%7D+%5Ccdot+%5Cmathbb%7BI%7D_%7B2D+%5Ctimes+2D%7D%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%286%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle M'(X_{1 \cdots n}) = f(X_{1 \cdots n}) + \mathcal{N}\left(0, \frac{2 \log(D) \log(1/\delta)}{\epsilon^2 n^2} \cdot \mathbb{I}_{2D \times 2D}\right). \ \ \ \ \ (6)"/></p>
<p>As we will argue, there exists a matrix <img alt="{A \in {\mathbb R}^{2D \times 2D}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+%5Cin+%7B%5Cmathbb+R%7D%5E%7B2D+%5Ctimes+2D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A \in {\mathbb R}^{2D \times 2D}}"/> such that <img alt="{\Phi_{X} = A \cdot f(X_{1 \cdots n})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi_%7BX%7D+%3D+A+%5Ccdot+f%28X_%7B1+%5Ccdots+n%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi_{X} = A \cdot f(X_{1 \cdots n})}"/>. We will let <img alt="{M(X_{1 \cdots n}) = A \cdot M'(X_{1 \cdots n})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%28X_%7B1+%5Ccdots+n%7D%29+%3D+A+%5Ccdot+M%27%28X_%7B1+%5Ccdots+n%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M(X_{1 \cdots n}) = A \cdot M'(X_{1 \cdots n})}"/>. Since differential privacy is closed under post-processing, <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> inherits the privacy of <img alt="{M'}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%27%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M'}"/>.</p>
<p>We will now show how to construct the matrix <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and analyze the error of <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>. For any <img alt="{j = 1,\dots,D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+1%2C%5Cdots%2CD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = 1,\dots,D}"/>, we can form the interval <img alt="{\{1,\dots,j\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C%5Cdots%2Cj%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,\dots,j\}}"/> as the union of at most <img alt="{\log D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log D}"/> disjoint intervals of the form we’ve computed, and therefore we can obtain <img alt="{\Phi_{X}(j)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi_%7BX%7D%28j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi_{X}(j)}"/> as the sum of at most <img alt="{\log D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog+D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log D}"/> of the entries of <img alt="{f(X)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28X%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(X)}"/>. For example, if <img alt="{j = 5}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj+%3D+5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j = 5}"/> then we can write</p>
<p align="center"><img alt="\displaystyle \{1,\dots,7\} = \{1,\dots,4\} \cup \{5,6\} \cup \{7\} \ \ \ \ \ (7)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5C%7B1%2C%5Cdots%2C7%5C%7D+%3D+%5C%7B1%2C%5Cdots%2C4%5C%7D+%5Ccup+%5C%7B5%2C6%5C%7D+%5Ccup+%5C%7B7%5C%7D+%5C+%5C+%5C+%5C+%5C+%287%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \{1,\dots,7\} = \{1,\dots,4\} \cup \{5,6\} \cup \{7\} \ \ \ \ \ (7)"/></p>
<p>and</p>
<p align="center"><img alt="\displaystyle \Phi_{X}(5) = f_{2,1} + f_{1,3} + f_{0,7}. \ \ \ \ \ (8)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPhi_%7BX%7D%285%29+%3D+f_%7B2%2C1%7D+%2B+f_%7B1%2C3%7D+%2B+f_%7B0%2C7%7D.+%5C+%5C+%5C+%5C+%5C+%288%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \Phi_{X}(5) = f_{2,1} + f_{1,3} + f_{0,7}. \ \ \ \ \ (8)"/></p>
<p>See the following diagram for a visual representation of the decomposition.</p>
<p><img alt="bin-tree-mech" class=" wp-image-142 aligncenter" height="300" src="https://kamathematics.files.wordpress.com/2020/04/bin-tree-mech.png?w=547&amp;h=300" width="547"/></p>
<p>This shows hierarchical decomposition of the domain <img alt="{\{1,\dots,8\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C%5Cdots%2C8%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,\dots,8\}}"/> using 14 intervals. The highlighted squares represent the interval <img alt="{\{1,\dots,7\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C%5Cdots%2C7%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,\dots,7\}}"/> and the highlighted circles show the decomposition of this interval into a union of <img alt="{3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{3}"/> intervals in the tree.</p>
<p>Thus we can construct the matrix <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> using this information. Note that each entry of <img alt="{A f(X)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA+f%28X%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A f(X)}"/> is the sum of at most <img alt="{\log(D)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog%28D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log(D)}"/> entries of <img alt="{f(X)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28X%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(X)}"/>. Thus, if we use the output of <img alt="{M'(X_{1 \cdots n})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%27%28X_%7B1+%5Ccdots+n%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M'(X_{1 \cdots n})}"/> in place of <img alt="{f(X_{1 \cdots n})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28X_%7B1+%5Ccdots+n%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(X_{1 \cdots n})}"/>, for every <img alt="{j}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{j}"/> we obtain</p>
<p align="center"><img alt="\displaystyle \Phi_{X}(j) + \mathcal{N}(0, \sigma^2) \quad \textrm{for} \quad \sigma^2 = \frac{ 2 \log^2(D) \log(1/\delta)}{\epsilon^2 n^2}. \ \ \ \ \ (9)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5CPhi_%7BX%7D%28j%29+%2B+%5Cmathcal%7BN%7D%280%2C+%5Csigma%5E2%29+%5Cquad+%5Ctextrm%7Bfor%7D+%5Cquad+%5Csigma%5E2+%3D+%5Cfrac%7B+2+%5Clog%5E2%28D%29+%5Clog%281%2F%5Cdelta%29%7D%7B%5Cepsilon%5E2+n%5E2%7D.+%5C+%5C+%5C+%5C+%5C+%289%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \Phi_{X}(j) + \mathcal{N}(0, \sigma^2) \quad \textrm{for} \quad \sigma^2 = \frac{ 2 \log^2(D) \log(1/\delta)}{\epsilon^2 n^2}. \ \ \ \ \ (9)"/></p>
<p>Applying standard bounds on the expected supremum of a Gaussian process, we have</p>
<p align="center"><img alt="\displaystyle \mathop{\mathbb E}(\| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}) = O( \sigma \sqrt{\log D}) = O\left(\frac{\log^{3/2}(D) \log^{1/2}(1/\delta)}{\epsilon n} \right). \ \ \ \ \ (10)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cmathop%7B%5Cmathbb+E%7D%28%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BX%7D+%5C%7C_%7B%5Cinfty%7D%29+%3D+O%28+%5Csigma+%5Csqrt%7B%5Clog+D%7D%29+%3D+O%5Cleft%28%5Cfrac%7B%5Clog%5E%7B3%2F2%7D%28D%29+%5Clog%5E%7B1%2F2%7D%281%2F%5Cdelta%29%7D%7B%5Cepsilon+n%7D+%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%2810%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \mathop{\mathbb E}(\| M(X_{1 \cdots n}) - \Phi_{X} \|_{\infty}) = O( \sigma \sqrt{\log D}) = O\left(\frac{\log^{3/2}(D) \log^{1/2}(1/\delta)}{\epsilon n} \right). \ \ \ \ \ (10)"/></p>
<p><img alt="\Box" class="latex" src="https://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\Box"/></p>
<p><b> 1.2. Why Restrict the Domain? </b></p>
<p>A drawback of the estimator we constructed is that it only applies to distributions of finite support <img alt="{\{1,2,\dots,D\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C2%2C%5Cdots%2CD%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,2,\dots,D\}}"/>, albeit with a relatively mild dependence on the support size. If privacy isn’t a concern, then no such restriction is necessary, as the bound <a href="https://kamathematics.wordpress.com/feed/#eqdkw">(2)</a> applies equally well to any distribution over <img alt="{{\mathbb R}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Cmathbb+R%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{\mathbb R}}"/>. Can we construct a differentially private estimator for distributions with infinite support?</p>
<p>Perhaps surprisingly, the answer to this question is no! Any differentially private estimator for the CDF of the distribution has to have a rate that depends on the support size, and cannot give non-trivial rates for distributions with infinite support.</p>
<blockquote><p><b>Theorem 2 ([<a href="https://kamathematics.wordpress.com/feed/#BNSV15">BNSV15</a>])</b> <em> <a name="thmcdf-lb"/> If <img alt="{\mathcal{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathcal%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathcal{P}}"/> consists of all distributions on <img alt="{\{1,\dots,D\}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B1%2C%5Cdots%2CD%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{1,\dots,D\}}"/>, then </em></p>
<p align="center"><img alt="\displaystyle \min_{M \in \mathcal{M}_{1, \frac{1}{n}}} \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}) = \Omega\left(\frac{\log^* D}{n} \right). \ \ \ \ \ (11)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Cmin_%7BM+%5Cin+%5Cmathcal%7BM%7D_%7B1%2C+%5Cfrac%7B1%7D%7Bn%7D%7D%7D+%5Cmax_%7BP+%5Cin+%5Cmathcal%7BP%7D%7D+%5Cmathop%7B%5Cmathbb+E%7D_%7BX_%7B1+%5Ccdots+n%7D+%5Csim+P%7D%28%5C%7C+M%28X_%7B1+%5Ccdots+n%7D%29+-+%5CPhi_%7BP%7D+%5C%7C_%7B%5Cinfty%7D%29+%3D+%5COmega%5Cleft%28%5Cfrac%7B%5Clog%5E%2A+D%7D%7Bn%7D+%5Cright%29.+%5C+%5C+%5C+%5C+%5C+%2811%29&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle \min_{M \in \mathcal{M}_{1, \frac{1}{n}}} \max_{P \in \mathcal{P}} \mathop{\mathbb E}_{X_{1 \cdots n} \sim P}(\| M(X_{1 \cdots n}) - \Phi_{P} \|_{\infty}) = \Omega\left(\frac{\log^* D}{n} \right). \ \ \ \ \ (11)"/></p>
</blockquote>
<p>The notation <img alt="{\log^* D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog%5E%2A+D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log^* D}"/> refers to the <a href="https://en.wikipedia.org/wiki/Iterated_logarithm">iterated logarithm</a>.</p>
<p>We emphasize that this theorem shouldn’t meet with too much alarm, as <img alt="{\log^* D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog%5E%2A+D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log^* D}"/> grows remarkably slowly with <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/>. There are differentially private CDF estimators that achieve very mild dependence on <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> [<a href="https://kamathematics.wordpress.com/feed/#BNS13">BNS13</a>, <a href="https://kamathematics.wordpress.com/feed/#BNSV15">BNSV15</a>], including one nearly matching the lower bound in Theorem <a href="https://kamathematics.wordpress.com/feed/#thmcdf-lb">2</a>. Moreover, if we want to estimate a distribution over <img alt="{{\mathbb R}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5Cmathbb+R%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{\mathbb R}}"/>, and are willing to make some mild regularity conditions on the distribution, then we can approximate it by a distribution with finite support and only increase the rate slightly. However, what Theorem <a href="https://kamathematics.wordpress.com/feed/#thmcdf-lb">2</a> shows is that there is no “one-size-fits-all” solution to private CDF estimation that achieves similar guarantees to the empirical CDF. That is, the right algorithm has to be tailored somewhat to the application and the assumptions we can make about the distribution.</p>
<p><b>2. More Private Statistics </b></p>
<p>Of course, the story doesn’t end here! There’s a whole wide world of differentially private statistics beyond what we’ve mentioned already. We proceed to survey just a few other directions of study in private statistics.</p>
<p><b> 2.1. Parameter and Distribution Estimation </b></p>
<p>A number of the early works in differential privacy give methods for differentially private statistical estimation for i.i.d. data. The earliest works [<a href="https://kamathematics.wordpress.com/feed/#DN03">DN03</a>, <a href="https://kamathematics.wordpress.com/feed/#DN04">DN04</a>, <a href="https://kamathematics.wordpress.com/feed/#BDMN05">BDMN05</a>, <a href="https://kamathematics.wordpress.com/feed/#DMNS06">DMNS06</a>], which introduced the Gaussian mechanism, among other foundational results, can be thought of as methods for estimating the mean of a distribution over the hypercube <img alt="{\{0,1\}^d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Ed%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{0,1\}^d}"/> in the <img alt="{\ell_\infty}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell_\infty}"/> norm. Tight lower bounds for this problem follow from the tracing attacks introduced in [<a href="https://kamathematics.wordpress.com/feed/#BUV14">BUV14</a>, <a href="https://kamathematics.wordpress.com/feed/#DSSUV15">DSSUV15</a>, <a href="https://kamathematics.wordpress.com/feed/#BSU17">BSU17</a>, <a href="https://kamathematics.wordpress.com/feed/#SU17a">SU17a</a>, <a href="https://kamathematics.wordpress.com/feed/#SU17b">SU17b</a>]. A very recent work of Acharya, Sun, and Zhang [<a href="https://kamathematics.wordpress.com/feed/#ASZ20">ASZ20</a>] adapts classical tools for proving estimation and testing lower bounds (lemmata of Assouad, Fano, and Le Cam) to the differentially private setting. Steinke and Ullman [<a href="https://kamathematics.wordpress.com/feed/#SU17b">SU17b</a>] give tight minimax lower bounds for the weaker guarantee of selecting the largest coordinates of the mean, which were refined by Cai, Wang, and Zhang [<a href="https://kamathematics.wordpress.com/feed/#CWZ19">CWZ19</a>] to give lower bounds for sparse mean-estimation problems.</p>
<p>Nissim, Raskhodnikova, and Smith introduced the highly general sample-and-aggregate paradigm, which they apply to several learning problems (e.g., learning mixtures of Gaussians) [<a href="https://kamathematics.wordpress.com/feed/#NRS07">NRS07</a>]. Later, Smith [<a href="https://kamathematics.wordpress.com/feed/#Smi11">Smi11</a>] showed that this paradigm can be used to transform any estimator for any asymptotically normal, univariate statistic over a bounded data domain into a differentially private one with the same asymptotic convergence rate.</p>
<p>Subsequent work has focused on both relaxing the assumptions in [<a href="https://kamathematics.wordpress.com/feed/#Smi11">Smi11</a>], particularly boundedness, and on giving finite-sample guarantees. Karwa and Vadhan investigated the problem of Gaussian mean estimation, proving the first near-optimal bounds for this setting [<a href="https://kamathematics.wordpress.com/feed/#KV18">KV18</a>]. In particular, exploiting concentration properties of Gaussian data allows us to achieve non-trivial results even with unbounded data, which is impossible in general. Following this, Kamath, Li, Singhal, and Ullman moved to the multivariate setting, investigating the estimation of Gaussians and binary product distributions in total variation distance [<a href="https://kamathematics.wordpress.com/feed/#KLSU19">KLSU19</a>]. In certain cases (i.e., Gaussians with identity covariance), this is equivalent to mean estimation in <img alt="{\ell_2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cell_2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ell_2}"/>-distance, though not always. For example, for binary product distribution, one must estimate the mean in a type of <img alt="{\chi^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cchi%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\chi^2}"/>-distance instead. The perspective of distribution estimation rather than parameter estimation can be valuable. Bun, Kamath, Steinke, and Wu [<a href="https://kamathematics.wordpress.com/feed/#BKSW19">BKSW19</a>] develop a primitive for private hypothesis selection, which they apply to learn any coverable class of distributions under pure differential privacy. Through the lens of distribution estimation, their work implies an upper bound for mean estimation of binary product distributions that bypasses lower bounds for the same problem in the empirical setting. In addition to work on mean estimation in the sub-Gaussian setting, such as the results discussed earlier, mean estimation has also been studied under weaker moment conditions [<a href="https://kamathematics.wordpress.com/feed/#BS19">BS19</a>, <a href="https://kamathematics.wordpress.com/feed/#KSU20">KSU20</a>]. Beyond these settings, there has also been study of estimation of discrete multinomials, including estimation in Kolmogorov distance [<a href="https://kamathematics.wordpress.com/feed/#BNSV15">BNSV15</a>] and in total variation distance for structured distributions [<a href="https://kamathematics.wordpress.com/feed/#DHS15">DHS15</a>], and parameter estimation of Markov Random Fields [<a href="https://kamathematics.wordpress.com/feed/#ZKKW20">ZKKW20</a>].</p>
<p>A different approach to constructing differentially private estimators is based on robust statistics. This approah begins with the influential work of Dwork and Lei [<a href="https://kamathematics.wordpress.com/feed/#DL09">DL09</a>], which introduced the propose-test-release framework, and applied to estimating robust statistics such as the median and interquartile range. While the definitions in robust statistics and differential privacy are semantically similar, formal connections between the two remain relatively scant, which suggests a productive area for future study.</p>
<p><b> 2.2. Hypothesis Testing </b></p>
<p>An influential work of Homer et al. [<a href="https://kamathematics.wordpress.com/feed/#HSRDTMPSNC08">HSRDTMPSNC08</a>] demonstrated the vulnerability of classical statistics in a genomic setting, showing that certain <img alt="{\chi^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cchi%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\chi^2}"/>-statistics on many different variables could allow an attacker to determine the presence of an individual in a genome-wide association study (GWAS). Motivated by these concerns, an early line of work from the statistics community focused on addressing these issues [<a href="https://kamathematics.wordpress.com/feed/#VS09">VS09</a>, <a href="https://kamathematics.wordpress.com/feed/#USF13">USF13</a>, <a href="https://kamathematics.wordpress.com/feed/#YFSU14">YFSU14</a>].</p>
<p>More recently, work on private hypothesis testing can be divided roughly into two lines. The first focuses on the minimax sample complexity, in a line initiated by Cai, Daskalakis, and Kamath [<a href="https://kamathematics.wordpress.com/feed/#CDK17">CDK17</a>], who give an algorithm for privately testing goodness-of-fit (more precisely, a statistician might refer to this problem as one-sample testing of multinomial data). A number of subsequent works have essentially settled the complexity of this problem [<a href="https://kamathematics.wordpress.com/feed/#ASZ18">ASZ18</a>, <a href="https://kamathematics.wordpress.com/feed/#ADR18">ADR18</a>], giving tight upper and lower bounds. Other papers in this line study related problems, including the two-sample version of the problem, independence testing, and goodness-of-fit testing for multivariate product distributions [<a href="https://kamathematics.wordpress.com/feed/#ASZ18">ASZ18</a>, <a href="https://kamathematics.wordpress.com/feed/#ADR18">ADR18</a>, <a href="https://kamathematics.wordpress.com/feed/#ADKR19">ADKR19</a>, <a href="https://kamathematics.wordpress.com/feed/#CKMUZ19">CKMUZ19</a>]. A related paper studies the minimax sample complexity of property <em>estimation</em>, rather than testing of discrete distributions, including support size and entropy [<a href="https://kamathematics.wordpress.com/feed/#AKSZ18">AKSZ18</a>]. Other recent works in this vein focus on testing of simple hypotheses [<a href="https://kamathematics.wordpress.com/feed/#CKMTZ18">CKMTZ18</a>, <a href="https://kamathematics.wordpress.com/feed/#CKMSU19">CKMSU19</a>]. In particular [<a href="https://kamathematics.wordpress.com/feed/#CKMSU19">CKMSU19</a>] proves an analogue of the Neyman-Pearson Lemma for differentially private testing of simple hypotheses. A paper of Awan and Slavkovic [<a href="https://kamathematics.wordpress.com/feed/#AS18">AS18</a>] gives a universally optimal test when the domain size is two, however Brenner and Nissim [<a href="https://kamathematics.wordpress.com/feed/#BN14">BN14</a>] shows that such universally optimal tests cannot exist when the domain has more than two elements. A related problem in this space is private change-point detection [<a href="https://kamathematics.wordpress.com/feed/#CKMTZ18">CKMTZ18</a>, <a href="https://kamathematics.wordpress.com/feed/#CKMSU19">CKMSU19</a>, <a href="https://kamathematics.wordpress.com/feed/#CKLZ19">CKLZ19</a>] — in this setting, we are given a time series of datapoints which are sampled from a distribution, which at some point, changes to a different distribution. The goal is to (privately) determine when this point occurs.</p>
<p>Complementary to minimax hypothesis testing, a line of work [<a href="https://kamathematics.wordpress.com/feed/#WLK15">WLK15</a>, <a href="https://kamathematics.wordpress.com/feed/#GLRV16">GLRV16</a>, <a href="https://kamathematics.wordpress.com/feed/#KR17">KR17</a>, <a href="https://kamathematics.wordpress.com/feed/#KSF17">KSF17</a>, <a href="https://kamathematics.wordpress.com/feed/#CBRG18">CBRG18</a>, <a href="https://kamathematics.wordpress.com/feed/#SGGRGB19">SGGRGB19</a>, <a href="https://kamathematics.wordpress.com/feed/#CKSBG19">CKSBG19</a>] designs differentially private versions of popular test statistics for testing goodness-of-fit, closeness, and independence, as well as private ANOVA, focusing on the performance at small sample sizes. Work by Wang et al. [<a href="https://kamathematics.wordpress.com/feed/#WKLK18">WKLK18</a>] focuses on generating statistical approximating distributions for differentially private statistics, which they apply to hypothesis testing problems.</p>
<p><b> 2.3. Differential Privacy on Graphs </b></p>
<p>There is a significant amount of work on differentially private analysis of graphs. We remark that these algorithms can satisfy either edge or node differential privacy. The former (easier) guarantee defines a neighboring graph to be one obtained by adding or removing a single edge, while in the latter (harder) setting, a neighboring graph is one that can be obtained by modifying the set of edges connected to a single node. The main challenge in this area is that most graph statistics can have high sensitivity in the worst-case.</p>
<p>The initial works in this area focused on the empirical setting, and goals range from counting subgraphs [<a href="https://kamathematics.wordpress.com/feed/#KRSY11">KRSY11</a>, <a href="https://kamathematics.wordpress.com/feed/#BBDS13">BBDS13</a>, <a href="https://kamathematics.wordpress.com/feed/#KNRS13">KNRS13</a>, <a href="https://kamathematics.wordpress.com/feed/#CZ13">CZ13</a>, <a href="https://kamathematics.wordpress.com/feed/#RS16">RS16</a>] to outputting a privatized graph which approximates the original [<a href="https://kamathematics.wordpress.com/feed/#GRU12">GRU12</a>, <a href="https://kamathematics.wordpress.com/feed/#BBDS12">BBDS12</a>, <a href="https://kamathematics.wordpress.com/feed/#Upa13">Upa13</a>, <a href="https://kamathematics.wordpress.com/feed/#AU19">AU19</a>, <a href="https://kamathematics.wordpress.com/feed/#EKKL20">EKKL20</a>]. In contrast to the setting discussed in most of this series, it seems that there are larger qualitative differences between the study of empirical and population statistics due to the fact that many graph statistics have high worst-case sensitivity, but may have smaller sensitivity on typical graphs from many natural models.</p>
<p>In the population statistics setting, recent work has focused on parameter estimation of the underlying random graph model. So far this work has given estimators for the <img alt="{\beta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbeta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\beta}"/>-model [<a href="https://kamathematics.wordpress.com/feed/#KS16">KS16</a>] and graphons [<a href="https://kamathematics.wordpress.com/feed/#BCS15">BCS15</a>,<a href="https://kamathematics.wordpress.com/feed/#BCSZ18">BCSZ18</a>]. Graphons are a generalization of the stochastic block model, which is, in turn, a generalization of the Erdös-Rényi model. Interestingly, the methods of Lipschitz-extensions introduced in the empirical setting by [<a href="https://kamathematics.wordpress.com/feed/#BBDS13">BBDS13</a>, <a href="https://kamathematics.wordpress.com/feed/#KNRS13">KNRS13</a>] are the main tool used in the statistical setting as well. While the first works on private graphon estimation were not computationally efficient, a recent focus has been on obviating these issues for certain important cases, such as the Erdös-Rényi setting [<a href="https://kamathematics.wordpress.com/feed/#SU19">SU19</a>].</p>
<p><b>Bibliography</b></p>
<p><a name="ADKR19"/>[ADKR19] Maryam Aliakbarpour, Ilias Diakonikolas, Daniel M. Kane, and Ronitt Rubinfeld. Private testing of distributions via sample permutations. NeurIPS ’19.</p>
<p><a name="ADR18"/>[ADR18] Maryam Aliakbarpour, Ilias Diakonikolas, and Ronitt Rubinfeld. Differentially private identity and closeness testing of discrete distributions. ICML ’18.</p>
<p><a name="AKSZ18"/>[AKSZ18] Jayadev Acharya, Gautam Kamath, Ziteng Sun, and Huanyu Zhang. Inspectre: Privately estimating the unseen. ICML ’18.</p>
<p><a name="AS18"/>[AS18] Jordan Awan and Aleksandra Slavković. Differentially private uniformly most powerful tests for binomial data. NeurIPS ’18.</p>
<p><a name="ASZ18"/>[ASZ18] Jayadev Acharya, Ziteng Sun, and Huanyu Zhang. Differentially private testing of identity and closeness of discrete distributions. NeurIPS ’18.</p>
<p><a name="ASZ20"/>[ASZ20] Jayadev Acharya, Ziteng Sun, and Huanyu Zhang. Differentially private Assouad, Fano, and Le Cam. arXiv, 2004.06830, 2020.</p>
<p><a name="AU19"/>[AU19] Raman Arora and Jalaj Upadhyay. On differentially private graph sparsification and applications. NeurIPS ’19.</p>
<p><a name="BBDS12"/>[BBDS12] Jeremiah Blocki, Avrim Blum, Anupam Datta, and Or Sheffet. The Johnson-Lindenstrauss transform itself preserves differential privacy. FOCS ’12.</p>
<p><a name="BBDS13"/>[BBDS13] Jeremiah Blocki, Avrim Blum, Anupam Datta, and Or Sheffet. Differentially private data analysis of social networks via restricted sensitivity. ITCS ’13.</p>
<p><a name="BCS15"/>[BCS15] Christian Borgs, Jennifer Chayes, and Adam Smith. Private graphon estimation for sparse graphs. NIPS ’15.</p>
<p><a name="BCSZ18"/>[BCSZ18] Christian Borgs, Jennifer Chayes, Adam Smith, and Ilias Zadik. Revealing network structure, confidentially: Improved rates for node-private graphon estimation. FOCS ’18.</p>
<p><a name="BDMN05"/>[BDMN05] Avrim Blum, Cynthia Dwork, Frank McSherry, and Kobbi Nissim. Practical privacy: The SuLQ framework. PODS ’05.</p>
<p><a name="BKSW19"/>[BKSW19] Mark Bun, Gautam Kamath, Thomas Steinke, and Zhiwei Steven Wu. Private hypothesis selection. NeurIPS ’19.</p>
<p><a name="BN14"/>[BN14] Hai Brenner and Kobbi Nissim. Impossibility of differentially private universally optimal mechanisms. SIAM Journal on Computing, 43(5), 2014.</p>
<p><a name="BNS13"/>[BNS13] Amos Beimel, Kobbi Nissim, and Uri Stemmer. Private learning and sanitization: Pure vs. approximate differential privacy. APPROX-RANDOM ’13.</p>
<p><a name="BNSV15"/>[BNSV15] Mark Bun, Kobbi Nissim, Uri Stemmer, and Salil Vadhan. Differentially private release and learning of threshold functions. FOCS ’15.</p>
<p><a name="BS19"/>[BS19] Mark Bun and Thomas Steinke. Average-case averages: Private algorithms for smooth sensitivity and mean estimation. NeurIPS ’19.</p>
<p><a name="BSU17"/>[BSU17] Mark Bun, Thomas Steinke, and Jonathan Ullman. Make up your mind: The price of online queries in differential privacy. SODA ’17.</p>
<p><a name="BUV14"/>[BUV14] Mark Bun, Jonathan Ullman, and Salil Vadhan. Fingerprinting codes and the price of approximate differential privacy. STOC ’14.</p>
<p><a name="CBRG18"/>[CBRG18] Zachary Campbell, Andrew Bray, Anna Ritz, and Adam Groce. Differentially private ANOVA testing. ICDIS ’18.</p>
<p><a name="CDK17"/>[CDK17] Bryan Cai, Constantinos Daskalakis, and Gautam Kamath. Priv’it: Private and sample efficient identity testing. ICML ’17.</p>
<p><a name="CKLZ19"/>[CKLZ19] Rachel Cummings, Sara Krehbiel, Yuliia Lut, and Wanrong Zhang. Privately detecting changes in unknown distributions. arXiv, 1910.01327, 2019.</p>
<p><a name="CKMSU19"/>[CKMSU19] Clément L. Canonne, Gautam Kamath, Audra McMillan, Adam Smith, and Jonathan Ullman. The structure of optimal private tests for simple hypotheses. STOC ’19.</p>
<p><a name="CKMTZ18"/>[CKMTZ18] Rachel Cummings, Sara Krehbiel, Yajun Mei, Rui Tuo, and Wanrong Zhang. Differentially private change-point detection. NeurIPS ’18.</p>
<p><a name="CKMUZ19"/>[CKMUZ19] Clément L. Canonne, Gautam Kamath, Audra McMillan, Jonathan Ullman, and Lydia Zakynthinou. Private identity testing for high-dimensional distributions. arXiv, 1905.11947, 2019.</p>
<p><a name="CKSBG19"/>[CKSBG19] Simon Couch, Zeki Kazan, Kaiyan Shi, Andrew Bray, and Adam Groce. Differentially private nonparametric hypothesis testing. CCS ’19.</p>
<p><a name="CWZ19"/>[CWZ19] T. Tony Cai, Yichen Wang, and Linjun Zhang. The cost of privacy: Optimal rates of convergence for parameter estimation with differential privacy. arXiv, 1902.04495, 2019.</p>
<p><a name="CZ13"/>[CZ13] Shixi Chen and Shuigeng Zhou. Recursive mechanism: Towards node differential privacy and unrestricted joins. SIGMOD ’13.</p>
<p><a name="DHS15"/>[DHS15] Ilias Diakonikolas, Moritz Hardt, and Ludwig Schmidt. Differentially private learning of structured discrete distributions. NIPS ’15.</p>
<p><a name="DKW56"/>[DKW56] Aryeh Dvoretzky, Jack Kiefer, and Jacob Wolfowitz. Asymptotic minimax character of the sample distribution function and of the classical multinomial estimator. The Annals of Mathematical Statistics, 27(3), 1956.</p>
<p><a name="DL09"/>[DL09] Cynthia Dwork and Jing Lei. Differential privacy and robust statistics. STOC ’09.</p>
<p><a name="DMNS06"/>[DMNS06] Cynthia Dwork, Frank McSherry, Kobbi Nissim, and Adam Smith. Calibrating noise to sensitivity in private data analysis. TCC ’06.</p>
<p><a name="DN03"/>[DN03] Irit Dinur and Kobbi Nissim. Revealing information while preserving privacy. PODS ’03.</p>
<p><a name="DN04"/>[DN04] Cynthia Dwork and Kobbi Nissim. Privacy-preserving datamining on vertically partitioned databases. CRYPTO ’04.</p>
<p><a name="DSSUV15"/>[DSSUV15] Cynthia Dwork, Adam Smith, Thomas Steinke, Jonathan Ullman, and Salil Vadhan. Robust traceability from trace amounts. FOCS ’15.</p>
<p><a name="EKKL20"/>[EKKL20] Marek Eliáš, Michael Kapralov, Janardhan Kulkarni, and Yin Tat Lee. Differentially private release of synthetic graphs. SODA ’20.</p>
<p><a name="GLRV16"/>[GLRV16] Marco Gaboardi, Hyun-Woo Lim, Ryan M. Rogers, and Salil P. Vadhan. Differentially private chi-squared hypothesis testing: Goodness of fit and independence testing. ICML ’16.</p>
<p><a name="GRU12"/>[GRU12] Anupam Gupta, Aaron Roth, and Jonathan Ullman. Iterative constructions and private data release. TCC ’12.</p>
<p><a name="HSRDTMPSNC08"/>[HSRDTMPSNC08] Nils Homer, Szabolcs Szelinger, Margot Redman, David Duggan, Waibhav Tembe, Jill Muehling, John V. Pearson, Dietrich A. Stephan, Stanley F. Nelson, and David W. Craig. PLoS Genetics, 4(8), 2008.</p>
<p><a name="KLSU19"/>[KLSU19] Gautam Kamath, Jerry Li, Vikrant Singhal, and Jonathan Ullman. Privately learning high-dimensional distributions. COLT ’19.</p>
<p><a name="KNRS13"/>[KNRS13] Shiva Prasad Kasiviswanathan, Kobbi Nissim, Sofya Raskhodnikova, and Adam Smith. Analyzing graphs with node differential privacy. TCC ’13.</p>
<p><a name="KR17"/>[KR17] Daniel Kifer and Ryan M. Rogers. A new class of private chi-square tests. AISTATS ’17.</p>
<p><a name="KRSY11"/>[KRSY11] Vishesh Karwa, Sofya Raskhodnikova, Adam Smith, and Grigory Yaroslavtsev. Private analysis of graph structure. VLDB ’11.</p>
<p><a name="KS16"/>[KS16] Vishesh Karwa and Aleksandra Slavković. Inference using noisy degrees: Differentially private β-model and synthetic graphs. The Annals of Statistics, 44(1), 2016.</p>
<p><a name="KSF17"/>[KSF17] Kazuya Kakizaki, Jun Sakuma, and Kazuto Fukuchi. Differentially private chi-squared test by unit circle mechanism. ICML ’17.</p>
<p><a name="KSU20"/>[KSU20] Gautam Kamath, Vikrant Singhal, and Jonathan Ullman. Private mean estimation of heavy-tailed distributions. arXiv, 2002.09464, 2020.</p>
<p><a name="KV18"/>[KV18] Vishesh Karwa and Salil Vadhan. Finite sample differentially private confidence intervals. ITCS ’18.</p>
<p><a name="Mas90"/>[Mas90] Pascal Massart. The tight constant in the Dvoretzky-Kiefer-Wolfowitz inequality. The Annals of Probability, 18(3), 1990.</p>
<p><a name="NRS07"/>[NRS07] Kobbi Nissim, Sofya Raskhodnikova, and Adam Smith. Smooth sensitivity and sampling in private data analysis. STOC ’07.</p>
<p><a name="RS16"/>[RS16] Sofya Raskhodnikova and Adam D. Smith. Lipschitz extensions for node-private graph statistics and the generalized exponential mechanism. FOCS ’16.</p>
<p><a name="Smi11"/>[Smi11] Adam Smith. Privacy-preserving statistical estimation with optimal convergence rates. STOC ’11.</p>
<p><a name="SGGRGB19"/>[SGGRGB19] Marika Swanberg, Ira Globus-Harris, Iris Griffith, Anna Ritz, Adam Groce, and Andrew Bray. Improved differentially private analysis of variance. PETS ’19.</p>
<p><a name="SU17a"/>[SU17a] Thomas Steinke and Jonathan Ullman. Between pure and approximate differential privacy. Journal of Privacy and Confidentiality, 7(2), 2017.</p>
<p><a name="SU17b"/>[SU17b] Thomas Steinke and Jonathan Ullman. Tight lower bounds for differentially private selection. FOCS ’17.</p>
<p><a name="SU19"/>[SU19] Adam Sealfon and Jonathan Ullman. Efficiently estimating Erdos-Renyi graphs with node differential privacy. NeurIPS ’19.</p>
<p><a name="Upa13"/>[Upa13] Jalaj Upadhyay. Random projections, graph sparsification, and differential privacy. ASIACRYPT ’13.</p>
<p><a name="USF13"/>[USF13] Caroline Uhler, Aleksandra Slavković, and Stephen E. Fienberg. Privacy-preserving data sharing for genome-wide association studies. The Journal of Privacy and Confidentiality, 5(1), 2013.</p>
<p><a name="VS09"/>[VS09] Duy Vu and Aleksandra Slavković. Differential privacy for clinical trial data: Preliminary evaluations. ICDMW ’09.</p>
<p><a name="WKLK18"/>[WKLK18] Yue Wang, Daniel Kifer, Jaewoo Lee, and Vishesh Karwa. Statistical approximating distributions under differential privacy. The Journal of Privacy and Confidentiality, 8(1), 2018.</p>
<p><a name="WLK15"/>[WLK15] Yue Wang, Jaewoo Lee, and Daniel Kifer. Revisiting differentially private hypothesis tests for categorical data. arXiv, 1511.03376, 2015.</p>
<p><a name="YFSU14"/>[YFSU14] Fei Yu, Stephen E. Fienberg, Aleksandra B. Slavković, and Caroline Uhler. Scalable privacy-preserving data sharing methodology for genome-wide association studies. Journal of Biomedical Informatics, 50, 2014.</p>
<p><a name="ZKKW20"/>[ZKKW20] Huanyu Zhang, Gautam Kamath, Janardhan Kulkarni, and Zhiwei Steven Wu. Privately learning Markov random fields. arXiv, 2002.09463, 2020.</p></div>
    </content>
    <updated>2020-04-21T13:36:53Z</updated>
    <published>2020-04-21T13:36:53Z</published>
    <category term="Technical"/>
    <author>
      <name>Gautam</name>
    </author>
    <source>
      <id>https://kamathematics.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://kamathematics.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://kamathematics.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://kamathematics.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://kamathematics.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Kamathematics</title>
      <updated>2020-04-22T01:33:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09304</id>
    <link href="http://arxiv.org/abs/2004.09304" rel="alternate" type="text/html"/>
    <title>From graph cuts to isoperimetric inequalities: Convergence rates of Cheeger cuts on data clouds</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Nicolas Garcia Trillos, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Murray:Ryan.html">Ryan Murray</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Thorpe:Matthew.html">Matthew Thorpe</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09304">PDF</a><br/><b>Abstract: </b>In this work we study statistical properties of graph-based clustering
algorithms that rely on the optimization of balanced graph cuts, the main
example being the optimization of Cheeger cuts. We consider proximity graphs
built from data sampled from an underlying distribution supported on a generic
smooth compact manifold $M$. In this setting, we obtain high probability
convergence rates for both the Cheeger constant and the associated Cheeger cuts
towards their continuum counterparts. The key technical tools are careful
estimates of interpolation operators which lift empirical Cheeger cuts to the
continuum, as well as continuum stability estimates for isoperimetric problems.
To our knowledge the quantitative estimates obtained here are the first of
their kind.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09238</id>
    <link href="http://arxiv.org/abs/2004.09238" rel="alternate" type="text/html"/>
    <title>The complexity of approximating averages on bounded-degree graphs</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Galanis:Andreas.html">Andreas Galanis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stefankovic:Daniel.html">Daniel Stefankovic</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vigoda:Eric.html">Eric Vigoda</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09238">PDF</a><br/><b>Abstract: </b>We prove that, unless P=NP, there is no polynomial-time algorithm to
approximate within some multiplicative constant the average size of an
independent set in graphs of maximum degree 6. This is a special case of a more
general result for the hard-core model defined on independent sets weighted by
a parameter $\lambda&gt;0$. In the general setting, we prove that, unless P=NP,
for all $\Delta\geq 3$, all $\lambda&gt;\lambda_c(\Delta)$, there is no FPTAS
which applies to all graphs of maximum degree $\Delta$ for computing the
average size of the independent set in the Gibbs distribution, where
$\lambda_c(\Delta)$ is the critical point for the uniqueness/non-uniqueness
phase transition on the $\Delta$-regular tree. Moreover, we prove that for
$\lambda$ in a dense set of this non-uniqueness region the problem is NP-hard
to approximate within some constant factor. Our work extends to the
antiferromagnetic Ising model and generalizes to all 2-spin antiferromagnetic
models, establishing hardness of computing the average magnetization in the
tree non-uniqueness region.
</p>
<p>Previously, Schulman, Sinclair and Srivastava (2015) showed that it is
#P-hard to compute the average magnetization exactly, but no hardness of
approximation results were known. Hardness results of Sly (2010) and Sly and
Sun (2014) for approximating the partition function do not imply hardness of
computing averages. The new ingredient in our reduction is an intricate
construction of pairs of rooted trees whose marginal distributions at the root
agree but their derivatives disagree. The main technical contribution is
controlling what marginal distributions and derivatives are achievable and
using Cauchy's functional equation to argue existence of the gadgets.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09220</id>
    <link href="http://arxiv.org/abs/2004.09220" rel="alternate" type="text/html"/>
    <title>Parameterized Study of Steiner Tree on Unit Disk Graphs</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhore:Sujoy.html">Sujoy Bhore</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Carmi:Paz.html">Paz Carmi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kolay:Sudeshna.html">Sudeshna Kolay</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zehavi:Meirav.html">Meirav Zehavi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09220">PDF</a><br/><b>Abstract: </b>We study the Steiner Tree problem on unit disk graphs. Given a $n$ vertex
unit disk graph $G$, a subset $R\subseteq V(G)$ of $t$ vertices and a positive
integer $k$, the objective is to decide if there exists a tree $T$ in $G$ that
spans over all vertices of $R$ and uses at most $k$ vertices from $V\setminus
R$. The vertices of $R$ are referred to as terminals and the vertices of
$V(G)\setminus R$ as Steiner vertices. First, we show that the problem is
NP-Hard. Next, we prove that the Steiner Tree problem on unit disk graphs can
be solved in $n^{O(\sqrt{t+k})}$ time. We also show that the Steiner Tree
problem on unit disk graphs parameterized by $k$ has an FPT algorithm with
running time $2^{O(k)}n^{O(1)}$. In fact, the algorithms are designed for a
more general class of graphs, called clique-grid graphs. We mention that the
algorithmic results can be made to work for the Steiner Tree on disk graphs
with bounded aspect ratio. Finally, we prove that the Steiner Tree on disk
graphs parameterized by $k$ is W[1]-hard.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09163</id>
    <link href="http://arxiv.org/abs/2004.09163" rel="alternate" type="text/html"/>
    <title>Efficient Route Planning with Temporary Driving Bans, Road Closures, and Rated Parking Areas</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kleff:Alexander.html">Alexander Kleff</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schulz:Frank.html">Frank Schulz</a>, Jakob Wagenblatt, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zeitz:Tim.html">Tim Zeitz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09163">PDF</a><br/><b>Abstract: </b>We study the problem of planning routes in road networks when certain streets
or areas are closed at certain times. For heavy vehicles, such areas may be
very large since many European countries impose temporary driving bans during
the night or on weekends. In this setting, feasible routes may require waiting
at parking areas, and several feasible routes with different trade-offs between
waiting and driving detours around closed areas may exist. We propose a novel
model in which driving and waiting are assigned abstract costs, and waiting
costs are location-dependent to reflect the different quality of the parking
areas. Our goal is to find Pareto-optimal routes with regards to arrival time
at the destination and total cost. We investigate the complexity of the model
and determine a necessary constraint on the cost parameters such that the
problem is solvable in polynomial time. We present a thoroughly engineered
implementation and perform experiments on a production-grade real world data
set. The experiments show that our implementation can answer realistic queries
in around a second or less which makes it feasible for practical application.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09136</id>
    <link href="http://arxiv.org/abs/2004.09136" rel="alternate" type="text/html"/>
    <title>Robust and efficient tool path generation for poor-quality triangular mesh surface machining</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zou:Qiang.html">Qiang Zou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09136">PDF</a><br/><b>Abstract: </b>This paper presents a new method to generate iso-scallop tool paths for
triangular mesh surfaces. With the popularity of 3D scanning techniques,
scanning-derived mesh surfaces have seen a significant increase in their
application to machining. Quite often, such mesh surfaces exhibit defects such
as noises, which differentiate them from the good-quality mesh surfaces
previous research work focuses on. To generate tool paths for such poor-quality
mesh surfaces, the primary challenge lies in robustness against the defects. In
this work, a robust tool path generation method is proposed for poor-quality
mesh surfaces. In addition to robustness, the method is quite efficient,
providing the benefit of faster iterations and improved integration between
scanning and machining. The fundamental principle of the method is to convert
the tool path generation problem to the heat diffusion problem that has robust
and efficient algorithms available. The effectiveness of the method will be
demonstrated by a series of case studies and comparisons.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09129</id>
    <link href="http://arxiv.org/abs/2004.09129" rel="alternate" type="text/html"/>
    <title>Distributed Weighted Min-Cut in Nearly-Optimal Time</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dory:Michal.html">Michal Dory</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Efron:Yuval.html">Yuval Efron</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mukhopadhyay:Sagnik.html">Sagnik Mukhopadhyay</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nanongkai:Danupon.html">Danupon Nanongkai</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09129">PDF</a><br/><b>Abstract: </b>Minimum-weight cut (min-cut) is a basic measure of a network's connectivity
strength. While the min-cut can be computed efficiently in the sequential
setting [Karger STOC'96], there was no efficient way for a distributed network
to compute its own min-cut without limiting the input structure or dropping the
output quality: In the standard CONGEST model, existing algorithms with
nearly-optimal time (e.g. [Ghaffari, Kuhn, DISC'13; Nanongkai, Su, DISC'14])
can guarantee a solution that is $(1+\epsilon)$-approximation at best while the
exact $\tilde O(n^{0.8}D^{0.2} + n^{0.9})$-time algorithm [Ghaffari, Nowicki,
Thorup, SODA'20] works only on $\textit{simple}$ networks (no weights and no
parallel edges). Throughout, $n$ and $D$ denote the network's number of
vertices and hop-diameter, respectively. For the weighted case, the best bound
was $\tilde O(n)$ [Daga et al. STOC'19].
</p>
<p>In this paper, we provide an $\textit{exact}$ $\tilde O(\sqrt n + D)$-time
algorithm for computing min-cut on $\textit{weighted}$ networks. Our result
improves even the previous algorithm that works only on simple networks. Its
time complexity matches the known lower bound up to polylogarithmic factors. At
the heart of our algorithm are a combination of two kinds of
tree-decompositions and a novel structural theorem that generalizes a theorem
in Mukhopadhyay-Nanongkai [STOC'20] and, in turn, helps simplify their
algorithms.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09099</id>
    <link href="http://arxiv.org/abs/2004.09099" rel="alternate" type="text/html"/>
    <title>Dynamic Matching Algorithms in Practice</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Henzinger:Monika.html">Monika Henzinger</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Khan:Shahbaz.html">Shahbaz Khan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Paul:Richard.html">Richard Paul</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schulz:Christian.html">Christian Schulz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09099">PDF</a><br/><b>Abstract: </b>In recent years, significant advances have been made in the design and
analysis of fully dynamic maximal matching algorithms. However, these
theoretical results have received very little attention from the practical
perspective. Few of the algorithms are implemented and tested on real datasets,
and their practical potential is far from understood. In this paper, we attempt
to bridge the gap between theory and practice that is currently observed for
the fully dynamic maximal matching problem. We engineer several algorithms and
empirically study those algorithms on an extensive set of dynamic instances.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09083</id>
    <link href="http://arxiv.org/abs/2004.09083" rel="alternate" type="text/html"/>
    <title>Rapid Mixing of Glauber Dynamics up to Uniqueness via Contraction</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Zongchen.html">Zongchen Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Kuikui.html">Kuikui Liu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vigoda:Eric.html">Eric Vigoda</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09083">PDF</a><br/><b>Abstract: </b>For general antiferromagnetic 2-spin systems, including the hardcore model
and the antiferromagnetic Ising model, there is an $\mathsf{FPTAS}$ for the
partition function on graphs of maximum degree $\Delta$ when the infinite
regular tree lies in the uniqueness region by Li et al. (2013). Moreover, in
the tree non-uniqueness region, Sly (2010) showed that there is no
$\mathsf{FPRAS}$ to estimate the partition function unless
$\mathsf{NP}=\mathsf{RP}$. The algorithmic results follow from the correlation
decay approach due to Weitz (2006) or the polynomial interpolation approach
developed by Barvinok (2016). However the running time is only polynomial for
constant $\Delta$. For the hardcore model, recent work of Anari et al. (2020)
establishes rapid mixing of the simple single-site Markov chain known as the
Glauber dynamics in the tree uniqueness region. Our work simplifies their
analysis of the Glauber dynamics by considering the total pairwise influence of
a fixed vertex $v$ on other vertices, as opposed to the total influence on $v$,
thereby extending their work to all 2-spin models and improving the mixing
time.
</p>
<p>More importantly our proof ties together the three disparate algorithmic
approaches: we show that contraction of the tree recursions with a suitable
potential function, which is the primary technique for establishing efficiency
of Weitz's correlation decay approach and Barvinok's polynomial interpolation
approach, also establishes rapid mixing of the Glauber dynamics. We emphasize
that this connection holds for all 2-spin models (both antiferromagnetic and
ferromagnetic), and existing proofs for correlation decay or polynomial
interpolation immediately imply rapid mixing of Glauber dynamics. Our proof
utilizes that the graph partition function divides that of Weitz's
self-avoiding walk trees, leading to new tools for analyzing influence of
vertices.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09079</id>
    <link href="http://arxiv.org/abs/2004.09079" rel="alternate" type="text/html"/>
    <title>Isotropy and Log-Concave Polynomials: Accelerated Sampling and High-Precision Counting of Matroid Bases</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Anari:Nima.html">Nima Anari</a>, Michał Dereziński <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09079">PDF</a><br/><b>Abstract: </b>We define a notion of isotropy for discrete set distributions. If $\mu$ is a
distribution over subsets $S$ of a ground set $[n]$, we say that $\mu$ is in
isotropic position if $P[e \in S]$ is the same for all $e\in [n]$. We design a
new approximate sampling algorithm that leverages isotropy for the class of
distributions $\mu$ that have a log-concave generating polynomial; this class
includes determinantal point processes, strongly Rayleigh distributions, and
uniform distributions over matroid bases. We show that when $\mu$ is in
approximately isotropic position, the running time of our algorithm depends
polynomially on the size of the set $S$, and only logarithmically on $n$. When
$n$ is much larger than the size of $S$, this is significantly faster than
prior algorithms, and can even be sublinear in $n$. We then show how to
transform a non-isotropic $\mu$ into an equivalent approximately isotropic form
with a polynomial-time preprocessing step, accelerating subsequent sampling
times. The main new ingredient enabling our algorithms is a class of negative
dependence inequalities that may be of independent interest.
</p>
<p>As an application of our results, we show how to approximately count bases of
a matroid of rank $k$ over a ground set of $n$ elements to within a factor of
$1+\epsilon$ in time $ O((n+1/\epsilon^2)\cdot poly(k, \log n))$. This is the
first algorithm that runs in nearly linear time for fixed rank $k$, and
achieves an inverse polynomially low approximation error.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09051</id>
    <link href="http://arxiv.org/abs/2004.09051" rel="alternate" type="text/html"/>
    <title>Black-White Array: A New Data Structure for Dynamic Data Sets</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mou:Z=_George.html">Z. George Mou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09051">PDF</a><br/><b>Abstract: </b>A new array based data structure named black-white array (BWA) is introduced
as an effective and efficient alternative to the list or tree based data
structures for dynamic data set. It consists of two sub-arrays, one white and
one black of half of the size of the white. Both of them are conceptually
partitioned into segments of different ranks with the sizes grow in geometric
sequence. The layout of BWA allows easy calculation of the meta-data about the
segments, which are used extensively in the algorithms for the basic operations
of the dynamic sets. The insertion of a sequence of unordered numbers into BWA
takes amortized time logarithmic to the length of the sequence. It is also
proven that when the searched or deleted value is present in the BWA, the
asymptotic amortized cost for the operations is O(log(n)); otherwise, the time
will fall somewhere between O(log(n)) and O(log^2(n)). It is shown that the
state variable total, which records the number of values in the BWA captures
the dynamics of state transition of BWA. This fact is exploited to produce
concise, easy- to-understand, and efficient coding for the operations. As it
uses arrays as the underlying structure for dynamic set, a BWA need neither the
space to store the pointers referencing other data nodes nor the time to chase
the pointers as with any linked data structures. A C++ implementation of the
BWA is completed. The performance data were gathered and plotted, which
confirmed the theoretic analysis. The testing results showed that the amortized
time for the insert, search, and delete operations is all just between 105.949
and 5720.49 nanoseconds for BWAs of sizes ranging from 210 to 229 under various
conditions.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.09002</id>
    <link href="http://arxiv.org/abs/2004.09002" rel="alternate" type="text/html"/>
    <title>The Quantum Approximate Optimization Algorithm Needs to See the Whole Graph: A Typical Case</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Farhi:Edward.html">Edward Farhi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gamarnik:David.html">David Gamarnik</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gutmann:Sam.html">Sam Gutmann</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.09002">PDF</a><br/><b>Abstract: </b>The Quantum Approximate Optimization Algorithm can naturally be applied to
combinatorial search problems on graphs. The quantum circuit has p applications
of a unitary operator that respects the locality of the graph. On a graph with
bounded degree, with p small enough, measurements of distant qubits in the
state output by the QAOA give uncorrelated results. We focus on finding big
independent sets in random graphs with dn/2 edges keeping d fixed and n large.
Using the Overlap Gap Property of almost optimal independent sets in random
graphs, and the locality of the QAOA, we are able to show that if p is less
than a d-dependent constant times log n, the QAOA cannot do better than finding
an independent set of size .854 times the optimal for d large. Because the
logarithm is slowly growing, even at one million qubits we can only show that
the algorithm is blocked if p is in single digits. At higher p the algorithm
"sees" the whole graph and we have no indication that performance is limited.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08993</id>
    <link href="http://arxiv.org/abs/2004.08993" rel="alternate" type="text/html"/>
    <title>Summarizing Diverging String Sequences, with Applications to Chain-Letter Petitions</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Patty Commins, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liben=Nowell:David.html">David Liben-Nowell</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Tina.html">Tina Liu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tomlinson:Kiran.html">Kiran Tomlinson</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08993">PDF</a><br/><b>Abstract: </b>Algorithms to find optimal alignments among strings, or to find a
parsimonious summary of a collection of strings, are well studied in a variety
of contexts, addressing a wide range of interesting applications. In this
paper, we consider chain letters, which contain a growing sequence of
signatories added as the letter propagates. The unusual constellation of
features exhibited by chain letters (one-ended growth, divergence, and
mutation) make their propagation, and thus the corresponding reconstruction
problem, both distinctive and rich. Here, inspired by these chain letters, we
formally define the problem of computing an optimal summary of a set of
diverging string sequences. From a collection of these sequences of names, with
each sequence noisily corresponding to a branch of the unknown tree $T$
representing the letter's true dissemination, can we efficiently and accurately
reconstruct a tree $T' \approx T$? In this paper, we give efficient exact
algorithms for this summarization problem when the number of sequences is
small; for larger sets of sequences, we prove hardness and provide an efficient
heuristic algorithm. We evaluate this heuristic on synthetic data sets chosen
to emulate real chain letters, showing that our algorithm is competitive with
or better than previous approaches, and that it also comes close to finding the
true trees in these synthetic datasets.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08949</id>
    <link href="http://arxiv.org/abs/2004.08949" rel="alternate" type="text/html"/>
    <title>Quantum algorithms for computational geometry problems</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ambainis:Andris.html">Andris Ambainis</a>, Nikita Larka <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08949">PDF</a><br/><b>Abstract: </b>We study quantum algorithms for problems in computational geometry, such as
POINT-ON-3-LINES problem. In this problem, we are given a set of lines and we
are asked to find a point that lies on at least $3$ of these lines.
POINT-ON-3-LINES and many other computational geometry problems are known to be
3SUM-HARD. That is, solving them classically requires time
$\Omega(n^{2-o(1)})$, unless there is faster algorithm for the well known 3SUM
problem (in which we are given a set $S$ of $n$ integers and have to determine
if there are $a, b, c \in S$ such that $a + b + c = 0$). Quantumly, 3SUM can be
solved in time $O(n \log n)$ using Grover's quantum search algorithm. This
leads to a question: can we solve POINT-ON-3-LINES and other 3SUM-HARD problems
in $O(n^c)$ time quantumly, for $c&lt;2$? We answer this question affirmatively,
by constructing a quantum algorithm that solves POINT-ON-3-LINES in time
$O(n^{1 + o(1)})$. The algorithm combines recursive use of amplitude
amplification with geometrical ideas. We show that the same ideas give $O(n^{1
+ o(1)})$ time algorithm for many 3SUM-HARD geometrical problems.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08854</id>
    <link href="http://arxiv.org/abs/2004.08854" rel="alternate" type="text/html"/>
    <title>Planar Bichromatic Bottleneck Spanning Trees</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Abu=Affash:A=_Karim.html">A. Karim Abu-Affash</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhore:Sujoy.html">Sujoy Bhore</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Carmi:Paz.html">Paz Carmi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mitchell:Joseph_S=_B=.html">Joseph S. B. Mitchell</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08854">PDF</a><br/><b>Abstract: </b>Given a set $P$ of $n$ red and blue points in the plane, a \emph{planar
bichromatic spanning tree} of $P$ is a spanning tree of $P$, such that each
edge connects between a red and a blue point, and no two edges intersect. In
the bottleneck planar bichromatic spanning tree problem, the goal is to find a
planar bichromatic spanning tree $T$, such that the length of the longest edge
in $T$ is minimized. In this paper, we show that this problem is NP-hard for
points in general position. Moreover, we present a polynomial-time
$(8\sqrt{2})$-approximation algorithm, by showing that any bichromatic spanning
tree of bottleneck $\lambda$ can be converted to a planar bichromatic spanning
tree of bottleneck at most $8\sqrt{2}\lambda$.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08828</id>
    <link href="http://arxiv.org/abs/2004.08828" rel="alternate" type="text/html"/>
    <title>Faster Algorithms for Quantitative Analysis of Markov Chains and Markov Decision Processes with Small Treewidth</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Asadi:Ali.html">Ali Asadi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chatterjee:Krishnendu.html">Krishnendu Chatterjee</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Goharshady:Amir_Kafshdar.html">Amir Kafshdar Goharshady</a>, Kiarash Mohammadi, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pavlogiannis:Andreas.html">Andreas Pavlogiannis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08828">PDF</a><br/><b>Abstract: </b>Discrete-time Markov Chains (MCs) and Markov Decision Processes (MDPs) are
two standard formalisms in system analysis. Their main associated quantitative
objectives are hitting probabilities, discounted sum, and mean payoff. Although
there are many techniques for computing these objectives in general MCs/MDPs,
they have not been thoroughly studied in terms of parameterized algorithms,
particularly when treewidth is used as the parameter. This is in sharp contrast
to qualitative objectives for MCs, MDPs and graph games, for which
treewidth-based algorithms yield significant complexity improvements.
</p>
<p>In this work, we show that treewidth can also be used to obtain faster
algorithms for the quantitative problems. For an MC with $n$ states and $m$
transitions, we show that each of the classical quantitative objectives can be
computed in $O((n+m)\cdot t^2)$ time, given a tree decomposition of the MC that
has width $t$. Our results also imply a bound of $O(\kappa\cdot (n+m)\cdot
t^2)$ for each objective on MDPs, where $\kappa$ is the number of
strategy-iteration refinements required for the given input and objective.
Finally, we make an experimental evaluation of our new algorithms on
low-treewidth MCs and MDPs obtained from the DaCapo benchmark suite. Our
experimental results show that on MCs and MDPs with small treewidth, our
algorithms outperform existing well-established methods by one or more orders
of magnitude.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08818</id>
    <link href="http://arxiv.org/abs/2004.08818" rel="alternate" type="text/html"/>
    <title>Preprocessing Vertex-Deletion Problems: Characterizing Graph Properties by Low-Rank Adjacencies</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jansen:Bart_M=_P=.html">Bart M. P. Jansen</a>, Jari J. H. de Kroon <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08818">PDF</a><br/><b>Abstract: </b>We consider the $\Pi$-free Deletion problem parameterized by the size of a
vertex cover, for a range of graph properties $\Pi$. Given an input graph $G$,
this problem asks whether there is a subset of at most $k$ vertices whose
removal ensures the resulting graph does not contain a graph from $\Pi$ as
induced subgraph. Many vertex-deletion problems such as Perfect Deletion,
Wheel-free Deletion, and Interval Deletion fit into this framework. We
introduce the concept of characterizing a graph property $\Pi$ by low-rank
adjacencies, and use it as the cornerstone of a general kernelization theorem
for $\Pi$-Free Deletion parameterized by the size of a vertex cover. The
resulting framework captures problems such as AT-Free Deletion, Wheel-free
Deletion, and Interval Deletion. Moreover, our new framework shows that the
vertex-deletion problem to perfect graphs has a polynomial kernel when
parameterized by vertex cover, thereby resolving an open question by Fomin et
al. [JCSS 2014]. Our main technical contribution shows how linear-algebraic
dependence of suitably defined vectors over $\mathbb{F}_2$ implies
graph-theoretic statements about the presence of forbidden induced subgraphs.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08783</id>
    <link href="http://arxiv.org/abs/2004.08783" rel="alternate" type="text/html"/>
    <title>Decision Problems in Information Theory</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Khamis:Mahmoud_Abo.html">Mahmoud Abo Khamis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kolaitis:Phokion_G=.html">Phokion G. Kolaitis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Ngo:Hung_Q=.html">Hung Q. Ngo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Suciu:Dan.html">Dan Suciu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08783">PDF</a><br/><b>Abstract: </b>Constraints on entropies are considered to be the laws of information theory.
Even though the pursuit of their discovery has been a central theme of research
in information theory, the algorithmic aspects of constraints on entropies
remain largely unexplored. Here, we initiate an investigation of decision
problems about constraints on entropies by placing several different such
problems into levels of the arithmetical hierarchy. We establish the following
results on checking the validity over all almost-entropic functions: first,
validity of a Boolean information constraint arising from a monotone Boolean
formula is co-recursively enumerable; second, validity of "tight" conditional
information constraints is in $\Pi^0_3$. Furthermore, under some restrictions,
validity of conditional information constraints "with slack" is in
$\Sigma^0_2$, and validity of information inequality constraints involving max
is Turing equivalent to validity of information inequality constraints (with no
max involved). We also prove that the classical implication problem for
conditional independence statements is co-recursively enumerable.
</p></div>
    </summary>
    <updated>2020-04-21T23:23:03Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08777</id>
    <link href="http://arxiv.org/abs/2004.08777" rel="alternate" type="text/html"/>
    <title>Faster Dynamic Range Mode</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sandlund:Bryce.html">Bryce Sandlund</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/x/Xu:Yinzhan.html">Yinzhan Xu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08777">PDF</a><br/><b>Abstract: </b>In the dynamic range mode problem, we are given a sequence $a$ of length
bounded by $N$ and asked to support element insertion, deletion, and queries
for the most frequent element of a contiguous subsequence of $a$. In this work,
we devise a deterministic data structure that handles each operation in
worst-case $\tilde{O}(N^{0.655994})$ time, thus breaking the $O(N^{2/3})$
per-operation time barrier for this problem. The data structure is achieved by
combining the ideas in Williams and Xu (SODA 2020) for batch range mode with a
novel data structure variant of the Min-Plus product.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08716</id>
    <link href="http://arxiv.org/abs/2004.08716" rel="alternate" type="text/html"/>
    <title>Fewer colors for perfect simulation of proper colorings</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Huber:Mark.html">Mark Huber</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08716">PDF</a><br/><b>Abstract: </b>Given a graph $G$ and color set $\{1, \ldots, k\}$, a $\textit{proper
coloring}$ is an assignment of a color to each vertex of $G$ such that no two
vertices connected by an edge are given the same color. The problem of drawing
a proper coloring exactly uniformly from the set of proper colorings is
well-studied. Most recently, Bhandari and Chakraborty developed a polynomial
expected time randomized algorithm for obtaining such draws when $k &gt; 3\Delta$,
where $\Delta$ is the maximum degree of the graph. Their approach used a
bounding chain together with the coupling from the past protocol. Here a new
randomized algorithm is presented based upon the randomness recycler protocol
introduced by the author and Fill at FOCS 2000. Given $n$ vertices, this method
takes $O(n \ln (n))$ expected steps when $k &gt; 2.27(\Delta - 1)$ for all $\Delta
\geq 2$.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08703</id>
    <link href="http://arxiv.org/abs/2004.08703" rel="alternate" type="text/html"/>
    <title>Stochastic Weighted Matching: $(1-\epsilon)$ Approximation</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Behnezhad:Soheil.html">Soheil Behnezhad</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Derakhshan:Mahsa.html">Mahsa Derakhshan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08703">PDF</a><br/><b>Abstract: </b>Let $G=(V, E)$ be a given edge-weighted graph and let its {\em realization}
$\mathcal{G}$ be a random subgraph of $G$ that includes each edge $e \in E$
independently with probability $p$. In the {\em stochastic matching} problem,
the goal is to pick a sparse subgraph $Q$ of $G$ without knowing the
realization $\mathcal{G}$, such that the maximum weight matching among the
realized edges of $Q$ (i.e. graph $Q \cap \mathcal{G}$) in expectation
approximates the maximum weight matching of the whole realization
$\mathcal{G}$.
</p>
<p>In this paper, we prove that for any desirably small $\epsilon \in (0, 1)$,
every graph $G$ has a subgraph $Q$ that guarantees a
$(1-\epsilon)$-approximation and has maximum degree only $O_{\epsilon, p}(1)$.
That is, the maximum degree of $Q$ depends only on $\epsilon$ and $p$ (both of
which are known to be necessary) and not for example on the number of nodes in
$G$, the edge-weights, etc.
</p>
<p>The stochastic matching problem has been studied extensively on both weighted
and unweighted graphs. Previously, only existence of (close to)
half-approximate subgraphs was known for weighted graphs [Yamaguchi and
Maehara, SODA'18; Behnezhad et al., SODA'19]. Our result substantially improves
over these works, matches the state-of-the-art for unweighted graphs [Behnezhad
et al., STOC'20], and essentially settles the approximation factor.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08681</id>
    <link href="http://arxiv.org/abs/2004.08681" rel="alternate" type="text/html"/>
    <title>Effective gaps are not effective: quasipolynomial classical simulation of obstructed stoquastic Hamiltonians</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Jacob Bringewatt, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jarret:Michael.html">Michael Jarret</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08681">PDF</a><br/><b>Abstract: </b>All known examples confirming the possibility of an exponential separation
between classical simulation algorithms and stoquastic adiabatic quantum
computing (AQC) exploit symmetries that constrain adiabatic dynamics to
effective, symmetric subspaces. The symmetries produce large effective
eigenvalue gaps, which in turn make adiabatic computation efficient. We present
a classical algorithm to efficiently sample from the effective subspace of a
$k$-local stoquastic Hamiltonian $H$, without a priori knowledge of its
symmetries (or near-symmetries). Our algorithm maps any $k$-local Hamiltonian
to a graph $G=(V,E)$ with $\lvert V \rvert = O\left(\mathrm{poly}(n)\right)$
where $n$ is the number of qubits. Given the well-known result of Babai, we
exploit graph isomorphism to study the automorphisms of $G$ and arrive at an
algorithm quasi-polynomial in $\lvert V\rvert$ for producing samples from the
effective subspace eigenstates of $H$. Our results rule out exponential
separations between stoquastic AQC and classical computation that arise from
hidden symmetries in $k$-local Hamiltonians. Furthermore, our graph
representation of $H$ is not limited to stoquastic Hamiltonians and may rule
out corresponding obstructions in non-stoquastic cases, or be useful in
studying additional properties of $k$-local Hamiltonians.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08634</id>
    <link href="http://arxiv.org/abs/2004.08634" rel="alternate" type="text/html"/>
    <title>A Strongly Polynomial Label-Correcting Algorithm for Linear Systems with Two Variables per Inequality</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Koh:Zhuan_Khye.html">Zhuan Khye Koh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Natura:Bento.html">Bento Natura</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/V=eacute=gh:L=aacute=szl=oacute=_A=.html">László A. Végh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08634">PDF</a><br/><b>Abstract: </b>We present a strongly polynomial label-correcting algorithm for solving the
feasibility of linear systems with two variables per inequality (2VPI). The
algorithm is based on the Newton-Dinkelbach method for fractional combinatorial
optimization. We extend and strengthen previous work of Madani (2002) that
showed a weakly polynomial bound for a variant of the Newton-Dinkelbach method
for solving deterministic Markov decision processes (DMDPs), a special class of
2VPI linear programs. For a 2VPI system with $n$ variables and $m$ constraints,
our algorithm runs in $O(mn)$ iterations. Every iteration takes $O(m + n\log
n)$ time for DMDPs, and $O(mn)$ time for general 2VPI systems.
</p>
<p>The key technical idea is a new analysis of the Newton-Dinkelbach method
exploiting gauge symmetries of the algorithm. This also leads to an
acceleration of the Newton-Dinkelbach method for general fractional
combinatorial optimization problems. For the special case of linear fractional
combinatorial optimization, our method converges in $O(m\log m)$ iterations,
improving upon the previous best bound of $O(m^2\log m)$ by Wang et al. (2006).
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08604</id>
    <link href="http://arxiv.org/abs/2004.08604" rel="alternate" type="text/html"/>
    <title>UDDSketch: Accurate Tracking of Quantiles in Data Streams</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Epicoco:Italo.html">Italo Epicoco</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Melle:Catiuscia.html">Catiuscia Melle</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cafaro:Massimo.html">Massimo Cafaro</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pulimeno:Marco.html">Marco Pulimeno</a>, Giuseppe Morleo <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08604">PDF</a><br/><b>Abstract: </b>We present UDDSketch (Uniform DDSketch), a novel sketch for fast and accurate
tracking of quantiles in data streams. This sketch is heavily inspired by the
recently introduced DDSketch, and is based on a novel bucket collapsing
procedure that allows overcoming the intrinsic limits of the corresponding
DDSketch procedures. Indeed, the DDSketch bucket collapsing procedure does not
allow the derivation of formal guarantees on the accuracy of quantile
estimation for data which does not follow a sub-exponential distribution. On
the contrary, UDDSketch is designed so that accuracy guarantees can be given
over the full range of quantiles and for arbitrary distribution in input.
Moreover, our algorithm fully exploits the budgeted memory adaptively in order
to guarantee the best possible accuracy over the full range of quantiles.
Extensive experimental results on synthetic datasets confirm the validity of
our approach.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08454</id>
    <link href="http://arxiv.org/abs/2004.08454" rel="alternate" type="text/html"/>
    <title>Counterexamples to the Low-Degree Conjecture</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Holmgren:Justin.html">Justin Holmgren</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wein:Alexander_S=.html">Alexander S. Wein</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08454">PDF</a><br/><b>Abstract: </b>A conjecture of Hopkins (2018) posits that for certain high-dimensional
hypothesis testing problems, no polynomial-time algorithm can outperform
so-called "simple statistics", which are low-degree polynomials in the data.
This conjecture formalizes the beliefs surrounding a line of recent work that
seeks to understand statistical-versus-computational tradeoffs via the
low-degree likelihood ratio. In this work, we refute the conjecture of Hopkins.
However, our counterexample crucially exploits the specifics of the noise
operator used in the conjecture, and we point out a simple way to modify the
conjecture to rule out our counterexample. We also give an example illustrating
that (even after the above modification), the symmetry assumption in the
conjecture is necessary. These results do not undermine the low-degree
framework for computational lower bounds, but rather aim to better understand
what class of problems it is applicable to.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08444</id>
    <link href="http://arxiv.org/abs/2004.08444" rel="alternate" type="text/html"/>
    <title>On the Approximate Nearest Neighbor Queries among Curves under the Fr\'echet Distance</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mirzanezhad:Majid.html">Majid Mirzanezhad</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08444">PDF</a><br/><b>Abstract: </b>Approximate nearest neighbor search (\textsc{ANNS}) is a long-studied problem
in computational geometry that has received considerable attentions by
researchers in the community. In this paper, we revisit the problem in the
presence of curves under the Fr\'echet distance. Given a set ${\cal P}$ of $n$
curves of size at most $m$ each in $\mathbb{R}^d$ and a real $\delta&gt;0$, we aim
to preprocess ${\cal P}$ into a data structure so that for any given query
curve $Q$ of size $k$, report all curves in ${\cal P}$ whose Fr\'echet
distances to $Q$ are at most $\delta$. In case that $k$ is known in the
preprocessing stage we propose a fully deterministic data structure whose space
is $O(n({32d^{1/2}/\varepsilon^3})^{d(k+1)} )$ and can answer the
\textsc{$(1+\varepsilon)\delta$-ANNS} queries in $O(kd)$ query time.
Considering $k$ as part of the query slightly changes the space to $O(
n({64d^{1/2}/\varepsilon^3})^{md} )$ with $O(kd)$ query time within
$5(1+\varepsilon)$ approximation factor. We also show that our data structure
could give an alternative treatment of the approximate subtrajectory range
counting (\textsc{ASRC}) problem studied by de Berg et al.~\cite{bcg-ffq-13}.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08434</id>
    <link href="http://arxiv.org/abs/2004.08434" rel="alternate" type="text/html"/>
    <title>Projection-Cost-Preserving Sketches: Proof Strategies and Constructions</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Musco:Cameron.html">Cameron Musco</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Musco:Christopher.html">Christopher Musco</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08434">PDF</a><br/><b>Abstract: </b>In this note we illustrate how common matrix approximation methods, such as
random projection and random sampling, yield projection-cost-preserving
sketches, as introduced in [FSS13, CEM+15]. A projection-cost-preserving sketch
is a matrix approximation which, for a given parameter $k$, approximately
preserves the distance of the target matrix to all $k$-dimensional subspaces.
Such sketches have applications to scalable algorithms for linear algebra, data
science, and machine learning. Our goal is to simplify the presentation of
proof techniques introduced in [CEM+15] and [CMM17] so that they can serve as a
guide for future work. We also refer the reader to [CYD19], which gives a
similar simplified exposition of the proof covered in Section 2.
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08432</id>
    <link href="http://arxiv.org/abs/2004.08432" rel="alternate" type="text/html"/>
    <title>Fully-Dynamic Graph Sparsifiers Against an Adaptive Adversary</title>
    <feedworld_mtime>1587427200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bernstein:Aaron.html">Aaron Bernstein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Brand:Jan_van_den.html">Jan van den Brand</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gutenberg:Maximilian_Probst.html">Maximilian Probst Gutenberg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nanongkai:Danupon.html">Danupon Nanongkai</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Saranurak:Thatchaphol.html">Thatchaphol Saranurak</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sidford:Aaron.html">Aaron Sidford</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sun:He.html">He Sun</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08432">PDF</a><br/><b>Abstract: </b>Designing dynamic graph algorithms against an adaptive adversary is a major
goal in the field of dynamic graph algorithms. While a few such algorithms are
known for spanning trees, matchings, and single-source shortest paths, very
little was known for an important primitive like graph sparsifiers. The
challenge is how to approximately preserve so much information about the graph
(e.g., all-pairs distances and all cuts) without revealing the algorithms'
underlying randomness to the adaptive adversary.
</p>
<p>In this paper we present the first non-trivial efficient adaptive algorithms
for maintaining spanners and cut sparisifers. These algorithms in turn imply
improvements over existing algorithms for other problems. Our first algorithm
maintains a polylog$(n)$-spanner of size $\tilde{O}(n)$ in polylog$(n)$
amortized update time. The second algorithm maintains an $O(k)$-approximate cut
sparsifier of size $\tilde{O}(n)$ in $\tilde{O}(n^{1/k})$ amortized update
time, for any $k\ge1$, which is polylog$(n)$ time when $k=\log(n)$. The
amortized update time of both algorithms can be made worst-case by paying some
sub-polynomial factors. Prior to our result, there were near-optimal algorithms
against oblivious adversaries (e.g. Baswana et al. [TALG'12] and Abraham et al.
[FOCS'16]), but the only non-trivial adaptive dynamic algorithm requires $O(n)$
amortized update time to maintain $3$- and $5$-spanner of size $O(n^{1+1/2})$
and $O(n^{1+1/3})$, respectively [Ausiello et al. ESA'05].
</p>
<p>Our results are based on two novel techniques. First of all, we show a
generic black-box reduction that allows us to assume that the graph undergoes
only edge deletions and, more importantly, remains an expander with
almost-uniform degree. The second is a new technique called proactive
resampling. [Abstract was shortened]
</p></div>
    </summary>
    <updated>2020-04-21T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-21T01:30:00Z</updated>
    </source>
  </entry>
</feed>
