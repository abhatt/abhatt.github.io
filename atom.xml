<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-02-27T03:21:51Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11691</id>
    <link href="http://arxiv.org/abs/2002.11691" rel="alternate" type="text/html"/>
    <title>Bitvectors with runs and the successor/predecessor problem</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/G=oacute=mez=Brand=oacute=n:Adri=aacute=n.html">Adrián Gómez-Brandón</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11691">PDF</a><br/><b>Abstract: </b>The successor and predecessor problem consists of obtaining the closest value
in a set of integers, greater/smaller than a given value. This problem has
interesting applications, like the intersection of inverted lists. It can be
easily modeled by using a bitvector of size $n$ and its operations rank and
select. However, there is a practical approach, which keeps the best
theoretical bounds, and allows to solve successor and predecessor more
efficiently. Based on that technique, we designed a novel compact data
structure for bitvectors with $k$ runs that achieves access, rank, and
successor/predecessor in $O(1)$ time by consuming space $O(\sqrt{kn})$ bits. In
practice, it obtains a compression ratio of $0.04\%-26.33\%$ when the runs are
larger than $100$, and becomes the fastest technique, which considers
compressibility, in successor/predecessor queries. Besides, we present a
recursive variant of our structure, which tends to $O(k)$ bits and takes
$O(\log \frac{n}{k})$ time.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11679</id>
    <link href="http://arxiv.org/abs/2002.11679" rel="alternate" type="text/html"/>
    <title>Limitations of Greed: Influence Maximization in Undirected Networks Re-visited</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schoenebeck:Grant.html">Grant Schoenebeck</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tao:Biaoshuai.html">Biaoshuai Tao</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yu:Fang=Yi.html">Fang-Yi Yu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11679">PDF</a><br/><b>Abstract: </b>We consider the influence maximization problem (selecting $k$ seeds in a
network maximizing the expected total influence) on undirected graphs under the
linear threshold model. On the one hand, we prove that the greedy algorithm
always achieves a $(1 - (1 - 1/k)^k + \Omega(1/k^3))$-approximation, showing
that the greedy algorithm does slightly better on undirected graphs than the
generic $(1- (1 - 1/k)^k)$ bound which also applies to directed graphs. On the
other hand, we show that substantial improvement on this bound is impossible by
presenting an example where the greedy algorithm can obtain at most a $(1- (1 -
1/k)^k + O(1/k^{0.2}))$ approximation. This result stands in contrast to the
previous work on the independent cascade model. Like the linear threshold
model, the greedy algorithm obtains a $(1-(1-1/k)^k)$-approximation on directed
graphs in the independent cascade model. However, Khanna and Lucier showed
that, in undirected graphs, the greedy algorithm performs substantially better:
a $(1-(1-1/k)^k + c)$ approximation for constant $c &gt; 0$. Our results show
that, surprisingly, no such improvement occurs in the linear threshold model.
Finally, we show that, under the linear threshold model, the approximation
ratio $(1 - (1 - 1/k)^k)$ is tight if 1) the graph is directed or 2) the
vertices are weighted. In other words, under either of these two settings, the
greedy algorithm cannot achieve a $(1 - (1 - 1/k)^k + f(k))$-approximation for
any positive function $f(k)$. The result in setting 2) is again in a sharp
contrast to Khanna and Lucier's $(1 - (1 - 1/k)^k + c)$-approximation result
for the independent cascade model, where the $(1 - (1 - 1/k)^k + c)$
approximation guarantee can be extended to the setting where vertices are
weighted. We also discuss extensions to more generalized settings including
those with edge-weighted graphs.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11677</id>
    <link href="http://arxiv.org/abs/2002.11677" rel="alternate" type="text/html"/>
    <title>Sphere tangencies, line incidences, and Lie's line-sphere correspondence</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zahl:Joshua.html">Joshua Zahl</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11677">PDF</a><br/><b>Abstract: </b>Two spheres with centers $p$ and $q$ and signed radii $r$ and $s$ are said to
be in contact if $|p-q|^2 = (r-s)^2$. Using Lie's line-sphere correspondence,
we show that if $F$ is a field in which $-1$ is not a square, then there is an
isomorphism between the set of spheres in $F^3$ and the set of lines in a
suitably constructed Heisenberg group that is embedded in $(F[i])^3$; under
this isomorphism, contact between spheres translates to incidences between
lines.
</p>
<p>In the past decade there has been significant progress in understanding the
incidence geometry of lines in three space. The contact-incidence isomorphism
allows us to translate statements about the incidence geometry of lines into
statements about the contact geometry of spheres. This leads to new bounds for
Erd\H{o}s' repeated distances problem in $F^3$, and improved bounds for the
number of point-sphere incidences in three dimensions. These new bounds are
sharp for certain ranges of parameters.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11661</id>
    <link href="http://arxiv.org/abs/2002.11661" rel="alternate" type="text/html"/>
    <title>Compact Representation of Uncertainty in Hierarchical Clustering</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Greenberg:Craig_S=.html">Craig S. Greenberg</a>, Sebastian Macaluso, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Monath:Nicholas.html">Nicholas Monath</a>, Ji-Ah Lee, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Flaherty:Patrick.html">Patrick Flaherty</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cranmer:Kyle.html">Kyle Cranmer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/McGregor:Andrew.html">Andrew McGregor</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/McCallum:Andrew.html">Andrew McCallum</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11661">PDF</a><br/><b>Abstract: </b>Hierarchical clustering is a fundamental task often used to discover
meaningful structures in data, such as phylogenetic trees, taxonomies of
concepts, subtypes of cancer, and cascades of particle decays in particle
physics. When multiple hierarchical clusterings of the data are possible, it is
useful to represent uncertainty in the clustering through various probabilistic
quantities. Existing approaches represent uncertainty for a range of models;
however, they only provide approximate inference. This paper presents
dynamic-programming algorithms and proofs for exact inference in hierarchical
clustering. We are able to compute the partition function, MAP hierarchical
clustering, and marginal probabilities of sub-hierarchies and clusters. Our
method supports a wide range of hierarchical models and only requires a cluster
compatibility function. Rather than scaling with the number of hierarchical
clusterings of $n$ elements ($\omega(n n! / 2^{n-1})$), our approach runs in
time and space proportional to the significantly smaller powerset of $n$.
Despite still being large, these algorithms enable exact inference in
small-data applications and are also interesting from a theoretical
perspective. We demonstrate the utility of our method and compare its
performance with respect to existing approximate methods.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11650</id>
    <link href="http://arxiv.org/abs/2002.11650" rel="alternate" type="text/html"/>
    <title>Corrupted Multidimensional Binary Search: Learning in the Presence of Irrational Agents</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Krishnamurthy:Akshay.html">Akshay Krishnamurthy</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lykouris:Thodoris.html">Thodoris Lykouris</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Podimata:Chara.html">Chara Podimata</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11650">PDF</a><br/><b>Abstract: </b>Standard game-theoretic formulations for settings like contextual pricing and
security games assume that agents act in accordance with a specific behavioral
model. In practice however, some agents may not prescribe to the dominant
behavioral model or may act in ways that are arbitrarily inconsistent. Existing
algorithms heavily depend on the model being (approximately) accurate for all
agents and have poor performance in the presence of even a few such arbitrarily
irrational agents. \emph{How do we design learning algorithms that are robust
to the presence of arbitrarily irrational agents?}
</p>
<p>We address this question for a number of canonical game-theoretic
applications by designing a robust algorithm for the fundamental problem of
multidimensional binary search. The performance of our algorithm degrades
gracefully with the number of corrupted rounds, which correspond to irrational
agents and need not be known in advance. As binary search is the key primitive
in algorithms for contextual pricing, Stackelberg Security Games, and other
game-theoretic applications, we immediately obtain robust algorithms for these
settings.
</p>
<p>Our techniques draw inspiration from learning theory, game theory,
high-dimensional geometry, and convex analysis, and may be of independent
algorithmic interest.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11622</id>
    <link href="http://arxiv.org/abs/2002.11622" rel="alternate" type="text/html"/>
    <title>Revisiting compact RDF stores based on k2-trees</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Brisaboa:Nieves_R=.html">Nieves R. Brisaboa</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cerdeira=Pena:Ana.html">Ana Cerdeira-Pena</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bernardo:Guillermo_de.html">Guillermo de Bernardo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fari=ntilde=a:Antonio.html">Antonio Fariña</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11622">PDF</a><br/><b>Abstract: </b>We present a new compact representation to efficiently store and query large
RDF datasets in main memory. Our proposal, called BMatrix, is based on the
k2-tree, a data structure devised to represent binary matrices in a compressed
way, and aims at improving the results of previous state-of-the-art
alternatives, especially in datasets with a relatively large number of
predicates. We introduce our technique, together with some improvements on the
basic k2-tree that can be applied to our solution in order to boost
compression. Experimental results in the flagship RDF dataset DBPedia show that
our proposal achieves better compression than existing alternatives, while
yielding competitive query times, particularly in the most frequent triple
patterns and in queries with unbound predicate, in which we outperform existing
solutions.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11617</id>
    <link href="http://arxiv.org/abs/2002.11617" rel="alternate" type="text/html"/>
    <title>A Polynomial Time Algorithm for Almost Optimal Vertex Fault Tolerant Spanners</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Agarwal:Udit.html">Udit Agarwal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11617">PDF</a><br/><b>Abstract: </b>We present the first polynomial time algorithm for the f vertex fault
tolerant spanner problem, which achieves almost optimal spanner size. Our
algorithm for constructing f vertex fault tolerant spanner takes $O(k\cdot
n\cdot m^2 \cdot W)$ time, where W is the maximum edge weight, and constructs a
spanner of size $O(n^{1+1/k}f^{1-1/k}\cdot (\log n)^{1-1/k})$. Our spanner has
almost optimal size and is at most a $\log n$ factor away from the upper bound
on the worst-case size. Prior to this work, no other polynomial time algorithm
was known for constructing f vertex fault tolerant spanner with optimal size.
</p>
<p>Our algorithm is based on first greedily constructing a hitting set for the
collection of paths of weight at most $k \cdot w(u,v)$ between the endpoints u
and v of an edge (u,v) and then using this set to decide whether the edge (u,v)
needs to be added to the growing spanner.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11594</id>
    <link href="http://arxiv.org/abs/2002.11594" rel="alternate" type="text/html"/>
    <title>On the complexity of evaluating highest weight vectors</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bl=auml=ser:Markus.html">Markus Bläser</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/D=ouml=rfler:Julian.html">Julian Dörfler</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Ikenmeyer:Christian.html">Christian Ikenmeyer</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11594">PDF</a><br/><b>Abstract: </b>Geometric complexity theory (GCT) is an approach towards separating algebraic
complexity classes through algebraic geometry and representation theory.
Originally Mulmuley and Sohoni proposed (SIAM J Comput 2001, 2008) to use
occurrence obstructions to prove Valiant's determinant vs permanent conjecture,
but recently B\"urgisser, Ikenmeyer, and Panova (Journal of the AMS 2019)
proved this impossible. However, fundamental theorems of algebraic geometry and
representation theory grant that every lower bound in GCT can be proved by the
use of so-called highest weight vectors (HWVs). In the setting of interest in
GCT (namely in the setting of polynomials) we prove the NP-hardness of the
evaluation of HWVs in general, and we give efficient algorithms if the
treewidth of the corresponding Young-diagram is small, where the point of
evaluation is concisely encoded as a noncommutative algebraic branching
program! In particular, this gives a large new class of separating functions
that can be efficiently evaluated at points with low (border) Waring rank.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11593</id>
    <link href="http://arxiv.org/abs/2002.11593" rel="alternate" type="text/html"/>
    <title>Appending Atomically in Byzantine Distributed Ledgers</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cholvi:Vicent.html">Vicent Cholvi</a>, Antonio Fernandez Anta, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Georgiou:Chryssis.html">Chryssis Georgiou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nicolaou:Nicolas.html">Nicolas Nicolaou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Raynal:Michel.html">Michel Raynal</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11593">PDF</a><br/><b>Abstract: </b>A Distributed Ledger Object (DLO) is a concurrent object that maintains a
totally ordered sequence of records, and supports two basic operations: append,
which appends a record at the end of the sequence, and get, which returns the
sequence of records. In this work we provide a proper formalization of a
Byzantine-tolerant Distributed Ledger Object (BDLO), which is a DLO in a
distributed system in which processes may deviate arbitrarily from their
indented behavior, i.e. they may be Byzantine. Our formal definition is
accompanied by algorithms to implement BDLOs by utilizing an underlying
Byzantine Atomic Broadcast service.
</p>
<p>We then utilize the BDLO implementations to solve the Atomic Appends problem
against Byzantine processes. The Atomic Appends problem emerges when several
clients have records to append, the record of each client has to be appended to
a different BDLO, and it must be guaranteed that either all records are
appended or none. We present distributed algorithms implementing solutions for
the Atomic Appends problem when the clients (which are involved in the appends)
and the servers (which maintain the BDLOs) may be Byzantine.
</p></div>
    </summary>
    <updated>2020-02-27T02:38:44Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11557</id>
    <link href="http://arxiv.org/abs/2002.11557" rel="alternate" type="text/html"/>
    <title>Query-Efficient Correlation Clustering</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Garc=iacute=a=Soriano:David.html">David García-Soriano</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kutzkov:Konstantin.html">Konstantin Kutzkov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bonchi:Francesco.html">Francesco Bonchi</a>, Charalampos Tsourakakis <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11557">PDF</a><br/><b>Abstract: </b>Correlation clustering is arguably the most natural formulation of
clustering. Given n objects and a pairwise similarity measure, the goal is to
cluster the objects so that, to the best possible extent, similar objects are
put in the same cluster and dissimilar objects are put in different clusters.
</p>
<p>A main drawback of correlation clustering is that it requires as input the
$\Theta(n^2)$ pairwise similarities. This is often infeasible to compute or
even just to store. In this paper we study \emph{query-efficient} algorithms
for correlation clustering. Specifically, we devise a correlation clustering
algorithm that, given a budget of $Q$ queries, attains a solution whose
expected number of disagreements is at most $3\cdot OPT + O(\frac{n^3}{Q})$,
where $OPT$ is the optimal cost for the instance. Its running time is $O(Q)$,
and can be easily made non-adaptive (meaning it can specify all its queries at
the outset and make them in parallel) with the same guarantees. Up to constant
factors, our algorithm yields a provably optimal trade-off between the number
of queries $Q$ and the worst-case error attained, even for adaptive algorithms.
</p>
<p>Finally, we perform an experimental study of our proposed method on both
synthetic and real data, showing the scalability and the accuracy of our
algorithm.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11541</id>
    <link href="http://arxiv.org/abs/2002.11541" rel="alternate" type="text/html"/>
    <title>On Learning a Hidden Directed Graph with Path Queries</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Janardhanan:Mano_Vikash.html">Mano Vikash Janardhanan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Reyzin:Lev.html">Lev Reyzin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11541">PDF</a><br/><b>Abstract: </b>In this paper, we consider the problem of reconstructing a directed graph
using path queries. In this query model of learning, a graph is hidden from the
learner, and the learner can access information about it with path queries. For
a source and destination node, a path query returns whether there is a directed
path from the source to the destination node in the hidden graph. In this paper
we first give bounds for learning graphs on $n$ vertices and $k$ strongly
connected components. We then study the case of bounded degree directed trees
and give new algorithms for learning "almost-trees" -- directed trees to which
extra edges have been added. We also give some lower bound constructions
justifying our approach.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11437</id>
    <link href="http://arxiv.org/abs/2002.11437" rel="alternate" type="text/html"/>
    <title>Consenus-Halving: Does it Ever Get Easier?</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Filos=Ratsikas:Aris.html">Aris Filos-Ratsikas</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hollender:Alexandros.html">Alexandros Hollender</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sotiraki:Katerina.html">Katerina Sotiraki</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zampetakis:Manolis.html">Manolis Zampetakis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11437">PDF</a><br/><b>Abstract: </b>In the $\varepsilon$-Consensus-Halving problem, a fundamental problem in fair
division, there are $n$ agents with valuations over the interval $[0,1]$, and
the goal is to divide the interval into pieces and assign a label "$+$" or
"$-$" to each piece, such that every agent values the total amount of "$+$" and
the total amount of "$-$" almost equally. The problem was recently proven by
Filos-Ratsikas and Goldberg [2019] to be the first "natural" complete problem
for the computational class PPA, answering a decade-old open question.
</p>
<p>In this paper, we examine the extent to which the problem becomes easy to
solve, if one restricts the class of valuation functions. To this end, we
provide the following contributions. First, we obtain a strengthening of the
PPA-hardness result of [Filos-Ratsikas and Goldberg 2019], to the case when
agents have piecewise uniform valuations with only two blocks. We obtain this
result via a new reduction, which is in fact conceptually much simpler than the
corresponding one in [Filos-Ratsikas and Goldberg 2019]. Then, we consider the
case of single-block (uniform) valuations and provide a parameterized
polynomial time algorithm for solving $\varepsilon$-Consensus-Halving for any
$\varepsilon$, as well as a polynomial-time algorithm for $\varepsilon=1/2$;
these are the first algorithmic results for the problem. Finally, an important
application of our new techniques is the first hardness result for a
generalization of Consensus-Halving, the Consensus-$1/k$-Division problem. In
particular, we prove that $\varepsilon$-Consensus-$1/3$-Division is PPAD-hard.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11428</id>
    <link href="http://arxiv.org/abs/2002.11428" rel="alternate" type="text/html"/>
    <title>Computation of Dynamic Equilibria in Series-Parallel Networks</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kaiser:Marcus.html">Marcus Kaiser</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11428">PDF</a><br/><b>Abstract: </b>We consider dynamic equilibria for flows over time under the fluid queuing
model. In this model, queues on the links of a network take care of flow
propagation. Flow enters the network at a single source and leaves at a single
sink. In a dynamic equilibrium, every infinitesimally small flow particle
reaches the sink as early as possible given the pattern of the rest of the
flow. While this model has been examined for many decades, progress has been
relatively recent. In particular, the derivatives of dynamic equilibria have
been characterized as thin flows with resetting, which allowed for more
structural results. Our two main results are based on the analysis of thin
flows with resetting. We present a constructive proof of existence for dynamic
equilibria if the inflow rate is right-monotone. The complexity of computing
thin flows with resetting, which occurs as a subproblem in this method, is
still open. We settle it for the class of two-terminal series-parallel networks
by giving a recursive algorithm that solves the problem for all flow values
simultaneously in polynomial time.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11391</id>
    <link href="http://arxiv.org/abs/2002.11391" rel="alternate" type="text/html"/>
    <title>Space Efficient Representations of Finite Groups</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Das:Bireswar.html">Bireswar Das</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sharma:Shivdutt.html">Shivdutt Sharma</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vaidyanathan:P=_R=.html">P. R. Vaidyanathan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11391">PDF</a><br/><b>Abstract: </b>The Cayley table representation of a group uses $\mathcal{O}(n^2)$ words for
a group of order $n$ and answers multiplication queries in time
$\mathcal{O}(1)$. It is interesting to ask if there is a $o(n^2)$ space
representation of groups that still has $\mathcal{O}(1)$ query-time. We show
that for any $\delta$, $\frac{1}{\log n} \le \delta \le 1$, there is an
$\mathcal{O}(\frac{n^{1 +\delta}}{\delta})$ space representation for groups of
order $n$ with $\mathcal{O}(\frac{1}{\delta})$ query-time.
</p>
<p>We also show that for Z-groups, simple groups and several group classes
defined in terms of semidirect product, there are linear space representations
with at most logarithmic query-time.
</p>
<p>Farzan and Munro (ISSAC'06) defined a model for group representation and gave
a succinct data structure for abelian groups with constant query-time. They
asked if their result can be extended to categorically larger group classes. We
construct data structures in their model for Hamiltonian groups and some other
classes of groups with constant query-time.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11347</id>
    <link href="http://arxiv.org/abs/2002.11347" rel="alternate" type="text/html"/>
    <title>A multi-sided generalization of the $C^0$ Coons patch</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Salvi:P=eacute=ter.html">Péter Salvi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11347">PDF</a><br/><b>Abstract: </b>Most multi-sided transfinite surfaces require cross-derivatives at the
boundaries. Here we show a general $n$-sided patch that interpolates all
boundaries based on only positional information. The surface is a weighted sum
of $n$ Coons patches, using a parameterization based on Wachspress coordinates.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11342</id>
    <link href="http://arxiv.org/abs/2002.11342" rel="alternate" type="text/html"/>
    <title>Streaming with Oracle: New Streaming Algorithms for Edit Distance and LCS</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Farhadi:Alireza.html">Alireza Farhadi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hajiaghayi:MohammadTaghi.html">MohammadTaghi Hajiaghayi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rubinstein:Aviad.html">Aviad Rubinstein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Seddighin:Saeed.html">Saeed Seddighin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11342">PDF</a><br/><b>Abstract: </b>The edit distance (ED) and longest common subsequence (LCS) are two
fundamental problems which quantify how similar two strings are to one another.
In this paper, we consider these problems in the streaming model where one
string is available via oracle queries and the other string comes as a stream
of characters. Our main contribution is a constant factor approximation
algorithm in this setting for ED with memory $O(n^{\delta})$ for any $\delta &gt;
0$. In addition to this, we present an upper bound of $\tilde O(\sqrt{n})$ on
the memory needed to approximate ED or LCS within a factor $1+o(1)$ in our
setting. All our algorithms run in a single pass.
</p>
<p>For approximating ED within a constant factor, we discover yet another
application of triangle inequality, this time in the context of streaming
algorithms. Triangle inequality has been previously used to obtain subquadratic
time approximation algorithms for ED. Our technique is novel and elegantly
utilizes triangle inequality to save memory at the expense of an exponential
increase in the runtime.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11313</id>
    <link href="http://arxiv.org/abs/2002.11313" rel="alternate" type="text/html"/>
    <title>Computational Aspects of Geometric Algebra Products of Two Homogeneous Multivectors</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Stephane Breuils, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nozick:Vincent.html">Vincent Nozick</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sugimoto:Akihiro.html">Akihiro Sugimoto</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11313">PDF</a><br/><b>Abstract: </b>Studies on time and memory costs of products in geometric algebra have been
limited to cases where multivectors with multiple grades have only non-zero
elements. This allows to design efficient algorithms for a generic purpose;
however, it does not reflect the practical usage of geometric algebra. Indeed,
in applications related to geometry, multivectors are likely to be full
homogeneous, having their non-zero elements over a single grade. In this paper,
we provide a complete computational study on geometric algebra products of two
full homogeneous multivectors, that is, the outer, inner, and geometric
products of two full homogeneous multivectors. We show tight bounds on the
number of the arithmetic operations required for these products. We also show
that algorithms exist that achieve this number of arithmetic operations.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11271</id>
    <link href="http://arxiv.org/abs/2002.11271" rel="alternate" type="text/html"/>
    <title>Comparing copy-number profiles under multi-copy amplifications and deletions</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Garance Cordonnier, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lafond:Manuel.html">Manuel Lafond</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11271">PDF</a><br/><b>Abstract: </b>During cancer progression, malignant cells accumulate somatic mutations that
can lead to genetic aberrations. In particular, evolutionary events akin to
segmental duplications or deletions can alter the copy-number profile (CNP) of
a set of genes in a genome. Our aim is to compute the evolutionary distance
between two cells for which only CNPs are known. This asks for the minimum
number of segmental amplifications and deletions to turn one CNP into another.
This was recently formalized into a model where each event is assumed to alter
a copy-number by $1$ or $-1$, even though these events can affect large
portions of a chromosome. We propose a general cost framework where an event
can modify the copy-number of a gene by larger amounts. We show that any cost
scheme that allows segmental deletions of arbitrary length makes computing the
distance strongly NP-hard. We then devise a factor $2$ approximation algorithm
for the problem when copy-numbers are non-zero and provide an implementation
called \textsf{cnp2cnp}. We evaluate our approach experimentally by
reconstructing simulated cancer phylogenies from the pairwise distances
inferred by \textsf{cnp2cnp} and compare it against two other alternatives,
namely the \textsf{MEDICC} distance and the Euclidean distance. The
experimental results show that our distance yields more accurate phylogenies on
average than these alternatives if the given CNPs are error-free, but that the
\textsf{MEDICC} distance is slightly more robust against error in the data. In
all cases, our experiments show that either our approach or the \textsf{MEDICC}
approach should preferred over the Euclidean distance.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11237</id>
    <link href="http://arxiv.org/abs/2002.11237" rel="alternate" type="text/html"/>
    <title>Spectral Sparsification via Bounded-Independence Sampling</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Doron:Dean.html">Dean Doron</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Murtagh:Jack.html">Jack Murtagh</a>, Salil Vadhan, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zuckerman:David.html">David Zuckerman</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11237">PDF</a><br/><b>Abstract: </b>We give a deterministic, nearly logarithmic-space algorithm for mild spectral
sparsification of undirected graphs. Given a weighted, undirected graph $G$ on
$n$ vertices described by a binary string of length $N$, an integer $k\leq \log
n$, and an error parameter $\epsilon &gt; 0$, our algorithm runs in space
$\tilde{O}(k\log (N\cdot w_{\mathrm{max}}/w_{\mathrm{min}}))$ where
$w_{\mathrm{max}}$ and $w_{\mathrm{min}}$ are the maximum and minimum edge
weights in $G$, and produces a weighted graph $H$ with
$\tilde{O}(n^{1+2/k}/\epsilon^2)$ edges that spectrally approximates $G$, in
the sense of Spielmen and Teng [ST04], up to an error of $\epsilon$.
</p>
<p>Our algorithm is based on a new bounded-independence analysis of Spielman and
Srivastava's effective resistance based edge sampling algorithm [SS08] and uses
results from recent work on space-bounded Laplacian solvers [MRSV17]. In
particular, we demonstrate an inherent tradeoff (via upper and lower bounds)
between the amount of (bounded) independence used in the edge sampling
algorithm, denoted by $k$ above, and the resulting sparsity that can be
achieved.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11212</id>
    <link href="http://arxiv.org/abs/2002.11212" rel="alternate" type="text/html"/>
    <title>Computationally efficient transfinite patches with fullness control</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Salvi:P=eacute=ter.html">Péter Salvi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kov=aacute=cs:Istv=aacute=n.html">István Kovács</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/V=aacute=rady:Tam=aacute=s.html">Tamás Várady</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11212">PDF</a><br/><b>Abstract: </b>Transfinite patches provide a simple and elegant solution to the problem of
representing non-four-sided continuous surfaces, which are useful in a variety
of applications, such as curve network based design. Real-time responsiveness
is essential in this context, and thus reducing the computation cost is an
important concern. The Midpoint Coons (MC) patch presented in this paper is a
fusion of two previous transfinite schemes, combining the speed of one with the
superior control mechanism of the other. This is achieved using a new
constrained parameterization based on generalized barycentric coordinates and
transfinite blending functions.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11171</id>
    <link href="http://arxiv.org/abs/2002.11171" rel="alternate" type="text/html"/>
    <title>An Improved Algorithm for Dynamic Set Cover</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhattacharya:Sayan.html">Sayan Bhattacharya</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Henzinger:Monika.html">Monika Henzinger</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nanongkai:Danupon.html">Danupon Nanongkai</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wu:Xiaowei.html">Xiaowei Wu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11171">PDF</a><br/><b>Abstract: </b>We consider the minimum set cover problem in a dynamic setting. Here, we are
given a universe of elements $\mathcal{U}$ and a collection of sets
$\mathcal{S} \subseteq 2^{\mathcal{U}}$ as input, where each set $s \in
\mathcal{S}$ has a cost $1/C &lt; c_s &lt; 1$ for some parameter $C &gt; 1$. The input
keeps changing via a sequence of updates. Each update inserts/deletes an
element in the universe, and specifies the sets in $\S$ containing that
element. The goal is to maintain a set cover of (approximately) minimum cost
with as small update time as possible. Let $n$ denote the number of sets in
$\mathcal{S}$, and let $m$ and $f$ respectively denote the maximum number of
elements in the universe and the maximum frequency of an element across all the
updates.
</p>
<p>This problem has received significant attention in recent years in the
dynamic algorithms community. Gupta et al. [STOC `17] designed a deterministic
$\Theta(\log m)$-approximation algorithm for this problem that has an update
time of $O(f \log m)$. On the other hand, the line of work by Bhattacharya et
al. [ICALP `15], Bhattacharya et al. [IPCO `17], Gupta et al. [STOC `17],
Abboud et al. [STOC `19] and Bhattacharya et al. [FOCS `19] very recently led
to a deterministic $(1+\epsilon)f$-approximation algorithm with $O(f \log
(Cm)/\epsilon^2)$ update time.
</p>
<p>In this paper, we obtain the first dynamic algorithm for this problem with
near-optimal approximation ratio whose update time is independent of $m, n$.
Specifically, our algorithm is deterministic and it achieves an approximation
ratio of $(1+\epsilon)f$ and an update time of
$O\left((f^2/\epsilon^3)+(f/\epsilon^2) \log C\right)$. Our algorithm is based
on the dynamic primal-dual framework, and it carefully combines the ideas from
the dynamic vertex cover algorithm of Bhattacharya and Kulkarni [SODA `19] and
the dynamic set cover algorithm of Bhattacharya et al. [FOCS `19].
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11165</id>
    <link href="http://arxiv.org/abs/2002.11165" rel="alternate" type="text/html"/>
    <title>Voronoi-based similarity distances between arbitrary crystal lattices</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Marco Michele Mosca, Dr. Vitaliy Kurlin <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11165">PDF</a><br/><b>Abstract: </b>This paper develops a new continuous approach to a similarity between
periodic lattices of ideal crystals. Quantifying a similarity between crystal
structures is needed to substantially speed up the Crystal Structure
Prediction, because the prediction of many target properties of crystal
structures is computationally slow and is essentially repeated for many nearly
identical simulated structures. The proposed distances between arbitrary
periodic lattices of crystal structures are invariant under all rigid motions,
satisfy the metric axioms and continuity under atomic perturbations. The above
properties make these distances ideal tools for clustering and visualizing
large datasets of crystal structures. All the conclusions are rigorously proved
and justified by experiments on real and simulated crystal structures reported
in the Nature 2017 paper "Functional materials discovery using
energy-structure-function maps".
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11157</id>
    <link href="http://arxiv.org/abs/2002.11157" rel="alternate" type="text/html"/>
    <title>2-Dimensional Palindromes with $k$ Mismatches</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sokol:Dina.html">Dina Sokol</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11157">PDF</a><br/><b>Abstract: </b>This paper extends the problem of 2-dimensional palindrome search into the
area of approximate matching. Using the Hamming distance as the measure, we
search for 2D palindromes that allow up to $k$ mismatches. We consider two
different definitions of 2D palindromes and describe efficient algorithms for
both of them. The first definition implies a square, while the second
definition (also known as a \emph{centrosymmetric factor}), can be any
rectangular shape. Given a text of size $n \times m$, the time complexity of
the first algorithm is $O(nm (\log m + \log n + k))$ and for the second
algorithm it is $O(nm(\log m + k) + occ)$ where $occ$ is the size of the
output.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11153</id>
    <link href="http://arxiv.org/abs/2002.11153" rel="alternate" type="text/html"/>
    <title>Stochastic Makespan Minimization in Structured Set Systems</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gupta:Anupam.html">Anupam Gupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kumar:Amit.html">Amit Kumar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nagarajan:Viswanath.html">Viswanath Nagarajan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shen:Xiangkun.html">Xiangkun Shen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11153">PDF</a><br/><b>Abstract: </b>We study stochastic combinatorial optimization problems where the objective
is to minimize the expected maximum load (a.k.a. the makespan). In this
framework, we have a set of n tasks and m resources, where each task j uses
some subset of the resources. Tasks have random sizes X_j, and our goal is to
non-adaptively select t tasks to minimize the expected maximum load over all
resources, where the load on any resource i is the total size of all selected
tasks that use i. For example, given a set of intervals in time, with each
interval j having random load X_j, how do we choose t intervals to minimize the
expected maximum load at any time? Our technique is also applicable to other
problems with some geometric structure in the relation between tasks and
resources; e.g., packing paths, rectangles, and "fat" objects. Specifically, we
give an O(\log\log m)-approximation algorithm for all these problems.
</p>
<p>Our approach uses a strong LP relaxation using the cumulant generating
functions of the random variables. We also show that this LP has an
\Omega(\log^* m) integrality gap even for the problem of selecting intervals on
a line. Moreover, we show logarithmic gaps for problems without geometric
structure, showing that some structure is needed to get good results using
these techniques.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11111</id>
    <link href="http://arxiv.org/abs/2002.11111" rel="alternate" type="text/html"/>
    <title>On the CAD-compatible conversion of S-patches</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Salvi:P=eacute=ter.html">Péter Salvi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11111">PDF</a><br/><b>Abstract: </b>S-patches have many nice mathematical properties. It is known since their
first appearance, that any regular S-patch can be exactly converted into a
trimmed rational B\'ezier surface. This is a big advantage compared to other
multi-sided surface representations that have to be approximated for exporting
them into CAD/CAM systems. The actual conversion process, however, remained at
a theoretical level, with bits and pieces scattered in multiple publications.
In this paper we review the entirety of the algorithm, and investigate it from
a practical aspect.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.11109</id>
    <link href="http://arxiv.org/abs/2002.11109" rel="alternate" type="text/html"/>
    <title>$G^1$ hole filling with S-patches made easy</title>
    <feedworld_mtime>1582761600</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Salvi:P=eacute=ter.html">Péter Salvi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.11109">PDF</a><br/><b>Abstract: </b>S-patches have been around for 30 years, but they are seldom used, and are
considered more of a mathematical curiosity than a practical surface
representation. In this article a method is presented for automatically
creating S-patches of any degree or any number of sides, suitable for inclusion
in a curve network with tangential continuity to the adjacent surfaces. The
presentation aims at making the implementation straightforward; a few examples
conclude the paper.
</p></div>
    </summary>
    <updated>2020-02-27T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-27T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/027</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/027" rel="alternate" type="text/html"/>
    <title>TR20-027 |  The Power of Many Samples in Query Complexity | 

	Mika Göös, 

	Andrew Bassilakis, 

	Andrew Drucker, 

	Li-Yang Tan, 

	Lunjia Hu, 

	Weiyun Ma</title>
    <summary>The randomized query complexity $R(f)$ of a boolean function $f\colon\{0,1\}^n\to\{0,1\}$ is famously characterized (via Yao's minimax) by the least number of queries needed to distinguish a distribution $D_0$ over $0$-inputs from a distribution $D_1$ over $1$-inputs, maximized over all pairs $(D_0,D_1)$. We ask: Does this task become easier if we allow query access to infinitely many samples from either $D_0$ or $D_1$? We show the answer is no: There exists a hard pair $(D_0,D_1)$ such that distinguishing $D_0^\infty$ from $D_1^\infty$ requires $\Theta(R(f))$ many queries. As an application, we show that for any composed function $f\circ g$ we have $R(f\circ g) \geq \Omega(\mathrm{fbs}(f)R(g))$ where $\mathrm{fbs}$ denotes fractional block sensitivity.</summary>
    <updated>2020-02-26T19:45:16Z</updated>
    <published>2020-02-26T19:45:16Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-27T03:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://lucatrevisan.wordpress.com/?p=4301</id>
    <link href="https://lucatrevisan.wordpress.com/2020/02/26/i-live-in-milan-ama/" rel="alternate" type="text/html"/>
    <title>This year, for Lent, Milan gave up nightlife</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Greetings from Milan, in Italy’s “yellow zone” of areas bordering clusters of coronavirus infections. This week, all schools, universities, museums, theaters are closed, bars have to close by 6pm, and fairs and conferences are being postponed. The “red zone” of … <a href="https://lucatrevisan.wordpress.com/2020/02/26/i-live-in-milan-ama/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Greetings from Milan, in Italy’s “yellow zone” of areas bordering clusters of coronavirus infections. This week, all schools, universities, museums, theaters  are closed, bars have to close by 6pm, and fairs and conferences are being postponed. The “red zone” of small towns with the clusters of infections is on lockdown.</p>
<p>Milan has been unseasonably warm and sunny in the past few days, and walking through the city, with very light car and pedestrian traffic, has been lovely. This is apparently what the city usually looks like in August, but without the heat and humidity.<br/>
<span id="more-4301"/></p>
<p>Italians have the well deserved fame of being very dramatic people, but we have been taking the inconvenience in stride and with a mix of stoicism and good humor. Maybe I am wrong, but, apart from New York City, if a large American city had a cluster of infections in the suburbs, and it were similarly shut down, we would see riots and looting on the first night.</p>
<p>Over the weekend, the lockdown of the small towns was announced before any announcement of what to do about Milan, and the news showed long lines of people in those small towns waiting to buy groceries in the few open supermarkets. This induced some panic-buying on Sunday and Monday in Milan.</p>
<p>While people in Hong Kong and Singapore panic-bought toilet paper, Italians have mostly been buying pasta. Except, that is, <i>penne lisce</i>, like this Twitter user noted in a broadly shared picture. (Short cuts of pasta, like penne, are usually ribbed, to better catch sauce. Smooth short pasta like penne lisce makes no sense)</p>
<blockquote class="twitter-tweet">
<p dir="ltr" lang="it">Continuo a guardare questa foto fatta prima al supermercato e penso al fatto che il grande sconfitto da questo virus sono le penne lisce che agli italiani fanno cagare pure quando sono presi dal panico e si preparano all’apocalisse. <a href="https://t.co/Lq9Y06jdho">pic.twitter.com/Lq9Y06jdho</a></p>
<p>— 𝚍𝚒𝚘𝚍𝚎𝚐𝚕𝚒𝚣𝚒𝚕𝚕𝚊 <img alt="&#x1F926;&#x200D;&#x2642;&#xFE0F;" class="wp-smiley" src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f926-200d-2642-fe0f.png" style="height: 1em;"/> (@diodeglizilla) <a href="https://twitter.com/diodeglizilla/status/1231680287815426049?ref_src=twsrc%5Etfw">February 23, 2020</a></p>
<p><img alt="ERfOsJlW4AMPQsc" class="alignnone size-full wp-image-4305" src="https://lucatrevisan.files.wordpress.com/2020/02/erfosjlw4ampqsc.jpeg?w=584"/></p>
</blockquote>
<p>By Sunday night, the government decided that Lombardy and Veneto would be subject to a series of measures with the goal of reducing person-to-person contact, such as the closures mentioned above of schools, universities, museums etc. The meme below is titled “Here in Milan we are going too far”.</p>
<p><img alt="download" class="alignnone size-full wp-image-4306" src="https://lucatrevisan.files.wordpress.com/2020/02/download.jpeg?w=584"/></p>
<p>So far, there has been no secondary infection in Rome. (The text says “This is why the coronavirus has not yet reached Rome”.)</p>
<p><img alt="87384731_1300944790095464_2136089705354100736_n" height="391" src="https://lucatrevisan.files.wordpress.com/2020/02/87384731_1300944790095464_2136089705354100736_n.png?w=638&amp;h=391" width="638"/></p>
<p>(Image credit: <a href="https://www.facebook.com/lepiubellefrasidiosho">facebook.com/lepiubellefrasidiosho</a>)</p>
<p>Most annoyingly, every other newspaper headline or tv news chyron has been of the form “X in the time of coronavirus”. I can’t take it any more. This is the Autumn of journalism, a foretold death of creativity. Journalists are lost in the labyrinth of cliches. I wish all those headline writers one hundred years of solitude. The real news is the kidnapping of new ideas. Anyways, I think I am going to live to tell the tale.</p>
<p>The silver linings are that I have not been paying attention to the Democratic primaries and that I have plenty of free time to restart my planned series of posts on applications of online convex optimization to computational complexity. The next post will be on Impagliazzo’s hard-core lemma, a milestone in the theory of average-case complexity and pseudorandomness.</p>
<p>I am happy to answer any questions in the comments.</p></div>
    </content>
    <updated>2020-02-26T16:15:37Z</updated>
    <published>2020-02-26T16:15:37Z</published>
    <category term="Milan"/>
    <category term="Gabriel Garcia Marquez"/>
    <author>
      <name>luca</name>
    </author>
    <source>
      <id>https://lucatrevisan.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>"Marge, I agree with you - in theory. In theory, communism works. In theory." -- Homer Simpson</subtitle>
      <title>in   theory</title>
      <updated>2020-02-27T03:20:13Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-02-26-selfish-mining/</id>
    <link href="https://decentralizedthoughts.github.io/2020-02-26-selfish-mining/" rel="alternate" type="text/html"/>
    <title>Blockchain Selfish Mining</title>
    <summary>Proof of Work (PoW) Blockchains implement a form of State Machine Replication (SMR). Unlike classical SMR protocols, they are open, i.e., anyone can join the system, and the system incentivizes participants, called miners, to follow the protocol. Therefore, unlike classical SMR protocols, reasoning about blockchain security relies not only on...</summary>
    <updated>2020-02-26T15:00:00Z</updated>
    <published>2020-02-26T15:00:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Ittai Abraham</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-02-26T23:46:13Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/026</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/026" rel="alternate" type="text/html"/>
    <title>TR20-026 |  Spectral Sparsification via Bounded-Independence Sampling | 

	Dean Doron, 

	Jack Murtagh, 

	Salil Vadhan, 

	David Zuckerman</title>
    <summary>We give a deterministic, nearly logarithmic-space algorithm for mild spectral sparsification of undirected graphs. Given a weighted, undirected graph $G$ on $n$ vertices described by a binary string of length $N$, an integer $k\leq \log n$ and an error parameter $\varepsilon &gt; 0$, our algorithm runs in space $\tilde{O}(k\log (N\cdot w_{\mathrm{max}}/w_{\mathrm{min}}))$ where $w_{\mathrm{max}}$ and $w_{\mathrm{min}}$ are the maximum and minimum edge weights in $G$, and produces a weighted graph $H$ with $\tilde{O}(n^{1+2/k}/\varepsilon^2)$ expected edges that spectrally approximates $G$, in the sense of Spielmen and Teng [ST04], up to an error of $\varepsilon$.

Our algorithm is based on a new bounded-independence analysis of Spielman and Srivastava's effective resistance based edge sampling algorithm [SS08] and uses results from recent work on space-bounded Laplacian solvers [MRSV17].  In particular, we demonstrate an inherent tradeoff (via upper and lower bounds) between the amount of (bounded) independence used in the edge sampling algorithm, denoted by $k$ above, and the resulting sparsity that can be achieved.</summary>
    <updated>2020-02-26T04:13:25Z</updated>
    <published>2020-02-26T04:13:25Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-02-27T03:20:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10958</id>
    <link href="http://arxiv.org/abs/2002.10958" rel="alternate" type="text/html"/>
    <title>Improved Lower Bound for Competitive Graph Exploration</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Birx:Alexander.html">Alexander Birx</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Disser:Yann.html">Yann Disser</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hopp:Alexander_V=.html">Alexander V. Hopp</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Karousatou:Christina.html">Christina Karousatou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10958">PDF</a><br/><b>Abstract: </b>We give an improved lower bound of 10/3 on the competitive ratio for the
exploration of an undirected, edge-weighted graph with a single agent that
needs to return to the starting location after visiting all vertices. We assume
that the agent has full knowledge of all edges incident to visited vertices,
and, in particular, vertices have unique identifiers. Our bound improves a
lower bound of 2.5 by Dobrev et al. [SIROCCO'12] and also holds for planar
graphs, where it complements an upper bound of 16 by Kalyanasundaram and
Pruhs[TCS'94]. The question whether a constant competitive ratio can be
achieved in general remains open.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10927</id>
    <link href="http://arxiv.org/abs/2002.10927" rel="alternate" type="text/html"/>
    <title>Integer Plane Multiflow Maximisation:Flow-Cut Gap and One-Quarter-Approximation</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Garg:Naveen.html">Naveen Garg</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kumar:Nikhil.html">Nikhil Kumar</a>, András Sebő <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10927">PDF</a><br/><b>Abstract: </b>In this paper, we bound the integrality gap and the approximation ratio for
maximum plane multiflow problems and deduce bounds on the flow-cut-gap.
Planarity means here that the union of the supply and demand graph is planar.
We first prove that there exists a multiflow of value at least half of the
capacity of a minimum multicut. We then show how to convert any multiflow into
a half-integer one of value at least half of the original multiflow. Finally,
we round any half-integer multiflow into an integer multiflow, losing again at
most half of the value, in polynomial time, achieving a $1/4$-approximation
algorithm for maximum integer multiflows in the plane, and an integer-flow-cut
gap of $8$.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10898</id>
    <link href="http://arxiv.org/abs/2002.10898" rel="alternate" type="text/html"/>
    <title>Hedonic Seat Arrangement Problems</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bodlaender:Hans_L=.html">Hans L. Bodlaender</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hanaka:Tesshu.html">Tesshu Hanaka</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jaffke:Lars.html">Lars Jaffke</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Ono:Hirotaka.html">Hirotaka Ono</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Otachi:Yota.html">Yota Otachi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zanden:Tom_C=_van_der.html">Tom C. van der Zanden</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10898">PDF</a><br/><b>Abstract: </b>In this paper, we study a variant of hedonic games, called \textsc{Seat
Arrangement}. The model is defined by a bijection from agents with preferences
to vertices in a graph. The utility of an agent depends on the neighbors
assigned in the graph. More precisely, it is the sum over all neighbors of the
preferences that the agent has towards the agent assigned to the neighbor. We
first consider the price of stability and fairness for different classes of
preferences. In particular, we show that there is an instance such that the
price of fairness ({\sf PoF}) is unbounded in general. Moreover, we show an
upper bound $\tilde{d}(G)$ and an almost tight lower bound $\tilde{d}(G)-1/4$
of {\sf PoF}, where $\tilde{d}(G)$ is the average degree of an input graph.
Then we investigate the computational complexity of problems to find certain
``good'' seat arrangements, say \textsc{Maximum Welfare Arrangement},
\textsc{Maximin Utility Arrangement}, \textsc{Stable Arrangement}, and
\textsc{Envy-free Arrangement}. We give dichotomies of computational complexity
of four \textsc{Seat Arrangement} problems from the perspective of the maximum
order of connected components in an input graph. For the parameterized
complexity, \textsc{Maximum Welfare Arrangement} can be solved in time
$n^{O(\gamma)}$, while it cannot be solved in time $f(\gamma)^{o(\gamma)}$
under ETH, where $\gamma$ is the vertex cover number of an input graph.
Moreover, we show that \textsc{Maximin Utility Arrangement} and
\textsc{Envy-free Arrangement} are weakly NP-hard even on graphs of bounded
vertex cover number. Finally, we prove that determining whether a stable
arrangement can be obtained from a given arrangement by $k$ swaps is W[1]-hard
when parameterized by $k+\gamma$, whereas it can be solved in time $n^{O(k)}$.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10889</id>
    <link href="http://arxiv.org/abs/2002.10889" rel="alternate" type="text/html"/>
    <title>Efficient and Simple Algorithms for Fault Tolerant Spanners</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dinitz:Michael.html">Michael Dinitz</a>, Caleb Robelle <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10889">PDF</a><br/><b>Abstract: </b>It was recently shown that a version of the greedy algorithm gives a
construction of fault-tolerant spanners that is size-optimal, at least for
vertex faults. However, the algorithm to construct this spanner is not
polynomial-time, and the best-known polynomial time algorithm is significantly
suboptimal. Designing a polynomial-time algorithm to construct (near-)optimal
fault-tolerant spanners was given as an explicit open problem in the two most
recent papers on fault-tolerant spanners ([Bodwin, Dinitz, Parter, Vassilevka
Williams SODA '18] and [Bodwin, Patel PODC '19]). We give a surprisingly simple
algorithm which runs in polynomial time and constructs fault-tolerant spanners
that are extremely close to optimal (off by only a linear factor in the
stretch) by modifying the greedy algorithm to run in polynomial time. To
complement this result, we also give simple distributed constructions in both
the LOCAL and CONGEST models.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10888</id>
    <link href="http://arxiv.org/abs/2002.10888" rel="alternate" type="text/html"/>
    <title>Lower bounds for prams over Z</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pellissier:Luc.html">Luc Pellissier</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Seiller:Thomas.html">Thomas Seiller</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10888">PDF</a><br/><b>Abstract: </b>This paper presents a new abstract method for proving lower bounds in
computational complexity. Based on the notion of topological entropy for
dynamical systems, the method captures four previous lower bounds results from
the literature in algebraic complexity. Among these results lies Mulmuley's
proof that "prams without bit operations" do not compute the maxflow problem in
polylogarithmic time, which was the best known lower bounds in the quest for a
proof that NC = Ptime. Inspired from a refinement of Steele and Yao's lower
bounds, due to Ben-Or, we strengthen Mulmuley's result to a larger class of
machines, showing that prams over integer do not compute maxflow in
polylogarithmic time.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10870</id>
    <link href="http://arxiv.org/abs/2002.10870" rel="alternate" type="text/html"/>
    <title>AMP Chain Graphs: Minimal Separators and Structure Learning Algorithms</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Javidian:Mohammad_Ali.html">Mohammad Ali Javidian</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Valtorta:Marco.html">Marco Valtorta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jamshidi:Pooyan.html">Pooyan Jamshidi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10870">PDF</a><br/><b>Abstract: </b>We address the problem of finding a minimal separator in an
Andersson-Madigan-Perlman chain graph (AMP CG), namely, finding a set Z of
nodes that separate a given non-adjacent pair of nodes such that no proper
subset of Z separates that pair. We analyze several versions of this problem
and offer polynomial-time algorithms for each. These include finding a minimal
separator from a restricted set of nodes, finding a minimal separator for two
given disjoint sets, and testing whether a given separator is minimal. We
provide an extension of the decomposition approach for learning Bayesian
networks (BNs) proposed by (Xie et. al.) to learn AMP CGs, which include BNs as
a special case, under the faithfulness assumption and prove its correctness
using the minimal separator results. The advantages of this decomposition
approach hold in the more general setting: reduced complexity and increased
power of computational independence tests. In addition, we show that the
PC-like algorithm is order-dependent, in the sense that the output can depend
on the order in which the variables are given. We propose two modifications of
the PC-like algorithm that remove part or all of this order-dependence.
Simulations under a variety of settings demonstrate the competitive performance
of our decomposition-based method, called LCD-AMP, in comparison with the
(modified version of) PC-like algorithm. In fact, the decomposition-based
algorithm usually outperforms the PC-like algorithm. We empirically show that
the results of both algorithms are more accurate and stable when the sample
size is reasonably large and the underlying graph is sparse.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10859</id>
    <link href="http://arxiv.org/abs/2002.10859" rel="alternate" type="text/html"/>
    <title>Well-partitioned chordal graphs: obstruction set and disjoint paths</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ahn:Jungho.html">Jungho Ahn</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jaffke:Lars.html">Lars Jaffke</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kwon:O=joung.html">O-joung Kwon</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lima:Paloma_T=.html">Paloma T. Lima</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10859">PDF</a><br/><b>Abstract: </b>We introduce a new subclass of chordal graphs that generalizes split graphs,
which we call well-partitioned chordal graphs. Split graphs are graphs that
admit a partition of the vertex set into cliques that can be arranged in a star
structure, the leaves of which are of size one. Well-partitioned chordal graphs
are a generalization of this concept in the following two ways. First, the
cliques in the partition can be arranged in a tree structure, and second, each
clique is of arbitrary size. We provide a characterization of well-partitioned
chordal graphs by forbidden induced subgraphs, and give a polynomial-time
algorithm that given any graph, either finds an obstruction, or outputs a
partition of its vertex set that asserts that the graph is well-partitioned
chordal. We demonstrate the algorithmic use of this graph class by showing that
two variants of the problem of finding pairwise disjoint paths between k given
pairs of vertices is in FPT parameterized by k on well-partitioned chordal
graphs, while on chordal graphs, these problems are only known to be in XP.
From the other end, we observe that there are problems that are polynomial-time
solvable on split graphs, but become NP-complete on well-partitioned chordal
graphs.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10841</id>
    <link href="http://arxiv.org/abs/2002.10841" rel="alternate" type="text/html"/>
    <title>Routing in Unit Disk Graphs without Dynamic Headers</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mulzer:Wolfgang.html">Wolfgang Mulzer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Willert:Max.html">Max Willert</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10841">PDF</a><br/><b>Abstract: </b>Let $V\subset\mathbb{R}^2$ be a set of $n$ sites in the plane. The unit disk
graph $DG(V)$ of $V$ is the graph with vertex set $V$ in which two sites $v$
and $w$ are adjacent if and only if their Euclidean distance is at most $1$. We
develop a compact routing scheme for $DG(V)$. The routing scheme preprocesses
$DG(V)$ by assigning a label $l(v)$ to every site $v$ in $V$. After that, for
any two sites $s$ and $t$, the scheme must be able to route a packet from $s$
to $t$ as follows: given the label of a current vertex $r$ (initially, $r=s$)
and the label of the target vertex $t$, the scheme determines a neighbor $r'$
of $r$. Then, the packet is forwarded to $r'$, and the process continues until
the packet reaches its desired target $t$. The resulting path between the
source $s$ and the target $t$ is called the routing path of $s$ and $t$. The
stretch of the routing scheme is the maximum ratio of the total Euclidean
length of the routing path and of the shortest path in $DG(V)$, between any two
sites $s, t \in V$. We show that for any given $\varepsilon&gt;0$, we can
construct a routing scheme for $DG(V)$ with diameter $D$ that achieves stretch
$1+\varepsilon$ and label size $O(\log D\log^3n/\log\log n)$ (the constant in
the $O$-Notation depends on $\varepsilon$). In the past, several routing
schemes for unit disk graphs have been proposed. Our scheme is the first one to
achieve poly-logarithmic label size and arbitrarily small stretch without
storing any additional information in the packet.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10809</id>
    <link href="http://arxiv.org/abs/2002.10809" rel="alternate" type="text/html"/>
    <title>A Tight Composition Theorem for the Randomized Query Complexity of Partial Functions</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Ben=David:Shalev.html">Shalev Ben-David</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Blais:Eric.html">Eric Blais</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10809">PDF</a><br/><b>Abstract: </b>We prove two new results about the randomized query complexity of composed
functions. First, we show that the randomized composition conjecture is false:
there are families of partial Boolean functions $f$ and $g$ such that $R(f\circ
g)\ll R(f) R(g)$. In fact, we show that the left hand side can be polynomially
smaller than the right hand side (though in our construction, both sides are
polylogarithmic in the input size of $f$).
</p>
<p>Second, we show that for all $f$ and $g$, $R(f\circ
g)=\Omega(\mathop{noisyR}(f)\cdot R(g))$, where $\mathop{noisyR}(f)$ is a
measure describing the cost of computing $f$ on noisy oracle inputs. We show
that this composition theorem is the strongest possible of its type: for any
measure $M(\cdot)$ satisfying $R(f\circ g)=\Omega(M(f)R(g))$ for all $f$ and
$g$, it must hold that $\mathop{noisyR}(f)=\Omega(M(f))$ for all $f$. We also
give a clean characterization of the measure $\mathop{noisyR}(f)$: it satisfies
$\mathop{noisyR}(f)=\Theta(R(f\circ gapmaj_n)/R(gapmaj_n))$, where $n$ is the
input size of $f$ and $gapmaj_n$ is the $\sqrt{n}$-gap majority function on $n$
bits.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2002.10802</id>
    <link href="http://arxiv.org/abs/2002.10802" rel="alternate" type="text/html"/>
    <title>A New Minimax Theorem for Randomized Algorithms</title>
    <feedworld_mtime>1582675200</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Ben=David:Shalev.html">Shalev Ben-David</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Blais:Eric.html">Eric Blais</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2002.10802">PDF</a><br/><b>Abstract: </b>The celebrated minimax principle of Yao (1977) says that for any
Boolean-valued function $f$ with finite domain, there is a distribution $\mu$
over the domain of $f$ such that computing $f$ to error $\epsilon$ against
inputs from $\mu$ is just as hard as computing $f$ to error $\epsilon$ on
worst-case inputs. Notably, however, the distribution $\mu$ depends on the
target error level $\epsilon$: the hard distribution which is tight for bounded
error might be trivial to solve to small bias, and the hard distribution which
is tight for a small bias level might be far from tight for bounded error
levels.
</p>
<p>In this work, we introduce a new type of minimax theorem which can provide a
hard distribution $\mu$ that works for all bias levels at once. We show that
this works for randomized query complexity, randomized communication
complexity, some randomized circuit models, quantum query and communication
complexities, approximate polynomial degree, and approximate logrank. We also
prove an improved version of Impagliazzo's hardcore lemma.
</p>
<p>Our proofs rely on two innovations over the classical approach of using Von
Neumann's minimax theorem or linear programming duality. First, we use Sion's
minimax theorem to prove a minimax theorem for ratios of bilinear functions
representing the cost and score of algorithms.
</p>
<p>Second, we introduce a new way to analyze low-bias randomized algorithms by
viewing them as "forecasting algorithms" evaluated by a proper scoring rule.
The expected score of the forecasting version of a randomized algorithm appears
to be a more fine-grained way of analyzing the bias of the algorithm. We show
that such expected scores have many elegant mathematical properties: for
example, they can be amplified linearly instead of quadratically. We anticipate
forecasting algorithms will find use in future work in which a fine-grained
analysis of small-bias algorithms is required.
</p></div>
    </summary>
    <updated>2020-02-26T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-02-26T01:30:00Z</updated>
    </source>
  </entry>
</feed>
