<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2019-10-02T23:53:21Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://thmatters.wordpress.com/?p=1288</id>
    <link href="https://thmatters.wordpress.com/2019/10/02/a-solicitation-for-tcs-job-market-profiles/" rel="alternate" type="text/html"/>
    <title>A solicitation for TCS job market profiles</title>
    <summary>CATCS is piloting an effort this year to collect and disseminate profiles of junior theory researchers who are going on the job market during the 2019-20 academic year, complementing the job postings collected under the Jobs tab. The SIGecom community has run a similar effort very successfully for a number of years and we are […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>CATCS is piloting an effort this year to collect and disseminate profiles of junior theory researchers who are going on the job market during the 2019-20 academic year, complementing the job postings collected under the <a href="https://cstheory-jobs.org/">Jobs tab</a>. The SIGecom community has run a similar effort very successfully for a number of years and we are following their lead. The goals are two-fold:</p>
<div/>
<ul>
<li>Provide a platform to job-seekers to advertise their credentials.</li>
<li>Provide an interface for institutions/individuals with open positions to find prospective candidates.</li>
</ul>
<p>Candidates looking for theory jobs can fill out <a href="https://forms.gle/gMDaChCqQocKSXT79" rel="noopener" target="_blank">this form</a>. The form asks for basic personal information, thesis title, graduation date (past or future), research/teaching interests, bibliographic information for three publications, and allows you to add links to publications and a brief CV.</p>
<div/>
<p>The responses will be reviewed and, if approved, edited and posted on Theory Matters starting in Nov’19. There is no deadline, but for responses received after Nov 1 please allow two weeks for review before your profile appears on the website. Responses received by Dec 15 will have summaries published in the following issue of SIGACT News.</p></div>
    </content>
    <updated>2019-10-02T21:09:02Z</updated>
    <published>2019-10-02T21:09:02Z</published>
    <category term="for PhD students"/>
    <category term="postdocs"/>
    <category term="Uncategorized"/>
    <author>
      <name>shuchic</name>
    </author>
    <source>
      <id>https://thmatters.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://thmatters.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://thmatters.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://thmatters.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://thmatters.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theory Matters</title>
      <updated>2019-10-02T23:51:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/133</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/133" rel="alternate" type="text/html"/>
    <title>TR19-133 |  More on $AC^0[\oplus]$ and Variants of the Majority Function | 

	Utkarsh Tripathi, 

	Nutan Limaye, 

	Srikanth Srinivasan</title>
    <summary>In this paper we prove two results about $AC^0[\oplus]$ circuits. 

We show that for $d(N) = o(\sqrt{\log N/\log \log N})$ and $N \leq s(N) \leq 2^{dN^{1/d^2}}$ there is an explicit family of functions $\{f_N:\{0,1\}^N\rightarrow \{0,1\}\}$ such that 
$f_N$ has uniform $AC^0$ formulas of depth $d$ and size at most $s$; 
$f_N$ does not have $AC^0[\oplus]$ formulas of depth $d$ and size $s^{\varepsilon}$, where $\varepsilon$ is a fixed absolute constant. 

This gives a quantitative improvement on the recent result of Limaye, Srinivasan, Sreenivasaiah, Tripathi, and Venkitesh, (STOC, 2019), which proved a similar Fixed-Depth Size-Hierarchy theorem but for $d \ll \log \log N$ and $s \ll \exp(N^{1/2^{\Omega(d)}})$. 

As in the previous result, we use the Coin Problem to prove our hierarchy theorem. Our main technical result is the construction of uniform size-optimal formulas for solving the coin problem with improved sample complexity $(1/\delta)^{d+4}$ (down from $(1/\delta)^{2^{O(d)}}$ in the previous result).

In our second result, we show that randomness buys depth in the $AC^0[\oplus]$ setting. Formally, we show that for any fixed constant $d\geq 2$, there is a family of Boolean functions that has polynomial-sized randomized uniform $AC^0$ circuits of depth $d$ but no polynomial-sized (deterministic) $AC^0[\oplus]$ circuits of depth $d$.

Previously Viola (Computational Complexity, 2014) showed that an increase in depth (by at least $2$) is essential to avoid superpolynomial blow-up while derandomizing randomized $AC^0$ circuits. We show that an increase in depth (by at least $1$) is essential even for $AC^0[\oplus]$. 

As in Viola's result, the separating examples are promise variants of the Majority function on $N$ inputs that accept inputs of weight at least $N/2 + N/(\log N)^{d-1}$ and reject inputs of weight at most $N/2 - N/(\log N)^{d-1}$.</summary>
    <updated>2019-10-02T11:00:43Z</updated>
    <published>2019-10-02T11:00:43Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/10/02/quics-fellows-at-joint-center-for-quantum-information-and-computer-science-apply-by-october-15-2019/</id>
    <link href="https://cstheory-jobs.org/2019/10/02/quics-fellows-at-joint-center-for-quantum-information-and-computer-science-apply-by-october-15-2019/" rel="alternate" type="text/html"/>
    <title>QuICS Fellows at Joint Center for Quantum Information and Computer Science (apply by October 15, 2019)</title>
    <summary>The Joint Center for Quantum Information and Computer Science (QuICS) is currently seeking outstanding quantum information researchers to join the Center faculty as QuICS Fellows. QuICS is a research partnership between the University of Maryland and the National Institute of Standards and Technology, with faculty from both institutions. Website: http://quics.umd.edu/join-quics/new-faculty Email: quics-coordinator@umiacs.umd.edu</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Joint Center for Quantum Information and Computer Science (QuICS) is currently seeking outstanding quantum information researchers to join the Center faculty as QuICS Fellows. QuICS is a research partnership between the University of Maryland and the National Institute of Standards and Technology, with faculty from both institutions.</p>
<p>Website: <a href="http://quics.umd.edu/join-quics/new-faculty">http://quics.umd.edu/join-quics/new-faculty</a><br/>
Email: quics-coordinator@umiacs.umd.edu</p></div>
    </content>
    <updated>2019-10-02T03:13:13Z</updated>
    <published>2019-10-02T03:13:13Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-10-02T23:51:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3422</id>
    <link href="https://agtb.wordpress.com/2019/10/02/matching-markets-simons-driven-by-theory-driving-the-economy/" rel="alternate" type="text/html"/>
    <title>Matching Markets @ Simons:  Driven by Theory, Driving the Economy</title>
    <summary>[Guest post by Sid Banerjee.] Divergent Evolution: The formation of new species when populations experience different selective pressures. While the canonical example is Darwin’s finches, it could apply as well to matching theorists! A notable feature of the first and second workshops at the Simons Institute program on Matching Markets was how researchers in Economics, […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>[Guest post by Sid Banerjee.]</em></p>



<blockquote class="wp-block-quote"><p><em>Divergent Evolution: The formation of new species when populations experience different selective pressures.</em></p></blockquote>



<p>While the canonical example is Darwin’s finches, it could apply as well to matching theorists! A notable feature of the <a href="https://simons.berkeley.edu/workshops/market2019-1" rel="noreferrer noopener" target="_blank">first</a> and <a href="https://simons.berkeley.edu/workshops/market2019-2" rel="noreferrer noopener" target="_blank">second</a> workshops at the <a href="https://simons.berkeley.edu/programs/market2019" rel="noreferrer noopener" target="_blank">Simons Institute program on Matching Markets</a> was how researchers in Economics, Operations Research and TCS all share common antecedents (Fulkerson, Gale, Scarf, Shapley, Walras — to name but a few giants invoked regularly), and yet have taken the theory in  diverse directions. The workshops helped create a healthy dialogue between the communities, as everyone tries to understand each other’s objectives and techniques. </p>



<p>A more notable aspect of matching theory in recent years has been its  impact on the design of real-world marketplaces. Over the two workshops,  a mix of speakers from academia and industry covered a host of markets,  including <a href="https://simons.berkeley.edu/talks/tba-121" rel="noreferrer noopener" target="_blank">payment routing</a>, <a href="https://simons.berkeley.edu/talks/tba-127" rel="noreferrer noopener" target="_blank">online advertising</a>, <a href="https://simons.berkeley.edu/talks/tba-124" rel="noreferrer noopener" target="_blank">kidney exchange</a>, <a href="https://simons.berkeley.edu/talks/tba-128" rel="noreferrer noopener" target="_blank">real-estate</a>, <a href="https://simons.berkeley.edu/talks/tba-131" rel="noreferrer noopener" target="_blank">public housing</a>, <a href="https://simons.berkeley.edu/talks/ridesharing-panel" rel="noreferrer noopener" target="_blank">ride-sharing</a>, <a href="https://simons.berkeley.edu/talks/driving-efficiencies-freight-industry" rel="noreferrer noopener" target="_blank">long-haul trucking</a>, <a href="https://simons.berkeley.edu/talks/ratings-design-and-barriers-entry" rel="noreferrer noopener" target="_blank">restaurant reviews</a>, <a href="https://simons.berkeley.edu/talks/tba-129" rel="noreferrer noopener" target="_blank">school choice</a>, <a href="https://simons.berkeley.edu/talks/unreasonable-effectiveness-artificial-currencies" rel="noreferrer noopener" target="_blank">food-banks</a> and many many others. A common theme that emerged was that online marketplaces, with the support of good algorithm and mechanism designers, are slowly taking over the economy.</p>



<p>And talking of giants of matching theory, another event held in parallel with the program was a <a href="https://simons.berkeley.edu/events/richard-m-karp-distinguished-lecture-inaugural-lecture" rel="noreferrer noopener" target="_blank">celebration</a> of the achievements and contributions of Dick Karp, with Vijay Vazirani giving the <a href="https://simons.berkeley.edu/rmklectures2019-fall-1" rel="noreferrer noopener" target="_blank">inaugural lecture</a> of the Simons Institute Richard M. Karp Distinguished Lecture Series. Vijay’s talk touched on both the above themes, with a sweeping overview of three great threads in matching theory (stable matching, market equilibria, and online matching). He highlighted the critical role of algorithmic thinking in their development, and concluded with a tantalizing 40-year-old open problem connected to finding a polynomial-time algorithm for the Hylland-Zeckhauser market equilibrium. It is an excellent starting point for those interested in the program, or matching markets in general!</p></div>
    </content>
    <updated>2019-10-02T00:45:32Z</updated>
    <published>2019-10-02T00:45:32Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>robertkleinberg</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-10-02T23:51:22Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00551</id>
    <link href="http://arxiv.org/abs/1910.00551" rel="alternate" type="text/html"/>
    <title>An Efficient Sampling Algorithm for Non-smooth Composite Potentials</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mou:Wenlong.html">Wenlong Mou</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Flammarion:Nicolas.html">Nicolas Flammarion</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wainwright:Martin_J=.html">Martin J. Wainwright</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bartlett:Peter_L=.html">Peter L. Bartlett</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00551">PDF</a><br/><b>Abstract: </b>We consider the problem of sampling from a density of the form $p(x) \propto
\exp(-f(x)- g(x))$, where $f: \mathbb{R}^d \rightarrow \mathbb{R}$ is a smooth
and strongly convex function and $g: \mathbb{R}^d \rightarrow \mathbb{R}$ is a
convex and Lipschitz function. We propose a new algorithm based on the
Metropolis-Hastings framework, and prove that it mixes to within TV distance
$\varepsilon$ of the target density in at most $O(d \log (d/\varepsilon))$
iterations. This guarantee extends previous results on sampling from
distributions with smooth log densities ($g = 0$) to the more general composite
non-smooth case, with the same mixing time up to a multiple of the condition
number. Our method is based on a novel proximal-based proposal distribution
that can be efficiently computed for a large class of non-smooth functions $g$.
</p></div>
    </summary>
    <updated>2019-10-02T23:27:15Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00517</id>
    <link href="http://arxiv.org/abs/1910.00517" rel="alternate" type="text/html"/>
    <title>Learning Multi-Stage Sparsification for Maximum Clique Enumeration</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Marco Grassia, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lauri:Juho.html">Juho Lauri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dutta:Sourav.html">Sourav Dutta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Ajwani:Deepak.html">Deepak Ajwani</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00517">PDF</a><br/><b>Abstract: </b>We propose a multi-stage learning approach for pruning the search space of
maximum clique enumeration, a fundamental computationally difficult problem
arising in various network analysis tasks. In each stage, our approach learns
the characteristics of vertices in terms of various neighborhood features and
leverage them to prune the set of vertices that are likely not contained in any
maximum clique. Furthermore, we demonstrate that our approach is domain
independent -- the same small set of features works well on graph instances
from different domain. Compared to the state-of-the-art heuristics and
preprocessing strategies, the advantages of our approach are that (i) it does
not require any estimate on the maximum clique size at runtime and (ii) we
demonstrate it to be effective also for dense graphs. In particular, for dense
graphs, we typically prune around 30 \% of the vertices resulting in speedups
of up to 53 times for state-of-the-art solvers while generally preserving the
size of the maximum clique (though some maximum cliques may be lost). For large
real-world sparse graphs, we routinely prune over 99 \% of the vertices
resulting in several tenfold speedups at best, typically with no impact on
solution quality.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00510</id>
    <link href="http://arxiv.org/abs/1910.00510" rel="alternate" type="text/html"/>
    <title>Joint Subcarrier and Power Allocation in NOMA: Optimal and Approximate Algorithms</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sala=uuml=n:Lou.html">Lou Salaün</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Coupechoux:Marceau.html">Marceau Coupechoux</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Chung_Shue.html">Chung Shue Chen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00510">PDF</a><br/><b>Abstract: </b>Non-orthogonal multiple access (NOMA) is a promising technology to increase
the spectral efficiency and enable massive connectivity in 5G and future
wireless networks. In contrast to orthogonal schemes, such as OFDMA, NOMA
multiplexes several users on the same frequency and time resource. Joint
subcarrier and power allocation problems (JSPA) in NOMA are NP-hard to solve in
general. In this family of problems, we consider the weighted sum-rate (WSR)
objective function as it can achieve various tradeoffs between sum-rate
performance and user fairness. Because of JSPA's intractability, a common
approach in the literature is to solve separately the power control and
subcarrier allocation (also known as user selection) problems, therefore
achieving sub-optimal result. In this work, we first improve the computational
complexity of existing single-carrier power control and user selection schemes.
These improved procedures are then used as basic building blocks to design new
algorithms, namely Opt-JSPA, $\varepsilon$-JSPA and Grad-JSPA. Opt-JSPA
computes an optimal solution with lower complexity than current optimal schemes
in the literature. It can be used as a benchmark for optimal WSR performance in
simulations. However, its pseudo-polynomial time complexity remains impractical
for real-world systems with low latency requirements. To further reduce the
complexity, we propose a fully polynomial-time approximation scheme called
$\varepsilon$-JSPA. Since, no approximation has been studied in the literature,
$\varepsilon$-JSPA stands out by allowing to control a tight trade-off between
performance guarantee and complexity. Finally, Grad-JSPA is a heuristic based
on gradient descent. Numerical results show that it achieves near-optimal WSR
with much lower complexity than existing optimal methods.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00494</id>
    <link href="http://arxiv.org/abs/1910.00494" rel="alternate" type="text/html"/>
    <title>Approximating the Percolation Centrality through Sampling and Pseudo-dimension</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Alane M. de Lima, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Silva:Murilo_V=_G=_da.html">Murilo V. G. da Silva</a>, André L. Vignatti <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00494">PDF</a><br/><b>Abstract: </b>In this work we investigate the problem of percolation centrality, a
generalization of betweenness centrality, in a weighted graph $G$ under the
light of sample complexity theory. For both betweenness and percolation
centrality the computation of the {\it exact} value for a given vertex $v$ is
not known to be easier than the computation the same value, all at once, for
all $n$ vertices of $G$. In any one of these cases it is an open problem
whether these measures can be computed in $\mathcal{O}(n^{3-c})$ time, for any
constant $c&gt;0$. In this paper we first present a $\mathcal{O}(m \log^2 n)$
randomized approximation algorithm for the percolation centrality for every
vertex of $G$, generalizing techniques developed by \cite{RiondatoUpfal} (this
complexity is reduced to $\mathcal{O}((m+n) \log n)$ for unweighted graphs).
The estimative obtained by the algorithm is within $\epsilon$ of the exact
value with probability $1- \delta$, for {\it fixed} constants $0 &lt;
\epsilon,\delta \leq 1$. Additionally, we show that sample complexity theory
can be used to distinguish the problem of estimating the percolation centrality
of a single vertex, refered as computing $\tilde{p}(v)$, from the problem of
estimating the percolation centrality of every vertex of $G$, refered as
computing $\tilde{p}(G)$. More precisely, we show that $\tilde{p}(v)$ and
$\tilde{p}(G)$ can be estimated respectively in time $\mathcal{O}(m \log n)$
and $\mathcal{O}(m \log^2 n)$. Our results also imply a similar "separation"
for percolation estimation in unweighted dense graphs as well as separations
for the estimation of betweenness centrality that holds in any combination of
the following scenarios: weighted or unweighted for either sparse or dense
graphs.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00477</id>
    <link href="http://arxiv.org/abs/1910.00477" rel="alternate" type="text/html"/>
    <title>Parameterized complexity of quantum invariants</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Maria:Cl=eacute=ment.html">Clément Maria</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00477">PDF</a><br/><b>Abstract: </b>We give a general fixed parameter tractable algorithm to compute quantum
invariants of links presented by diagrams, whose complexity is singly
exponential in the carving-width (or the tree-width) of the diagram. In
particular, we get a $O(N^{\frac{3}{2} \mathrm{cw}} \mathrm{poly}(n))$ time
algorithm to compute any Reshetikhin-Turaev invariant---derived from a simple
Lie algebra $\mathfrak{g}$---of a link presented by a planar diagram with $n$
crossings and carving-width $\mathrm{cw}$, and whose components are coloured
with $\mathfrak{g}$-modules of dimension at most $N$. For example, this
includes the $N^{th}$ coloured Jones polynomials and the $N^{th}$ coloured
HOMFLYPT polynomials.
</p></div>
    </summary>
    <updated>2019-10-02T23:50:49Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00440</id>
    <link href="http://arxiv.org/abs/1910.00440" rel="alternate" type="text/html"/>
    <title>The Complexity of Packing Edge-Disjoint Paths</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dreier:Jan.html">Jan Dreier</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fuchs:Janosch.html">Janosch Fuchs</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hartmann:Tim_A=.html">Tim A. Hartmann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kuinke:Philipp.html">Philipp Kuinke</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rossmanith:Peter.html">Peter Rossmanith</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tauer:Bjoern.html">Bjoern Tauer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Hung=Lung.html">Hung-Lung Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00440">PDF</a><br/><b>Abstract: </b>We introduce and study the complexity of Path Packing. Given a graph $G$ and
a list of paths, the task is to embed the paths edge-disjoint in $G$. This
generalizes the well known Hamiltonian-Path problem.
</p>
<p>Since Hamiltonian Path is efficiently solvable for graphs of small treewidth,
we study how this result translates to the much more general Path Packing. On
the positive side, we give an FPT-algorithm on trees for the number of paths as
parameter. Further, we give an XP-algorithm with the combined parameters
maximal degree, number of connected components and number of nodes of degree at
least three. Surprisingly the latter is an almost tight result by runtime and
parameterization. We show an ETH lower bound almost matching our runtime.
Moreover, if two of the three values are constant and one is unbounded the
problem becomes NP-hard.
</p>
<p>Further, we study restrictions to the given list of paths. On the positive
side, we present an FPT-algorithm parameterized by the sum of the lengths of
the paths. Packing paths of length two is polynomial time solvable, while
packing paths of length three is NP-hard. Finally, even the spacial case EPC
where the paths have to cover every edge in $G$ exactly once is already NP-hard
for two paths on 4-regular graphs.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00400</id>
    <link href="http://arxiv.org/abs/1910.00400" rel="alternate" type="text/html"/>
    <title>Incorporating Trip Chaining within Online Demand Estimation</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Guido Cantelmoa, Moeid Qurashia, A. Arun Prakashc, Constantinos Antonioua, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Viti:Francesco.html">Francesco Viti</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00400">PDF</a><br/><b>Abstract: </b>Time-dependent Origin-Destination (OD) demand flows are fundamental inputs
for Dynamic Traffic Assignment (DTA) systems and real-time traffic management.
This work introduces a novel state-space framework to estimate these demand
flows in an online context. Specifically, we propose to explicitly include
trip-chaining behavior within the state-space formulation, which is solved
using the well-established Kalman Filtering technique. While existing works
already consider structural information and recursive behavior within the
online demand estimation problem, this information has been always considered
at the OD level. In this study, we introduce this structural information by
explicitly representing trip-chaining within the estimation framework. The
advantage is twofold. First, all trips belonging to the same tour can be
jointly calibrated. Second, given the estimation during a certain time
interval, a prediction of the structural deviation over the whole day can be
obtained without the need to run additional simulations. The effectiveness of
the proposed methodology is demonstrated first on a toy network and then on a
large real-world network. Results show that the model improves the prediction
performance with respect to a conventional Kalman Filtering approach. We also
show that, on the basis of the estimation of the morning commute, the model can
be used to predict the evening commute without need of running additional
simulations.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00305</id>
    <link href="http://arxiv.org/abs/1910.00305" rel="alternate" type="text/html"/>
    <title>Complexity of Stability</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Frei:Fabian.html">Fabian Frei</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hemaspaandra:Edith.html">Edith Hemaspaandra</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rothe:J=ouml=rg.html">Jörg Rothe</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00305">PDF</a><br/><b>Abstract: </b>Graph parameters such as the clique number, the chromatic number, and the
independence number are central in many areas, ranging from computer networks
to linguistics to computational neuroscience to social networks. In particular,
the chromatic number of a graph (i.e., the smallest number of colors needed to
color all vertices such that no two adjacent vertices are of the same color)
can be applied in solving practical tasks as diverse as pattern matching,
scheduling jobs to machines, allocating registers in compiler optimization, and
even solving Sudoku puzzles. Typically, however, the underlying graphs are
subject to (often minor) changes. To make these applications of graph
parameters robust, it is important to know which graphs are stable for them in
the sense that adding or deleting single edges or vertices does not change
them. We initiate the study of stability of graphs for such parameters in terms
of their computational complexity. We show that, for various central graph
parameters, the problem of determining whether or not a given graph is stable
is complete for \Theta_2^p, a well-known complexity class in the second level
of the polynomial hierarchy, which is also known as "parallel access to NP."
</p></div>
    </summary>
    <updated>2019-10-02T23:20:26Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00277</id>
    <link href="http://arxiv.org/abs/1910.00277" rel="alternate" type="text/html"/>
    <title>Polynomial-Time Preprocessing for Weighted Problems Beyond Additive Goal Functions</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bentert:Matthias.html">Matthias Bentert</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bevern:Ren=eacute=_van.html">René van Bevern</a>, Fill Fluschnik, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nichterlein:Andr=eacute=.html">André Nichterlein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Niedermeier:Rolf.html">Rolf Niedermeier</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00277">PDF</a><br/><b>Abstract: </b>Kernelization is the fundamental notion for polynomial-time prepocessing with
performance guarantees in parameterized algorithmics. When preprocessing
weighted problems, the need of shrinking weights might arise. Marx and V\'egh
[ACM Trans. Algorithms 2015] and Etscheid et al. [J. Comput. Syst. Sci. 2017]
used a technique due to Frank and Tardos [Combinatorica 1987] that we refer to
as losing-weight technique to obtain kernels of polynomial size for weighted
problems. While the mentioned earlier works focus on problems with additive
goal functions, we focus on a broader class of goal functions. We lift the
losing-weight technique to what we call linearizable goal functions, which also
contain non-additive functions. We apply the lifted technique to five exemplary
problems, thereby improving two results from the literature by proving
polynomial kernels.
</p></div>
    </summary>
    <updated>2019-10-02T23:32:24Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00223</id>
    <link href="http://arxiv.org/abs/1910.00223" rel="alternate" type="text/html"/>
    <title>An improved analysis and unified perspective on deterministic and randomized low rank matrix approximations</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Demmel:James.html">James Demmel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Grigori:Laura.html">Laura Grigori</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rusciano:Alexander.html">Alexander Rusciano</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00223">PDF</a><br/><b>Abstract: </b>We introduce a Generalized LU-Factorization (\textbf{GLU}) for low-rank
matrix approximation. We relate this to past approaches and extensively analyze
its approximation properties. The established deterministic guarantees are
combined with sketching ensembles satisfying Johnson-Lindenstrauss properties
to present complete bounds. Particularly good performance is shown for the
sub-sampled randomized Hadamard transform (SRHT) ensemble. Moreover, the
factorization is shown to unify and generalize many past algorithms. It also
helps to explain the effect of sketching on the growth factor during Gaussian
Elimination.
</p></div>
    </summary>
    <updated>2019-10-02T23:47:52Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00152</id>
    <link href="http://arxiv.org/abs/1910.00152" rel="alternate" type="text/html"/>
    <title>On the Complexity of Approximating Multimarginal Optimal Transport</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Tianyi.html">Tianyi Lin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Ho:Nhat.html">Nhat Ho</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cuturi:Marco.html">Marco Cuturi</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jordan:Michael_I=.html">Michael I. Jordan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00152">PDF</a><br/><b>Abstract: </b>We study the complexity of approximating the multimarginal optimal transport
(OT) problem, a generalization of the classical optimal transport distance,
considered here between $m$ discrete probability distributions supported each
on $n$ support points. First, we show that the multimarginal OT problem is not
a minimum-cost flow problem when $m \geq 3$. This implies that many of the
combinatorial algorithms developed for classical OT are not applicable to
multimarginal OT, and therefore the standard interior-point algorithm bounds
result in an intractable complexity bound of $\widetilde{\mathcal{O}}(n^{3m})$.
Second, we propose and analyze two simple algorithms for approximating the
multimarginal OT problem. The first algorithm, which we refer to as
multimarginal Sinkhorn, improves upon previous multimarginal generalizations of
the celebrated Sinkhorn algorithm. We show that it achieves a near-linear time
complexity bound of $\widetilde{\mathcal{O}}(m^3 n^m / \varepsilon^2)$ for a
tolerance $\varepsilon \in (0, 1)$. This matches the best known complexity
bound for the Sinkhorn algorithm when $m = 2$ for approximating the classical
OT distance. The second algorithm, which we refer to as multimarginal
Randkhorn, accelerates the first algorithm by incorporating a randomized
estimate sequence and achieves a complexity bound of
$\widetilde{\mathcal{O}}(m^{8/3} n^{m+1/3}/\varepsilon)$. This improves on the
complexity bound of the first algorithm by $1/\varepsilon$ and matches the best
known complexity bound for the Randkhorn algorithm when $m=2$ for approximating
the classical OT distance.
</p></div>
    </summary>
    <updated>2019-10-02T23:38:28Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/1910.00081</id>
    <link href="http://arxiv.org/abs/1910.00081" rel="alternate" type="text/html"/>
    <title>Automated Generation of Dimensioned Rectangular Floorplans</title>
    <feedworld_mtime>1569974400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Nitant Upasani, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shekhawat:Krishnendra.html">Krishnendra Shekhawat</a>, Garv Sachdeva <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1910.00081">PDF</a><br/><b>Abstract: </b>This paper proposes a methodology for the automated construction of
rectangular floorplans (RFPs) while addressing dimensional constraints and
adjacency relations. Here, adjacency relations are taken in the form of a
dimensionless rectangular arrangement (RA) ensuring the existence of a RFP,
while dimensional constraints are given in terms of minimum width and aspect
ratio range for each room. A linear optimization model is then presented to
obtain a feasible dimensioned RFP for user-defined constraints. A GUI is also
developed for the automated generation of RFPs. The proposed model is able to
generate feasible solutions for every possible RA in a reasonable amount of
time. From the architectural perspective, this work can be seen as a
re-generation of well-known architectural plans with modified dimensions. In
the end, the regeneration of existing legacy RFPs (corresponding to the
user-defined dimensions) has been demonstrated, taking their image as input.
</p></div>
    </summary>
    <updated>2019-10-02T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2019-10-02T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://agtb.wordpress.com/?p=3419</id>
    <link href="https://agtb.wordpress.com/2019/10/01/sigecom-dissertation-award-call-for-nominations/" rel="alternate" type="text/html"/>
    <title>SIGecom Dissertation Award — Call for Nominations</title>
    <summary>Please consider nominating graduating Ph.D. students for the SIGecom Dissertation Award.  If you are a graduating student, consider asking your adviser or other senior mentor to nominate you. Nominations are due on February 29, 2020.  This award is given to a student who defended a thesis in 2019.  It is a prestigious award and is […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><div>
<div>
<div>Please consider nominating graduating Ph.D. students for the SIGecom Dissertation Award.  If you are a graduating student, consider asking your adviser or other senior mentor to nominate you.</div>
<div/>
<div>Nominations are due on February 29, 2020.  This award is given to a student who defended a thesis in 2019.  It is a prestigious award and is accompanied by a $1500 prize.  In the past, the prize has been awarded to:</div>
</div>
<div>
<div/>
<div>2018: Yannai Gonczarowski, “Aspects of Complexity and Simplicity in Economic Mechanisms”</div>
<div>2017: Aviad Rubinstein, “Hardness of Approximation Between P and NP”</div>
<div>2016: Peng Shi, “Prediction and Optimization in School Choice”</div>
<div>2015: Inbal Talgam-Cohen, “Robust Market Design: Information and Computation “</div>
<div>2014: S. Matthew Weinberg, “Algorithms for Strategic Agents”</div>
<div>2013: Balasubramanian Sivan, “Prior Robust Optimization”</div>
<div/>
<div/>
<div>And the award has had nine runner-ups: Nika Haghtalab, Haifeng Xu, Rachel Cummings, Christos Tzamos, Bo Waggoner, James Wright, Xi (Alice) Gao, Yang Cai, and Sigal Oren.  You can find detailed information about the nomination process at: <a href="http://www.sigecom.org/awardd.html" rel="noopener" target="_blank">http://www.sigecom.org/awardd.html</a>. We look forward to reading your nominations!</div>
<div/>
<div/>
<div>Your Award Committee,</div>
<div/>
<div>Ozan Candogan</div>
<div>Renato Paes Leme (Chair)</div>
<div>
<div>Yiling Chen</div>
</div>
</div>
</div>
<div class="yj6qo"/>
<div class="adL"/></div>
    </content>
    <updated>2019-10-01T03:08:23Z</updated>
    <published>2019-10-01T03:08:23Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Kevin Leyton-Brown</name>
    </author>
    <source>
      <id>https://agtb.wordpress.com</id>
      <logo>https://secure.gravatar.com/blavatar/52ef314e11e379febf97d1a97547f4cd?s=96&amp;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</logo>
      <link href="https://agtb.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://agtb.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://agtb.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://agtb.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Computation, Economics, and Game Theory</subtitle>
      <title>Turing's Invisible Hand</title>
      <updated>2019-10-02T23:51:21Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-2892542038915710982</id>
    <link href="https://blog.computationalcomplexity.org/feeds/2892542038915710982/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/09/richard-guy-is-102-years-old-today.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/2892542038915710982" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/2892542038915710982" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/09/richard-guy-is-102-years-old-today.html" rel="alternate" type="text/html"/>
    <title>Richard Guy is 103 years old today</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Richard Guy is a mathematician. He co-authored the classic book <i>Winning Ways for your Mathematical Plays </i> with Elywn Berlekamp and John Conway.<br/>
<br/>
On Sept 30 (today) he turned 102. According to <a href="https://en.wikipedia.org/wiki/List_of_centenarians_(scientists_and_mathematicians)">this list </a> he is the oldest living mathematician, and he would need to live to 110 to be the oldest mathematician ever. <br/>
<br/>
I have met him twice. He was at the Gathering for Gardner Conference as a young 98-year old. I told him that his book Winning Ways had a great influence on me. He asked it if was positive or negative. I later saw him at a Math conference where he went to my talk on The Muffin Problem. So he is still active.<br/>
<br/>
His Wikipedia site says that he says he regards himself as an Amateur Mathematician. While it is awkward to disagree with how someone sees himself, I'll point out that he is an author or co-author of 11 books, has many papers, and has solved Erdos Problems. He has taught some but I couldn't really find out what his source of income is or was. This takes us back to the word `amateur' which has several meanings:<br/>
<br/>
Amateur: Someone who does X for the love of X (Amor is Love in Spanish), and not for money. This could be true of Richard Guy. This notion of amateur may be lost on my younger readers since this it used to be a thing to NOT take money since it somehow soils what you do. In those days Olympic athletes could not have played professionally beforehand.  We can't imagine that now.<br/>
<br/>
Amateur: Someone who dabbles in something but is not really that good. This could NOT be true of Richard Guy.<br/>
<br/>
<br/>
<br/>
<br/>
Aside from games he has also worked in Number Theory. His book <i>Unsolved Problems in Number Theory </i> has inspired many (including me). <br/>
<br/>
So happy birthday Richard Guy!<br/>
<br/>
He is the also the oldest living person we have honored on this blog. Second oldest was Katherine Johnson, see <a href="https://blog.computationalcomplexity.org/2018/08/katherine-johnson-1918.html"/> who is still alive.</div>
    </content>
    <updated>2019-10-01T00:03:00Z</updated>
    <published>2019-10-01T00:03:00Z</published>
    <author>
      <name>GASARCH</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/03615736448441925334</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2019-10-02T21:22:42Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/09/30/linkage</id>
    <link href="https://11011110.github.io/blog/2019/09/30/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>Proceedings of the 27th International Symposium on Graph Drawing and Network Visualization (GD 2019) (). As in recent years, Graph Drawing is making an open-access version of their complete proceedings through arXiv, mirroring (except for minor typographic details) the official proceedings to be published through Springer LNCS. One advantage of the arXiv version is that in many cases appendices or longer versions of the papers are also available.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p><a href="https://arxiv.org/html/1909.07013">Proceedings of the 27th International Symposium on Graph Drawing and Network Visualization (GD 2019)</a> (<a href="https://mathstodon.xyz/@11011110/102805229578506057"/>). As in recent years, Graph Drawing is making an open-access version of their complete proceedings through arXiv, mirroring (except for minor typographic details) the official proceedings to be published through Springer LNCS. One advantage of the arXiv version is that in many cases appendices or longer versions of the papers are also available.</p>
  </li>
  <li>
    <p><a href="https://commons.wikimedia.org/wiki/File:National_Library_of_Kosovo_photo_Arben_Llapashtica.jpg">Look at all the triangulated (hemi)spheres!</a> (<a href="https://mathstodon.xyz/@11011110/102811772067495838"/>). Sadly this aerial view of the <a href="https://en.wikipedia.org/wiki/National_Library_of_Kosovo">National Library of Kosovo</a> did not pass <a href="https://en.wikipedia.org/wiki/Wikipedia:Featured_picture_candidates/National_Library_of_Kosovo">its nomination as an English Wikipedia featured picture</a>.</p>
  </li>
  <li>
    <p><a href="https://mathstodon.xyz/@christianp/102809304875599612">Christian Lawson-Perfect tries to visualize the concept of non-Hamiltonicity</a> by sending flocks of arrowheads tracing around paths in the <a href="https://en.wikipedia.org/wiki/Herschel_graph">Herschel graph</a> but without ever closing up to form a cycle.</p>
  </li>
  <li>
    <p>Millions of books published from 1923 to 1964 didn’t have their copyright renewed, putting them in the public domain in the US. <a href="https://www.vice.com/en_us/article/a3534j/libraries-and-archivists-are-scanning-and-uploading-books-that-are-secretly-in-the-public-domain">Libraries and the Internet Archive are collaborating to scan them and put them online</a> (<a href="https://mathstodon.xyz/@11011110/102825724023396126"/>, <a href="https://news.ycombinator.com/item?id=20992397">via</a>). See also <a href="https://www.nypl.org/blog/2019/09/01/historical-copyright-records-transparency">the NYPL blog</a> for more technical details about the efforts to determine the non-renewal status of these books.</p>
  </li>
  <li>
    <p><a href="https://phys.org/news/2019-08-mathematical-framework-sheet-material-kirigami.html">Programmable kirigami</a> (<a href="https://mathstodon.xyz/@11011110/102828568682129281"/>, <a href="https://news.ycombinator.com/item?id=20792995">via</a>, <a href="https://www.nature.com/articles/s41563-019-0452-y">original research paper</a>). Harvard researchers use numerical optimization to design slit cutting patterns and hinged unfoldings that allow sheets of material to expand from one given shape to another.</p>
  </li>
  <li>
    <p>White nationalists use the abbreviation SPQR (<a href="https://archive.org/stream/handbuchdertheo00hefngoog#page/n122/mode/2up">Sono Pazzi Questi Romani!</a>) thinking it refers to the Roman military. <a href="http://pages.vassar.edu/pharos/2018/07/27/scholars-respond-to-spqr-and-white-nationalism/">Classics scholars set them straight</a> (<a href="https://mathstodon.xyz/@11011110/102834635536818832"/>). As the same abbreviation is widely used in graph drawing for <a href="https://en.wikipedia.org/wiki/SPQR_tree">a data structure to describe 3-connected components and planar embeddings</a> I think it’s important to pay attention to these darker shifts in  popular usage.</p>
  </li>
  <li>
    <p><a href="https://www.scottaaronson.com/blog/?p=4317">Scott Aaronson’s Quantum Supremacy FAQ</a> (<a href="https://mathstodon.xyz/@11011110/102845648603908743"/>). The story Scott’s responding to is not yet properly published in peer-reviewed sources, but the scoop-hungry journalists say that Google has demonstrated their 50-something-qbit machines to be truly quantum. This seems like pretty big news from the quantum computing world even though it’s still a long way from there to breaking RSA.</p>
  </li>
  <li>
    <p>Embedding a Sierpiński tetrahedron onto a king’s graph (<a href="https://mathstodon.xyz/@11011110/102849777026944754"/>):</p>

    <p style="text-align: center;"><img alt="Embedding a Sierpi&#x144;ski tetrahedron onto a king's graph" src="https://11011110.github.io/blog/assets/2019/sierpinski-kings-graph.svg"/></p>
  </li>
  <li>
    <p><a href="https://nerdcore.de/2019/09/23/eine-fotostudie-der-tafeln-von-mathematikern/">Jessica Wynne’s forthcoming book “Do Not Erase”, her collection of photographs of mathematical blackboards, looks fascinating</a> (<a href="https://mathstodon.xyz/@11011110/102856920767696508"/>, <a href="https://www.metafilter.com/183291/This-is-what-thought-looks-like">discussion</a>, <a href="https://boingboing.net/2019/09/27/do-not-erase.html">see also</a>). There’s also an NYT article but I’m not linking it because they were too sniffy about reading their site in incognito mode.</p>
  </li>
  <li>
    <p><a href="http://bit-player.org/2019/my-god-its-full-of-dots">My God, It’s Full of Dots!</a> (<a href="https://mathstodon.xyz/@11011110/102868939006126852"/>). Brian Hayes plays with the fractal circle packings of the plane (or of a region of the plane) that you get from a greedy process of picking random points and using either the maximum radius possible or the next radius on a given sequence of radii (but then only adding a circle if that radius fits).</p>
  </li>
  <li>
    <p><a href="https://blogs.plos.org/absolutely-maybe/2019/09/27/google-scholar-risks-and-alternatives/">Is the increasing use of Google Scholar causing citations to be concentrated more heavily on a smaller number of highly-cited papers?</a> (<a href="https://mathstodon.xyz/@11011110/102871113125694380"/>, <a href="https://retractionwatch.com/2019/09/28/weekend-reads-jailed-for-publishing-a-paper-pushing-back-on-vaping-research-sugar-daddy-science/">via</a>).</p>
  </li>
  <li>
    <p><a href="https://www.latimes.com/california/story/2019-09-28/leading-chinese-american-scholars-decry-fallout-on-them-of-trumps-hardline-policies-against-china">Leading Chinese American scholars decry racial profiling from Trump’s hard-line policies against China</a> (<a href="https://mathstodon.xyz/@11011110/102877049872954133"/>). You know how the US took over as a leader in mathematics and science from Germany in the 1930s-1940s because the Nazis were already driving away their best Jewish scientists, long before they became completely genocidal? This feels kind of similar.</p>
  </li>
  <li>
    <p><a href="https://royalsociety.org.nz/150th-anniversary/150-women-in-150-words/">150 women in 150 words</a> (<a href="https://mathstodon.xyz/@11011110/102884552172728020"/>). The Royal Society of New Zealand celebrates its 150th anniversary by highlighting the contributions of women in New Zealand to scientific knowledge.</p>
  </li>
</ul></div>
    </content>
    <updated>2019-09-30T18:36:00Z</updated>
    <published>2019-09-30T18:36:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-10-01T17:35:02Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/132</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/132" rel="alternate" type="text/html"/>
    <title>TR19-132 |  Radio Network Coding Requires Logarithmic Overhead | 

	Raghuvansh Saxena, 

	Klim Efremenko, 

	Gillat Kol</title>
    <summary>We consider the celebrated radio network model for abstracting communication in wireless networks. In this model, in any round, each node in the network may broadcast a message to all its neighbors. However, a node is able to hear a message broadcast by a neighbor only if no collision occurred, meaning that it was the only neighbor broadcasting. 


While the (noiseless) radio network model received a lot of attention over the last few decades, the effect of noise on radio networks is still not well understood. In this paper, we take a step forward and show that making radio network protocols resilient to noise may require a substantial performance overhead. Specifically, we  construct a multi-hop network and a communication protocol over this network that works in $T$ rounds when there is no noise. We prove that any scheme that simulates our protocol and is resilient to stochastic noise, requires $\Omega(T \log n)$ rounds. 

This stands in contrast to our previous result (STOC, 2018), showing that protocols over the single-hop (clique) network can be made noise resilient with only a constant overhead. Our result also settles a recent conjecture by Censor{-}Hillel, Haeupler, Hershkowitz, Zuzic (2018).

We complement the above result by giving a scheme to simulate any protocol with a fixed order of transmissions with only an $\mathcal{O}(\log n)$ overhead.</summary>
    <updated>2019-09-30T17:48:38Z</updated>
    <published>2019-09-30T17:48:38Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16277</id>
    <link href="https://rjlipton.wordpress.com/2019/09/30/writing-33-as-a-sum-of-cubes/" rel="alternate" type="text/html"/>
    <title>Writing 33 as a Sum of Cubes</title>
    <summary>Cracking a Diophantine problem for 42 too Andrew Booker is a mathematician at the University of Bristol, who works in analytic number theory. For example he has a paper extending a result of Alan Turing on the Riemann zeta function. Yes our Turing. Today Ken and I will talk about his successful search for a […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>Cracking a Diophantine problem for 42 too</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.files.wordpress.com/2019/09/bookerbristolmath.jpg"><img alt="" class="alignright wp-image-16279" height="150" src="https://rjlipton.files.wordpress.com/2019/09/bookerbristolmath.jpg?w=116&amp;h=150" width="116"/></a></p>
<p>
Andrew Booker is a mathematician at the University of Bristol, who works in analytic number theory. For example he has a <a href="https://arxiv.org/pdf/1710.00603.pdf">paper</a> extending a result of Alan Turing on the Riemann zeta function. Yes our Turing. </p>
<p>
Today Ken and I will talk about his successful search for a solution to a 64 year old problem.</p>
<p>
He was inspired by a <a href="https://www.youtube.com/watch?v=wymmCdLdPvM&amp;feature=youtu.be">video</a> on the search problem authored by Tim Browning and Brady Haran. The question was to find a solution to 	</p>
<p align="center"><img alt="\displaystyle  33 = x^{3} + y^{3} + z^{3}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++33+%3D+x%5E%7B3%7D+%2B+y%5E%7B3%7D+%2B+z%5E%7B3%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  33 = x^{3} + y^{3} + z^{3}. "/></p>
<p>Booker <a href="https://arxiv.org/pdf/1903.04284.pdf">found</a> 	</p>
<p align="center"><img alt="\displaystyle  33 = (8 866 128 975 287 528)^{3} - (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++33+%3D+%288+866+128+975+287+528%29%5E%7B3%7D+-+%288+778+405+442+862+239%29%5E%7B3%7D+-+%282+736+111+468+807+040%29%5E%7B3%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  33 = (8 866 128 975 287 528)^{3} - (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3}. "/></p>
<p>The search was for all possible solutions with <img alt="{x,y,z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2Cy%2Cz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x,y,z}"/> bounded by <img alt="{10^{16}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B10%5E%7B16%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{10^{16}}"/>. Note that this is expensive, and is not even close to polynomial time in the number of bits. But it is feasible today thanks to modern technology: </p>
<blockquote><p><b> </b> <em> The total computation used was approximately <img alt="{23}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B23%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{23}"/> core-years over one month of real time. </em>
</p></blockquote>
<p/><p>
Before we turn to our discussion, note that Booker’s paper on extending Turing is really a result on proof checking. Turing had great intuition, terrible that we lost him so early. He, Turing, essentially proved the first result ever on how to efficiently check a computation. Booker says: </p>
<blockquote><p><b> </b> <em> Turing introduced a method for certifying the completeness of a purported list of zeros of <img alt="{Z(t)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ%28t%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Z(t)}"/> that is guaranteed to work (when the list is in fact complete). Turing’s method has remained a small but essential ingredient in all subsequent verifications of RH and its many generalizations. </em>
</p></blockquote>
<p>That is checking the zeroes of the Riemann zeta function <img alt="{Z(t)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BZ%28t%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Z(t)}"/>.</p>
<p>
Speaking of checking, when I was drafting this I initially had the wrong solution: 	</p>
<p align="center"><img alt="\displaystyle  33 = (8 866 128 975 287 528)^{3} + (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++33+%3D+%288+866+128+975+287+528%29%5E%7B3%7D+%2B+%288+778+405+442+862+239%29%5E%7B3%7D+-+%282+736+111+468+807+040%29%5E%7B3%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  33 = (8 866 128 975 287 528)^{3} + (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3}. "/></p>
<p>which is <b>wrong</b>. Can you quickly see why this cannot be right? Answer at the end.</p>
<p>
</p><p/><h2> The Press </h2><p/>
<p/><p>
The press love Booker’s result. Not the one on the zeta function, the one on the number <img alt="{33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{33}"/>.</p>
<p>
Part of the excitement is caused by the number <img alt="{33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{33}"/>. In complexity theory we rarely see explicit numbers—more likely to see expressions like 	</p>
<p align="center"><img alt="\displaystyle  O(n^{\log_2 3}(\log \log n)^{3}) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++O%28n%5E%7B%5Clog_2+3%7D%28%5Clog+%5Clog+n%29%5E%7B3%7D%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  O(n^{\log_2 3}(\log \log n)^{3}) "/></p>
<p>and worse. </p>
<p>
The press seem to like the numerology of <img alt="{33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{33}"/>. The number <img alt="{33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{33}"/> is quite <a href="https://en.wikipedia.org/wiki/33_(number)">neat</a>: </p>
<ul>
<li>
The atomic number of arsenic. <p/>
</li><li>
It is the code for international direct-dial phone calls to France. <p/>
</li><li>
It is Kareem Abdul-Jabbar’s old jersey number. <p/>
</li><li>
And more <img alt="{\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\dots}"/>
</li></ul>
<p>
Most important is the connection with Rolling-Rock beer:</p>
<p><a href="https://rjlipton.files.wordpress.com/2019/09/roll.jpg"><img alt="" class="aligncenter size-medium wp-image-16280" height="300" src="https://rjlipton.files.wordpress.com/2019/09/roll.jpg?w=143&amp;h=300" width="143"/></a></p>
<p>
The press from <em>Newsweek</em> and other sites talked about Booker’s solution. See <a href="https://www.newsweek.com/uncracked-problem-mathematician-diophantine-puzzle-1384422">here</a> and <a href="https://phys.org/news/2019-04-bristol-mathematician-diophantine-puzzle.html">here</a>. And <a href="https://www.quantamagazine.org/sum-of-three-cubes-problem-solved-for-stubborn-number-33-20190326/">here</a> at the <em>Quanta</em> magazine with a great diagram:</p>
<p><a href="https://rjlipton.files.wordpress.com/2019/09/cube.jpg"><img alt="" class="aligncenter size-medium wp-image-16281" height="127" src="https://rjlipton.files.wordpress.com/2019/09/cube.jpg?w=300&amp;h=127" width="300"/></a></p>
<p>
One <a href="https://science.howstuffworks.com/math-concepts/mathematician-has-just-cracked-33-problem.htm">said</a>: </p>
<blockquote><p><b> </b> <em> To crunch the numbers, he then used a cluster of powerful computers – 512 central processing unit (CPU) cores at the same time – known as Blue Crystal Phase 3. When he returned to his office one morning after dropping his children off at school, he spotted the solution on his screen. “I jumped for joy,” he recalled. </em>
</p></blockquote>
<p/><p>
Another <a href="https://www.bristol.ac.uk/news/2019/april/number-33-.html">reported</a>, </p>
<blockquote><p><b> </b> <em> Booker said: “This one’s right at the boundary between what we know how to prove and what we suspect might be undecidable.” </em>
</p></blockquote>
<p/><p>
I hope we will get the same coverage for our big results. </p>
<p>
</p><p/><h2> More Press </h2><p/>
<p/><p>
The press love Booker’s result. Not the one on the zeta function, the one on the number <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/>. This search was jointly led by Andrew Sutherland of MIT.</p>
<p>
Part of the excitement is caused by the number <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/>. In complexity theory we rarely see explicit numbers—more likely to see expressions like 	</p>
<p align="center"><img alt="\displaystyle  O(n^{\log_{3} 4}(\log \log n)^{2}) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++O%28n%5E%7B%5Clog_%7B3%7D+4%7D%28%5Clog+%5Clog+n%29%5E%7B2%7D%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  O(n^{\log_{3} 4}(\log \log n)^{2}) "/></p>
<p>and worse. </p>
<p>
The press seem to like the numerology of <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/>. The number <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/> is quite <a href="https://en.wikipedia.org/wiki/42_(number)">neat</a>: </p>
<ul>
<li>
The atomic number of molybdenum. <p/>
</li><li>
It was the code for international direct-dial phone calls to Czechoslovakia, until the “velvet divorce” split the codes into <img alt="{420}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B420%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{420}"/> and <img alt="{421}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B421%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{421}"/>. <p/>
</li><li>
It was Jackie Robinson’s old jersey number. Major League Baseball retired the number for all teams. The last player allowed to wear it was Mariano Rivera of the Yankees, himself a Hall-of-Famer, except that all players on all teams wear it on April 15. Rivera is nicknamed “Mo” which is the symbol for molybdenum—are we the first to notice this coincidence?<p/>
</li><li>
And more <img alt="{\dots}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\dots}"/>
</li></ul>
<p>
Most important is the <a href="https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker's_Guide_to_the_Galaxy#Answer_to_the_Ultimate_Question_of_Life,_the_Universe,_and_Everything_(42)">connection</a> with <em>The Hitchhiker’s Guide to the Galaxy</em>:</p>
<p>
<a href="https://rjlipton.files.wordpress.com/2019/09/wiki42snip.jpg"><img alt="" class="aligncenter wp-image-16282" height="210" src="https://rjlipton.files.wordpress.com/2019/09/wiki42snip.jpg?w=240&amp;h=210" width="240"/></a></p>
<p>
The press from <em>New Scientist</em> and other sites talked about Booker’s solution. See <a href="https://www.newscientist.com/article/2215680-mathematicians-crack-elusive-puzzle-involving-the-number-42/">here</a> and <a href="https://science.howstuffworks.com/math-concepts/mathematicians-solved-sum-3-cubes-problem-42.htm">here</a>. But <a href="https://www.quantamagazine.org/search?q[s]=42&amp;q[sort]=newest">here</a> the <em>Quanta</em> magazine seems not to have mentioned the number <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/> at all in over three months:</p>
<p>
<a href="https://rjlipton.files.wordpress.com/2019/09/quantano42.jpg"><img alt="" class="aligncenter size-medium wp-image-16284" src="https://rjlipton.files.wordpress.com/2019/09/quantano42.jpg?w=300&amp;h=192"/></a></p>
<p>
One <a href="https://www.sciencealert.com/the-sum-of-three-cubes-problem-has-been-solved-for-42">said</a>:</p>
<blockquote><p><b> </b> <em> Of course, it wasn’t simple. The pair had to go large, so they enlisted the aid of the <a href="https://www.charityengine.com/">Charity Engine</a>, an initiative that spans the globe, harnessing unused computing power from over 500,000 home PCs to act as a sort of “planetary supercomputer.”</em></p><em>
<p>
It took over a million hours of computing time, but the two mathematicians found their solution: </p>
<p align="center"><img alt="\displaystyle  (-80538738812075974)^3 + 80435758145817515^3 + 12602123297335631^3 = 42. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%28-80538738812075974%29%5E3+%2B+80435758145817515%5E3+%2B+12602123297335631%5E3+%3D+42.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  (-80538738812075974)^3 + 80435758145817515^3 + 12602123297335631^3 = 42. "/></p>
</em><p><em/>
</p></blockquote>
<p/><p>
Another <a href="https://www.bristol.ac.uk/news/2019/september/sum-of-three-cubes-.html">reported</a>:</p>
<blockquote><p><b> </b> <em> Booker said: “I feel relieved … we might find what we’re looking for with a few months of searching, or it might be that the solution isn’t found for another century.” </em>
</p></blockquote>
<p/><p>
I hope we will get the same coverage for our big results. </p>
<p>
</p><p/><h2> Less Press </h2><p/>
<p/><p>
Booker and Sutherland also <a href="https://www.newscientist.com/article/2216941-mathematicians-find-a-completely-new-way-to-write-the-number-3/">discovered</a> that </p>
<p align="center"><img alt="\displaystyle  569936821221962380720^3 - 569936821113563493509^3 - 472715493453327032^3 = 3. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++569936821221962380720%5E3+-+569936821113563493509%5E3+-+472715493453327032%5E3+%3D+3.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  569936821221962380720^3 - 569936821113563493509^3 - 472715493453327032^3 = 3. "/></p>
<p>This is the next-largest solution after <img alt="{3 = 1^3 + 1^3 + 1^3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3+%3D+1%5E3+%2B+1%5E3+%2B+1%5E3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{3 = 1^3 + 1^3 + 1^3}"/> and <img alt="{3 = 4^3 + 4^3 + (-5)^3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3+%3D+4%5E3+%2B+4%5E3+%2B+%28-5%29%5E3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{3 = 4^3 + 4^3 + (-5)^3}"/>. Weird. And the first solution not to duplicate a number. And it uses two numbers that agree to markedly more decimal places than those in the above solutions for <img alt="{33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{33}"/> and <img alt="{42}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B42%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{42}"/>. Weirder.</p>
<p>
</p><p/><h2> Smart Search </h2><p/>
<p/><p>
Booker wanted to search for a solution to 	</p>
<p align="center"><img alt="\displaystyle  k = x^{3} + y^{3} + z^{3}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++k+%3D+x%5E%7B3%7D+%2B+y%5E%7B3%7D+%2B+z%5E%7B3%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  k = x^{3} + y^{3} + z^{3}. "/></p>
<p>Actually his main interest was in <img alt="{k=33}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%3D33%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k=33}"/>, but his method is general. How does one do this for <img alt="{x,y,z}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2Cy%2Cz%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x,y,z}"/> bounded by <img alt="{B = 10^{16}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB+%3D+10%5E%7B16%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B = 10^{16}}"/>. The obvious method is: Try all numbers below <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/>. </p>
<p>
This is too expensive and requires <img alt="{\widetilde{O}(B^{3})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwidetilde%7BO%7D%28B%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\widetilde{O}(B^{3})}"/> time. Too much, even with a cluster of fast processors.</p>
<p>
An improvement is to try all <img alt="{x,y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2Cy%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x,y}"/> in the range and then check that <img alt="{k-x^{3}-y^{3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk-x%5E%7B3%7D-y%5E%7B3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k-x^{3}-y^{3}}"/> is cube. This runs in <img alt="{\widetilde{O}(B^{2})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwidetilde%7BO%7D%28B%5E%7B2%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\widetilde{O}(B^{2})}"/> time. Still too much.</p>
<p>
A key insight is to re-write the equation as 	</p>
<p align="center"><img alt="\displaystyle  k -z^{3} = x^{3} + y^{3} = (x + y)(x^{2} - xy + y^{2}). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++k+-z%5E%7B3%7D+%3D+x%5E%7B3%7D+%2B+y%5E%7B3%7D+%3D+%28x+%2B+y%29%28x%5E%7B2%7D+-+xy+%2B+y%5E%7B2%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  k -z^{3} = x^{3} + y^{3} = (x + y)(x^{2} - xy + y^{2}). "/></p>
<p>Then we note that <img alt="{x+y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%2By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x+y}"/> must be a divisor of <img alt="{k-z^{3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk-z%5E%7B3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k-z^{3}}"/>. Since there are few such divisors, we can improve the time greatly. For the divisors <img alt="{d}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{d}"/> of <img alt="{k-z^{3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk-z%5E%7B3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k-z^{3}}"/> some simple algebra and the quadratic formula shows that 	</p>
<p align="center"><img alt="\displaystyle  x = \frac{d}{2} + \sqrt{\frac{4|k-z^{3}| - d^{3}}{6d}}, " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x+%3D+%5Cfrac%7Bd%7D%7B2%7D+%2B+%5Csqrt%7B%5Cfrac%7B4%7Ck-z%5E%7B3%7D%7C+-+d%5E%7B3%7D%7D%7B6d%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  x = \frac{d}{2} + \sqrt{\frac{4|k-z^{3}| - d^{3}}{6d}}, "/></p>
<p>and 	</p>
<p align="center"><img alt="\displaystyle  y = \frac{d}{2} - \sqrt{\frac{4|k-z^{3}| - d^{3}}{3d}}. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++y+%3D+%5Cfrac%7Bd%7D%7B2%7D+-+%5Csqrt%7B%5Cfrac%7B4%7Ck-z%5E%7B3%7D%7C+-+d%5E%7B3%7D%7D%7B3d%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  y = \frac{d}{2} - \sqrt{\frac{4|k-z^{3}| - d^{3}}{3d}}. "/></p>
<p>This shows that the search is now reduced to <img alt="{\widetilde{O}(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwidetilde%7BO%7D%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\widetilde{O}(B)}"/>. Still too much, but close to doable. The next trick is to avoid the factoring step. See Booker’s <a href="https://arxiv.org/pdf/1903.04284.pdf">paper</a> for the rest of the search description. </p>
<p>
I like the progression of time bounds from 	</p>
<p align="center"><img alt="\displaystyle  \widetilde{O}(B^{3}) \rightarrow \widetilde{O}(B^{2}) \rightarrow \widetilde{O}(B). " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cwidetilde%7BO%7D%28B%5E%7B3%7D%29+%5Crightarrow+%5Cwidetilde%7BO%7D%28B%5E%7B2%7D%29+%5Crightarrow+%5Cwidetilde%7BO%7D%28B%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \widetilde{O}(B^{3}) \rightarrow \widetilde{O}(B^{2}) \rightarrow \widetilde{O}(B). "/></p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Can one beat <img alt="{\widetilde{O}(B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwidetilde%7BO%7D%28B%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\widetilde{O}(B)}"/>? Could there be an algorithm that runs in <img alt="{\widetilde{O}(B^{a})}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cwidetilde%7BO%7D%28B%5E%7Ba%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\widetilde{O}(B^{a})}"/> for some <img alt="{a&lt;1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%3C1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a&lt;1}"/>? Can any of our tricks apply here? A possible observation: Booker is clever but he writes that the methods use not 	</p>
<p align="center"><img alt="\displaystyle  \widetilde{O}(B^{3}) \rightarrow \widetilde{O}(B^{2}) \rightarrow \widetilde{O}(B) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cwidetilde%7BO%7D%28B%5E%7B3%7D%29+%5Crightarrow+%5Cwidetilde%7BO%7D%28B%5E%7B2%7D%29+%5Crightarrow+%5Cwidetilde%7BO%7D%28B%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \widetilde{O}(B^{3}) \rightarrow \widetilde{O}(B^{2}) \rightarrow \widetilde{O}(B) "/></p>
<p>time, but that they use 	</p>
<p align="center"><img alt="\displaystyle  {O}(B^{3+\epsilon}) \rightarrow {O}(B^{2+\epsilon}) \rightarrow {O}(B^{1+ \epsilon}) " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7BO%7D%28B%5E%7B3%2B%5Cepsilon%7D%29+%5Crightarrow+%7BO%7D%28B%5E%7B2%2B%5Cepsilon%7D%29+%5Crightarrow+%7BO%7D%28B%5E%7B1%2B+%5Cepsilon%7D%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  {O}(B^{3+\epsilon}) \rightarrow {O}(B^{2+\epsilon}) \rightarrow {O}(B^{1+ \epsilon}) "/></p>
<p>time. Maybe we can help in some manner. What do you think? The next unsolved number, <img alt="{114}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B114%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{114}"/>, awaits.</p>
<p/><p align="center">§</p>
<p>			 <i>Answer to the question on checking</i>: Take the numbers modulo <img alt="{10}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B10%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{10}"/>. 	</p>
<p align="center"><img alt="\displaystyle  33 = (8 866 128 975 287 528)^{3} + (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++33+%3D+%288+866+128+975+287+528%29%5E%7B3%7D+%2B+%288+778+405+442+862+239%29%5E%7B3%7D+-+%282+736+111+468+807+040%29%5E%7B3%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  33 = (8 866 128 975 287 528)^{3} + (8 778 405 442 862 239)^{3} - (2 736 111 468 807 040)^{3} "/></p>
<p>becomes 	</p>
<p align="center"><img alt="\displaystyle  3 \equiv (8)^{3} + (9)^{3} - (0)^{3} \equiv 2 + 9 \equiv 1. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++3+%5Cequiv+%288%29%5E%7B3%7D+%2B+%289%29%5E%7B3%7D+-+%280%29%5E%7B3%7D+%5Cequiv+2+%2B+9+%5Cequiv+1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  3 \equiv (8)^{3} + (9)^{3} - (0)^{3} \equiv 2 + 9 \equiv 1. "/></p>
<p>
</p><p>[Typo fixed]</p></font></font></div>
    </content>
    <updated>2019-09-30T16:10:26Z</updated>
    <published>2019-09-30T16:10:26Z</published>
    <category term="algorithms"/>
    <category term="History"/>
    <category term="News"/>
    <category term="Open Problems"/>
    <category term="Proofs"/>
    <category term="Results"/>
    <category term="Andrew Booker"/>
    <category term="Andrew Sutherland"/>
    <category term="Charity Engine"/>
    <category term="computer search"/>
    <category term="number theory"/>
    <category term="sum-of-cubes problem"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-10-02T23:51:25Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/131</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/131" rel="alternate" type="text/html"/>
    <title>TR19-131 |  A Simple Proof of Vyalyi&amp;#39;s Theorem and some Generalizations | 

	Lieuwe Vinkhuijzen, 

	André Deutz</title>
    <summary>In quantum computational complexity theory, the class QMA models the set of problems efficiently verifiable by a quantum computer the same way that NP models this for classical computation. Vyalyi proved that if $\text{QMA}=\text{PP}$ then $\text{PH}\subseteq \text{QMA}$. In this note, we give a simple, self-contained proof of the theorem, using only the closure properties of the complexity classes in the theorem statement. We then extend the theorem in two directions: (i) we strengthen the consequent, proving that if $\text{QMA}=\text{PP}$ then $\text{QMA}=\text{PH}^{\text{PP}}$, and (ii) we weaken the hypothesis, proving that if $\text{QMA}=\text{coQMA}$ then $\text{PH}\subseteq \text{QMA}$. Lastly, we show that all the above results hold, without loss of generality, for the class QAM instead of QMA. We also formulate a ``Quantum Toda's Conjecture''.</summary>
    <updated>2019-09-30T14:57:20Z</updated>
    <published>2019-09-30T14:57:20Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://emanueleviola.wordpress.com/?p=671</id>
    <link href="https://emanueleviola.wordpress.com/2019/09/30/talk-why-do-lower-bounds-stop-just-before-proving-major-results/" rel="alternate" type="text/html"/>
    <title>Talk: Why do lower bounds stop “just before” proving major results?</title>
    <summary>I have prepared this talk which is a little unusual and is in part historical and speculative. You can view the slides here. I am scheduled to give it in about three hours at Boston University. And because it’s just another day in the greater Boston area, while I’ll be talking my ex office-mate Vitaly […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I have prepared this talk which is a little unusual and is in part historical and speculative. You can view the slides <a href="http://www.ccs.neu.edu/home/viola/talks/lower-bounds-201909.pdf">here</a>. I am scheduled to give it in about three hours at <a href="http://www.bu.edu/cs/algorithms-and-theory-seminar/">Boston University</a>. And because it’s just another day in the greater Boston area, while I’ll be talking my ex office-mate <span class="field-content">Vitaly Feldman</span> will be speaking <a href="https://toc.seas.harvard.edu/toc-seminar">at Harvard University</a>.  His talk looks quite interesting and attempts to explain why overfitting is actually necessary for good learning. As for mine, well you’ll have to come and see or take a peek at the slides.</p></div>
    </content>
    <updated>2019-09-30T14:50:33Z</updated>
    <published>2019-09-30T14:50:33Z</published>
    <category term="Uncategorized"/>
    <category term="lecture"/>
    <category term="lower bounds"/>
    <author>
      <name>Manu</name>
    </author>
    <source>
      <id>https://emanueleviola.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>by Manu</subtitle>
      <title>Thoughts</title>
      <updated>2019-10-02T23:52:04Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/130</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/130" rel="alternate" type="text/html"/>
    <title>TR19-130 |  A moment ratio bound for polynomials and some extremal properties of Krawchouk polynomials and Hamming spheres | 

	Alex Samorodnitsky, 

	Naomi Kirshner</title>
    <summary>Let $p \ge 2$. We improve the bound $\frac{\|f\|_p}{\|f\|_2} \le (p-1)^{s/2}$ for a polynomial $f$ of degree $s$ on the boolean cube $\{0,1\}^n$, which comes from hypercontractivity, replacing the right hand side of this inequality by an explicit bivariate function of $p$ and $s$, which is smaller than $(p-1)^{s/2}$ for any $p &gt; 2$ and $s &gt; 0$. We show the new bound to be tight, within a smaller order factor, for the Krawchouk polynomial of degree $s$.

This implies several nearly-extremal properties of Krawchouk polynomials and Hamming spheres (equivalently, Hamming balls). In particular, Krawchouk polynomials have (almost) the heaviest tails among all polynomials of the same degree and $\ell_2$ norm (this has to be interpreted with some care). The Hamming spheres have the following approximate edge-isoperimetric property: For all $1 \le s \le \frac{n}{2}$, and for all even distances $0 \le i \le \frac{2s(n-s)}{n}$, the Hamming sphere of radius $s$ contains, up to a multiplicative factor of $O(i)$, as many pairs of points at distance $i$ as possible, among sets of the same size (there is a similar, but slightly weaker and somewhat more complicated claim for general distances). This also implies that Hamming spheres are (almost) stablest with respect to noise among sets of the same size. In coding theory terms this means that a Hamming sphere (equivalently a Hamming ball) has the maximal probability of undetected error, among all binary codes of the same rate.

We also describe a family of hypercontractive inequalities for functions on $\{0,1\}^n$, which improve on the `usual' ``$q \rightarrow 2$" inequality by taking into account the concentration of a function (expressed as the ratio between its $\ell_r$ norms), and which are nearly tight for characteristic functions of Hamming spheres.</summary>
    <updated>2019-09-30T07:55:19Z</updated>
    <published>2019-09-30T07:55:19Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/129</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/129" rel="alternate" type="text/html"/>
    <title>TR19-129 |  Fourier and Circulant Matrices are Not Rigid | 

	Zeev Dvir, 

	Allen Liu</title>
    <summary>The concept of matrix rigidity was first introduced by Valiant in [Val77].  Roughly speaking, a matrix is rigid if its rank cannot be reduced significantly by changing a small number of entries.  There has been extensive interest in rigid matrices as Valiant showed  that rigidity can be used to prove arithmetic circuit lower bounds.  

In a surprising result, Alman and Williams showed that the (real valued) Hadamard matrix, which was conjectured  to be rigid, is actually not very rigid. This line of work was extended by [DE17] to a family of matrices related to the Hadamard matrix, but over finite fields.  In our work, we take another step in this direction and show that for any abelian group $G$ and function $f:G \rightarrow \mathbb C$, the matrix given by $M_{xy} = f(x - y)$ for $x,y \in G$ is not rigid.  In particular, we get that complex valued Fourier matrices, circulant matrices, and Toeplitz matrices are all not rigid and cannot be used to carry out Valiant's approach to proving circuit lower bounds. This complements a recent result of Goldreich and Tal  who showed that Toeplitz matrices are nontrivially rigid (but not enough for Valiant's method).  Our work differs  from previous non-rigidity results in that those works considered matrices whose underlying group of symmetries was of the form ${\mathbb F}_p^n$ with $p$ fixed and $n$ tending to infinity, while in the families  of matrices we study, the underlying group of symmetries can be any abelian group and, in particular,  the cyclic group ${\mathbb Z}_N$, which has very different structure. Our results also suggest natural new candidates for rigidity in the form of matrices whose symmetry groups are highly non-abelian. We are also able to extend these results to matrices with entries in a finite field, assuming sufficiently large dimension.

Our proof has four parts. The first extends the results of [AW16,DE17]  to generalized Hadamard matrices over the complex numbers via a new proof technique. The second part handles the $N \times N$ Fourier matrix when $N$ has a particularly nice factorization that allows us to embed smaller copies of (generalized) Hadamard matrices inside of it. The third part uses results from number theory to bootstrap the non-rigidity for these special values of $N$ and extend to all sufficiently large $N$.  The fourth and final part involves using the non-rigidity of the Fourier matrix to show that the group algebra matrix, given by $M_{xy} = f(x - y)$ for $x,y \in G$, is not rigid for any function $f$ and abelian group $G$.</summary>
    <updated>2019-09-27T21:43:50Z</updated>
    <published>2019-09-27T21:43:50Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://thmatters.wordpress.com/?p=1283</id>
    <link href="https://thmatters.wordpress.com/2019/09/27/travel-funding-for-focs-2019/" rel="alternate" type="text/html"/>
    <title>Travel funding for FOCS 2019</title>
    <summary>FOCS 2019 will be held in Baltimore, MA from Nov 9-12, 2019. The early registration deadline is October 9th. For students interested in attending, Shang-Hua Teng has asked me to relay the message that there is some travel funding available, courtesy of the NSF. For details, see this website. Ignore the deadline on that page, […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="http://focs2019.cs.jhu.edu/">FOCS 2019</a> will be held in Baltimore, MA from Nov 9-12, 2019. The early registration deadline is October 9th.</p>
<p>For students interested in attending, Shang-Hua Teng has asked me to relay the message that there is some travel funding available, courtesy of the NSF. For details, see <a href="http://focs2019.cs.jhu.edu/travel_grants/">this website</a>. Ignore the deadline on that page, but apply ASAP for full consideration. Women and minorities are especially encouraged to apply. Having or presenting papers at FOCS’19 is *not* a prerequisite.</p></div>
    </content>
    <updated>2019-09-27T20:53:45Z</updated>
    <published>2019-09-27T20:53:45Z</published>
    <category term="for PhD students"/>
    <category term="Funding opportunity"/>
    <category term="postdocs"/>
    <category term="Uncategorized"/>
    <author>
      <name>shuchic</name>
    </author>
    <source>
      <id>https://thmatters.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://thmatters.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://thmatters.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://thmatters.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://thmatters.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theory Matters</title>
      <updated>2019-10-02T23:51:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=370</id>
    <link href="https://tcsplus.wordpress.com/2019/09/27/tcs-talk-wednesday-october-2-shachar-lovett-ucsd/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, October 2 — Shachar Lovett, UCSD</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, October 2th (next week!) at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). Shachar Lovett from UCSD will lead us “Towards the sunflower conjecture” (abstract below). Please make sure you reserve a spot for your group to join us […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, October 2th <strong>(next week!)</strong> at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). <strong>Shachar Lovett</strong> from UCSD will lead us “<em>Towards the sunflower conjecture</em>” (abstract below).</p>
<p>Please make sure you reserve a spot for your group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk/live-seat-reservation">the online form</a>. As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>
<blockquote><p>Abstract: A sunflower with <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=fff&amp;fg=444444&amp;s=0" title="r"/> petals is a collection of <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=fff&amp;fg=444444&amp;s=0" title="r"/> sets so that the intersection of each pair is equal to the intersection of all. Erdos and Rado in 1960 proved the sunflower lemma: for any fixed <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=fff&amp;fg=444444&amp;s=0" title="r"/>, any family of sets of size <img alt="w" class="latex" src="https://s0.wp.com/latex.php?latex=w&amp;bg=fff&amp;fg=444444&amp;s=0" title="w"/>, with at least about <img alt="w^w" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Ew&amp;bg=fff&amp;fg=444444&amp;s=0" title="w^w"/> sets, must contain a sunflower. The famous sunflower conjecture is that the bound on the number of sets can be improved to <img alt="c^w" class="latex" src="https://s0.wp.com/latex.php?latex=c%5Ew&amp;bg=fff&amp;fg=444444&amp;s=0" title="c^w"/> for some constant <img alt="c" class="latex" src="https://s0.wp.com/latex.php?latex=c&amp;bg=fff&amp;fg=444444&amp;s=0" title="c"/>. Despite much research, the best bounds until recently were all of the order of <img alt="w^{cw}" class="latex" src="https://s0.wp.com/latex.php?latex=w%5E%7Bcw%7D&amp;bg=fff&amp;fg=444444&amp;s=0" title="w^{cw}"/> for some constant c. In this work, we improve the bounds to about <img alt="(\log w)^w" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Clog+w%29%5Ew&amp;bg=fff&amp;fg=444444&amp;s=0" title="(\log w)^w"/>.</p>
<p>There are two main ideas that underlie our result. The first is a structure vs pseudo-randomness paradigm, a commonly used paradigm in combinatorics. This allows us to either exploit structure in the given family of sets, or otherwise to assume that it is pseudo-random in a certain way. The second is a duality between families of sets and DNFs (Disjunctive Normal Forms). DNFs are widely studied in theoretical computer science. One of the central results about them is the switching lemma, which shows that DNFs simplify under random restriction. We show that when restricted to pseudo-random DNFs, much milder random restrictions are sufficient to simplify their structure.</p>
<p>Joint work with Ryan Alweiss, Kewen Wu and Jiapeng Zhang.</p></blockquote></div>
    </content>
    <updated>2019-09-27T20:41:51Z</updated>
    <published>2019-09-27T20:41:51Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2019-10-02T23:52:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://bit-player.org/?p=2177</id>
    <link href="http://bit-player.org/2019/my-god-its-full-of-dots" rel="alternate" type="text/html"/>
    <link href="http://bit-player.org/2019/my-god-its-full-of-dots#comments" rel="replies" type="text/html"/>
    <link href="http://bit-player.org/2019/my-god-its-full-of-dots/feed/atom" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">My God, It’s Full of Dots!</title>
    <summary type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml">Please click or tap in the gray square below. It will fill with a jolly tableau of colored disks—first big blue ones, then somewhat smaller purple ones, and eventually lots of tiny red dots. Sorry. My program and your browser … <a href="http://bit-player.org/2019/my-god-its-full-of-dots">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>Please click or tap in the gray square below. It will fill with a jolly tableau of colored disks—first big blue ones, then somewhat smaller purple ones, and eventually lots of tiny red dots.</p>
<div class="canvas-container canvas-failure" id="demo">
<p>Sorry. My program and your browser are not getting along. None of the interactive elements of this page will work. Could you try a different browser? Current versions of Chrome, Firefox, and Safari seem to work.</p>
</div>
<p class="indent">The disks are scattered randomly, except that no disk is allowed to overlap another disk or extend beyond the boundary of the square. Once a disk has been placed, it never moves, so each later disk has to find a home somewhere in the nooks and crannies between the earlier arrivals. Can this go on forever?</p>
<p>The search for a vacant spot would seem to grow harder as the square gets more crowded, so you might expect the process to get stuck at some point, with no open site large enough to fit the next disk. On the other hand, because the disks get progressively smaller, later ones can squeeze into tighter quarters. In the specific filling protocol shown here, these two trends are in perfect balance. The process of adding disks, one after another, never seems to stall. Yet as the number of disks goes to infinity, they completely fill the box provided for them. There’s a place for every last dot, but there’s no blank space left over.</p>
<p>Or at least that’s the mathematical ideal. The computer program that fills the square above never attains this condition of perfect plenitude. It shuts down after placing just 5,000 disks, which cover about 94 percent of the square’s area. This early exit is a concession to the limits of computer precision and human patience, but we can still dream of how it would work in a world without such tiresome constraints.</p>
<p>This scheme for filling space with randomly placed objects is the invention of John Shier, a physicist who worked for many years in the semiconductor industry and who has also taught at Normandale Community College near Minneapolis. He explains the method and the mathematics behind it in a recent book, <em>Fractalize That! A Visual Essay on Statistical Geometry</em>. (For bibliographic details see the links and references at the end of this essay.) I learned of Shier’s work from my friend Barry Cipra.</p>
<p>Shier hints at the strangeness of these doings by imagining a set of 100 round tiles in graduated sizes, with a total area approaching one square meter. He would give the tiles to a craftsman with these instructions:</p>
<blockquote><p>“Mark off an area of one square meter, either a circle or a square. Start with the largest tile, and attach it permanently anywhere you wish in the marked-off area. Continue to attach the tiles anywhere you wish, proceeding always from larger to smaller. <em>There will always be a place for every tile regardless of how you choose to place them.</em>” How many experienced tile setters would believe this?</p></blockquote>
<p class="indent">Shier’s own creations go way beyond squares and circles filled with simple shapes such as disks. <img alt="Shier book cover from WS" border="0" class="alignright" height="" src="http://bit-player.org/wp-content/uploads/2019/07/Shier-book-cover-from-Wolrd-Scientific.jpg" width="300"/>He has shown that the algorithm also works with an assortment of more elaborate designs, including nonconvex figures and even objects composed of multiple disconnected pieces. We get snow­flakes, nested rings, stars, butter­flies, fish eating lesser fish, faces, letters of the alphabet, and visual salads bringing together multiple ingredients. Shier’s interest in these patterns is aesthetic as well as mathematical, and several of his works have appeared in art exhibits; one of them won a best-of-show award at the 2017 Joint Mathematics Meeting.</p>
<p>Shier and his colleagues have also shown that the algorithm can be made to work in three-dimensional space. The book’s cover is adorned with a jumble of randomly placed toruses filling the volume of a transparent cube. If you look closely, you’ll notice that some of the rings are linked; they cannot be disentangled without breaking at least one ring. (The 3D illustration was created by Paul Bourke, who has <a href="http://paulbourke.net/fractals/linkedrings/">more examples online</a>, including 3D-printed models.)</p>
<p>After reading Shier’s account of his adventures, and admiring the pictures, I had to try it for myself. The experiments I’m presenting in this essay have no high artistic ambitions. I stick with plain-vanilla circular disks in a square frame, all rendered with the same banal blue-to-red color scheme. My motive is merely to satisfy my curiosity—or perhaps to overcome my skepticism. When I first read the details of how these graphics are created, I couldn’t quite believe it would work. Writing my own programs and seeing them in action has helped persuade me. So has a proof by Christopher Ennis, which I’ll return to below.</p>
<hr/>
<p>Filling a region of the plane with disks is not in itself such a remarkable trick. <img alt="Apollonian gasket detail" border="0" class="alignright" height="" src="http://bit-player.org/wp-content/uploads/2019/07/apollonian_gasket_detail.svg" width="280"/>One well-known way of doing it goes by the name Apollonian circles. Start with three disks that are all tangent to one another, leaving a spiky three-pointed vacancy between them. Draw a new disk in the empty patch, tangent to all three of the original disks; this is the largest disk that can possibly fit in the space. Adding the new disk creates three smaller triangular voids, where you can draw three more triply tangent disks. There’s nothing to stop you from going on in this way indefinitely, approaching a limiting configuration where the entire area is filled.</p>
<p>There are randomized versions of the Apollonian model. For example, you might place zero-diameter seed disks at random unoccupied positions and then allow them to grow until they touch one (or more) of their neighbors. This process, too, is space-filling in the limit. And it can never fail: Because the disks are custom-fitted to the space available, you can never get stuck with a disk that can’t find a home.</p>
<p>Shier’s algorithm is different. You are given disks one at a time in a predetermined order, starting with the largest, then the second-largest, and so on. To place a disk in the square, you choose a point at random and test to see if the disk will fit at that location without bumping into its neighbors or poking beyond the boundaries of the square. If the tests fail, you pick another random point and try again. It’s not obvious that this haphazard search will always succeed—and indeed it works only if the successive disks get smaller according to a specific mathematical rule. But if you follow that rule, you can keep adding disks forever. Furthermore, as the number of disks goes to infinity, the fraction of the area covered approaches \(1\). It’s convenient to have a name for series of disks that meet these two criteria; I have taken to calling them <em>fulfilling</em> series.</p>
<hr/>
<p>In exploring these ideas computationally, it makes sense to start with the simplest case: disks that are all the same size. This version of the process clearly <em>cannot</em> be fulfilling. No matter how the disks are arranged, their aggregate area will eventually exceed that of any finite container. Click in the gray square below to start filling it with equal-size disks. The square box has area \(A_{\square} = 4\). The slider in the control panel determines the area of the individual disks \(A_k\), in a range from \(0.0001\) to \(1.0\).</p>
<h2 class="zf">Program 1: Fixed-Size Disks</h2>
<div class="canvas-container canvas-failure" id="fixed-size">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">If you play with this program for a while, you’ll find that the dots bloom quickly at first, but the process invariably slows down and eventually ends in a state labeled “Jammed,” indicating that the program has been unable The program gives up after trying 10 million random locations. to find a place where one more disk will fit. If you move the slider to the right, specifying larger disks, this impasse is reached very quickly, sometimes after placing just one or two disks. If you select very small disks, the program may churn away for five or ten minutes and fill the square with more than 20,000 disks before running out of options. Nevertheless, for any disk size greater than zero, a jammed outcome is inescapable.</p>
<p>The densest possible packing of equal-size disks places the centers on a triangular lattice with spacing equal to the disk diameter. The resulting density (for an infinite number of disks on an infinite plane) is \(\pi \sqrt{3}\, /\, 6 \approx 0.9069\), which means more than 90 percent of the area is covered. A random filling in a finite square is much looser. My first few trials all halted with a filling fraction fairly close to one-half, and so I wondered if that nice round number might be the expectation value of the probabilistic process. Further experiments suggested otherwise. Over a broad range of disk sizes, from \(0.0001\) up to about \(0.01\), the area covered varied from one run to the next, but the average was definitely above one-half—perhaps \(0.54\). After some rummaging through the voluminous literature on circle packing, I think I may have a clue to the exact expectation value: \(\pi / (3 + 2 \sqrt{2}) \approx 0.539012\). Where does that weird number come from? The answer has nothing to do with Shier’s algorithm, but I think  it’s worth a digression.</p>
<p><img alt="The two largest equal-size disks that fit in a unit square." border="0" class="alignright" height="200" src="http://bit-player.org/wp-content/uploads/2019/06/max-2-packing.svg" width="200"/>Consider an adversarial process: Alice is filling a unit square with \(n\) equal-size disks and wants to cover as much of the area as possible. Bob, who wants to minimize the area covered, gets to choose \(n\). If Bob chooses \(n = 1\), Alice can produce a single disk that just fits inside the square and covers about \(79\) percent of the space. Can Bob do better? Yes, if Bob specifies \(n = 2\), Alice’s best option is to squeeze the two disks into diagonally opposite corners of the square as shown in the diagram at right. These disks are bounded by right isosceles triangles, which makes it easy to calculate their radii as \(r = 1 / (2 + \sqrt{2}) \approx 0.2929\). Their combined area works out to that peculiar number \(\pi / (3 + 2 \sqrt{2}) \approx 0.54\).</p>
<p>If two disks are better than one (from Bob’s point of view), could three be better still? Or four, or some larger number? Apparently not. In 2010, <a href="https://arxiv.org/abs/1008.1224">Erik Demaine, Sándor Fekete and Robert Lang</a> conjectured that the two-disk configuration shown above represents the worst case for any number of equal-size disks. In 2017 <a href="https://arxiv.org/abs/1705.00924">Fekete, Sebastian Morr, and Christian Scheffer</a> proved this result. </p>
<p>Is it just a coincidence that the worst-case density for packing disks into a square also appears to be the expected density when equal-size disks are placed randomly until no more will fit? Wish I knew.</p>
<hr/>
<p>Let us return to the questions raised in Shier’s <em>Fractalize That!</em> If we want to fit infinitely many disks into a finite square, our only hope is to work with disks that get smaller and smaller as the process goes on. The disk areas must come from some sequence of ever-diminishing numbers. Among such sequences, the one that first comes to mind is \(\frac{1}{1}, \frac{1}{2}, \frac{1}{3}, \frac{1}{4}, \ldots\) These fractions have been known since antiquity as the harmonic numbers. (They are the wavelengths of the overtones of a plucked string.) </p>
<p>To see what happens when successive disks are sized according to the harmonic sequence, click in the square below.</p>
<h2 class="zf">Program 2: Disk Sizes from Harmonic Series</h2>
<div class="canvas-container canvas-failure" id="harmonic">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p>Again, the process halts when no open space is large enough to accommodate the next disk in the sequence. If you move the slider all the way to the right, you’ll see a sequence of disks with areas drawn from the start of the full harmonic sequence, \(\frac{1}{1} , \frac{1}{2}, \frac{1}{3}, \dots\); at this setting, you’ll seldom get beyond eight or nine disks. Moving the slider to the left omits the largest disks at the beginning of the sequence, leaving the infinite tail of smaller disks. For example, setting the slider to \(1/20\) skips all the disks from \(\frac{1}{1}\) through \(\frac{1}{19}\) and begins filling the square with disks of area \(\frac{1}{20}, \frac{1}{21}, \frac{1}{22}, \dots\) Such truncated series go on longer, but eventually they also end in a jammed configuration.</p>
<p>The slider goes no further than 1/50, but even if you omitted the first 500 disks, or the first 5 million, the result would be the same. This is a consequence of the most famous property of the harmonic numbers: Although the individual terms \(1/k\) dwindle away to zero as \(k\) goes to infinity, the sum of all the terms, </p>
<p>\[\sum_{k = 1}^{\infty}\frac{1}{k} = \frac{1}{1} + \frac{1}{2} + \frac{1}{3} + \cdots,\]</p>
<p class="undent">does not converge to a finite value. As long as you keep adding terms, the sum will keep growing, though ever more slowly. This curious fact was proved in the 14th century by the French bishop and scholar Nicole Oresme. The proof is simple but ingenious. Oresme pointed out that the harmonic sequence</p>
<p>\[\frac{1}{1} + \frac{1}{2} + \left(\frac{1}{3} + \frac{1}{4}\right) + \left(\frac{1}{5} + \frac{1}{6} + \frac{1}{7} + \frac{1}{8}\right) + \cdots\]</p>
<p class="undent">is greater than</p>
<p>\[\frac{1}{1} + \frac{1}{2} + \left(\frac{1}{4} + \frac{1}{4}\right) + \left(\frac{1}{8} + \frac{1}{8} + \frac{1}{8} + \frac{1}{8}\right) + \cdots\]</p>
<p class="undent">The latter series is equivalent to \(1 + \frac{1}{2} + \frac{1}{2} + \frac{1}{2} \cdots\), and so it is clearly divergent. Since the grouped terms of the harmonic series are even greater, they too must exceed any finite bound.</p>
<p>The divergence of the harmonic series implies that disks whose areas are generated by the series will eventually overflow any enclosing container. Dropping a finite prefix of the sequence, such as the first 50 disks, does not change this fact.</p>
<p>Let me note in passing that just as the filling fraction for fixed-size disks seems to converge to a specific constant, 0.5390, disks in harmonic series also seem to have a favored filling fraction, roughly 0.71. Can this be explained by some simple geometric argument? Again, I wish I knew.</p>
<hr/>
<p>Evidently we need to make the disks shrink faster than the harmonic numbers do. Here’s an idea: Square each element of the harmonic series, yielding this:</p>
<p>\[\sum_{k = 1}^{\infty}\frac{1}{k^2} = \frac{1}{1^2} + \frac{1}{2^2} + \frac{1}{3^2} + \cdots.\]</p>
<p class="undent">Click below (or press the Start button) to see how this one turns out, again in a square of area 4.</p>
<h2 class="zf">Program 3: Disk Sizes from Zeta(2)</h2>
<div class="canvas-container canvas-failure" id="zeta2">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">At last we have a process that won’t get stuck in a situation where there’s no place to put another disk. It <em>could</em> run forever, but of course it doesn’t. It quits when the area of the next disk shrinks down to about a tenth of the size of a single pixel on a computer display. The stopped state is labeled “Exhausted” rather than “Jammed.”This is an algorithm that could truly run forever. And yet the result is still not quite what we were hoping for—it’s not <em>fulfilling</em>. The disks are scattered sparsely in the square, leaving vast open spaces unoccupied. The configuration reminds me of deep-sky images made by large telescopes.</p>
<p>Why does this outcome look so different from the others? Unlike the harmonic numbers, the infinite series \(1 +  \frac{1}{4} + \frac{1}{9} + \frac{1}{16} + \cdots\) converges to a finite sum. In the 18th century the task of establishing this fact (and determining the exact sum) was known as the Basel Problem, after the hometown of the Bernoulli family, who put much effort into the problem but never solved it. The answer came in 1735 from Leonhard Euler (another native of Basel, though he was working in St. Petersburg), who showed that the sum is equal to \(\pi^2 / 6\). This works out to about \(1.645\); since the area of the square we want to fill is \(4\), even an infinite series of disks would cover only about \(41\) percent of the territory.</p>
<p>Given that the numbers \(\frac{1}{1^1}, \frac{1}{2^1}, \frac{1}{3^1}, \dots\) diminish too slowly, whereas \(\frac{1}{1^2}, \frac{1}{2^2}, \frac{1}{3^2}, \dots\) shrink too fast, it makes sense to try an exponent somewhere between \(1\) and \(2\) in the hope of finding a Goldilocks solution. The computation performed below in Program 4 is meant to facilitate the search for such a happy medium. Here the disk sizes are elements of the sequence \(\frac{1}{1^s}, \frac{1}{2^s}, \frac{1}{3^s}, \dots\), where the value of the exponent \(s\) is determined by the setting of the slider, with a range of \(1 \lt s \le 2\). We already know what happens at the extremes of this range. What is the behavior in the middle?</p>
<h2 class="zf">Program 4: Disk Sizes from Zeta(s)</h2>
<div class="canvas-container canvas-failure" id="zeta-adjust">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">If you try the default setting of \(s = 1.5\), you’ll find you are still in the regime where the disks dwindle away so quickly that the box never fills up; if you’re willing to wait long enough, the program will end in an exhausted state rather than a jammed one. Reducing the exponent to \(s = 1.25\) puts you on the other side of the balance point, where the disks remain too large and at some point one of them will not fit into any available space. By continuing to shuttle the slider back and forth, you could carry out a binary search, closing in, step by step, on the “just right” value of \(s\). This strategy can succeed, but it’s not quick.  As you get closer to the critical value, the program will run longer and longer before halting. (After all, running forever is the behavior we’re seeking.) To save you some tedium, I offer a spoiler: the optimum setting is between 1.29 and 1.30.</p>
<p>At this point we have wandered into deeper mathematical waters. A rule of the form \(A_k = 1/k^s\) is called a power law, since each \(k\) is raised to the same power. And series of the form \(\sum 1/k^s\) are known as zeta functions, denoted \(\zeta(s)\). Zeta functions have quite a storied place in mathematics. The harmonic numbers correspond to \(\zeta(1) = \sum 1/k^1\), which does not converge. If \(\zeta(1)\) grows without limit whereas \(\zeta(2)\) converges, you might well wonder where the boundary lies between these two behaviors. As it happens, \(\zeta(1 + \epsilon)\) converges for any \(\epsilon \gt 0\).As mentioned above, Euler found that \(\zeta(2) = \pi^2 / 6\), and he went on to show that \(\zeta(s)\) also converges for all integer values of \(s\) greater than \(1\). Later, Pafnuty Chebyshev extended the domain of the function beyond the integers to all real numbers \(s\) greater than \(1\). And then Bernhard Riemann went further still: He devised a smoke-and-mirrors trick for defining the zeta function over the entire plane of complex numbers, with the single exception of \(s = 1\). </p>
<p>Today, Riemann’s version of the zeta function is the engine (or enigma!) driving a major mathematical industry. Shier’s use of this apparatus in making fractal art is far removed from that heavy-duty research enterprise—but no less fascinating. Think of it as the zeta function on vacation. </p>
<p>If a collection of disks are to fill a square exactly, their aggregate area must equal the area of the square. This is a necessary condition though not a sufficient one. In all the examples I’ve presented so far, the containing square has an area of 4, so what’s needed is to find a value of \(s\) that satisfies the equation:</p>
<p>\[\zeta(s) = \sum_{k = 1}^{\infty}\frac{1}{k^s} = 4\]</p>
<p class="undent">Except for isolated values of \(s\), Those isolated values are the negative integers and the even positive integers.there is no known method for solving this equation exactly. But numerical approximation works well enough for a computer program that draws pictures. The binary search described above is a crude and cumbersome version of this numerical method. <a href="http://www.sagemath.org/">SageMath</a> presumably does something more sophisticated. When I ask it to find a root of the equation \(zeta(s) = 4\), it returns the result \(1.2939615055572438\).</p>
<p>Having this result in hand solves one part of the square-filling problem. It tells us how to construct an infinite set of disks whose total area is just enough to cover a square of area \(4\), with adequate precision for graphical purposes. We assign each disk \(k\) (starting at \(k = 1\)) an area of \(1/k^{1.2939615}.\) This sequence begins 1.000, 0.408, 0.241, 0.166, 0.125, 0.098,…</p>
<p><img alt="Curves showing the convergence of zeta(s) for five different values of s, when the series is summed over a number of terms ranging up to 10^8. The curve for s = 1.29396 converges to a value of 4." border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2019/07/zeta_curves_edit1.svg" width="640"/></p>
<p class="undent">In the graph above, the maroon curve with \(s = 1.29396\) converges to a sum very close to 4. Admittedly, the rate of convergence is not quick. More than 3 million terms are needed to get within 1 percent of the target.</p>
<hr/>
<p>Our off-label use of the zeta function defines an infinite sequence of disks whose aggregate area is equal to \(4\). The disks in this unique collection will exactly fill our square box (assuming they can be properly arranged). It’s satisfying to have a way of reliably achieving this result, after our various earlier failures. On the other hand, there’s something irksome about that number \(4\) appearing in the equation. It’s so arbitrary! I don’t dispute that \(4\) is a perfectly fine and foursquare number, but there are many other sizes of squares we might want to fill with dots. Why give all our attention to the \(2 \times 2\) variety?</p>
<p>This is all my fault. When I set out to write some square-filling programs, I knew I couldn’t use the unit square—which seems like the obvious default choice—because of the awkward fact that \(\zeta(s) = 1\) has no finite solution. The unit square is also troublesome in the case of the harmonic numbers; the first disk, with area \(A_1 = 1\),  is too large to fit. So I picked the next squared integer for the box size in those first programs. Having made my choice, I stuck with it, but now I feel hemmed in by that decision made with too little forethought.</p>
<p>We have all the tools we need to fill squares of other sizes (as long as the size is greater than \(1\)). Given a square of area \(A_{\square}\), we just solve for \(s\) in \(\zeta(s) = A_{\square}\). A square of area 8 can be covered by disks sized according to the rule \(A_k = 1/k^s\) with \(s = \zeta(8) \approx 1.1349\). For \(A_{\square} = 100\), the corresponding value of \(s\) is \(\zeta(100) \approx 1.0101\). For any \(A_{\square} \gt 1\) there is an \(s\) that yields a fulfilling set of disks, and vice versa for any \(s \gt 1\).</p>
<p>This relation between the exponent \(s\) and the box area \(A_{\square}\) suggests a neat way to evade the whole bother of choosing a specific container size. We can just scale the disks to fit the box, or else scale the box to accommodate the disks. Shier adopts the former method. Each disk in the infinite set is assigned an area of</p>
<p>\[A_k = \frac{A_{\square}}{\zeta(s)} \frac{1}{k^s},\]</p>
<p class="undent">where the first factor is a scaling constant that adjusts the disk sizes to fit the container. In my first experiments with these programs I followed the same approach. Later, however, when I began writing this essay, it seemed easier to think about the scaling—and explain it—if I transformed the size of the box rather than the sizes of the disks. In this scheme, the area of disk \(k\) is simply \(1 / k^s\), and the area of the container is \(A_{\square} = \zeta(s)\). (The two scaling procedures are mathematically equivalent; it’s only the ratio of disk size to container size that matters.)</p>
<p>Program 5 offers an opportunity to play with such scaled zeta functions. I’m not actually changing the physical size of the box—the number of pixels it occupies on-screen remains the same. I’m scaling the units of measure.No matter where you move the \(s\) slider, the area of the square container will adjust to match the total area of the infinite set of disks. As the ratio of disk size to container size shifts, so does the overall texture or appearance of the pattern. At a setting of \(s = 1.35\), the largest disk fills almost a third of the square; at \(s = 1.08\), the first disk occupies only about \(8\) percent of box area. At those lower settings it takes a very long time to reach a high filling percentage, but if you have true faith in mathematical certainties, your patience will be rewarded.</p>
<h2 class="zf">Program 5: Disk Sizes from Scaled Zeta(s)</h2>
<div class="canvas-container canvas-failure" id="zeta-scaled">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">At the other end of the scale, if you push the value of \(s\) up beyond about \(1.40\), you’ll discover something else: The program more often than not halts after placing just a few disks. At \(s = 1.50\) or higher, it seldom gets beyond the first disk. This failure is similar to what we saw with the harmonic numbers, but more interesting. In the case of the harmonic numbers, the total area of the disks is unbounded, making an overflow inevitable. With this new scaled version of the zeta function, the total area of the disks is always equal to that of the enclosing square. In principle, all the disks could all be made to fit, if you could find the right arrangement. I’ll return below to the question of why that doesn’t happen.</p>
<hr/>
<p>In <em>Fractalize That!</em> Shier introduces another device for taming space-filling sets. He not only scales the object sizes so that their total area matches the space available; he also adopts a variant zeta function that has two adjustable parameters rather than just one: </p>
<p>A note on notation: Shier writes the Hurwitz zeta function as \(\zeta(c, N)\), whereas most of the mathematical literature seems to favor \(\zeta(s, a)\). I’m going with the majority.\[\zeta(s, a) = \sum_{k=0}^{\infty} \frac{1}{(a + k)^s}\]</p>
<p class="undent">This is the Hurwitz zeta function, named for the German mathematician Adolf Hurwitz (1859–1919). Before looking into the details of the function, let’s play with the program and see what happens. Try a few settings of the \(s\) and \(a\) controls:</p>
<h2 class="zf">Program 6: Disk Sizes from Scaled Hurwitz Zeta Function</h2>
<div class="canvas-container canvas-failure" id="hurwitz">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p>Different combinations of \(s\) and \(a\) produce populations of disks with different size distributions. The separate contributions of the two parameters are not always easy to disentangle, but in general decreasing \(s\) or increasing \(a\) leads to a pattern dominated by smaller disks. Here are snapshots of four outcomes:</p>
<p><img alt="Four hurwitz snapshots" border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2019/07/four_hurwitz_snapshots.svg" width="640"/></p>
<p class="undent">Within the parameter range shown in these four panels, the filling process always continues to exhaustion, but at higher values of \(s\) it can jam, just as it does with the scaled Riemann zeta function.</p>
<p>Adolf Hurwitz in the 1880s. Photo from <a href="https://en.wikipedia.org/wiki/Adolf_Hurwitz">Wikipedia</a>.<img alt="Adolf Hurwitz in the 1880s. Image from Wikimedia" border="0" class="alignleft" height="300" src="http://bit-player.org/wp-content/uploads/2019/07/Adolf_Hurwitz-1880s-600px.jpg" width="200"/>Until I began this project, I knew nothing of Adolf Hurwitz or his work, although he is <a href="http://www-history.mcs.st-and.ac.uk/Biographies/Hurwitz.html">hardly an obscure figure</a> in the history of mathematics. He earned his Ph.D. under Felix Klein and also studied with Karl Weierstrass, Ernst Eduard Kummer, and Leopold Kronecker—key figures in the founding of modern analysis and number theory. Among his own pupils (and close friends) were David Hilbert and Hermann Minkowski. Albert Einstein was another of his students, although apparently he <a href="https://arxiv.org/abs/1205.4335">seldom went to class</a>.</p>
<p>Hurwitz wrote just one paper on the zeta function. It was published in 1882, when he was still quite young and just beginning his first academic appointment, at the University of Göttingen. (The paper is available from the <a href="https://gdz.sub.uni-goettingen.de/id/PPN599415665_0027">Göttinger Digitalisierungszentrum</a>; see pp. 86–101.) </p>
<p>Hurwitz modified the Riemann zeta function in two ways. First, the constant \(a\) is added to each term, turning \(1/k^s\) into \(1/(a + k)^s\). Second, the summation begins with \(k = 0\) rather than \(k = 1\). By letting \(a\) take on any value in the range \(0 \lt a \le 1\) we gain access to a continuum of zeta functions. The elements of the series are no longer just reciprocals of integers but reciprocals of real numbers. Suppose \(a = \frac{1}{3}\). Then \(\zeta(s, a)\) becomes:</p>
<p>\[\frac{1}{\left(\frac{1}{3} + 0\right)^s} + \frac{1}{\left(\frac{1}{3} + 1\right)^s} + \frac{1}{\left(\frac{1}{3} + 2\right)^s} + \cdots\ = \left(\frac{3}{1}\right)^s + \left(\frac{3}{4}\right)^s + \left(\frac{3}{7}\right)^s + \cdots\]</p>
<p><img alt="Hurwitz s=1 3 plot" border="0" class="alignright" height="" src="http://bit-player.org/wp-content/uploads/2019/09/hurwitz-s1.3-plot.svg" width="300"/>The Riemann zeta function and the Hurwitz zeta function differ substantially only for small values of \(k\) or large values of \(a\). When \(k\) is large, adding a small \(a\) to it makes little difference in the value of the function. Thus as \(k\) grows toward infinity, the two functions are asymptotically equal, as suggested in the graph at right. When the Hurwitz function is put to work packing disks into a square, a rule with \(a &gt; 1\) causes the first several disks to be smaller than they would be with the Riemann rule. A value of \(a\) between \(0\) and \(1\) enlarges the early disks. In either case, the later disks in the sequence are hardly affected at all.</p>
<p class="indent">If \(a\) is a positive integer, the interpretation of \(\zeta(s, a)\) is even simpler. The case \(a = 1\) corresponds to the Riemann zeta sum. When \(a\) is a larger integer, the effect is to omit the first \(a - 1\) entries, leaving only the tail of the series. For example,</p>
<p>\[\zeta(s, 5) = \frac{1}{5^s} + \frac{1}{6^s} + \frac{1}{7^s} + \cdots.\] </p>
<p class="indent">In his fractal artworks, Shier chooses various values of \(a\) as a way of controlling the size distribution of the placed objects, and thereby fine-tuning the appearance of the patterns. Having this adjustment knob available is very convenient, but in the interests of simplicity, I am going to revert to the Riemann function in the rest of this essay.</p>
<p>Before going on, however, I also have to confess that I don’t really understand the place of the Hurwitz zeta function in modern mathematical research, or what Hurwitz himself had in mind when he formulated it. Zeta functions have been an indispensable tool in the long struggle to understand how the prime numbers are sprinkled among the integers. The connection between these two realms was made by Euler, with his remarkable equation linking a sum of powers of integers with a product of powers of primes:</p>
<p>Euler’s other famous equation, \(e^{i\pi} + 1 = 0\), has a bigger fan club, but this is the one that revs <em>my</em> motor.\[\sum_{k = 1}^{\infty} \frac{1}{k^s} = \prod_{p \text{ prime}} \frac{1}{1 - \frac{1}{p^s}}.\]</p>
<p>Riemann went further, showing that everything we might want to know about the distribution of primes is encoded in the undulations of the zeta function over the complex plane. Indeed, if we could simply pin down all the complex values of \(s\) for which \(\zeta(s) = 0\), we would have a master key to the primes. Hurwitz, in his 1882 paper, was clearly hoping to make some progress toward this goal, but I have not been able to figure out how his work fits into the larger story. The Hurwitz zeta function gets almost no attention in standard histories and reference works (in contrast to the Riemann version, which is everywhere). <a href="https://en.wikipedia.org/wiki/Hurwitz_zeta_function">Wikipedia</a> notes: “At rational arguments the Hurwitz zeta function may be expressed as a linear combination of Dirichlet <em>L</em>-functions and vice versa”—which sounds interesting, but I don’t know if it’s useful or important. A recent <a href="https://arxiv.org/abs/1506.00856">article by Nicola Oswald and Jörn Steuding</a> puts Hurwitz’s work in historical context, but it does not answer these questions—at least not in a way I’m able to understand.</p>
<p>But again I digress. Back to dots in boxes.</p>
<hr/>
<p>If a set of circular disks and a square container have the same total area, can you always arrange the disks so that they completely fill the square without overflowing? Certainly not! Suppose the set consists of a single disk with area equal to that of the square; the disk’s diameter is greater than the side length of the square, so it will bulge through the sides while leaving the corners unfilled. A set of two disks won’t work either, no matter how you apportion the area between them. Indeed, when you are putting round pegs in a square hole, no finite set of disks can ever fill all the crevices.</p>
<p>Only an infinite set—a set with no smallest disk—can possibly fill the square completely. But even with an endless supply of ever-smaller disks, it seems like quite a delicate task to find just the right arrangement, so that every gap is filled and every disk has a place to call home. It’s all the more remarkable, then, that simply plunking down the disks at random locations seems to produce exactly the desired result. This behavior is what intrigued and troubled me when I first saw Shier’s pictures and read about his method for generating them. If a <em>random</em> arrangement works, it’s only a small step to the proposition that <em>any</em> arrangement works. Could that possibly be true?</p>
<p>Computational experiments offer strong hints on this point, but they can never be conclusive. What we need is a proof. Ennis’s proof was published in <em><a href="https://www.tandfonline.com/doi/abs/10.4169/mathhorizons.23.3.8">Math Horizons</a></em>, a publication of the Mathe­matical Association of America, which keeps it behind a paywall. If you have no library access and won’t pay the $50 ransom, I can recommend a <a href="https://wp.stolaf.edu/mscs/2014-2015-colloquium-series/">video</a> of Ennis explaining his proof in a talk at St. Olaf College.And so I turn to the work of Christopher Ennis, a mathematician at Normandale Community College, who met Shier when they were both teaching there. </p>
<p>As a warm-up exercise, Ennis proves a one-dimensional version of the area-filling conjecture, where the geometry is simpler and some of the constraints are easier to satisfy. In one dimension a disk is merely a line segment; its area is its length, and its radius is half that length. As in the two-dimensional model, disks are placed in descending order of size at random positions, with the usual proviso that no disk can overlap another disk or extend beyond the end points of the containing interval. In Program 7 you can play with this scheme.</p>
<h2 class="zf">Program 7: One-Dimensional Disks</h2>
<div class="canvas-container canvas-failure" id="one-dim">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="undent">I have given the line segment some vertical thickness to make it visible. The resulting pattern of stripes may look like a supermarket barcode or an atomic spectrum, but please imagine it as one-dimensional.</p>
<p>If you adjust the slider in this program, you’ll notice a difference from the two-dimensional system. In 2D, the algorithm is fulfilling only if the exponent \(s\) is less than a critical value, somewhere in the neighborhood of 1.4. In one dimension, the process continues without impediment for all values of \(s\) throughout the range \(1 \lt s \lt 2\). Try as you might, you won’t find a setting that produces a jammed state. (In practice, the program halts after placing no more than 10,000 disks, but the reason is exhaustion rather than jamming.)</p>
<p>Ennis titles his <em>Math Horizons</em> article “(Always) room for one more.” He proves this assertion by keeping track of the set of points where the center of a new disk can legally be placed, and showing the set is never empty. Suppose \(n - 1\) disks have already been randomly scattered in the container. The next disk to be placed, disk \(n\), will have an area (or length) of \(A_n = 1 / n^s\). Since the geometry is one-dimensional, the corresponding disk radius is simply \(r_n = A_n / 2\). The center of this new disk cannot lie any closer than \(r_n\) to the perimeter of another disk. It must also be at a distance of at least \(r_n\) from the boundary of the containing segment. We can visualize these constraints by adding bumpers, or buffers, of thickness \(r_n\) to the outside of each existing disk and to the inner edges of the containing segment. A few stages of the process are illustrated below.</p>
<p><img alt="1d buffer diagram" border="0" class="alignleft" height="" src="http://bit-player.org/wp-content/uploads/2019/08/1d-buffer-diagram.svg" width="680"/></p>
<p>Placed disks are blue, the excluded buffer areas are orange, and open areas—the set of all points where the center of the next disk could be placed—are black. In the top line, before any disks have been placed, the entire containing segment is open except for the two buffers at the ends. Each of these buffers has a length equal to \(r_1\),  the radius of the first disk to be placed; the center of that disk cannot lie in the orange regions because the disk would then overhang the end of the containing segment. After the first disk has been placed <em>(second line)</em>, the extent of the open area is reduced by the area of the disk itself and its appended buffers. On the other hand, all of the buffers have also shrunk; each buffer is now equal to the radius of disk \(2\), which is smaller than disk \(1\). The pattern continues as subsequent disks are added. Note that although the blue disks cannot overlap, the orange buffers can.</p>
<p>For another view of how this process evolves, click on the <em>Next</em> button in Program 8. Each click inserts one more disk into the array and adjusts the buffer and open areas accordingly.</p>
<h2 class="zf">Program 8: One-Dimensional with Buffers</h2>
<div class="canvas-container canvas-failure" id="one-dim-bumpers">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">Because the blue disks are never allowed to overlap, the total blue area must increase monotonically as disks are added. It follows that the orange and black areas, taken together, must steadily decrease. But there’s nothing steady about the process when you keep an eye on the separate area measures for the orange and black regions. Changes in the amount of buffer overlap cause erratic, seesawing tradeoffs between the two subtotals. If you keep clicking the <em>Next</em> button (especially with \(s\) set to a high value), you may see the black area falling below \(1\) percent. Can we be sure it will never vanish entirely, leaving no opening at all for the next disk?</p>
<p>Ennis answers this question through worst-case analysis. He considers only configurations in which no buffers overlap, thereby squeezing the black area to its smallest possible extent. If the black area is always positive under these conditions, it cannot be smaller when buffer overlaps are allowed.</p>
<p>The basic idea of the proofI have altered some of the notation and certain details of presentation to conform with choices I made elsewhere in this exposition. is to start with \(n - 1\) buffered disks already in place, arranged so that none of the orange buffer areas intersect. The total area of the blue disks is \(\sum_{k=1}^{k=n-1} 1/k^s\). Each buffer zone has a width equal to \(r_{n}\), the radius of the next disk to be added to the tableau; since each disk has two buffers, the total area of the orange buffers is \(2(n-1)r_{n}\). The black area is whatever’s left over. In other words,</p>
<p>\[A_{\square} = \zeta(s), \quad A_{\color{blue}{\mathrm{blue}}} = \sum_{k=1}^{k = n - 1} \frac{1}{k^s}, \quad A_{\color{orange}{\mathrm{orange}}} = 2(n-1)r_{n}.\]</p>
<p class="undent">Then we need to prove that</p>
<p> \[A_{\square} - (A_{\color{blue}{\mathrm{blue}}} + A_{\color{orange}{\mathrm{orange}}}) \gt 0.\]</p>
<p>A direct proof of this statement would require an exact, closed-form expression for \(\zeta(s)\), which we already know is problematic. Ennis evades this difficulty by turning to calculus. He needs to evaluate the remaining tail of the zeta series, \(\sum_{k = n}^\infty 1/k^s\), but this discrete sum is intractable. On the other hand, by shifting from a sum to an integral, the problem becomes an exercise in undergraduate calculus. Exchanging the discrete variable \(k\) for a continuous variable \(x\), we want to find the area under the curve \(1/x^s\) in the interval from \(n\) to infinity; this will provide a lower bound on the corresponding discrete sum. Evaluating the integral yields:</p>
<p>\[\int_{x = n}^{\infty} \frac{1}{x^{s}} d x = \frac{1}{(s-1) n^{s-1}}.\]</p>
<p class="undent">Some further manipulation reveals that the area of the black regions is never smaller than</p>
<p>\[\frac{2 - s}{(s - 1)n^{s - 1}}.\]</p>
<p class="undent">If \(s\) lies strictly between \(1\) and \(2\), this expression must be greater than zero, since both the numerator and the denominator will be positive. Thus for all \(n\) there is at least one black point where the center of a new disk can be placed.</p>
<p>Ennis’s proof is a stronger one than I expected. When I first learned there was a proof, I guessed that it would take a probabilistic approach, showing that although a jammed configuration may exist, it has probability zero of turning up in a random placement of the disks. Instead, Ennis shows that no such arrangement exists at all. Even if you replaced the randomized algorithm with an adversarial one that tries its best to block every disk, the process would still run to fulfillment.</p>
<hr/>
<p>The proof for a two-dimensional system follows the same basic line of argument, but it gets more complicated for geometric reasons. In one dimension, as the successive disk areas get smaller, the disk radii diminish in simple proportion: \(r_k = A_k / 2\). In two dimensions, disk radius falls off only as the square root of the disk area: \(r_k = \sqrt{A_k / \pi}\). As a result, the buffer zone surrounding a disk excludes neighbors at a greater distance in two dimensions than it would in one dimension. There is still a range of \(s\) values where the process is provably unstoppable, but it does not extend across the full interval from \(s \gt 1\) to \(s \lt 2\).</p>
<p>Program 9, running in the panel below, is one I find very helpful in gaining intuition into the behavior of Shier’s algorithm. As in the one-dimensional model of Program 8, each press of the <em>Next</em> button adds a single disk to the containing square, and shows the forbidden buffer zones surrounding the disks.</p>
<h2 class="zf">Program 9: Two-Dimensional Disks with Buffers</h2>
<div class="canvas-container canvas-failure" id="bumpers2d">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p>Move the \(s\) slider to a position somewhere near 1.40. In the control panel for this program, the registers showing fill percentages for blue, orange, and black areas are not entirely trustworthy. In the one-dimensional case, it’s easy to calculate the areas to high precision. That’s much harder in two dimensions, where the overlapping regions of buffers can have complex shapes. I have resorted to counting pixels, a procedure that has limited resolution and is subject to errors caused by fuzzy boundaries.At this setting, there’s a fair chance (maybe 10 or 20 percent) that the very first disk and its orange buffer zone will entirely cover the open black region, creating a jammed state. On other runs you might get as far as two or three or 10 disks before you get stuck. If you make it beyond that point, however, you are likely to continue unimpeded for as long as you have the patience to keep pressing <em>Next</em>. Shier describes this phenomenon as “infant mortality”: If the placement process survives the high-risk early period, it is all but immortal.</p>
<p>There’s a certain whack-a-mole dynamic to the behavior of this system. Maybe the first disk covers all but one small corner of the black zone. It looks like the next disk will completely obliterate that open area. And so it does—but at the same time the shrinking of the orange buffer rings opens up another wedge of black elsewhere. The third disk blots out that spot, but again the narrowing of the buffers allows a black patch to peek out from still another corner. Later on, when there are dozens of disks, there are also dozens of tiny black spots where there’s room for another disk. You can often guess which of the openings will be filled next, because the random search process is likely to land in the largest of them. Again, however, as these biggest targets are buried, many smaller ones are born.</p>
<p>Ennis’s two-dimensional proof addresses the case of circular disks inside a circular boundary, rather than a square one. (The higher symmetry and the absence of corners streamlines certain calculations.) The proof strategy, again, is to show that after \(n - 1\) disks have been placed, there is still room for the \(n\)th disk, for any value of \(n \ge 1\). The argument follows the same logic as in one dimension, relying on an integral to provide a lower bound for the sum of a zeta series. But because of the \(\pi r^2\) area relation, the calculation now includes quadratic as well as linear terms. As a result, the proof covers only a part of the range of \(s\) values. The black area is provably nonempty if \(s\) is greater than \(1\) but less than roughly \(1.1\); outside that interval, the proof has nothing to say.</p>
<p>As mentioned above, Ennis’s proof applies only to circular disks in a circular enclosure. Nevertheless, in what follows I am going to assume the same ideas carry over to disks in a square frame, although the location of the boundary will doubtless be somewhat different. I have recently learned that Ennis has written a further paper on the subject, expected to be published in the <em>American Mathematical Monthly</em>. Perhaps he addresses this question there.</p>
<p>With Program 9, we can explore the entire spectrum of behavior for packing disks into a square. The possibilities are summarized in the candybar graph below.</p>
<p><img alt="Spectrum of behaviors" border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2019/09/spectrum-of-behaviors.svg" width="650"/></p>
<ul>
<li>The leftmost band, in darker green, is the interval for which Ennis’s proof might hold. The question mark at the upper boundary line signifies that we don’t really know where it lies.</li>
<li>In the lighter green region no proof is known, but in Shier’s extensive experiments the system never jams there.</li>
<li>The transition zone sees the probability of jamming rise from \(0\) to \(1\) as \(s\) goes from about \(1.3\) to about \(1.5\).</li>
<li>Beyond \(s \approx 1.5\), experiments suggest that the system <em>always</em> halts in a jammed configuration.</li>
<li>At \(s \approx 1.6\) we enter a regime where the buffer zone surrounding the first disk invariably blocks the entire black region, leaving nowhere to place a second disk. Thus we have a simple proof that the system always jams.</li>
<li>Still another barrier arises at \(s \approx 2.7\). Beyond this point, not even one disk will fit. The diameter of a disk with area \(1\) is greater than the side length of the enclosing square.</li>
</ul>
<hr/>
<p>Can we pin down the exact locations of the various threshold points in the diagram above? This problem is tractable in those situations where the placement of the very first disk determines the outcome. <img alt="Centered disk 128 160pts" border="0" class="alignright" height="160" src="http://bit-player.org/wp-content/uploads/2019/09/centered-disk-128-160pts.png" width="160"/>At high values of \(s\) (and thus low values of \(\zeta(s)\), the first disk can obliterate the black zone and thereby preclude placement of a second disk. What is the lowest value of \(s\) for which this can happen? As in the image at right, the disk must lie at the center of the square box, and the orange buffer zone surrounding it must extend just far enough out to cover the corners of the inner black square, which defines the locus of all points that could accommodate the center of the second disk. Finding the value of \(s\) that satisfies this condition is a messy but straightforward bit of geometry and algebra. With the help of SageMath I get the answer \(s = 1.282915\). This value—let’s call it \(\overline{s}\)—is an upper bound on the “never jammed” region. Above this limit there is always a nonzero probability that the filling process will end after placing a single disk.</p>
<p>The value of \(\overline{s}\) lies quite close to the experimentally observed boundary between the never-jammed range and the transition zone, where jamming first appears. Is it possible that \(\overline{s}\) actually marks the edge of the transition zone—that below this value of \(s\) the program can never fail? To prove that conjecture, you would have to show that when the first disk is successfully placed, the process never stalls on a subsequent disk. That’s certainly not true in higher ranges of \(s\). Yet the empirical evidence near the threshold is suggestive. In my experiments I have yet to see a jammed outcome at \(s \lt \overline{s}\), not even in a million trials just below the threshold, at \(s = 0.999 \overline{s}\). In contrast, at \(s = 1.001 \overline{s}\), a million trials produced 53 jammed results—all of them occuring immediately after the first disk was placed.</p>
<p><img alt="Corner disk 159 160pts" border="0" class="alignright" height="160" src="http://bit-player.org/wp-content/uploads/2019/09/corner-disk-159-160pts.png" width="160"/>The same kind of analysis leads to a lower bound on the region where <em>every</em> run ends after the first disk <em>(medium pink in the diagram above)</em>. In this case the critical situation puts the first disk as close as possible to a corner of the square frame, rather than in the middle. If the disk and its orange penumbra are large enough to block the second disk in this extreme configuration, then they will also block it in any other position. Putting a number on this bound again requires some fiddly equation wrangling; the answer I get is \(\underline{s} = 1.593782\). No process with higher \(s\) can possibly live forever, since it will die with the second disk. In analogy with the lower-bound conjecture, one might propose that the probability of being jammed remains below \(1\) until \(s\) reaches \(\underline{s}\). If both conjectures were true, the transition region would extend from \(\overline{s}\) to \(\underline{s}\).</p>
<p><img alt="Centered disk 270 160pts" border="0" class="alignright" height="160" src="http://bit-player.org/wp-content/uploads/2019/09/centered-disk-270-160pts.png" width="160"/>The final landmark, way out at \(s \approx 2.7\), marks the point where the first disk threatens to burst the bounds of the enclosing square. In this case the game is over before it begins. In program 9, if you push the slider far to the right, you’ll find that the black square in the middle of the orange field shrinks away and eventually winks out of existence. This extinction event comes when the diameter of the disk equals the side length of the square. Given a disk of area \(1\), and thus radius \(1/\sqrt{\pi}\), we want to find the value of \(s\) that satisfies the equation</p>
<p>\[\frac{2}{\sqrt{\pi}} = \sqrt{\zeta(s)}.\]</p>
<p class="undent">Experiments with Program 9 show that the value is just a tad more than 2.7. That’s an interesting numerical neighborhood, no? A famous number lives nearby. Do you suppose?</p>
<hr/>
<p>Another intriguing set of questions concerns the phenomenon that Shier calls infant mortality. If you scroll back up to Program 5 and set the slider to \(s = 1.45\), you’ll find that roughly half the trials jam. The vast majority of these failures come early in the process, after no more than a dozen disks have been placed. At \(s = 1.50\) death at an early age is even more common; three-fourths of all the trials end with the very first disk. On the other hand, if a sequence of disks does manage to dodge all the hazards of early childhood, it may well live on for a very long time—perhaps forever.</p>
<p>Should we be surprised by this behavior? I am. As Shier points out, the patterns formed by our graduated disks are fractals, and one of their characteristic properties is self-similarity, or scale invariance. If you had a fully populated square—one filled with infinitely many disks—you could zoom in on any region to any magnification, and the arrangement of disks would look the same as it does in the full-size square. By “look the same” I don’t mean the disks would be in the same positions, but they would have the same size distribution and the same average number of neighbors at the same distances. This is a statistical concept of identity. And since the pattern looks the same and has the same statistics, you would think that the challenge of finding a place for a new disk would also be the same at any scale. Slipping in a tiny disk late in the filling operation would be no different from plopping down a large disk early on. The probability of jamming ought to be constant from start to finish.</p>
<p>But there’s a rejoinder to this argument: Scale invariance is broken by the presence of the enclosing square. The largest disks are strongly constrained by the boundaries, whereas most of the smaller disks are nowhere near the edges and are little influenced by them. The experimental data offer some support for this view. The graph below summarizes the outcomes of \(20{,}000\) trials at \(s = 1.50\). The red bars show the absolute numbers of trials ending after placing \(n\) disks, for each \(n\) from \(0\) through \(35\). The blue lollipops indicate the proportion of trials reaching disk \(n\) that halted after placing disk \(n\). This ratio can be interpreted (if you’re a frequentist!) as the probability of stopping at \(n\).</p>
<p><img alt="Stymied bars and pops 150 35 20000" border="0" class="aligncenter" height="" src="http://bit-player.org/wp-content/uploads/2019/09/stymied-bars-and-pops-150-35-20000.svg" width=""/></p>
<p class="indent">It certainly looks like there’s something odd happening on the left side of this graph. More than three fourths of the trials end after a single disk, but none at all jam at the second or third disks, and very few (a total of \(23\)) at disks \(4\) and \(5\). Then, suddenly, \(1{,}400\) more fall by the wayside at disk \(6\), and serious attrition continues through disk \(11\).</p>
<p>Geometry can explain some of this weirdness. It has to do with the squareness of the container; other shapes would produce different results.</p>
<p>At \(s = 1.50\) we are between \(\overline{s}\) and \(\underline{s}\), in a regime where the first disk is large enough to block off the entire black zone but not so large that it <em>must</em> do so. This is enough to explain the tall red bar at \(n = 1\): When you place the first disk randomly, roughly \(75\) percent of the time it will block the entire black region, ending the parade of disks. If the first disk <em>doesn’t</em> foreclose all further action, it must be tucked into one of the four corners of the square, leaving enough room for a second disk in the diagonally opposite corner. The sequence of images below (made with Program 9) tells the rest of the story.</p>
<p><img alt="S=150 stymied at 6 sequence 1280px" border="0" class="alignright" height="105" src="http://bit-player.org/wp-content/uploads/2019/09/s150-stymied-at-6-sequence-1280px.png" width="636"/></p>
<p>The placement of the second disk blocks off the open area in that corner, but the narrowing of the orange buffers also creates two tiny openings in the cross-diagonal corners. The third and fourth disks occupy these positions, and simultaneously allow the black background to peek through in two other spots. Finally the fifth and sixth disks close off the last black pixels, and the system jams.</p>
<p>This stereotyped sequence of disk placements accounts for the near absence of mortality at ages \(n = 2\) through \(n = 5\), and the sudden upsurge at age \(6\). The elevated levels at \(n = 7\) through \(11\) are part of the same pattern; depending on the exact positioning of the disks, it may take a few more to expunge the last remnants of black background. </p>
<p>At still higher values of \(n\)—for the small subset of trials that get there—the system seems to shift to a different mode of behavior. Although numerical noise makes it hard to draw firm conclusions, it doesn’t appear that any of the \(n\) values beyond \(n = 12\) are more likely jamming points than others. Indeed, the data are consistent with the idea that the probability of jamming remains constant as each additional disk is added to the array, just as scale invariance would suggest.</p>
<p>A much larger data set would be needed to test this conjecture, and collecting such data is painfully slow. Furthermore, when it comes to rare events, I don’t have much trust in the empirical data. During one series of experiments, I noticed a program run that stalled after \(290\) disks—unusually late. The 290-disk configuration, produced at \(s = 1.47\), is shown at left below.</p>
<p>This pattern, compared with those produced at lower values of \(s\), has a strongly Apollonian texture. Many of the disks are nestled tightly among their neighbors, and they form the recursive triangular motifs characteristic of Apollonian circles.<img alt="Stymied at 290 and then 314 s=148 maxAttmp=1e10" border="0" class="centered" height="320" src="http://bit-player.org/wp-content/uploads/2019/09/stymied-at-290-and-then-314-s148-maxAttmp1e10.png" width="645"/></p>
<p>I wondered if it was <em>truly</em> jammed. My program gives up on finding a place for a disk after \(10^7\) random attempts. Perhaps if I had simply persisted, it would have gone on. So I reset the limit on random attempts to \(10^9\), and sat back to wait. After some minutes the program discovered a place where disk \(291\) would fit, and then another for disk \(292\), and kept going as far as 300 disks. The program had an afterlife! Could I revive it again? Upping the limit to \(10^{10}\) allowed another \(14\) disks to squueze in. The final configuration is shown at right above (with the original \(290\) disks faded, in order to make the \(24\) posthumous additions more conspicuous).</p>
<p>Is it really finished now, or is there still room for one more? I have no reliable way to answer that question. Checking \(10\) billion random locations sounds like a lot, but it is still a very sparse sampling of the space inside the square box. Using 64-bit floating-point numbers to define the coordinate system allows for more than \(10^{30}\) distinguishable points. And to settle the question mathematically, we would need unbounded precision.</p>
<p>We know from Ennis’s proof that at values of \(s\) not too far above \(1.0\), the filling process can always go on forever. And we know that beyond \(s \approx 1.6\), every attempt to fill the square is doomed. There must be some kind of transition between these two conditions, but the details are murky. The experimental evidence gathered so far suggests a smooth transition along a sigmoid curve, with the probability of jamming gradually increasing from \(0\) to \(1\). As far as I can tell, however, nothing we know for certain rules out a single hard threshold, below which all disk sequences are immortal and above which all of them die. Thus the phase diagram would be reduced to this simple form:</p>
<p><img alt="Two state spectrum of behaviors" border="0" class="centered" height="" src="http://bit-player.org/wp-content/uploads/2019/09/two-state-spectrum-of-behaviors.svg" width="640"/></p>
<p class="undent">The softer transition observed in computational experiments would be an artifact of our inability to perform infinite random searches or place infinite sequences of disks.</p>
<hr/>
<p>Here’s a different approach to understanding the random dots-in-a-box phenomenon. It calls for a mental reversal of figure and ground. Instead of placing disks on a square surface, we drill holes in a square metal plate. And the focus of attention is not the array of disks or holes but rather the spaces between them. Shier has a name for the perforated plate: the gasket. </p>
<p>Program 10 allows you to observe a gasket as it evolves from a solid black square to a delicate lace doily with less than 1 percent of its original substance.</p>
<h2 class="zf">Program 10: The Gasket</h2>
<div class="canvas-container canvas-failure" id="gasket">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">The gasket is quite a remarkable object. When the number of holes becomes infinite, the gasket must disappear entirely; its area falls to zero. Up until that very moment, however, it retains its structural integrity. This statement about the con­nectedness of the gasket requires a more careful consideration of what it means for two disks or holes to overlap. Are they allowed to touch, or in other words to be tangent, sharing a single point? The answer makes no difference to the calculation of areas, but it does matter for connectivity. Allowing tangency (as in Apollonian circles) would shatter the gasket, leaving tiny shards. To preserve connectivity, a computer program must test for overlaps with “\(\gt\)” rather than “\(\ge\)”.Although it may be reduced to a fine filigree, the perforated square never tears apart into multiple pieces; it remains a single, connected component, a network with multiple paths linking any two points you might choose.</p>
<p>As the gasket is etched away, can we measure the average thickness of the surviving wisps and tendrils? I can think of several methods that involve elaborate sampling schemes. Shier has a much simpler and more ingenious proposal: To find the average thickness of the gasket, divide its area by its perimeter. It was not immediately obvious to me why this number would serve as an appropriate measure of the width, but at least the units come out right: We are dividing a length squared by a length and so we get a length. And the operation does make basic sense: The area of the gasket represents the amount of substance in it, and the perimeter is the distance over which it is stretched. (The widths calculated in Program 10 differ slightly from those reported by Shier. The reason, I think, is that I include the outer boundary of the square in the perimeter, and he does not.)</p>
<p>Calculating the area and perimeter of a complicated shape such as a many-holed gasket looks like a formidable task, but it’s easy if we just keep track of these quantities as we go along. Initially (before any holes are drilled), the gasket area \(A_0^g\) is the area of the full square, \(A_\square\). The initial gasket perimeter \(P_0^g\) is four times the side length of the square, which is \(\sqrt{A_\square}\). Thereafter, as each hole is drilled, we subtract the new hole’s area from \(A^g\) and add its perimeter to \(P^g\). The quotient of these quantities is our measure of the average gasket width after drilling hole \(k\): \(\widehat{W}_k^g\). Since the gasket area is shrinking while the perimeter is growing, \(\widehat{W}_k^g\) must dwindle away as \(k\) increases.</p>
<p>The importance of \(\widehat{W}_k^g\) is that it provides a clue to how large a vacant space we’re likely to find for the next disk or hole. If we take the idea of “average” seriously, there must always be at least one spot in the gasket with a width equal to or greater than \(\widehat{W}_k^g\). From this observation Shier makes the leap to a whole new space-filling algorithm. Instead of choosing disk diameters according to a power law and then measuring the resulting average gasket width, he determines the radius of the next disk from the observed \(\widehat{W}_k^g\):</p>
<p>\[r_{k+1} = \gamma \widehat{W}_k^g = \gamma \frac{A_k^g}{P_k^g}.\]</p>
<p class="undent">Here \(\gamma\) is a fixed constant of proportionality that determines how tightly the new disks or holes fit into the available openings.</p>
<p>The area-perimeter algorithm has a recursive structure, in which each disk’s radius depends on the state produced by the previous disks. This raises the question of how to get started: What is the size of the first disk? Shier has found that it doesn’t matter very much. Initial disks in a fairly wide range of sizes yield jam-proof and aesthetically pleasing results.</p>
<p>Graphics produced by the original power-law algorithm and by the new recursive one look very similar. One way to understand why is to rearrange the equation of the recursion:</p>
<p>Perhaps this equation would be a little easier to interpret if the average width were defined in terms of hole diameters rather than hole perimeters. Then the denominator of the right hand side would be the sum of the first \(k\) diameters scaled by the \((k+1)\)st diameter.\[\frac{1}{2 \gamma} = \frac{A_k^g}{2 r_{k+1} P_k^g}.\]</p>
<p>On the right side of this equation we are dividing the average gasket width by the diameter of the next disk to be placed. The result is a dimensionless number—dividing a length by a length cancels the units. More important, the quotient is a constant, unchanging for all \(k\). If we calculate this same dimensionless gasket width when using the power-law algorithm, it also turns out to be nearly constant in the limit of karge \(k\), showing that the two methods yield sequences with similar statistics.</p>
<hr/>
<p>Setting aside Shier’s recursive algorithm, all of the patterns we’ve been looking at are generated by a power law (or zeta function), with the crucial requirement that the series must converge to a finite sum. The world of mathematics offers many other convergent series in addition to power laws. Could some of them also create fulfilling patterns? The question is one that Ennis discusses briefly in his talk at St. Olaf and that Shier also mentions. </p>
<p>Among the obvious candidates are geometric series such as \(\frac{1}{1}, \frac{1}{2}, \frac{1}{4}, \frac{1}{8}, \dots\) A geometric series is a close cousin of a power law, defined in a similar way but exchanging the roles of \(s\) and \(k\). That is, a geometric series is the sum:</p>
<p>\[\sum_{k=0}^{\infty} \frac{1}{s^k} = \frac{1}{s^0} + \frac{1}{s^1} + \frac{1}{s^2} + \frac{1}{s^3} + \cdots\]</p>
<p class="undent">For any \(s &gt; 1\), the infinite geiometric series has a finite sum, namely \(\frac{s}{s - 1}\). Thus our task is to construct an infinite set of disks with individual areas \(1/s^k\) that we can pack into a square of area \(\frac{s}{s - 1}\). Can we find a range of \(s\) for which the series is fulfilling? As it happens, this is where Shier began his adventures; his first attempts were not with power laws but with geometric series. They didn’t turn out well. You are welcome to try your own hand in Program 11.</p>
<h2 class="zf">Program 11: Disk Sizes from Geometric Series</h2>
<div class="canvas-container canvas-failure" id="geometric">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p>There’s a curious pattern to the failures you’ll see in this program. No matter what value you assign to \(s\) (within the available range \(1 \lt s \le 2\)), the system jams when the number of disks reaches the neighborhood of \(A_\square = \frac{s}{s-1}\). <img alt="Log log powerlaw and geom" border="0" class="alignright" height="" src="http://bit-player.org/wp-content/uploads/2019/09/log-log-powerlaw-and-geom.svg" width=""/>For example, at \(s = 1.01\), \(\frac{s}{s - 1}\) is 101 and the program typically gets stuck somewhere between \(k = 95\) and \(k = 100\). At \(s = 1.001\), \(\frac{s}{s - 1}\) is \(1{,}001\) and there’s seldom progress beyond about \(k = 1,000\). </p>
<p>For a clue to what’s going wrong here, consider the graph at right, plotting the values of \(1 / k^s\) <em>(red)</em> and \(1 / s^k\) <em>(blue)</em> for \(s = 1.01\). These two series converge on nearly the same sum (roughly \(100\)), but they take very different trajectories in getting there. On this log-log plot, the power-law series \(1 / s^k\) is a straight line. The geometric series \(1 / s^k\) falls off much more slowly at first, but there’s a knee in the curve at about \(k = 100\) <em>(dashed mauve line)</em>, where it steepens dramatically. If only we could get beyond this turning point, it looks like the rest of the filling process would be smooth sledding, but in fact we never get there. Whereas the first \(100\) disks of the power-law series fill up only about \(5\) percent of the available area, they occuy 63 percent in the geometric case. This is where the filling process stalls.</p>
<p>Even in one dimension, the geometric series quickly succumbs. (This is in sharp contrast to the one-dimensional power-law model, where any \(s\) between \(1\) and \(2\) yields a provably infinite progression of disks.)</p>
<h2 class="zf">Program 12: Disk Sizes from Geometric Series in One Dimension</h2>
<div class="canvas-container canvas-failure" id="geometric-1d">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">And just in case you think I’m pulling a fast one here, let me demonstrate that those same one-dimensional disks will indeed fit in the available space, if packed efficiently. In Program 13 they are placed in order of size from left to right.</p>
<h2 class="zf">Program 13: Deterministic One-Dimensional Geometric Series</h2>
<div class="canvas-container canvas-failure" id="deterministic-geom-1d">
<p>Sorry, the program will not run in this browser.</p>
</div>
<p class="indent">I have made casual attempts to find fulfillment with a few other convergent series, such as the reciprocals of the Fibonacci numbers (which converge to about \(3.36\)) and the reciprocals of the factorials (whose sum is \(e \approx 2.718\)). Both series jam after the first disk. There are plenty of other convergent series one might try, but I doubt this is a fruitful line of inquiry.</p>
<hr/>
<p><img alt="Shier randomly oriented squares 600px" border="0" class="alignleft" height="300" src="http://bit-player.org/wp-content/uploads/2019/09/Shier-randomly-oriented-squares-600px.png" width="300"/>All the variations discussed above leave one important factor unchanged: The objects being fitted together are all circular. Exploring the wider universe of shapes has been a major theme of Shier’s work. He asks: What properties of a shape make it suitable for forming a statistical fractal pattern? And what shapes (if any) refuse to cooperate with this treatment? (The images in this section were created by John Shier and are reproduced here with his per­mission.)</p>
<p>Shier’s first experiments were with circular disks and axis-parallel squares; the filling algorithm worked splendidly in both cases. He also succeeded with axis-parallel rectangles of various aspect ratios, even when he mixed vertical and horizontal orientations in the same tableau. In collaboration with Paul Bourke he tried randomizing the orientation of squares as well as their positions. Again the outcome was positive, as the illustration above left shows.</p>
<p>Equilateral triangles were less cooperative, and at first Shier believed the algorithm would consistently fail with this shape. The triangles tended to form orderly arrays with the sharp point of one triangle pressed close against the broad side of another, leaving little “wiggle room.” <img alt="One and nines transparent 300px" border="0" class="alignright" height="600" src="http://bit-player.org/wp-content/uploads/2019/09/one_and_nines-transparent-300px.png" style="float: right;" width="300"/>Further efforts showed that the algorithm was not truly getting stuck but merely slowing down. With an appropriate choice of parameters in the Hurwitz zeta function, and with enough patience, the triangles did come together in boundlessly extendable space-filling patterns.  </p>
<p>The casual exploration of diverse shapes eventually became a deliberate quest to stake out the limits of the space-filling process. Surely there must be <em>some</em> geometric forms that the algorithm would balk at, failing to pack an infinite number of objects into a finite area. Perhaps nonconvex shapes such as stars and snowflakes and flowers would expose a limitation—but no, the algorithm worked just fine with these figures, fitting smaller stars into the crevices between the points of larger stars. The next obvious test was “hollow” objects, such as annular rings, where an internal void is not part of the object and is therefore available to be filled with smaller copies. The image at right is my favorite example of this phenomenon. The bowls of the larger nines have smaller nines within them. It’s nines all the way down. When we let the process continue indefinitely, we have a whimsical visual proof of the proposition that \(.999\dots = 1\).</p>
<p>These successes with nonconvex forms and objects with holes led to an <em>Aha</em> moment, as Shier describes it. The search for a shape that would break the algorithm gave way to a suspicion that no such shape would be found, and then the suspicion gradually evolved into a conviction that any “reasonably compact” object is suitable for the <em>Fractalize That!</em> treatment. The phrase “reasonably compact” would presumably exclude shapes that are in fact dispersed sets of points, such as <a href="http://www.2dcurves.com/fractal/fractald.html">Cantor dust</a>. But Shier has shown that shapes formed of disconnected pieces, such as the words in the pair of images below, present no special difficulty.</p>
<p><img alt="MATH and ART 1280px" border="0" class="centered" height="308" src="http://bit-player.org/wp-content/uploads/2019/09/MATH-and-ART-1280px.png" width="638"/></p>
<p><em>Fractalize That!</em> is not all geometry and number theory. Shier is eager to explain the mathematics behind these curious patterns, but he also presents the algorithm as a tool for self-expression. MATH and ART both have their place.</p>
<hr/>
<p>Finally, I offer some notes on what’s needed to turn these algorithms into computer programs. Shier’s book includes a chapter for do-it-yourselfers that explains his strategy and provides some crucial snippets of code (written in C). My own source code (in JavaScript) is available on <a href="https://github.com/bit-player/dotster">GitHub</a>. And if you’d like to play with the programs without all the surrounding verbiage, try the <a href="https://bit-player.github.io/dotster/">GitHub Pages version</a>.</p>
<p>The inner loop of a typical program looks something like this:</p>
<pre><code class="language-js">let attempt = 1;
while (attempt &lt;= maxAttempts) {
    disk.x = randomCoord();
    disk.y = randomCoord();
    if (isNotOverlapping(disk)) {
        return disk;
    }
    attempt++;
}
return false;</code></pre>
<p>We generate a pair of random \(x\) and \(y\) coordinates, which mark the center point of the new disk, and check for overlaps with other disks already in place. If no overlaps are discovered, the disk stays put and the program moves on. Otherwise the disk is discarded and we jump back to the top of the loop to try a new \(xy\) pair. </p>
<p>The main computational challenge lies in testing for overlaps. For any two specific disks, the test is easy enough: They overlap if the sum of their radii is greater than the distance between their centers. The problem is that the test might have to be repeated many millions of times. My program makes \(10\) million attempts to place a disk before giving up. If it has to test for overlap with \(100{,}000\) other disks on each attempt, that’s a trillion tests. A trillion is too many for an interactive program where someone is staring at the screen waiting for things to happen. To speed things up a little I divide the square into a \(32 \times 32\) grid of smaller squares. The largest disks—those whose diameter is greater than the width of a grid cell—are set aside in a special list, and all new candidate disks are checked for overlap with them. Below this size threshold, each disk is allocated to the grid cell in which its center lies. A new candidate is checked against the disks in its own cell and in that cell’s eight neighbors. The net result is an improvement by two orders of magnitude—lowering the worst-case total from \(10^{12}\) overlap tests to about \(10{10}\).</p>
<p>All of this works smoothly with circular disks. Devising overlap tests for the variety of shapes that Shier has been working with is much harder.</p>
<p>From a theoretical point of view, the whole rigmarole of overlap testing is hideously wasteful and unnecessary. If the box is already 90 percent full, then we know that 90 percent of the random probes will fail. A smarter strategy would be to generate random points only in the “black zone” where new disks can legally be placed. If you could do that, you would never need to generate more than one point per disk, and there’d be no need to check for overlaps. But keeping track of the points that comprise the black zone—scattered throughout multiple, oddly shaped, transient regions—would be a serious exercise in computational geometry.</p>
<p>For the actual drawing of the disks, Shier relies on the technology known as SVG, or scalable vector graphics. As the name suggests, these drawings retain full resolution at any size, and they are definitely the right choice if you want to create works of art. They are less suitable for the interactive programs embedded in this document, mainly because they consume too much memory. The images you see here rely on the HTML <em>canvas</em> element, which is simply a fixed-size pixel array.</p>
<p>Another point of possible interest is the evaluation of the zeta function. If we want to scale the disk sizes to match the box size (or vice versa), we need to compute a good approximation of the Riemann function \(\zeta(s)\) or the Hurwitz function \(\zeta(s, a)\). I didn’t know how to do that, and most of the methods I read about seemed overwhelming. Before I could get to zeta, I’d have to hack my way through thickets of polygamma functions and Stieltjes constants. For the Riemann zeta function I found a somewhat simpler algorithm published by Peter Borwein in 1995. It’s based on a polynomial approximation that yields ample precision and runs in less than a millisecond. For the Hurwitz zeta function I stayed with a straightforward translation of Shier’s code, which takes more of a brute-force approach. (There are alternatives for Hurwitz too, but I couldn’t understand them well enough to make them work.)</p>
<p>The JavaScript file in the <a href="https://github.com/bit-player/dotster">GitHub repository</a> has more discussion of implementation details.</p>
<hr/>
<h2>Bibliography: Works by John Shier and colleagues</h2>
<p class="biblio">Shier, John. 2018. <em>Fractalize That! A Visual Essay on Statistical Geometry</em>. Singapore: World Scientific. <a href="https://www.worldscientific.com/worldscibooks/10.1142/11126">Publisher’s website</a>.</p>
<p class="biblio">Shier, John. Website: <a href="http://www.john-art.com/">http://www.john-art.com/</a></p>
<p class="biblio">Shier, John. 2011. The dimensionless gasket width \(b(c,n)\) in statistical geometry. <a href="http://www.john-art.com/gasket_width.pdf">http://www.john-art.com/gasket_width.pdf</a></p>
<p class="biblio">Shier, John. 2012. Random fractal filling of a line segment. <a href="http://www.john-art.com/gasket_width.pdf">http://www.john-art.com/gasket_width.pdf</a></p>
<p class="biblio">Dunham, Douglas, and John Shier. 2014. The art of random fractals. In <em>Proceedings of Bridges 2014: Mathematics, Music, Art, Architecture, Culture</em> pp. 79–86. <a href="http://archive.bridgesmathart.org/2014/bridges2014-79.pdf">PDF</a>.</p>
<p class="biblio">Shier, John. 2015. A new recursion for space-filling geometric fractals. <a href="http://www.john-art.com/gasket_width.pdf">http://www.john-art.com/gasket_width.pdf</a></p>
<p class="biblio">Dunham, Douglas, and John Shier. 2015. An algorithm for creating aesthetic random fractal patterns. Talk delivered at the Joint Mathematics Meetings January 2015, San Antonio, Texas. </p>
<p class="biblio">Dunham, Douglas, and John Shier. 2018. A property of area and perimeter. In <em>ICGG 2018: Proceedings of the 18th International Conference on Geometry and Graphics</em>, Milano, August 2018, pp. 228–237.</p>
<p class="biblio">Dunham, Douglas, and John Shier. 2017. New kinds of fractal patterns. In <em>Proceedings of Bridges 2017: Mathematics, Art, Music, Architecture, Education, Culture</em>,<br/>
pp. 111–116. <a href="https://www.d.umn.edu/~ddunham/bridges17.pdf">Preprint</a>.</p>
<p class="biblio">Shier, John, and Paul Bourke. 2013. An algorithm for random fractal filling of space. <em>Computer Graphics Forum</em> 32(8):89–97. <a href="http://archive.bridgesmathart.org/2017/bridges2017-111.pdf">PDF</a>. <a href="http://www.john-art.com/Shier_Bourke_paper.pdf">Preprint</a>.</p>
<h2>Proof</h2>
<p class="biblio">Ennis, Christopher. 2016. (Always) room for one more. <em>Math Horizons</em> 23(3):8–12. <a href="https://www.tandfonline.com/doi/abs/10.4169/mathhorizons.23.3.8">PDF</a> (paywalled).</p>
<h2>Apollonian circles</h2>
<p class="biblio">Dodds, Peter Sheridan, and Joshua S. Weitz. 2002. Packing-limited growth. Physical Review E 65: 056108.</p>
<p class="biblio">Lagarias, Jeffrey C., Colin L. Mallows, and Allan R. Wilks. 2001. Beyond the Descartes circle theorem. <a href="https://arxiv.org/abs/math/0101066">https://arxiv.org/abs/math/0101066</a>. (Also published in <em>American Mathematical Monthly</em>, 2002, 109:338–361.)</p>
<p class="biblio">Mackenzie, Dana. 2010. A tisket, a tasket, an Apollonian gasket. <em>American Scientist</em> 98:10–14. <a href="https://www.americanscientist.org/article/a-tisket-a-tasket-an-apollonian-gasket">https://www.americanscientist.org/article/a-tisket-a-tasket-an-apollonian-gasket</a>.</p>
<p class="biblio">Manna, S. S. 1992. Space filling tiling by random packing of discs. <em>Physica A</em> 187:373–377.</p>
<h2>Zeta functions</h2>
<p class="biblio">Bailey, David H., and Jonathan M. Borwein. 2015. Crandall’s computation of the incomplete Gamma function and the Hurwitz zeta function, with applications to Dirichlet L-series. <em>Applied Mathematics and Computation</em>, 268, 462–477.</p>
<p class="biblio">Borwein, Peter. 1995. An efficient algorithm for the Riemann zeta function. http://www.cecm.sfu.ca/personal/pborwein/PAPERS/P155.pdf</p>
<p class="biblio">Coffey, Mark W. 2009. An efficient algorithm for the Hurwitz zeta and related functions. <em>Journal of Computational and Applied Mathematics</em> 225:338–346.</p>
<p class="biblio">Hurwitz, Adolf. 1882. Einige Eigenschaften der Dirichletschen Funktionen \(F(s) = \sum \left(\frac{D}{n} \frac{1}{n^s}\right)\), die bei der Bestimmung der Klassenzahlen binärer quadratischer Formen auftreten. <em>Zeitschrift für Mathematik und Physik</em> 27:86–101. <a href="https://gdz.sub.uni-goettingen.de/id/PPN599415665_0027">https://gdz.sub.uni-goettingen.de/id/PPN599415665_0027</a>.</p>
<p class="biblio">Oswald, Nicola, and Jörn Steuding. 2015. Aspects of zeta-function theory in the mathematical works of Adolf Hurwitz. <a href="https://arxiv.org/abs/1506.00856">https://arxiv.org/abs/1506.00856</a>.</p>
<p class="biblio">Xu, Andy. 2018. Approximating the Hurwitz zeta function. <a href="https://math.mit.edu/research/highschool/primes/materials/2018/Xu.pdf">PDF</a>.</p>
<p><br/>
</p></div>
    </content>
    <updated>2019-09-27T15:50:33Z</updated>
    <published>2019-09-27T15:50:33Z</published>
    <category scheme="http://bit-player.org" term="computing"/>
    <category scheme="http://bit-player.org" term="featured"/>
    <category scheme="http://bit-player.org" term="mathematics"/>
    <author>
      <name>Brian Hayes</name>
      <uri>http://bit-player.org</uri>
    </author>
    <source>
      <id>http://bit-player.org/feed/atom</id>
      <link href="http://bit-player.org" rel="alternate" type="text/html"/>
      <link href="http://bit-player.org/feed/atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">An amateur's outlook on computation and mathematics</subtitle>
      <title xml:lang="en-US">bit-player</title>
      <updated>2019-09-27T15:52:10Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2019/09/26/congratulations-dr-mamano</id>
    <link href="https://11011110.github.io/blog/2019/09/26/congratulations-dr-mamano.html" rel="alternate" type="text/html"/>
    <title>Congratulations, Dr. Mamano!</title>
    <summary>Today Nil Mamano successfully passed his dissertation defense. Nil has been a doctoral student at UCI, jointly supervised by Mike Goodrich and myself.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Today <a href="https://www.ics.uci.edu/~nmamano/">Nil Mamano</a> successfully passed his dissertation defense. Nil has been a doctoral student at UCI, jointly supervised by Mike Goodrich and myself.</p>

<p>His dissertation, <em>New Applications of the Nearest-Neighbor Chain Algorithm</em>, includes material from several papers I’ve discussed here before:
<a href="https://11011110.github.io/blog/2017/04/11/stable-grid-matching.html">stable matching for points in grids</a>,
<a href="https://11011110.github.io/blog/2017/06/29/stable-redistricting-in.html">geographic clustering using stable matching with road network distances</a>,
<a href="https://11011110.github.io/blog/2018/03/14/finding-nearest-open.html">data structures for nearest neighbors in planar networks</a>,
<a href="https://11011110.github.io/blog/2018/04/26/stable-marriage-voronoi.html">stable-marriage Voronoi diagrams</a>, and
<a href="https://11011110.github.io/blog/2019/02/21/mutual-nearest-neighbors.html">the equivalence of local and global optimization for a wide range of combinatorial optimization problems</a>.</p>

<p>A common theme running through much of this work is the use of the <a href="https://en.wikipedia.org/wiki/Nearest-neighbor_chain_algorithm">nearest-neighbor chain algorithm</a> to find pairs of objects that are mutual nearest neighbors (a local definition of optimality) more quickly per pair than one could find the closest pair of objects (global optimality). A greedy algorithm based on this principle will find pairs in a different order than one that uses global closest pairs, but for many problems this ordering makes no difference in the eventual result. For these problems, once a pair become mutual nearest neighbors, they remain so until chosen, so the family of allowable sequences of choices made by the algorithm forms an <a href="https://en.wikipedia.org/wiki/Antimatroid">antimatroid</a>.</p>

<p>As you might imagine, this makes for a long dissertation; unlike some other places, UCI has no upper limit on dissertation length. In fact, we briefly thought that Nil had unnecessarily included everything he’d done here in his dissertation, but it’s not even close to true. He also has publications on
<a href="https://11011110.github.io/blog/2016/06/01/robust-graph-isomorphism.html">graph watermarking</a> and <a href="https://11011110.github.io/blog/2019/01/31/linkage.html">knight’s tours</a> that didn’t fit with the main theme and were not included, as well as some even earlier publications on <a href="http://sana.ics.uci.edu/">simulated annealing for biological network alignment</a> with UCI professor Wayne Hayes, started while he was an exchange student here, before he joined the doctoral program and the theory group.</p>

<p>I think Nil already has a strong record of research and would do well continuing in that direction, but he has decided that he doesn’t want to, and I wouldn’t want to pressure him to change that decision even if I thought it would be successful. He tells me that he has a love-hate relation with research: he loves doing it, but he hates that (for him) to do it well, he has to make it the most important thing in his life. Instead, now that he has completed his doctorate, he will be looking for a job in industry.</p>

<p>Anyway, congratulations, Nil!</p>

<p>(<a href="https://mathstodon.xyz/@11011110/102862578075877620">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2019-09-26T21:05:00Z</updated>
    <published>2019-09-26T21:05:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2019-10-01T17:35:02Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=16266</id>
    <link href="https://rjlipton.wordpress.com/2019/09/26/quantum-switch-em/" rel="alternate" type="text/html"/>
    <title>Quantum Switch-Em</title>
    <summary>A recipe for changing the objectives of problems Composite crop of src1, src2, src3 Aram Harrow, Avinatan Hassidim, and Seth Lloyd are quantum stars who have done many other things as well. They are jointly famous for their 2009 paper, “Quantum algorithm for linear systems of equations.” Today Ken and I discuss an aspect of […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><font color="#0044cc"><br/>
<em>A recipe for changing the objectives of problems</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<table class="image alignright">
<tbody>
<tr>
<td>
<a href="https://rjlipton.files.wordpress.com/2019/09/hhl.png"><img alt="" class="aligncenter wp-image-16268" height="100" src="https://rjlipton.files.wordpress.com/2019/09/hhl.png?w=200&amp;h=100" width="200"/></a>
</td>
</tr>
<tr>
<td class="caption alignright"><font size="-2">Composite crop of <a href="https://web.mit.edu/physics/people/faculty/harrow_aram.html">src1</a>, <a href="https://www.flickr.com/photos/barilan/45175102375">src2</a>, <a href="https://colloquium.phys.ethz.ch/programme/previous/autumn08/lloyd.html">src3</a></font></td>
</tr>
</tbody>
</table>
<p>
Aram Harrow, Avinatan Hassidim, and Seth Lloyd are quantum stars who have done many other things as well. They are jointly famous for their 2009 <a href="https://arxiv.org/pdf/0811.3171.pdf">paper</a>, “Quantum algorithm for linear systems of equations.”</p>
<p>
Today Ken and I discuss an aspect of their paper that speaks to a wider context.<br/>
<span id="more-16266"/></p>
<p>
The paper by Harrow, Hassidim, and Lloyd addresses a fundamental problem: given an <img alt="{N \times N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN+%5Ctimes+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N \times N}"/> matrix <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and an <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/>-vector <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/>, solve <img alt="{Ax = b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BAx+%3D+b%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Ax = b}"/>. This is called the Linear Systems Problem (LSP). They say in their abstract:</p>
<blockquote><p><b> </b> <em> Here, we exhibit a quantum algorithm for this task that runs in <img alt="{poly(log N)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bpoly%28log+N%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{poly(log N)}"/> time, an exponential improvement over the best classical algorithm. </em>
</p></blockquote>
<p/><p>
What strikes us is what HHL meant by “this task” in their abstract. It is not LSP. Indeed, it can’t be LSP. They want to do it with a number <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> of qubits that is <img alt="{\ll N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cll+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\ll N}"/>. But the solution <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> is a length-<img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> vector, which in general has at least <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> bits of information. No matter how much you entangle and wrangle, you <a href="https://en.wikipedia.org/wiki/Holevo's_theorem#Comments_and_remarks">cannot</a> extract more than <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> bits of information out of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> qubits. So even if <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> is <img alt="{O(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{O(n)}"/>-sparse in some sense, and ignoring the issue of the time it would take to output the <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> entries of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, you can’t solve LSP with fewer qubits to get all of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> in the first place. </p>
<p>
The problem they solve has been given its own name in <a href="https://arxiv.org/pdf/1802.08227.pdf">subsequent</a> <a href="https://homepages.cwi.nl/~rdewolf/qcnotes.pdf">treatments</a>, including a 2015 <a href="https://arxiv.org/pdf/1511.02306.pdf">paper</a> by Andrew Childs, Robin Kothari, and Rolando Somma that greatly improved the time to achieve <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon}"/> precision:</p>
<blockquote><p><b> </b> <em> <b>Quantum Linear Systems Problem</b> (QLSP): Given a succinct representation of an invertible Hermitian matrix <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{A}"/>, code for a unitary operator <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{B}"/> that maps <img alt="{0^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%5En%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{0^n}"/> to a quantum state <img alt="{|b\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7Cb%5Crangle%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{|b\rangle}"/>, and an error tolerance <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{\epsilon}"/>, output a quantum state <img alt="{|\xi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cxi%5Crangle%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{|\xi\rangle}"/> such that </em></p><em>
<p align="center"><img alt="\displaystyle  ||\;|\xi\rangle - |\frac{x}{||x||_2}\rangle\;||_2 &lt; \epsilon, \qquad\text{where}\qquad x = A^{-1}b. " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7C%7C%5C%3B%7C%5Cxi%5Crangle+-+%7C%5Cfrac%7Bx%7D%7B%7C%7Cx%7C%7C_2%7D%5Crangle%5C%3B%7C%7C_2+%3C+%5Cepsilon%2C+%5Cqquad%5Ctext%7Bwhere%7D%5Cqquad+x+%3D+A%5E%7B-1%7Db.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="\displaystyle  ||\;|\xi\rangle - |\frac{x}{||x||_2}\rangle\;||_2 &lt; \epsilon, \qquad\text{where}\qquad x = A^{-1}b. "/></p>
</em><p><em/>
</p></blockquote>
<p/><p>
The <img alt="{|\cdot\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Ccdot%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\cdot\rangle}"/> symbol is called a <b>ket</b> in Paul Dirac’s <a href="https://en.wikipedia.org/wiki/Bra-ket_notation">bra-ket</a> notation. “Ketting” a problem to our mind means accepting not only an approximate answer but also a loss of information that might apply to inputs as well as outputs.</p>
<p>
</p><p/><h2> It’s a Changed Problem </h2><p/>
<p/><p>
What a solution to QLSP gives you is not <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> but a quantum state <img alt="{|\xi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cxi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\xi\rangle}"/> that approximates the unit-vector multiple of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>. As HHL say earlier in their abstract, this changed problem is useful if what you really want is not <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> but some other value <img alt="{f(x)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(x)}"/> derived from <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>. They say for example that desired information could come from a quantum measurement of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>—that is, of <img alt="{|\xi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cxi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\xi\rangle}"/>. </p>
<p>
This blog did have a 2012 <a href="https://rjlipton.wordpress.com/2012/04/04/a-lazy-approach-to-problem-solving/">post</a> on “lazy problem solving” that included the quip: </p>
<blockquote><p><b> </b> <em> The idea is that when we solve a system <img alt="{Ax = b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BAx+%3D+b%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{Ax = b}"/> for <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/>, it is likely that we do not really want <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/>. We want some information about <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/>. For example, we might wish to know the norm of <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0" title="{x}"/>. The question we plan to address is, are there algorithms that can do this faster than solving the entire linear system? </em>
</p></blockquote>
<p/><p>
Ironically, the problem we suggested there, which is computing <img alt="{\sum_i x_i^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csum_i+x_i%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sum_i x_i^2}"/> up to multiplicative error <img alt="{1 \pm \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1+%5Cpm+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1 \pm \epsilon}"/>, is destroyed by normalizing <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> into a quantum state <img alt="{|\xi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cxi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\xi\rangle}"/>. Oh well. But <a href="https://rjlipton.wordpress.com/2009/02/26/problems-not-algorithms/">other</a> <a href="https://rjlipton.wordpress.com/2014/07/21/shifts-in-algorithm-design/">posts</a> <a href="https://rjlipton.wordpress.com/2015/04/30/transcomputational-problems/">have</a> considered changing the objectives of algorithms. But the general idea involved in the formulation of QLSP strikes us anew—and in ways different from Scott Aaronson’s caveats in a wonderful <a href="https://scottaaronson.com/papers/qml.pdf">review</a> he wrote of HHL titled, “Quantum Machine Learning Algorithms: Read the Fine Print.” </p>
<p>
Going from LSP to QLSP switches the problem and enables showing that a quantum algorithm can solve the switched problem much faster than before. Very nice: HHL and its followups deserving of myriad citations. Scott’s review frames the question of whether the switch is fair from a practical perspective, including the restrictions on <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/>. Perhaps the jury is still out on this: we’ve mentioned several times the nifty <a href="https://arxiv.org/abs/1807.04271">result</a> by Ewin Tang that found a quick classical solution to a <a href="https://cacm.acm.org/magazines/2019/8/238339-the-algorithm-that-changed-quantum-machine-learning/fulltext">problem</a> downstream of HHL that had been thought to require quantum. But switching a problem for research is fair—we do this all time in theory. We hope that the modified problem helps us understand the original problem. Let’s look at some examples.</p>
<p>
</p><p/><h2> Ketted Problems </h2><p/>
<p/><p>
We think the general recipe will be clear from a couple more examples. The first one seems not to be the same as what is called “QSAT” <a href="https://arxiv.org/pdf/1203.6161.pdf">here</a> or <a href="https://dspace.mit.edu/handle/1721.1/108412">here</a>. </p>
<p/><p><br/>
<img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> “Ketted SAT”: Given a CNF formula <img alt="{\Phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi}"/> with <img alt="{2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{2^n}"/> variables but <img alt="{n^{O(1)}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n^{O(1)}}"/>-sized clauses, and <img alt="{\epsilon &gt; 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon &gt; 0}"/>, output a quantum state <img alt="{|\xi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cxi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\xi\rangle}"/> such that for some satisfying assignment <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>, <img alt="{||\;|\xi\rangle - |\frac{x}{||x||_2}\rangle ||_2 \leq \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%7C%5C%3B%7C%5Cxi%5Crangle+-+%7C%5Cfrac%7Bx%7D%7B%7C%7Cx%7C%7C_2%7D%5Crangle+%7C%7C_2+%5Cleq+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{||\;|\xi\rangle - |\frac{x}{||x||_2}\rangle ||_2 \leq \epsilon}"/>. </p>
<p>
We still suspect this is known at least implicitly in the context of interactive proofs and PCPs and error-correcting codes. In that context, the idea of getting an assignment within distance <img alt="{\epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\epsilon}"/> of a satisfying one might make sense. For other purposes it is not so useful—e.g., it might not help utiliize the self-reducibility structure of SAT. It may simply be equivalent to known succinct-SAT problems after applying the coding used to obtain <a href="http://www.cs.yale.edu/homes/spielman/PAPERS/holographic.pdf">holographic proofs</a>, but we don’t immediately see it.</p>
<p>
Note that the fact of <img alt="{\Phi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPhi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Phi}"/> being in CNF with small clause size (which can even be constant) mirrors the sparseness condition on <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> that is usually assumed in cases of HHL. So the analogy to QLSP holds up there. At least “ketted SAT” is a different problem.</p>
<p/><p><br/>
<img alt="{\bullet}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\bullet}"/> “Ketted Factoring”: Given a really large integer <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>, output a quantum state <img alt="{|\pi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cpi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\pi\rangle}"/> such that for some nontrivial (prime) factor <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> of <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>, <img alt="{||\;|\pi\rangle - k(p)|| &lt; \epsilon}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%7C%5C%3B%7C%5Cpi%5Crangle+-+k%28p%29%7C%7C+%3C+%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{||\;|\pi\rangle - k(p)|| &lt; \epsilon}"/>, where <img alt="{k(p) = \sum_{i: bin(p,i) = 1} |i\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%28p%29+%3D+%5Csum_%7Bi%3A+bin%28p%2Ci%29+%3D+1%7D+%7Ci%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k(p) = \sum_{i: bin(p,i) = 1} |i\rangle}"/>.</p>
<p>
We can suppose that we have oracle lookup to bits of <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>, so that all the bits can be placed into quantum superposition. We could alternatively encode <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> as the quantum state <img alt="{k(M) = \sum_{i: bin(N,i) = 1} |i\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%28M%29+%3D+%5Csum_%7Bi%3A+bin%28N%2Ci%29+%3D+1%7D+%7Ci%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k(M) = \sum_{i: bin(N,i) = 1} |i\rangle}"/>, but then the problem might not be well-defined because <img alt="{k(M)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%28M%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k(M)}"/> cannot retain all info about <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/>. </p>
<p>
This is not in the shadow of Shor’s algorithm because that needs <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> to have <img alt="{O(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BO%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{O(n)}"/> digits in order eventually to get a factor exactly. The quantumized version applies when <img alt="{M}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{M}"/> is really big. Again, it is not clear that the solutions <img alt="{|\pi\rangle}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7C%5Cpi%5Crangle%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{|\pi\rangle}"/> would be useful for things like breaking cryptosystems. They might represent points of cryptographic weakness in some detailed sense. In any event, it’s a different problem. </p>
<p>
</p><p/><h2> More General Changed Problems </h2><p/>
<p/><p>
With all of these there are questions about how far the change reflects on the original problem, but at least the change generated substantial research and interesting new angles.</p>
<p>
</p><p/><h3> The Goldbach problem </h3><p/>
<p><i>Every even number is the sum of two primes</i> <img alt="{~\rightarrow~}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7E%5Crightarrow%7E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{~\rightarrow~}"/> <i>Every even number is the sum of two almost-primes</i>.</p>
<p>
A number is an almost prime if it is a prime or a product of at most two primes. This is a quite useful result, but not what we really believe is true.</p>
<p>
</p><p/><h3> P=NP </h3><p/>
<p><i><img alt="{\mathsf{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{P}}"/> not equal to <img alt="{\mathsf{NP}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{NP}}"/></i> <img alt="{~\rightarrow~}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7E%5Crightarrow%7E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{~\rightarrow~}"/> <i><img alt="{\mathsf{P}^{A}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%5E%7BA%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{P}^{A}}"/> not equal to <img alt="{\mathsf{NP}^{A}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%5E%7BA%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{NP}^{A}}"/></i>.</p>
<p>
This says that if we relativize to some oracle <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/>, then <img alt="{\mathsf{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{P}}"/> and <img alt="{\mathsf{NP}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{NP}}"/> are not equal. This is a famous <a href="https://en.wikipedia.org/wiki/Oracle_machine">result</a> of Theodore Baker, John Gill, and Robert Solovay. It sheds light on the structure of algorithms, but does not rule out that <img alt="{\mathsf{P}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{P}}"/> could still equal <img alt="{\mathsf{NP}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{NP}}"/>.</p>
<p>
</p><p/><h3> The Collatz Problem </h3><p/>
<p><i>The <img alt="{3x+1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B3x%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{3x+1}"/> problem.</i></p>
<p>
Let <img alt="{Col(N)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BCol%28N%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Col(N)}"/> be <img alt="{N/2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N/2}"/> when <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> is even, and <img alt="{(3N+1)/2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%283N%2B1%29%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(3N+1)/2}"/> when <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> is odd. The problem is whether the orbit 	</p>
<p align="center"><img alt="\displaystyle  N \rightarrow Col(N) \rightarrow Col^{2}(N) \rightarrow \dots " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++N+%5Crightarrow+Col%28N%29+%5Crightarrow+Col%5E%7B2%7D%28N%29+%5Crightarrow+%5Cdots+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  N \rightarrow Col(N) \rightarrow Col^{2}(N) \rightarrow \dots "/></p>
<p>reaches <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> for all positive integers <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/>. The change is:</p>
<p>
<i>All positive integers</i> <img alt="{~\rightarrow~}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7E%5Crightarrow%7E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{~\rightarrow~}"/> <i>Almost all</i>.</p>
<p>
Actually, Terence Tao got a cool result this year only by making a second change. In his <a href="https://arxiv.org/pdf/1909.03562.pdf">paper</a> “Almost All Orbits Of The Collatz Map Attain Almost Bounded Values” he proves that <img alt="{Colmin (N) &lt; f(n) }" class="latex" src="https://s0.wp.com/latex.php?latex=%7BColmin+%28N%29+%3C+f%28n%29+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Colmin (N) &lt; f(n) }"/> for almost all <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/> and any <img alt="{f(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bf%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{f(n)}"/> that tends to infinity. Thus 	</p>
<p align="center"><img alt="\displaystyle  f(n) = \log \log \log \log N " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++f%28n%29+%3D+%5Clog+%5Clog+%5Clog+%5Clog+N+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  f(n) = \log \log \log \log N "/></p>
<p>is fine. Here <img alt="{Colmin(N)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BColmin%28N%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Colmin(N)}"/> is the smallest integer that is reached in the orbit of <img alt="{N}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{N}"/>. It is scary how hard this is to prove.</p>
<p>
</p><p/><h3> Explicit Hard Boolean Functions </h3><p/>
<p/><p>
Find explicit boolean functions with non-linear boolean complexity.</p>
<p>
<i>Boolean complexity with negation</i> <img alt="{~\rightarrow~}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7E%5Crightarrow%7E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{~\rightarrow~}"/> <i>Boolean complexity without negation.</i> </p>
<p>
These are the seminal results on monotone boolean complexity. They came up two years ago in an abortive attempt to prove <img alt="{\mathsf{P} \neq \mathsf{NP}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathsf{P} \neq \mathsf{NP}}"/>, which we covered <a href="https://rjlipton.wordpress.com/2017/08/17/on-the-edge-of-eclipses-and-pnp/">here</a>.</p>
<p>
</p><p/><h3> Quantum Supremacy </h3><p/>
<p/><p>
We come full circle back to quantum computing. This week there has been much hubbub over a prematurely-released <a href="https://www.docdroid.net/h9oBikj/quantum-supremacy-using-a-programmable-superconducting-processor.pdf">announcement</a> that Google researchers have built a quantum device able to complete probabilistic searches that are not feasible by any classical computer. If one goes back to <a href="https://arxiv.org/pdf/1203.5813.pdf">origins</a> of the <a href="https://quantumfrontiers.com/2012/07/22/supremacy-now/">term</a> “quantum supremacy” in 2012, before Google’s approach was conceived in 2015, one can say the change is:</p>
<p>
<i>specific physical simulation or complexity-based problems</i> <img alt="{~\rightarrow~}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7E%5Crightarrow%7E%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{~\rightarrow~}"/> <i>randomized problems</i>.</p>
<p>
Scott has a great <a href="https://www.scottaaronson.com/blog/?p=4317">post</a> with preliminary descriptions and evaluations, and we confess to adapting the following telegraphic evocation of how it works from Ryan O’Donnell and others in the comments section: Given a randomly-generated probability distribution <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> on <img alt="{\{0,1\}^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\{0,1\}^n}"/>, call <img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/> “<img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/>-heavy” if <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> gives it probability <img alt="{b/2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%2F2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b/2^n}"/> for some fixed <img alt="{b &gt; 1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb+%3E+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b &gt; 1}"/>. Even given <img alt="{D}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BD%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{D}"/> in white-box form via an <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>-qubit quantum circuit <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/> with randomly placed gates, it is evidently hard (compare <a href="https://arxiv.org/pdf/1803.04402.pdf">this</a>) for a classical computer to find heavy strings with frequency <img alt="{&gt; (1 - 2/e) + \delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%3E+%281+-+2%2Fe%29+%2B+%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{&gt; (1 - 2/e) + \delta}"/>, concretely for <img alt="{n = 53}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn+%3D+53%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n = 53}"/>. Google’s quantum machine, which is effectively programmed by the user presenting the random <img alt="{C}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BC%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{C}"/>, can however find heavy strings with frequency <img alt="{(1 - 2/e) + \Delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%281+-+2%2Fe%29+%2B+%5CDelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(1 - 2/e) + \Delta}"/> with a highly significant separation between <img alt="{\Delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CDelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Delta}"/> and <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\delta}"/>. We surmise that exhaustive tests over classical circuits trying the search at smaller values of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> have witnessed the smaller <img alt="{\delta}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\delta}"/> value at those <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/>.</p>
<p>
Again, this approach is different from demonstrating a specific computable function to separate classical and quantum and from the instances considered in the concluding <a href="https://rjlipton.wordpress.com/2012/10/03/quantum-supremacy-or-classical-control/">post</a>, with “supremacy” in its title, of our eight-part series in 2012 between Gil Kalai and, yes, Aram Harrow.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
Is our general notion of “ketted problems” useful? Ketted SAT and Factoring lack the natural continuity in (Q)LSP, but at least for SAT it can be grafted on by composing the formula with an error-correcting code. There is still the issue of being able to extract less classical information from the ketted approximations.</p>
<p>
We note a theory <a href="https://www.pims.math.ca/scientific-event/190928-ntd2paul">workshop</a> being held this Saturday at UW Seattle in honor of Paul Beame’s 60th birthday. We congratulate Paul on both.</p>
<p/><p><br/>
[added Aug. 2019 CACM link for Ewin Tang’s theorem; changed 1/e to (1 – 2/e) near end but not sure if that fix is intended by the source.]</p></font></font></div>
    </content>
    <updated>2019-09-26T18:36:47Z</updated>
    <published>2019-09-26T18:36:47Z</published>
    <category term="algorithms"/>
    <category term="All Posts"/>
    <category term="Ideas"/>
    <category term="News"/>
    <category term="Results"/>
    <category term="Algorithms"/>
    <category term="Aram Harrow"/>
    <category term="Avinatan Hassidim"/>
    <category term="Collatz conjecture"/>
    <category term="complexity"/>
    <category term="linear systems problem"/>
    <category term="quantum"/>
    <category term="quantum supremacy"/>
    <category term="Seth Lloyd"/>
    <category term="succinctness"/>
    <author>
      <name>RJLipton+KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2019-10-02T23:51:25Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-events.org/2019/09/26/33rd-conference-of-the-european-chapter-on-combinatorial-optimization/</id>
    <link href="https://cstheory-events.org/2019/09/26/33rd-conference-of-the-european-chapter-on-combinatorial-optimization/" rel="alternate" type="text/html"/>
    <title>33rd Conference of the European Chapter on Combinatorial Optimization</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">June 4-6, 2020 Saint Petersburg, Russia https://ecco2020.euro-online.org/ Submission deadline: February 1, 2020 The 33rd Conference of the European Chapter on Combinatorial Optimization (ECCO 2020) will be held in the beautiful city of St. Petersburg during the white nights season. It will be hosted by St. Petersburg Department of Steklov Mathematical Institute of the Russian Academy … <a class="more-link" href="https://cstheory-events.org/2019/09/26/33rd-conference-of-the-european-chapter-on-combinatorial-optimization/">Continue reading <span class="screen-reader-text">33rd Conference of the European Chapter on Combinatorial Optimization</span></a></div>
    </summary>
    <updated>2019-09-26T18:12:50Z</updated>
    <published>2019-09-26T18:12:50Z</published>
    <category term="conference"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-events.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-events.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-events.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-events.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-events.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Aggregator for CS theory workshops, schools, and so on</subtitle>
      <title>CS Theory Events</title>
      <updated>2019-10-02T23:52:36Z</updated>
    </source>
  </entry>

  <entry>
    <id>tag:blogger.com,1999:blog-3722233.post-5706639639416187826</id>
    <link href="https://blog.computationalcomplexity.org/feeds/5706639639416187826/comments/default" rel="replies" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/09/quantum-supremacy.html#comment-form" rel="replies" type="text/html"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/5706639639416187826" rel="edit" type="application/atom+xml"/>
    <link href="https://www.blogger.com/feeds/3722233/posts/default/5706639639416187826" rel="self" type="application/atom+xml"/>
    <link href="https://blog.computationalcomplexity.org/2019/09/quantum-supremacy.html" rel="alternate" type="text/html"/>
    <title>Quantum Supremacy</title>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">By now you've probably heard the rumors of Google achieving quantum supremacy. I don't have inside information outside of <a href="https://www.scottaaronson.com/blog/?p=4317">Scott's blog post</a> but it looks like the news should be <a href="https://blog.computationalcomplexity.org/2006/10/embargoed-science.html">embargoed</a> until the release of a Science or Nature paper. These things usually happen on a Tuesday and you'd think they would avoid the news of the Nobel Prize announcements October 7-14.<br/>
<br/>
Since for now the Google paper doesn't officially exist, we live in an era of Classical Dominance. Any problem that can be solved on a quantum computer today, can be solved just as fast or faster on a traditional computer. Quantum Supremacy, despite its lofty name, is just the negation of Classical Dominance, that there is some problem that a current quantum machine can solve that all our regular machines would require a considerably longer time to solve. This isn't a formal mathematical or scientific definition, so one can debate when or if we cross this threshold and I'm sure <a href="https://gilkalai.wordpress.com/2019/09/23/quantum-computers-amazing-progress-google-ibm-and-extraordinary-but-probably-false-supremacy-claims-google/">people will</a>.<br/>
<br/>
Quantum Supremacy might not even be a monotone concept. Future classical algorithms might solve the problem quickly, leading us back to Classical Dominance but leaving open the possibility of returning to Quantum Supremacy with another problem.<br/>
<br/>
Quantum Supremacy is a long way from Quantum Usefulness, where quantum machines can solve problems we care about faster that traditional machines. Quantum computing will truly reach its potential when we can run general quantum algorithms like Shor's algorithm to factor products of large primes. We'll probably never see Quantum Dominance where classical transistors go the way of vacuum tubes.<br/>
<br/>
Nevertheless, quantum supremacy is an important step and whether or not you think Google has gotten there, I'm sure it's an incredible achievement of science and engineering.</div>
    </content>
    <updated>2019-09-26T17:09:00Z</updated>
    <published>2019-09-26T17:09:00Z</published>
    <author>
      <name>Lance Fortnow</name>
      <email>noreply@blogger.com</email>
      <uri>http://www.blogger.com/profile/06752030912874378610</uri>
    </author>
    <source>
      <id>tag:blogger.com,1999:blog-3722233</id>
      <category term="typecast"/>
      <category term="focs metacomments"/>
      <author>
        <name>Lance Fortnow</name>
        <email>noreply@blogger.com</email>
        <uri>http://www.blogger.com/profile/06752030912874378610</uri>
      </author>
      <link href="https://blog.computationalcomplexity.org/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default" rel="self" type="application/atom+xml"/>
      <link href="https://blog.computationalcomplexity.org/" rel="alternate" type="text/html"/>
      <link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/>
      <link href="https://www.blogger.com/feeds/3722233/posts/default?start-index=26&amp;max-results=25" rel="next" type="application/atom+xml"/>
      <subtitle>Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch</subtitle>
      <title>Computational Complexity</title>
      <updated>2019-10-02T21:22:42Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://sarielhp.org/blog/?p=9392</id>
    <link href="https://sarielhp.org/blog/?p=9392" rel="alternate" type="text/html"/>
    <title>CS UIUC is hiring in quantum computing</title>
    <summary>In addition to the hiring in theory I mentioned earlier, we are also, independently, looking for people working in Quantum Computing. In particular, we might be able to hire several people doing QC this year. So, if you are in QC and interested, then you should apply!</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In addition to the hiring in theory I <a href="https://sarielhp.org/blog/?p=9390">mentioned</a> earlier, we are also, independently, looking for people working in Quantum Computing. In particular, we might be able to hire several people doing QC this year. So, if you are in QC and interested, then you should <a href="https://cs.illinois.edu/about-us/faculty-positions">apply</a>!</p></div>
    </content>
    <updated>2019-09-26T14:35:27Z</updated>
    <published>2019-09-26T14:35:27Z</published>
    <category term="Research"/>
    <author>
      <name>Sariel</name>
    </author>
    <source>
      <id>https://sarielhp.org/blog</id>
      <link href="https://sarielhp.org/blog/?feed=rss2" rel="self" type="application/atom+xml"/>
      <link href="https://sarielhp.org/blog" rel="alternate" type="text/html"/>
      <subtitle>Sariel's blog</subtitle>
      <title>Vanity of Vanities, all is Vanity</title>
      <updated>2019-10-02T23:20:24Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>http://sarielhp.org/blog/?p=9390</id>
    <link href="https://sarielhp.org/blog/?p=9390" rel="alternate" type="text/html"/>
    <title>UIUC CS is hiring in theory</title>
    <summary>UIUC CS is hiring faculty this academic year in all areas. All areas include theory. So please apply if you are doing CS theory. Job ad:https://cs.illinois.edu/about-us/faculty-positions.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><span class="css-901oao css-16my406 r-1qd0xha r-ad9z0x r-bcqeeo r-qvutc0">UIUC CS is hiring faculty this academic year in all areas. All areas include theory.  So please apply if you are doing CS theory.</span></p>



<p>Job ad:<a href="https://cs.illinois.edu/about-us/faculty-positions">https://cs.illinois.edu/about-us/faculty-positions</a>.</p></div>
    </content>
    <updated>2019-09-25T21:57:38Z</updated>
    <published>2019-09-25T21:57:38Z</published>
    <category term="Research"/>
    <author>
      <name>Sariel</name>
    </author>
    <source>
      <id>https://sarielhp.org/blog</id>
      <link href="https://sarielhp.org/blog/?feed=rss2" rel="self" type="application/atom+xml"/>
      <link href="https://sarielhp.org/blog" rel="alternate" type="text/html"/>
      <subtitle>Sariel's blog</subtitle>
      <title>Vanity of Vanities, all is Vanity</title>
      <updated>2019-10-02T23:20:24Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/09/25/associate-professor-professor-in-algorithms-and-complexity-at-norwegian-university-of-science-and-technology-apply-by-october-16-2019/</id>
    <link href="https://cstheory-jobs.org/2019/09/25/associate-professor-professor-in-algorithms-and-complexity-at-norwegian-university-of-science-and-technology-apply-by-october-16-2019/" rel="alternate" type="text/html"/>
    <title>Associate professor/Professor in Algorithms and Complexity at Norwegian University of Science and Technology (apply by October 16, 2019)</title>
    <summary>The Department of Computer Science is looking for a researcher in Algorithms and Complexity. The focus of this position is on the more theoretical side of computer science, with an emphasis on complexity and algorithm design, possibly leaning more in one of the two directions than the other. While the connection to theory is central, […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The Department of Computer Science is looking for a researcher in Algorithms and Complexity. The focus of this position is on the more theoretical side of computer science, with an emphasis on complexity and algorithm design, possibly leaning more in one of the two directions than the other. While the connection to theory is central, applied research is certainly welcome.</p>
<p>Website: <a href="https://www.jobbnorge.no/en/available-jobs/job/172226/associate-professor-professor-in-algorithms-and-complexity">https://www.jobbnorge.no/en/available-jobs/job/172226/associate-professor-professor-in-algorithms-and-complexity</a><br/>
Email: magnus.sjalander@ntnu.no</p></div>
    </content>
    <updated>2019-09-25T11:18:59Z</updated>
    <published>2019-09-25T11:18:59Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-10-02T23:51:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7557</id>
    <link href="https://windowsontheory.org/2019/09/23/is-quantum-supremacy-here/" rel="alternate" type="text/html"/>
    <title>Is quantum supremacy here?</title>
    <summary>See Scott Aaronson’s blog. It seems like researchers in John Martinis’s group at Google might have managed to demonstrate that a quantum computer can produce samples passing a certain statistical test for which we know no efficient classical algorithm to do so. Of course I can’t help but posting again the fake nytimes headline I […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>See <a href="https://www.scottaaronson.com/blog/?p=4317">Scott Aaronson’s blog</a>. It seems like researchers in John Martinis’s group at Google might have managed to demonstrate that a quantum computer can produce samples passing a certain statistical test for which we know no efficient classical algorithm to do so.</p>



<p>Of course I can’t help but posting again the <a href="https://windowsontheory.org/2017/06/11/two-years-ahead-of-schedule/">fake nytimes headline</a> I produced for my 2016 crypto course when I wanted to motivate the study of so called “quantum-resistant cryptography”:</p>



<figure class="wp-block-image size-large"><img alt="" class="wp-image-7558" src="https://windowsontheory.files.wordpress.com/2019/09/nytimes.jpg?w=1024"/></figure></div>
    </content>
    <updated>2019-09-24T03:23:34Z</updated>
    <published>2019-09-24T03:23:34Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2019-10-02T23:51:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2019/09/24/postdoc-at-national-institute-of-informatics-apply-by-december-1-2019/</id>
    <link href="https://cstheory-jobs.org/2019/09/24/postdoc-at-national-institute-of-informatics-apply-by-december-1-2019/" rel="alternate" type="text/html"/>
    <title>Postdoc at National Institute of Informatics (apply by December 1, 2019)</title>
    <summary>Postdoc positions are available to work on average sensitivity of algorithms in a theoretical or practical aspect or both, or related topics such as sublinear-time algorithms, approximate counting, statistical learning theory. Please contact Yuichi Yoshida directly with your CV. The start date is flexible. Website: http://research.nii.ac.jp/~yyoshida/ Email: yyoshida@nii.ac.jp</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Postdoc positions are available to work on average sensitivity of algorithms in a theoretical or practical aspect or both, or related topics such as sublinear-time algorithms, approximate counting, statistical learning theory. Please contact Yuichi Yoshida directly with your CV. The start date is flexible.</p>
<p>Website: <a href="http://research.nii.ac.jp/~yyoshida/">http://research.nii.ac.jp/~yyoshida/</a><br/>
Email: yyoshida@nii.ac.jp</p></div>
    </content>
    <updated>2019-09-24T03:10:22Z</updated>
    <published>2019-09-24T03:10:22Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2019-10-02T23:51:30Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2019/128</id>
    <link href="https://eccc.weizmann.ac.il/report/2019/128" rel="alternate" type="text/html"/>
    <title>TR19-128 |  Lower Bounds for (Non-monotone) Comparator Circuits | 

	Anna Gal, 

	Robert Robere</title>
    <summary>Comparator circuits are a natural circuit model for studying the concept of bounded fan-out computations, which intuitively corresponds to whether or not a computational model can make "copies" of intermediate computational steps. Comparator circuits are believed to be weaker than general Boolean circuits, but they can simulate Branching Programs and Boolean formulas. In this paper we prove the first superlinear lower bounds in the general (non-monotone) version of this model for an explicitly defined function. More precisely, we prove that the $n$-bit Element Distinctness function requires $\Omega( (n/ \log n)^{3/2})$ size comparator circuits.</summary>
    <updated>2019-09-24T02:59:13Z</updated>
    <published>2019-09-24T02:59:13Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2019-10-02T23:51:07Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7554</id>
    <link href="https://windowsontheory.org/2019/09/23/information-theoretic-cryptography-itc-conference-guest-post-by-benny-applebaum/" rel="alternate" type="text/html"/>
    <title>Information-Theoretic Cryptography (ITC) conference (guest post by Benny Applebaum)</title>
    <summary>[The following is a guest post by Benny Applebaum announcing a new conference on information theoretic cryptography – an area with both beautiful math and important applications. –Boaz] Deal friends,We are happy to announce the birth of a new conference on Information-Theoretic Cryptography (ITC). Information-theoretic cryptography studies security in the presence of computationally unbounded adversaries […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>[The following is a guest post by Benny Applebaum announcing a new conference on information theoretic cryptography – an area with both beautiful math and important applications. –Boaz] </em></p>



<p>Deal friends,<br/>We are happy to announce the birth of a new conference on Information-Theoretic Cryptography (ITC). Information-theoretic cryptography studies security in the presence of computationally unbounded adversaries and covers a wide array of topics at the intersection of cryptography, coding theory, information-theory and theory of computation. Notable examples include randomness extraction and privacy amplification, secret sharing, secure multiparty computation and proof systems, private-information retrieval and locally decodable codes, authentication codes and non-malleable codes, differential privacy, quantum information processing, and information-theoretic foundations of physical-layer security. See <a href="https://itcrypto.github.io/" rel="noreferrer noopener" target="_blank">https://itcrypto.github.io</a> for more information. </p>



<p>ITC replaces the International Conference on Information Theoretic Security (ICITS), which was dedicated to the same topic and ran 2005-2017. ITC can be seen as a reboot of ICITS with a new name, a new steering committee and a renewed excitement.  (beware: there is  a fake website for ICITS 2019 created by a known <a href="https://en.wikipedia.org/wiki/World_Academy_of_Science,_Engineering_and_Technology" rel="noreferrer noopener" target="_blank">fraudulent organization</a>)  </p>



<p>The conference will have two tracks: a conference track and  a “greatest hits” track. The conference track will operate like a traditional conference with the usual review process and published proceedings. The “greatest hits” track consists of invited talks (not included in the proceedings) that highlight the most exciting recent advances in the area. We solicit nominations for “greatest hits” talks from the community.</p>



<p>The first ITC conference will take place in Boston, MA on June 17-19, 2020 (just before STOC).  The submission deadline for ITC 2020 is Dec 16, 2019 and the call for papers (including a nomination procedure for the greatest hits track) is available here:  <a href="https://itcrypto.github.io/2020.html" rel="noreferrer noopener" target="_blank">https://itcrypto.github.io/2020.html</a></p>



<p>Please submit your best work to ITC 2020! We hope to see many of you there!</p>



<p>best regards,The Steering Committee:  Benny Applebaum (Chair), Ivan Damgård , Yevgeniy Dodis,  Yuval Ishai, Ueli Maurer,  Kobbi Nissim, Krzysztof Pietrzak, Manoj Prabhakaran, Adam Smith, Yael Tauman Kalai, Stefano Tessaro, Vinod Vaikuntanathan, Hoeteck Wee, Daniel Wichs, Mary Wootters,  Chaoping Xing, Moti Yung

</p></div>
    </content>
    <updated>2019-09-23T21:48:10Z</updated>
    <published>2019-09-23T21:48:10Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2019-10-02T23:51:50Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=4317</id>
    <link href="https://www.scottaaronson.com/blog/?p=4317" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=4317#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=4317" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Scott’s Supreme Quantum Supremacy FAQ!</title>
    <summary xml:lang="en-US">You’ve seen the stories—in the Financial Times, Technology Review, CNET, Facebook, Reddit, Twitter, or elsewhere—saying that a group at Google has now achieved quantum computational supremacy with a 53-qubit superconducting device. While these stories are easy to find, I’m not going to link to them here, for the simple reason that none of them were […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><p>You’ve seen the stories—in the <em>Financial Times</em>, <em>Technology Review</em>, <em>CNET</em>, Facebook, Reddit, Twitter, or elsewhere—saying that a group at Google has now achieved quantum computational supremacy with a 53-qubit superconducting device.  While these stories are easy to find, I’m not going to link to them here, for the simple reason that <em>none of them were supposed to exist yet</em>.</p>



<p>As the world now knows, Google is indeed preparing a big announcement about quantum supremacy, to coincide with the publication of its research paper in a high-profile journal (which journal?  you can probably narrow it down to two).  This will hopefully happen within a month.</p>



<p>Meanwhile, though, NASA, which has some contributors to the work, inadvertently posted an outdated version of the Google paper on a public website.  It was there only briefly, but long enough to make it to the <em>Financial Times</em>, my inbox, and millions of other places.  Fact-free pontificating about what it means has predictably proliferated.</p>



<p>The world, it seems, is going to be denied its clean “moon landing” moment, wherein the Extended Church-Turing Thesis gets experimentally obliterated within the space of a press conference.  This is going to be more like the Wright Brothers’ flight—about which rumors and half-truths leaked out in dribs and drabs between 1903 and 1908, the year Will and Orville finally agreed to do public demonstration flights.  (This time around, though, it thankfully won’t take <em>that</em> long to clear everything up!)</p>



<p>I’ve known about what was in the works for a couple months now; it was excruciating not being able to blog about it.  Though sworn to secrecy, I couldn’t resist dropping some hints here and there (did you catch any?)—for example, in my recent <a href="https://www.scottaaronson.com/blog/?p=4301">Bernays Lectures</a> in Zürich, a lecture series whose entire structure built up to the brink of this moment.</p>



<p>This post is not an official announcement or confirmation of anything.  Though the lightning may already be visible, the thunder belongs to the group at Google, at a time and place of its choosing.</p>



<p>Rather, because so much misinformation is swirling around, what I thought I’d do here, in my role as blogger and “public intellectual,” is offer <strong>Scott’s Supreme Quantum Supremacy FAQ</strong>.  You know, just in case you were randomly curious about the topic of quantum supremacy, or wanted to know what the implications would be if some search engine company based in Mountain View or wherever were <em>hypothetically</em> to claim to have achieved quantum supremacy.</p>



<p>Without further ado, then:</p>



<p><strong>Q1. What is quantum computational supremacy?</strong></p>



<p>Often abbreviated to just “quantum supremacy,” the term refers to the use of a quantum computer to solve <em>some</em> well-defined set of problems that would take orders of magnitude longer to solve with any currently known algorithms running on existing classical computers—and not for incidental reasons, but for reasons of asymptotic quantum complexity.  The emphasis here is on being as sure as possible that the problem <em>really was</em> solved quantumly and <em>really is</em> classically intractable, and ideally achieving the speedup <em>soon</em> (with the noisy, non-universal QCs of the present or very near future).  If the problem is also <em>useful</em> for something, then so much the better, but that’s not at all necessary.  The Wright Flyer and the Fermi pile weren’t useful in themselves.</p>



<p><strong>Q2. If Google has indeed achieved quantum supremacy, does that mean that now <a href="https://mobile.twitter.com/AndrewYang/status/1175200727385464832">“no code is uncrackable”</a>, as Democratic presidential candidate Andrew Yang recently tweeted?</strong></p>



<p>No, it doesn’t.  (But I still like Yang’s candidacy.)</p>



<p>There are two issues here.  First, the devices currently being built by Google, IBM, and others have 50-100 qubits and no error-correction.  Running Shor’s algorithm to break the RSA cryptosystem would require several thousand logical qubits.  With known error-correction methods, that could easily translate into <em>millions</em> of physical qubits, and those probably of a higher quality than any that exist today.  I don’t think anyone is close to that, and we have no idea how long it will take.</p>



<p>But the second issue is that, even in a hypothetical future with scalable, error-corrected QCs, on our current understanding they’ll only be able to crack <em>some</em> codes, not all of them.  By an unfortunate coincidence, the public-key codes that they can crack include <em>most</em> of what we currently use to secure the Internet: RSA, Diffie-Hellman, elliptic curve crypto, etc.  But symmetric-key crypto should only be minimally affected.  And there are even candidates for public-key cryptosystems (for example, based on lattices) that no one knows how to break quantumly after 20+ years of trying, and some efforts underway now to start migrating to those systems.  For more, see for example my <a href="https://www.scottaaronson.com/blog/?p=3848">letter to Rebecca Goldstein</a>.</p>



<p><strong>Q3. What calculation is Google planning to do, or has it already done, that’s believed to be classically hard?</strong></p>



<p>So, I can tell you, but I’ll feel slightly sheepish doing so.  The calculation is: a “challenger” generates a random quantum circuit C (i.e., a random sequence of 1-qubit and nearest-neighbor 2-qubit gates, of depth perhaps 20, acting on a 2D grid of n = 50 to 60 qubits).  The challenger then sends C to the quantum computer, and asks it apply C to the all-0 initial state, measure the result in the {0,1} basis, send back whatever n-bit string was observed, and repeat some thousands or millions of times.  Finally, using its knowledge of C, the classical challenger applies a statistical test to check whether the outputs are consistent with the QC having done this.</p>



<p>So, this is not a problem like factoring with a single right answer.  The circuit C gives rise to some probability distribution, call it D<sub>C</sub>, over n-bit strings, and the problem is to output samples from that distribution.  In fact, there will typically be 2<sup>n</sup> strings in the support of D<sub>C</sub>—so many that, if the QC is working as expected, the same output will never be observed twice.  A crucial point, though, is that the distribution D<sub>C</sub> is <em>not</em> uniform.  Some strings enjoy constructive interference of amplitudes and therefore have larger probabilities, while others suffer destructive interference and have smaller probabilities.  And even though we’ll only see a number of samples that’s tiny compared to 2<sup>n</sup>, we can <em>check</em> whether the samples preferentially cluster among the strings that are predicted to be likelier, and thereby build up our confidence that something classically intractable is being done.</p>



<p>So, tl;dr, the quantum computer is simply asked to apply a random (but known) sequence of quantum operations—not because we intrinsically care about the result, but because we’re trying to prove that it can beat a classical computer at <em>some</em> well-defined task.</p>



<p><strong>Q4. But if the quantum computer is just executing some random garbage circuit, whose only purpose is to be hard to simulate classically, then who cares?  Isn’t this a big overhyped nothingburger?</strong></p>



<p>No.  As I put it the other day, it’s not an everythingburger, but it’s certainly at least a somethingburger!</p>



<p>It’s like, have a little respect for the immensity of what we’re talking about here, and for the terrifying engineering that’s needed to make it reality.  Before quantum supremacy, by definition, the QC skeptics can all laugh to each other that, for all the billions of dollars spent over 20+ years, <em>still</em> no quantum computer has even once been used to solve any problem faster than your laptop could solve it, or at least not in any way that depended on its being a quantum computer.  In a post-quantum-supremacy world, that’s no longer the case.  A superposition involving 2<sup>50</sup> or 2<sup>60</sup> complex numbers has been computationally harnessed, using time and space resources that are minuscule compared to 2<sup>50</sup> or 2<sup>60</sup>.</p>



<p>I keep bringing up the Wright Flyer only because the chasm between what we’re talking about, and the dismissiveness I’m seeing in some corners of the Internet, is kind of breathtaking to me.  It’s like, if you believed that useful air travel was fundamentally impossible, then seeing a dinky wooden propeller plane keep itself aloft wouldn’t refute your belief … <em>but it sure as hell shouldn’t reassure you either</em>.</p>



<p>Was I right to <a href="https://blogs.scientificamerican.com/cross-check/scott-aaronson-answers-every-ridiculously-big-question-i-throw-at-him/">worry</a>, years ago, that the constant drumbeat of hype about much less significant QC milestones would wear out people’s patience, so that they’d no longer care when something newsworthy finally did happen?</p>



<p><strong>Q5. Years ago, you scolded the masses for being super-excited about D-Wave, and its claims to get huge quantum speedups for optimization problems via quantum annealing.  Today you scold the masses for <em>not</em> being super-excited about quantum supremacy.  Why can’t you stay consistent?</strong></p>



<p>Because my goal is not to move the “excitement level” in some uniformly preferred direction, it’s to be right!  With hindsight, would you say that I was mostly right about D-Wave, even when raining on that particular parade made me unpopular in some circles?  Well, I’m trying to be right about quantum supremacy too.</p>



<p><strong>Q6. If quantum supremacy calculations just involve sampling from probability distributions, how do you check that they were done correctly?</strong></p>



<p>Glad you asked!  This is the subject of a fair amount of theory that I and others developed over the last decade.  I already gave you the short version in my answer to Q3: you check by doing statistics on the samples that the QC returned, to verify that they’re preferentially clustered in the “peaks” of the chaotic probability distribution D<sub>C</sub>.  One convenient way of doing this, which Google calls the “linear cross-entropy test,” is simply to sum up Pr[C outputs s<sub>i</sub>] over all the samples s<sub>1</sub>,…,s<sub>k</sub> that the QC returned, and then to declare the test a “success” if and only if the sum exceeds some threshold—say, bk/2<sup>n</sup>, for some constant b strictly between 1 and 2.</p>



<p>Admittedly, in order to apply this test, you need to <em>calculate</em> the probabilities Pr[C outputs s<sub>i</sub>] on your classical computer—and the only known ways to calculate them require brute force and take ~2<sup>n</sup> time.  Is that a showstopper?  No, not if n is 50, and you’re Google and are able to handle numbers like 2<sup>50</sup> (although not 2<sup>1000</sup>, which exceeds a <a href="https://en.wikipedia.org/wiki/Googol">googol</a>, har har).  By running a huge cluster of classical cores for (say) a month, you can eventually verify the outputs that your QC produced in a few seconds—while also seeing that the QC was many orders of magnitude faster.  However, this does mean that sampling-based quantum supremacy experiments are almost <em>specifically</em> designed for ~50-qubit devices like the ones being built right now.  Even with 100 qubits, we wouldn’t know how to verify the results using all the classical computing power available on earth.</p>



<p>(Let me stress that this issue is specific to <em>sampling</em> experiments like the ones that are currently being done.  If Shor’s algorithm factored a 2000-digit number, it would be easy to check the result by simply multiplying the claimed factors and running a primality test on them.  Likewise, if a QC were used to simulate some complicated biomolecule, you could check its results by comparing them to experiment.)</p>



<p><strong>Q7. Wait.  If classical computers can only check the results of a quantum supremacy experiment, in a regime where the classical computers can still simulate the experiment (albeit extremely slowly), then how do you get to claim “quantum supremacy”?</strong></p>



<p>Come on.  With a 53-qubit chip, it’s perfectly feasible to see a speedup by a factor of many millions, in a regime where you can still directly verify the outputs, and also to see that the speedup is growing exponentially with the number of qubits, exactly as asymptotic analysis would predict.  This isn’t marginal.</p>



<p><strong>Q8. Is there a mathematical proof that no fast classical algorithm could possibly spoof the results of a sampling-based quantum supremacy experiment?</strong></p>



<p>Not at present.  But that’s not quantum supremacy researchers’ fault!  As long as theoretical computer scientists can’t even prove basic conjectures like P≠NP or P≠PSPACE, there’s no hope of ruling out a fast classical simulation unconditionally.  The best we can hope for are conditional hardness results.  And we have indeed managed to prove some such results—see for example the <a href="https://arxiv.org/abs/1011.3245">BosonSampling paper</a>, or the <a href="https://arxiv.org/abs/1803.04402">Bouland et al. paper</a> on average-case #P-hardness of calculating amplitudes in random circuits, or <a href="https://arxiv.org/abs/1612.05903">my paper with Lijie Chen</a> (“Complexity-Theoretic Foundations of Quantum Supremacy Experiments”).  The biggest theoretical open problem in this area, in my opinion, is to prove <em>better</em> conditional hardness results.</p>



<p><strong>Q9. Does sampling-based quantum supremacy have any applications in itself?</strong></p>



<p>When people were first thinking about this subject, it seemed pretty obvious that the answer was “no”!  (I know because I was one of the people.)  Recently, however, the situation has changed—for example, because of my <a href="https://www.scottaaronson.com/talks/certrand2.ppt">certified randomness protocol</a>, which shows how a sampling-based quantum supremacy experiment could almost immediately be repurposed to generate bits that can be <em>proven to be random</em> to a skeptical third party (under computational assumptions).  This, in turn, has possible applications to proof-of-stake cryptocurrencies and other cryptographic protocols.  I’m hopeful that more such applications will be discovered in the near future.</p>



<p><strong>Q10. If the quantum supremacy experiments are just generating random bits, isn’t that uninteresting?  Isn’t it trivial to convert qubits into random bits, just by measuring them?</strong></p>



<p>The key is that a quantum supremacy experiment doesn’t generate <em>uniform</em> random bits.  Instead, it samples from some complicated, correlated probability distribution over 50- or 60-bit strings.  In my certified randomness protocol, the deviations from uniformity play a central role in how the QC convinces a classical skeptic that it really <em>was</em> sampling the bits randomly, rather than in some secretly deterministic way (e.g., using a pseudorandom generator).</p>



<p><strong>Q11. Haven’t decades of quantum-mechanical experiments–for example, the ones that violated the Bell inequality–already demonstrated quantum supremacy?</strong></p>



<p>This is purely a confusion over words.  Those other experiments demonstrated other forms of “quantum supremacy”: for example, in the case of Bell inequality violations, what you could call “quantum correlational supremacy.”  They did not demonstrate quantum <em>computational</em> supremacy, meaning doing something that’s infeasible to simulate using a classical computer (where the classical simulation has no restrictions of spatial locality or anything else of that kind).  Today, when people use the phrase “quantum supremacy,” it’s generally short for quantum computational supremacy.  </p>



<p><strong>Q12. Even so, there are countless examples of materials and chemical reactions that are hard to classically simulate, as well as special-purpose quantum simulators (like those of Lukin’s group at Harvard).  Why don’t these already count as quantum computational supremacy?</strong></p>



<p>Under some people’s definitions of “quantum computational supremacy,” they do!  The key difference with Google’s effort is that they have a <em>fully programmable </em>device—one that you can program with an arbitrary sequence of nearest-neighbor 2-qubit gates, just by sending the appropriate signals from your classical computer.</p>



<p>In other words, it’s no longer open to the QC skeptics to sneer that, sure, there are quantum systems that are hard to simulate classically, but that’s just because <em>nature</em> is hard to simulate, and you don’t get to arbitrarily redefine whatever random chemical you find in the wild to be a “computer for simulating itself.”  Under any sane definition, the superconducting devices that Google, IBM, and others are now building are indeed “computers.”</p>



<p><strong>Q13. Did you (Scott Aaronson) invent the concept of quantum supremacy?</strong></p>



<p>No.  I did play some role in developing it, which led to Sabine Hossenfelder among others <a href="http://backreaction.blogspot.com/2019/06/quantum-supremacy-what-is-it-and-what.html">generously overcrediting me</a> for the whole idea.  The term “quantum supremacy” was coined by John Preskill in 2012, though in some sense the core concept goes back to the beginnings of quantum computing itself in the early 1980s.  In 1993, <a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.655.1186&amp;rep=rep1&amp;type=pdf">Bernstein and Vazirani</a> explicitly pointed out the severe apparent tension between quantum mechanics and the Extended Church-Turing Thesis of classical computer science.  Then, in 1994, the use of Shor’s algorithm to factor a huge number became the quantum supremacy experiment <em>par excellence</em>—albeit, one that’s still (in 2019) much too hard to perform.</p>



<p>The key idea of instead demonstrating quantum supremacy using a <em>sampling problem</em> was, as far as I know, first suggested by Barbara Terhal and David DiVincenzo, in a <a href="https://arxiv.org/abs/quant-ph/0205133">farsighted paper</a> from 2002.  The “modern” push for sampling-based supremacy experiments started around 2011, when Alex Arkhipov and I published our <a href="https://arxiv.org/abs/1011.3245">paper on BosonSampling</a>, and (independently of us) Bremner, Jozsa, and Shepherd published their <a href="https://arxiv.org/abs/1005.1407">paper on the commuting Hamiltonians model</a>.  These papers showed, not only that “simple,” non-universal quantum systems can solve apparently-hard sampling problems, but also that an efficient classical algorithm for the same sampling problems would imply a collapse of the <a href="https://en.wikipedia.org/wiki/Polynomial_hierarchy">polynomial hierarchy</a>.  Arkhipov and I also made a start toward arguing that even the <em>approximate</em> versions of quantum sampling problems can be classically hard.</p>



<p>As far as I know, the idea of “Random Circuit Sampling”—that is, generating your hard sampling problem by just picking a random sequence of 2-qubit gates in (say) a superconducting architecture—originated in an email thread that I started in December 2015, which also included John Martinis, Hartmut Neven, Sergio Boixo, Ashley Montanaro, Michael Bremner, Richard Jozsa, Aram Harrow, Greg Kuperberg, and others.  The thread was entitled “Hard sampling problems with 40 qubits,” and my email began “Sorry for the spam.”  I then discussed some advantages and disadvantages of three options for demonstrating sampling-based quantum supremacy: (1) random circuits, (2) commuting Hamiltonians, and (3) BosonSampling.  After Greg Kuperberg chimed in to support option (1), a consensus quickly formed among the participants that (1) was indeed the best option from an engineering standpoint—and that, if the theoretical analysis wasn’t yet satisfactory for (1), then that was something we could remedy.</p>



<p>[<strong>Update:</strong> Sergio Boixo tells me that, internally, the Google group had been considering the idea of random circuit sampling since February 2015, even before my email thread.  This doesn’t surprise me: while there are lots of details that had to be worked out, the idea itself is an extremely natural one.]</p>



<p>After that, the Google group did a huge amount of analysis of random circuit sampling, both theoretical and numerical, while <a href="https://arxiv.org/abs/1612.05903">Lijie Chen and I</a> and <a href="https://arxiv.org/abs/1803.04402">Bouland et al.</a> supplied different forms of complexity-theoretic evidence for the problem’s classical hardness.</p>



<p><strong>Q14. If quantum supremacy was achieved, what would it mean for the QC skeptics?</strong></p>



<p>I wouldn’t want to be them right now!  They could retreat to the position that <em>of course</em> quantum supremacy is possible (who ever claimed that it wasn’t? surely not them!), that the real issue has always been quantum error-correction.  And indeed, some of them have consistently maintained that position all along.  But others, including my good friend Gil Kalai, are <strong>on record, right here on this blog</strong> predicting that even quantum supremacy can never be achieved for fundamental reasons.  I won’t let them wiggle out of it now.</p>



<p>[<strong>Update:</strong> As many of you will have seen, Gil Kalai has <a href="https://gilkalai.wordpress.com/2019/09/23/quantum-computers-amazing-progress-google-ibm-and-extraordinary-but-probably-false-supremacy-claims-google/">taken the position</a> that the Google result won’t stand and will need to be retracted.  He asked for more data: specifically, a complete histogram of the output probabilities for a smaller number of qubits.  This turns out to be already available, in a <em><a href="https://arxiv.org/abs/1709.06678">Science</a></em><a href="https://arxiv.org/abs/1709.06678"> paper from 2018</a>.]</p>



<p><strong>Q15. What’s next?</strong></p>



<p><em>If</em> it’s achieved quantum supremacy, then I think the Google group already has the requisite hardware to demonstrate my <a href="https://www.scottaaronson.com/talks/certrand2.ppt">protocol for generating certified random bits</a>.  And that’s indeed one of the very next things they’re planning to do.</p>



<p>[<strong>Addendum:</strong> Also, of course, the evidence for quantum supremacy itself can be made stronger and various loopholes closed—for example, by improving the fidelity so that fewer samples need to be taken (something that Umesh Vazirani tells me he’d like to see), by having the circuit C be generated and the outputs verified by a skeptic external to Google. and simply by letting more time pass, so outsiders can have a crack at simulating the results classically.  My personal guess is that the basic picture is going to stand, but just like with the first experiments that claimed to violate the Bell inequality, there’s still plenty of room to force the skeptics into a tinier corner.]</p>



<p>Beyond that, one obvious next milestone would be to use a programmable QC, with (say) 50-100 qubits, to do some <em>useful quantum simulation</em> (say, of a condensed-matter system) much faster than any known classical method could do it.  A second obvious milestone would be to demonstrate the use of quantum error-correction, to keep an encoded qubit alive for longer than the underlying physical qubits remain alive.  There’s no doubt that Google, IBM, and the other players will now be racing toward both of these milestones.</p>



<p>[<strong>Update:</strong> Steve Girvin reminds me that the Yale group <a href="https://arxiv.org/abs/1602.04768">has already achieved</a> quantum error-correction “beyond the break-even point,” albeit in a bosonic system rather than superconducting qubits.  So perhaps a better way to phrase the next milestone would be: achieve quantum computational supremacy <em>and</em> useful quantum error-correction in the same system.]</p>



<p><strong>Another update:</strong> I thought <a href="https://spectrum.ieee.org/tech-talk/computing/hardware/how-googles-quantum-supremacy-plays-into-quantum-computings-long-game">this </a><em><a href="https://spectrum.ieee.org/tech-talk/computing/hardware/how-googles-quantum-supremacy-plays-into-quantum-computings-long-game">IEEE Spectrum</a></em><a href="https://spectrum.ieee.org/tech-talk/computing/hardware/how-googles-quantum-supremacy-plays-into-quantum-computings-long-game"> piece</a> gave a really nice overview of the issues.</p></div>
    </content>
    <updated>2019-09-23T20:28:20Z</updated>
    <published>2019-09-23T20:28:20Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Announcements"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Bell's Theorem? But a Flesh Wound!"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Complexity"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Quantum"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog/?feed=atom</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2019-09-29T15:01:11Z</updated>
    </source>
  </entry>
</feed>
