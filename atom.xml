<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-04-20T02:21:45Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08375</id>
    <link href="http://arxiv.org/abs/2004.08375" rel="alternate" type="text/html"/>
    <title>Low-stretch spanning trees of graphs with bounded width</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Borradaile:Glencora.html">Glencora Borradaile</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chambers:Erin_Wolf.html">Erin Wolf Chambers</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eppstein:David.html">David Eppstein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Maxwell:William.html">William Maxwell</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nayyeri:Amir.html">Amir Nayyeri</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08375">PDF</a><br/><b>Abstract: </b>We study the problem of low-stretch spanning trees in graphs of bounded
width: bandwidth, cutwidth, and treewidth. We show that any simple connected
graph $G$ with a linear arrangement of bandwidth $b$ can be embedded into a
distribution $\mathcal T$ of spanning trees such that the expected stretch of
each edge of $G$ is $O(b^2)$. Our proof implies a linear time algorithm for
sampling from $\mathcal T$. Therefore, we have a linear time algorithm that
finds a spanning tree of $G$ with average stretch $O(b^2)$ with high
probability. We also describe a deterministic linear-time algorithm for
computing a spanning tree of $G$ with average stretch $O(b^3)$. For graphs of
cutwidth $c$, we construct a spanning tree with stretch $O(c^2)$ in linear
time. Finally, when $G$ has treewidth $k$ we provide a dynamic programming
algorithm computing a minimum stretch spanning tree of $G$ that runs in
polynomial time with respect to the number of vertices of $G$.
</p></div>
    </summary>
    <updated>2020-04-20T01:51:47Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08374</id>
    <link href="http://arxiv.org/abs/2004.08374" rel="alternate" type="text/html"/>
    <title>On Regularity of Max-CSPs and Min-CSPs</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stankovic:Aleksa.html">Aleksa Stankovic</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08374">PDF</a><br/><b>Abstract: </b>We study approximability of regular constraint satisfaction problems, i.e.,
CSPs where each variable in an instance has the same number of occurrences. In
particular, we show that for any CSP $\Lambda$, existence of an $\alpha$
approximation algorithm for unweighted regular Max-CSP $\Lambda$ implies
existence of an $\alpha-o(1)$ approximation algorithm for weighted Max-CSP
$\Lambda$ in which regularity of the instances is not imposed. We also give an
analogous result for Min-CSPs, and therefore show that up to arbitrarily small
error it is sufficient to conduct the study of approximability of CSPs only on
regular unweighted instances.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08359</id>
    <link href="http://arxiv.org/abs/2004.08359" rel="alternate" type="text/html"/>
    <title>On homotopy continuation based singularity distance computations for 3-RPR manipulators</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Aditya Kapilavai, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nawratil:Georg.html">Georg Nawratil</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08359">PDF</a><br/><b>Abstract: </b>It is known that parallel manipulators suffer from singular configurations.
Evaluating the distance between a given configuration to the closest singular
one is of interest for industrial applications (e.g.\ singularity-free path
planning). For parallel manipulators of Stewart-Gough type, geometric
meaningful distance measures are known, which are used for the computation of
the singularity distance as the global minimizer of an optimization problem. In
the case of hexapods and linear pentapods the critical points of the
corresponding polynomial Lagrange function cannot be found by the Grobner basis
method due to the degree and number of unknowns. But this polynomial system of
equations can be solved by software tools of numerical algebraic geometry
relying on homotopy continuation. To gain experiences for the treatment of the
mentioned spatial manipulators, this paper attempts to find minimal
multi-homogeneous Bezout numbers for the homotopy continuation based
singularity distance computation with respect to various algebraic motion
representations of planar Euclidean/equiform kinematics. The homogenous and
non-homogenous representations under study are compared and discussed based on
the 3-RPR manipulator.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08350</id>
    <link href="http://arxiv.org/abs/2004.08350" rel="alternate" type="text/html"/>
    <title>Faster Approximate Pattern Matching: A Unified Approach</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Charalampopoulos:Panagiotis.html">Panagiotis Charalampopoulos</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kociumaka:Tomasz.html">Tomasz Kociumaka</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wellnitz:Philip.html">Philip Wellnitz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08350">PDF</a><br/><b>Abstract: </b>Approximate pattern matching is a natural and well-studied problem on
strings: Given a text $T$, a pattern $P$, and a threshold $k$, find (the
starting positions of) all substrings of $T$ that are at distance at most $k$
from $P$. We consider the two most fundamental string metrics: the Hamming
distance and the edit distance. Under the Hamming distance, we search for
substrings of $T$ that have at most $k$ mismatches with $P$, while under the
edit distance, we search for substrings of $T$ that can be transformed to $P$
with at most $k$ edits.
</p>
<p>Exact occurrences of $P$ in $T$ have a very simple structure: If we assume
for simplicity that $|T| \le 3|P|/2$ and trim $T$ so that $P$ occurs both as a
prefix and as a suffix of $T$, then both $P$ and $T$ are periodic with a common
period. However, an analogous characterization for the structure of occurrences
with up to $k$ mismatches was proved only recently by Bringmann et al.
[SODA'19]: Either there are $O(k^2)$ $k$-mismatch occurrences of $P$ in $T$, or
both $P$ and $T$ are at Hamming distance $O(k)$ from strings with a common
period $O(m/k)$. We tighten this characterization by showing that there are
$O(k)$ $k$-mismatch occurrences in the case when the pattern is not
(approximately) periodic, and we lift it to the edit distance setting, where we
tightly bound the number of $k$-edit occurrences by $O(k^2)$ in the
non-periodic case. Our proofs are constructive and let us obtain a unified
framework for approximate pattern matching for both considered distances. We
showcase the generality of our framework with results for the fully-compressed
setting (where $T$ and $P$ are given as a straight-line program) and for the
dynamic setting (where we extend a data structure of Gawrychowski et al.
[SODA'18]).
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08338</id>
    <link href="http://arxiv.org/abs/2004.08338" rel="alternate" type="text/html"/>
    <title>The two player shortest path network interdiction problem</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Simon Busan, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sch=auml=fer:Luca_E=.html">Luca E. Schäfer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Ruzika:Stefan.html">Stefan Ruzika</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08338">PDF</a><br/><b>Abstract: </b>In this article, we study a biobjective extension of the shortest path
network interdiction problem. Each arc in the network is associated with two
integer length values and two players compute their respective shortest paths
from source to sink independently from each other while an interdictor tries to
lengthen both shortest paths by removing arcs. We show that this problem is
intractable and that deciding whether a feasible interdiction strategy is
efficient, is NP- complete. We provide a solution procedure to solve the
problem on two-terminal series-parallel graphs in pseudopolynomial time. In
addition, we show that a variant of the problem with bottleneck objectives can
be solved in polynomial time on general directed graphs.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08324</id>
    <link href="http://arxiv.org/abs/2004.08324" rel="alternate" type="text/html"/>
    <title>Hitting forbidden induced subgraphs on bounded treewidth graphs</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sau:Ignasi.html">Ignasi Sau</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Souza:U=eacute=verton_S=.html">Uéverton S. Souza</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08324">PDF</a><br/><b>Abstract: </b>For a fixed graph $H$, the $H$-IS-Deletion problem asks, given a graph $G$,
for the minimum size of a set $S \subseteq V(G)$ such that $G\setminus S$ does
not contain $H$ as an induced subgraph. Motivated by previous work about
hitting (topological) minors and subgraphs on bounded treewidth graphs, we are
interested in determining, for a fixed graph $H$, the smallest function
$f_H(t)$ such that $H$-IS-Deletion can be solved in time $f_H(t) \cdot
n^{O(1)}$ assuming the Exponential Time Hypothesis (ETH), where $t$ and $n$
denote the treewidth and the number of vertices of the input graph,
respectively.
</p>
<p>We show that $f_H(t) = 2^{O(t^{h-2})}$ for every graph $H$ on $h \geq 3$
vertices, and that $f_H(t) = 2^{O(t)}$ if $H$ is a clique or an independent
set. We present a number of lower bounds by generalizing a reduction of Cygan
et al. [MFCS 2014] for the subgraph version. In particular, we show that when
$H$ deviates slightly from a clique, the function $f_H(t)$ suffers a sharp
jump: if $H$ is obtained from a clique of size $h$ by removing one edge, then
$f_H(t) = 2^{\Theta(t^{h-2})}$. We also show that $f_H(t) = 2^{\Omega(t^{h})}$
when $H=K_{h,h}$, and this reduction answers an open question of Mi. Pilipczuk
[MFCS 2011] about the function $f_{C_4}(t)$ for the subgraph version.
</p>
<p>Motivated by Cygan et al. [MFCS 2014], we also consider the colorful variant
of the problem, where each vertex of $G$ is colored with some color from $V(H)$
and we require to hit only induced copies of $H$ with matching colors. In this
case, we determine, under the ETH, the function $f_H(t)$ for every connected
graph $H$ on $h$ vertices: if $h\leq 2$ the problem can be solved in polynomial
time; if $h\geq 3$, $f_H(t) = 2^{\Theta(t)}$ if $H$ is a clique, and $f_H(t) =
2^{\Theta(t^{h-2})}$ otherwise.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08255</id>
    <link href="http://arxiv.org/abs/2004.08255" rel="alternate" type="text/html"/>
    <title>A Survey of Approximate Quantile Computation on Large-scale Data (Technical Report)</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Zhiwei.html">Zhiwei Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Aoqian.html">Aoqian Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08255">PDF</a><br/><b>Abstract: </b>As data volume grows extensively, data profiling helps to extract metadata of
large-scale data. However, one kind of metadata, order statistics, is difficult
to be computed because they are not mergeable or incremental. Thus, the
limitation of time and memory space does not support their computation on
large-scale data. In this paper, we focus on an order statistic, quantiles, and
present a comprehensive analysis of studies on approximate quantile
computation. Both deterministic algorithms and randomized algorithms that
compute approximate quantiles over streaming models or distributed models are
covered. Then, multiple techniques for improving the efficiency and performance
of approximate quantile algorithms in various scenarios, such as skewed data
and high-speed data streams, are presented. Finally, we conclude with coverage
of existing packages in different languages and with a brief discussion of the
future direction in this area.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08238</id>
    <link href="http://arxiv.org/abs/2004.08238" rel="alternate" type="text/html"/>
    <title>Novel Binary-Addition Tree Algorithm (BAT) for Binary-State Network Reliability Problem</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yeh:Wei=Chang.html">Wei-Chang Yeh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08238">PDF</a><br/><b>Abstract: </b>Network structures and models have been widely adopted, e.g., for Internet of
Things, wireless sensor networks, smart grids, transportation networks,
communication networks, social networks, and computer grid systems. Network
reliability is an effective and popular technique to estimate the probability
that the network is still functioning. Networks composed of binary-state (e.g.,
working or failed) components (arcs and/or nodes) are called binary-state
networks. The binary-state network is the fundamental type of network; thus,
there is always a need for a more efficient algorithm to calculate the network
reliability. Thus, a novel binary-addition tree (BAT) algorithm that employs
binary addition for finding all the possible state vectors and the path-based
layered-search algorithm for filtering out all the connected vectors is
proposed for calculating the binary-state network reliability. According to the
time complexity and numerical examples, the efficiency of the proposed BAT is
higher than those of traditional algorithms for solving the binary-state
network reliability problem.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08160</id>
    <link href="http://arxiv.org/abs/2004.08160" rel="alternate" type="text/html"/>
    <title>Hilbert geometry of the Siegel disk: The Siegel-Klein disk model</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nielsen:Frank.html">Frank Nielsen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08160">PDF</a><br/><b>Abstract: </b>We introduce and study the Hilbert geometry induced by the Siegel disk, an
open bounded convex set of complex matrices. This Hilbert geometry naturally
yields a generalization of the Klein disk model of hyperbolic geometry, which
we term the Siegel-Klein model to differentiate it with the usual Siegel upper
plane and Siegel disk domains. In the Siegel-Klein disk, geodesics are by
construction always straight, allowing one to build efficient geometric
algorithms and data-structures from computational geometry. For example, we
show how to approximate the Smallest Enclosing Ball (SEB) of a set of complex
matrices in the Siegel domains: We compare two implementations of a
generalization of the iterative algorithm of [Badoiu and Clarkson, 2003] in the
Siegel-Poincar\'e disk and in the Siegel-Klein disk. We demonstrate that
geometric computing in the Siegel-Klein disk allows one (i) to bypass the
time-costly recentering operations to the origin (Siegel translations) required
at each iteration of the SEB algorithm in the Siegel-Poincar\'e disk model, and
(ii) to approximate numerically fast the Siegel distance with guaranteed lower
and upper bounds.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08039</id>
    <link href="http://arxiv.org/abs/2004.08039" rel="alternate" type="text/html"/>
    <title>Contention Resolution Without Collision Detection</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bender:Michael_A=.html">Michael A. Bender</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kopelowitz:Tsvi.html">Tsvi Kopelowitz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kuszmaul:William.html">William Kuszmaul</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pettie:Seth.html">Seth Pettie</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08039">PDF</a><br/><b>Abstract: </b>This paper focuses on the contention resolution problem on a shared
communication channel that does not support collision detection. A shared
communication channel is a multiple access channel, which consists of a
sequence of synchronized time slots. Players on the channel may attempt to
broadcast a packet (message) in any time slot. A player's broadcast succeeds if
no other player broadcasts during that slot. If two or more players broadcast
in the same time slot, then the broadcasts collide and both broadcasts fail.
The lack of collision detection means that a player monitoring the channel
cannot differentiate between the case of two or more players broadcasting in
the same slot (a collision) and zero players broadcasting. In the
contention-resolution problem, players arrive on the channel over time, and
each player has one packet to transmit. The goal is to coordinate the players
so that each player is able to successfully transmit its packet within
reasonable time. However, the players can only communicate via the shared
channel by choosing to either broadcast or not. A contention-resolution
protocol is measured in terms of its throughput (channel utilization). Previous
work on contention resolution that achieved constant throughput assumed that
either players could detect collisions, or the players' arrival pattern is
generated by a memoryless (non-adversarial) process.
</p>
<p>The foundational question answered by this paper is whether collision
detection is a luxury or necessity when the objective is to achieve constant
throughput. We show that even without collision detection, one can solve
contention resolution, achieving constant throughput, with high probability.
</p></div>
    </summary>
    <updated>2020-04-20T01:46:18Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.08037</id>
    <link href="http://arxiv.org/abs/2004.08037" rel="alternate" type="text/html"/>
    <title>Automating Cutting Planes is NP-Hard}</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/G=ouml==ouml=s:Mika.html">Mika Göös</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Koroth:Sajin.html">Sajin Koroth</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mertz:Ian.html">Ian Mertz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pitassi:Toniann.html">Toniann Pitassi</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.08037">PDF</a><br/><b>Abstract: </b>We show that Cutting Planes (CP) proofs are hard to find: Given an
unsatisfiable formula $F$,
</p>
<p>1) It is NP-hard to find a CP refutation of $F$ in time polynomial in the
length of the shortest such refutation; and
</p>
<p>2)unless Gap-Hitting-Set admits a nontrivial algorithm, one cannot find a
tree-like CP refutation of $F$ in time polynomial in the length of the shortest
such refutation.
</p>
<p>The first result extends the recent breakthrough of Atserias and M\"uller
(FOCS 2019) that established an analogous result for Resolution. Our proofs
rely on two new lifting theorems: (1) Dag-like lifting for gadgets with many
output bits. (2) Tree-like lifting that simulates an $r$-round protocol with
gadgets of query complexity $O(\log r)$ independent of input length.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07996</id>
    <link href="http://arxiv.org/abs/2004.07996" rel="alternate" type="text/html"/>
    <title>Compatible Paths on Labelled Point Sets</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Arseneva:Elena.html">Elena Arseneva</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bahoo:Yeganeh.html">Yeganeh Bahoo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Biniaz:Ahmad.html">Ahmad Biniaz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cano:Pilar.html">Pilar Cano</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chanchary:Farah.html">Farah Chanchary</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/i/Iacono:John.html">John Iacono</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jain:Kshitij.html">Kshitij Jain</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lubiw:Anna.html">Anna Lubiw</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mondal:Debajyoti.html">Debajyoti Mondal</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sheikhan:Khadijeh.html">Khadijeh Sheikhan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/T=oacute=th:Csaba_D=.html">Csaba D. Tóth</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07996">PDF</a><br/><b>Abstract: </b>Let $P$ and $Q$ be finite point sets of the same cardinality in
$\mathbb{R}^2$, each labelled from $1$ to $n$. Two noncrossing geometric graphs
$G_P$ and $G_Q$ spanning $P$ and $Q$, respectively, are called compatible if
for every face $f$ in $G_P$, there exists a corresponding face in $G_Q$ with
the same clockwise ordering of the vertices on its boundary as in $f$. In
particular, $G_P$ and $G_Q$ must be straight-line embeddings of the same
connected $n$-vertex graph.
</p>
<p>Deciding whether two labelled point sets admit compatible geometric paths is
known to be NP-complete. We give polynomial-time algorithms to find compatible
paths or report that none exist in three scenarios: $O(n)$ time for points in
convex position; $O(n^2)$ time for two simple polygons, where the paths are
restricted to remain inside the closed polygons; and $O(n^2 \log n)$ time for
points in general position if the paths are restricted to be monotone.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07986</id>
    <link href="http://arxiv.org/abs/2004.07986" rel="alternate" type="text/html"/>
    <title>Average Case Column Subset Selection for Entrywise $\ell_1$-Norm Loss</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Song:Zhao.html">Zhao Song</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Woodruff:David_P=.html">David P. Woodruff</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhong:Peilin.html">Peilin Zhong</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07986">PDF</a><br/><b>Abstract: </b>We study the column subset selection problem with respect to the entrywise
$\ell_1$-norm loss. It is known that in the worst case, to obtain a good
rank-$k$ approximation to a matrix, one needs an arbitrarily large
$n^{\Omega(1)}$ number of columns to obtain a $(1+\epsilon)$-approximation to
the best entrywise $\ell_1$-norm low rank approximation of an $n \times n$
matrix. Nevertheless, we show that under certain minimal and realistic
distributional settings, it is possible to obtain a
$(1+\epsilon)$-approximation with a nearly linear running time and
poly$(k/\epsilon)+O(k\log n)$ columns. Namely, we show that if the input matrix
$A$ has the form $A = B + E$, where $B$ is an arbitrary rank-$k$ matrix, and
$E$ is a matrix with i.i.d. entries drawn from any distribution $\mu$ for which
the $(1+\gamma)$-th moment exists, for an arbitrarily small constant $\gamma &gt;
0$, then it is possible to obtain a $(1+\epsilon)$-approximate column subset
selection to the entrywise $\ell_1$-norm in nearly linear time. Conversely we
show that if the first moment does not exist, then it is not possible to obtain
a $(1+\epsilon)$-approximate subset selection algorithm even if one chooses any
$n^{o(1)}$ columns. This is the first algorithm of any kind for achieving a
$(1+\epsilon)$-approximation for entrywise $\ell_1$-norm loss low rank
approximation.
</p></div>
    </summary>
    <updated>2020-04-20T01:39:05Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07946</id>
    <link href="http://arxiv.org/abs/2004.07946" rel="alternate" type="text/html"/>
    <title>Beyond Tree Embeddings -- a Deterministic Framework for Network Design with Deadlines or Delay</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Azar:Yossi.html">Yossi Azar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Touitou:Noam.html">Noam Touitou</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07946">PDF</a><br/><b>Abstract: </b>We consider network design problems with deadline or delay. All previous
results for these models are based on randomized embedding of the graph into a
tree (HST) and then solving the problem on this tree. We show that this is not
necessary. In particular, we design a deterministic framework for these
problems which is not based on embedding. This enables us to provide
deterministic $\text{poly-log}(n)$-competitive algorithms for Steiner tree,
generalized Steiner tree, node weighted Steiner tree, (non-uniform) facility
location and directed Steiner tree with deadlines or with delay (where $n$ is
the number of nodes). Our deterministic algorithms also give improved
guarantees over some previous randomized results. In addition, we show a lower
bound of $\text{poly-log}(n)$ for some of these problems, which implies that
our framework is optimal up to the power of the poly-log. Our algorithms and
techniques differ significantly from those in all previous considerations of
these problems.
</p></div>
    </summary>
    <updated>2020-04-20T01:36:51Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07886</id>
    <link href="http://arxiv.org/abs/2004.07886" rel="alternate" type="text/html"/>
    <title>Maximizing Determinants under Matroid Constraints</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Madan:Vivek.html">Vivek Madan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nikolov:Aleksandar.html">Aleksandar Nikolov</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Singh:Mohit.html">Mohit Singh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tantipongpipat:Uthaipon.html">Uthaipon Tantipongpipat</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07886">PDF</a><br/><b>Abstract: </b>Given vectors $v_1,\dots,v_n\in\mathbb{R}^d$ and a matroid $M=([n],I)$, we
study the problem of finding a basis $S$ of $M$ such that $\det(\sum_{i \in
S}v_i v_i^\top)$ is maximized. This problem appears in a diverse set of areas
such as experimental design, fair allocation of goods, network design, and
machine learning. The current best results include an $e^{2k}$-estimation for
any matroid of rank $k$ and a $(1+\epsilon)^d$-approximation for a uniform
matroid of rank $k\ge d+\frac d\epsilon$, where the rank $k\ge d$ denotes the
desired size of the optimal set. Our main result is a new approximation
algorithm with an approximation guarantee that depends only on the dimension
$d$ of the vectors and not on the size $k$ of the output set. In particular, we
show an $(O(d))^{d}$-estimation and an $(O(d))^{d^3}$-approximation for any
matroid, giving a significant improvement over prior work when $k\gg d$.
</p>
<p>Our result relies on the existence of an optimal solution to a convex
programming relaxation for the problem which has sparse support; in particular,
no more than $O(d^2)$ variables of the solution have fractional values. The
sparsity results rely on the interplay between the first-order optimality
conditions for the convex program and matroid theory. We believe that the
techniques introduced to show sparsity of optimal solutions to convex programs
will be of independent interest. We also give a randomized algorithm that
rounds a sparse fractional solution to a feasible integral solution to the
original problem. To show the approximation guarantee, we utilize recent works
on strongly log-concave polynomials and show new relationships between
different convex programs studied for the problem. Finally, we use the
estimation algorithm and sparsity results to give an efficient deterministic
approximation algorithm with an approximation guarantee that depends solely on
the dimension $d$.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07869</id>
    <link href="http://arxiv.org/abs/2004.07869" rel="alternate" type="text/html"/>
    <title>Entanglement is Necessary for Optimal Quantum Property Testing</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Sebastien Bubeck, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Sitan.html">Sitan Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Li:Jerry.html">Jerry Li</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07869">PDF</a><br/><b>Abstract: </b>There has been a surge of progress in recent years in developing algorithms
for testing and learning quantum states that achieve optimal copy complexity.
Unfortunately, they require the use of entangled measurements across many
copies of the underlying state and thus remain outside the realm of what is
currently experimentally feasible. A natural question is whether one can match
the copy complexity of such algorithms using only independent---but possibly
adaptively chosen---measurements on individual copies.
</p>
<p>We answer this in the negative for arguably the most basic quantum testing
problem: deciding whether a given $d$-dimensional quantum state is equal to or
$\epsilon$-far in trace distance from the maximally mixed state. While it is
known how to achieve optimal $O(d/\epsilon^2)$ copy complexity using entangled
measurements, we show that with independent measurements,
$\Omega(d^{4/3}/\epsilon^2)$ is necessary, even if the measurements are chosen
adaptively. This resolves a question of Wright. To obtain this lower bound, we
develop several new techniques, including a chain-rule style proof of
Paninski's lower bound for classical uniformity testing, which may be of
independent interest.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07839</id>
    <link href="http://arxiv.org/abs/2004.07839" rel="alternate" type="text/html"/>
    <title>Private Learning of Halfspaces: Simplifying the Construction and Reducing the Sample Complexity</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kaplan:Haim.html">Haim Kaplan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mansour:Yishay.html">Yishay Mansour</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stemmer:Uri.html">Uri Stemmer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tsfadia:Eliad.html">Eliad Tsfadia</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07839">PDF</a><br/><b>Abstract: </b>We present a differentially private learner for halfspaces over a finite grid
$G$ in $\mathbb{R}^d$ with sample complexity $\approx d^{2.5}\cdot
2^{\log^*|G|}$, which improves the state-of-the-art result of [Beimel et al.,
COLT 2019] by a $d^2$ factor. The building block for our learner is a new
differentially private algorithm for approximately solving the linear
feasibility problem: Given a feasible collection of $m$ linear constraints of
the form $Ax\geq b$, the task is to privately identify a solution $x$ that
satisfies most of the constraints. Our algorithm is iterative, where each
iteration determines the next coordinate of the constructed solution $x$.
</p></div>
    </summary>
    <updated>2020-04-20T01:23:33Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07566</id>
    <link href="http://arxiv.org/abs/2004.07566" rel="alternate" type="text/html"/>
    <title>Approximating Independent Set and Dominating Set on VPG graphs</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Galby:Esther.html">Esther Galby</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Munaro:Andrea.html">Andrea Munaro</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07566">PDF</a><br/><b>Abstract: </b>We consider Independent Set and Dominating Set restricted to VPG graphs (or,
equivalently, string graphs). We show that they both remain $\mathsf{NP}$-hard
on $B_0$-VPG graphs admitting a representation such that each grid-edge belongs
to at most one path and each horizontal path has length at most two. On the
other hand, combining the well-known Baker's shifting technique with bounded
mim-width arguments, we provide simple PTASes on VPG graphs admitting a
representation such that each grid-edge belongs to at most $t$ paths and the
length of the horizontal part of each path is at most $c$, for some $c \geq 1$.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07558</id>
    <link href="http://arxiv.org/abs/2004.07558" rel="alternate" type="text/html"/>
    <title>Framework for $\exists \mathbb{R}$-Completeness of Two-Dimensional Packing Problems</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Abrahamsen:Mikkel.html">Mikkel Abrahamsen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Miltzow:Tillmann.html">Tillmann Miltzow</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Seiferth:Nadja.html">Nadja Seiferth</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07558">PDF</a><br/><b>Abstract: </b>We show that many natural two-dimensional packing problems are
algorithmically equivalent to finding real roots of multivariate polynomials. A
two-dimensional packing problem is defined by the type of pieces, containers,
and motions that are allowed. The aim is to decide if a given set of pieces can
be placed inside a given container. The pieces must be placed so that they are
pairwise interior-disjoint, and only motions of the allowed type can be used to
move them there. We establish a framework which enables us to show that for
many combinations of allowed pieces, containers, and motions, the resulting
problem is $\exists\mathbb R$-complete. This means that the problem is
equivalent (under polynomial time reductions) to deciding whether a given
system of polynomial equations and inequalities with integer coefficients has a
real solution. We consider packing problems where only translations are allowed
as the motions, and problems where arbitrary rigid motions are allowed, i.e.,
both translations and rotations. When rotations are allowed, we show that the
following combinations of allowed pieces and containers are $\exists\mathbb
R$-complete:
</p>
<p>$\bullet$ simple polygons, each of which has at most 8 corners, into a
square,
</p>
<p>$\bullet$ convex objects bounded by line segments and hyperbolic curves into
a square,
</p>
<p>$\bullet$ convex polygons into a container bounded by line segments and
hyperbolic curves.
</p>
<p>Restricted to translations, we show that the following combinations are
$\exists\mathbb R$-complete:
</p>
<p>$\bullet$ objects bounded by segments and hyperbolic curves into a square,
</p>
<p>$\bullet$ convex polygons into a container bounded by segments and hyperbolic
curves.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07354</id>
    <link href="http://arxiv.org/abs/2004.07354" rel="alternate" type="text/html"/>
    <title>Efficient Algorithms for Battleship</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Crombez:Lo=iuml=c.html">Loïc Crombez</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fonseca:Guilherme_D=_da.html">Guilherme D. da Fonseca</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gerard:Yan.html">Yan Gerard</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07354">PDF</a><br/><b>Abstract: </b>We consider an algorithmic problem inspired by the Battleship game. In the
variant of the problem that we investigate, there is a unique ship of shape $S
\subset Z^2$ which has been translated in the lattice $Z^2$. We assume that a
player has already hit the ship with a first shot and the goal is to sink the
ship using as few shots as possible, that is, by minimizing the number of
missed shots. While the player knows the shape $S$, which position of $S$ has
been hit is not known.
</p>
<p>Given a shape $S$ of $n$ lattice points, the minimum number of misses that
can be achieved in the worst case by any algorithm is called the Battleship
complexity of the shape $S$ and denoted $c(S)$. We prove three bounds on
$c(S)$, each considering a different class of shapes. First, we have $c(S) \leq
n-1$ for arbitrary shapes and the bound is tight for parallelogram-free shapes.
Second, we provide an algorithm that shows that $c(S) = O(\log n)$ if $S$ is an
HV-convex polyomino. Third, we provide an algorithm that shows that $c(S) =
O(\log \log n)$ if $S$ is a digital convex set. This last result is obtained
through a novel discrete version of the Blaschke-Lebesgue inequality relating
the area and the width of any convex body.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07346</id>
    <link href="http://arxiv.org/abs/2004.07346" rel="alternate" type="text/html"/>
    <title>Online Multiserver Convex Chasing and Optimization</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bubeck:S=eacute=bastien.html">Sébastien Bubeck</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rabani:Yuval.html">Yuval Rabani</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sellke:Mark.html">Mark Sellke</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07346">PDF</a><br/><b>Abstract: </b>We introduce the problem of $k$-chasing of convex functions, a simultaneous
generalization of both the famous k-server problem in $R^d$, and of the problem
of chasing convex bodies and functions. Aside from fundamental interest in this
general form, it has natural applications to online $k$-clustering problems
with objectives such as $k$-median or $k$-means. We show that this problem
exhibits a rich landscape of behavior. In general, if both $k &gt; 1$ and $d &gt; 1$
there does not exist any online algorithm with bounded competitiveness. By
contrast, we exhibit a class of nicely behaved functions (which include in
particular the above-mentioned clustering problems), for which we show that
competitive online algorithms exist, and moreover with dimension-free
competitive ratio. We also introduce a parallel question of top-$k$ action
regret minimization in the realm of online convex optimization. There, too, a
much rougher landscape emerges for $k &gt; 1$. While it is possible to achieve
vanishing regret, unlike the top-one action case the rate of vanishing does not
speed up for strongly convex functions. Moreover, vanishing regret necessitates
both intractable computations and randomness. Finally we leave open whether
almost dimension-free regret is achievable for $k &gt; 1$ and general convex
losses. As evidence that it might be possible, we prove dimension-free regret
for linear losses via an information-theoretic argument.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07319</id>
    <link href="http://arxiv.org/abs/2004.07319" rel="alternate" type="text/html"/>
    <title>The Impact of Heterogeneity and Geometry on the Proof Complexity of Random Satisfiability</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bl=auml=sius:Thomas.html">Thomas Bläsius</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Friedrich:Tobias.html">Tobias Friedrich</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/G=ouml=bel:Andreas.html">Andreas Göbel</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Levy:Jordi.html">Jordi Levy</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rothenberger:Ralf.html">Ralf Rothenberger</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07319">PDF</a><br/><b>Abstract: </b>Satisfiability is considered the canonical NP-complete problem and is used as
a starting point for hardness reductions in theory, while in practice heuristic
SAT solving algorithms can solve large-scale industrial SAT instances very
efficiently. This disparity between theory and practice is believed to be a
result of inherent properties of industrial SAT instances that make them
tractable. Two characteristic properties seem to be prevalent in the majority
of real-world SAT instances, heterogeneous degree distribution and locality. To
understand the impact of these two properties on SAT, we study the proof
complexity of random k-SAT models that allow to control heterogeneity and
locality. Our findings show that heterogeneity alone does not make SAT easy as
heterogeneous random k-SAT instances have superpolynomial resolution size. This
implies intractability of these instances for modern SAT-solvers. On the other
hand, modeling locality with an underlying geometry leads to small
unsatisfiable subformulas, which can be found within polynomial time.
</p>
<p>A key ingredient for the result on geometric random k-SAT can be found in the
complexity of higher-order Voronoi diagrams. As an additional technical
contribution, we show a linear upper bound on the number of non-empty Voronoi
regions, that holds for points with random positions in a very general setting.
In particular, it covers arbitrary p-norms, higher dimensions, and weights
affecting the area of influence of each point multiplicatively. This is in
stark contrast to quadratic lower bounds for the worst case.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07286</id>
    <link href="http://arxiv.org/abs/2004.07286" rel="alternate" type="text/html"/>
    <title>Locality Sensitive Hashing for Set-Queries, Motivated by Group Recommendations</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kaplan:Haim.html">Haim Kaplan</a>, Jay Tenenbaum <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07286">PDF</a><br/><b>Abstract: </b>Locality Sensitive Hashing (LSH) is an effective method to index a set of
points such that we can efficiently find the nearest neighbors of a query
point. We extend this method to our novel Set-query LSH (SLSH), such that it
can find the nearest neighbors of a set of points, given as a query.
</p>
<p>Let $ s(x,y) $ be the similarity between two points $ x $ and $ y $. We
define a similarity between a set $ Q$ and a point $ x $ by aggregating the
similarities $ s(p,x) $ for all $ p\in Q $. For example, we can take $ s(p,x) $
to be the angular similarity between $ p $ and $ x $ (i.e., $1-{\angle
(x,p)}/{\pi}$), and aggregate by arithmetic or geometric averaging, or taking
the lowest similarity.
</p>
<p>We develop locality sensitive hash families and data structures for a large
set of such arithmetic and geometric averaging similarities, and analyze their
collision probabilities. We also establish an analogous framework and hash
families for distance functions. Specifically, we give a structure for the
euclidean distance aggregated by either averaging or taking the maximum.
</p>
<p>We leverage SLSH to solve a geometric extension of the approximate near
neighbors problem. In this version, we consider a metric for which the unit
ball is an ellipsoid and its orientation is specified with the query.
</p>
<p>An important application that motivates our work is group recommendation
systems. Such a system embeds movies and users in the same feature space, and
the task of recommending a movie for a group to watch together, translates to a
set-query $ Q $ using an appropriate similarity.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07036</id>
    <link href="http://arxiv.org/abs/2004.07036" rel="alternate" type="text/html"/>
    <title>Connecting the Dots: Discovering the "Shape" of Data</title>
    <feedworld_mtime>1587340800</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Feng:Michelle.html">Michelle Feng</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Hickok:Abigail.html">Abigail Hickok</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kureh:Yacoub_H=.html">Yacoub H. Kureh</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Porter:Mason_A=.html">Mason A. Porter</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Topaz:Chad_M=.html">Chad M. Topaz</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07036">PDF</a><br/><b>Abstract: </b>Scientists use a mathematical subject called topology to study the shapes of
objects. An important part of topology is counting the numbers of pieces and
holes in objects, and people use this information to group objects into
different types. For example, a doughnut has the same number of holes and the
same number of pieces as a teacup with one handle, but it is different from a
ball. In studies that resemble activities like "connect the dots", scientists
use ideas from topology to study the shape of data. Data can take many possible
forms: a picture made of dots, a large collection of numbers from a scientific
experiment, or something else. The approach in these studies is called
\emph{topological data analysis}, and it has been used to study the branching
structures of veins in leaves, how people vote in elections, flight patterns in
models of bird flocking, and more. Scientists can take data on the way veins
branch on leaves and use topological data analysis to divide the leaves into
different groups and discover patterns that may otherwise be hard to find.
</p></div>
    </summary>
    <updated>2020-04-20T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-04-20T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://www.scottaaronson.com/blog/?p=4762</id>
    <link href="https://www.scottaaronson.com/blog/?p=4762" rel="alternate" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?p=4762#comments" rel="replies" type="text/html"/>
    <link href="https://www.scottaaronson.com/blog/?feed=atom&amp;p=4762" rel="replies" type="application/atom+xml"/>
    <title xml:lang="en-US">Lockdown day 39</title>
    <summary xml:lang="en-US">This is really getting depressing. One of the only things that makes it bearable—even though in some sense it shouldn’t—is that most of humanity is in this together. For once, there’s no question of “why me?” Having watched the eighth and final episode of Devs, the thought occurred to me: if I’d had the opportunity […]</summary>
    <content type="xhtml" xml:lang="en-US"><div xmlns="http://www.w3.org/1999/xhtml"><ol><li>This is <em>really</em> getting depressing.  One of the only things that makes it bearable—even though in some sense it shouldn’t—is that most of humanity is in this together.  For once, there’s no question of “why me?”</li><li>Having watched the eighth and final episode of <em>Devs</em>, the thought occurred to me: if I’d had the opportunity to restart the world from 8 months ago, even inside a simulation, I’d seize the chance and never look back.</li><li>I think I finally figured out how to explain the issue with <em>Devs</em> to my literary sophisticate readers.  Namely: <em>Devs</em> consists, precisely, of the <strong>cultural appropriation </strong>of quantum computing.  Now, I never felt like cultural appropriation was the world’s worst problem—not even <em>before</em> a pandemic started overflowing the morgues—so I wouldn’t say I was <em>offended</em> by Alex Garland appropriating the images and buzzwords of my quantum computing tribe for a basically unrelated purpose, but it is what it is.  Again: <em>Devs</em> is the show for you, if you want a haunting, slow-paced, well-produced meditation about free will and determinism and predicting the future and parallel worlds and “what if the whole universe is a simulation?,” and the various ideas I would’ve had about such topics around the age of 11.  It’s just not a show about quantum computing.  I hope that makes it clear.</li><li>I read with interest <a href="https://project-evidence.github.io/">this anonymous but PGP-signed article</a>, laying out the case that it’s <em>plausible</em> that covid accidentally leaked from either the Wuhan Institute of Virology or the Wuhan CDC, rather than originating at the Huanan seafood market.  Or, as an intermediate hypothesis, that an infected animal from one of those labs ended up at the seafood market.  (Note that this is completely different from the hypothesis that covid was purposefully engineered—the authors of the article find that totally implausible, and I agree with them.)  Notably, the Wuhan labs are known to have experimented with bat coronaviruses very much like covid, and are known to have performed “gain-of-function” experiments on them, and were probably the central labs in China for such experiments.  And viruses are known to have leaked from other labs in China on other occasions, and the nature → seafood market route has unresolved issues, like where exactly the crossover from bats to pangolins (or some other intermediate species) is supposed to have happened, such that people would only start getting infected at the seafood market and not at its faraway suppliers, and … well, anyway, read the article and form your own judgment!</li><li>I find it interesting that three months ago, I would’ve hesitated even to share such a link, because my internal critic would’ve screamed “this looks too much like tinfoil-hat stuff—are you ready for all the people you respect sneering at you?”  But the me of three months ago is not the me of today.  I make no apologies for adapting my thoughts to the freak branch of the multiverse where I actually find myself.</li></ol>



<p/></div>
    </content>
    <updated>2020-04-19T22:51:16Z</updated>
    <published>2020-04-19T22:51:16Z</published>
    <category scheme="https://www.scottaaronson.com/blog" term="Procrastination"/>
    <category scheme="https://www.scottaaronson.com/blog" term="Quantum"/>
    <author>
      <name>Scott</name>
      <uri>http://www.scottaaronson.com</uri>
    </author>
    <source>
      <id>https://www.scottaaronson.com/blog/?feed=atom</id>
      <link href="https://www.scottaaronson.com/blog" rel="alternate" type="text/html"/>
      <link href="https://www.scottaaronson.com/blog/?feed=atom" rel="self" type="application/atom+xml"/>
      <subtitle xml:lang="en-US">The Blog of Scott Aaronson</subtitle>
      <title xml:lang="en-US">Shtetl-Optimized</title>
      <updated>2020-04-19T23:29:04Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/04/19/stretch-average-stretch</id>
    <link href="https://11011110.github.io/blog/2020/04/19/stretch-average-stretch.html" rel="alternate" type="text/html"/>
    <title>Stretch, average stretch, and expected stretch of spanning trees</title>
    <summary>The graph below is a series-parallel graph. It can be put together from four smaller series-parallel graphs, each constructed recursively in the same way, by performing a series composition of two pairs and then a parallel composition of the two results.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The graph below is a <a href="https://en.wikipedia.org/wiki/Series-parallel_graph">series-parallel graph</a>. It can be put together from four smaller series-parallel graphs, each constructed recursively in the same way, by performing a series composition of two pairs and then a parallel composition of the two results.</p>

<p style="text-align: center;"><img alt="Series-parallel graph for which all spanning trees have high stretch" src="https://11011110.github.io/blog/assets/2020/binserpar.svg"/></p>

<p>This family of graphs (although not the radial layout I’m using for it) comes from a paper “Cuts, trees and -embeddings of graphs”, by Anupam Gupta, Ilan Newman, Yuri Rabinovich, and Alistair Sinclair, <em>Combinatorica</em> 2004, <a href="https://doi.org/10.1007/s00493-004-0015-x">doi:10.1007/s00493-004-0015-x</a> (see Figure 3, p. 261). They used it to show a lower bound on the average stretch of any spanning tree for these graphs.</p>

<p>Here, given a graph , any edge  of , and any subgraph  of , the stretch of  with respect to  is how much farther you have to go in  to find a path connecting the endpoints of , relative to the unit distance between these endpoints in . For instance, in a cycle graph , every spanning tree is formed by deleting one edge from the cycle. The deleted edge has stretch  (you have to go the long way around to connect its endpoints), but all other edges have stretch , so the average stretch is . More strongly, if you choose the edge to delete randomly, the resulting distribution over spanning trees of  gives every edge expected stretch .</p>

<p>But for the series-parallel graphs of Gupta, Newman, Rabinovich, and Sinclair, such low stretch is not possible. If there are  vertices, then there are  edges. Each edge has stretch at least one.
There are  four-cycles, each of which has at least one missing edge,
with stretch at least three; added to the one unit of stretch that we’ve already counted, the extra stretch from these missing edges is at least .
Removing one edge from each four-cycle leaves  eight-cycles, each of which has at least one more missing edge. The edge that is removed in this way, and the other missing edge from the same four-cycle, have stretch at least seven, adding another ten units per eight-cycle, or  overall, to the total stretch. And so on; at each level of recursion the number of cycles goes down by a factor of four, but the number of edges that need to be cut to break each cycle doubles, as does their length. Therefore, the contribution per level of the recursive construction ends up being linear, and the total stretch is . Thus, as Gupta et al. show, the average stretch for their graphs is .</p>

<p>This result is the background to my newest preprint, “Low-stretch spanning trees of graphs with bounded width” (with Cora Borradaile, Erin Chambers, Will Maxwell, and Amir Nayyeri, <a href="https://arxiv.org/abs/2004.08375">arXiv:2004.08375</a>, to appear at SWAT). From the result of Gupta, we know that having bounded treewidth is not enough to ensure bounded average stretch, or bounded expected stretch. What is? We show that bounded bandwidth is enough to find a distribution over spanning trees with bounded expected stretch, and that bounded cutwidth is enough to find a single spanning tree with bounded average stretch.</p>

<p>This leaves open the question for pathwidth. It was known from another previous work, “Pathwidth, trees, and random embeddings” (James Lee and Tasos Sidiropoulos, <em>Combinatorica</em> 2013, <a href="https://doi.org/10.1007/s00493-013-2685-8">doi:10.1007/s00493-013-2685-8</a>) that graphs of bounded pathwidth can be mapped to a random distribution over trees with bounded expected stretch per edge, but the trees of this distribution are not spanning trees. Our new paper includes a conjecture that bounded-pathwidth graphs have distributions over spanning trees with constant average stretch, which if true would generalize our results for both bandwidth and cutwidth.</p>

<p>(<a href="https://mathstodon.xyz/@11011110/104028326751044483">Discuss on Mastodon</a>)</p></div>
    </content>
    <updated>2020-04-19T18:10:00Z</updated>
    <published>2020-04-19T18:10:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-04-20T01:32:31Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://tcsplus.wordpress.com/?p=415</id>
    <link href="https://tcsplus.wordpress.com/2020/04/19/tcs-talk-wednesday-april-22-huacheng-yu-princeton/" rel="alternate" type="text/html"/>
    <title>TCS+ talk: Wednesday, April 22 — Huacheng Yu, Princeton</title>
    <summary>The next TCS+ talk will take place this coming Wednesday, April 22nd at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). Huacheng Yu from Princeton will speak about a “Nearly Optimal Static Las Vegas Succinct Dictionary” (abstract below). You can reserve a spot as an individual or a group […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The next TCS+ talk will take place this coming Wednesday, April 22nd at 1:00 PM Eastern Time (10:00 AM Pacific Time, 19:00 Central European Time, 17:00 UTC). <strong>Huacheng Yu</strong> from Princeton will speak about a “<em>Nearly Optimal Static Las Vegas Succinct Dictionary</em>” (abstract below).</p>
<p>You can reserve a spot as an individual or a group to join us live by signing up on <a href="https://sites.google.com/site/plustcs/livetalk">the online form</a>. Due to security concerns, <strong>registration is required</strong> to attend the interactive talk. (The link to the YouTube livestream will also be posted <a>on our website</a> on the day of the talk, so people who did not sign up will still be able to watch the talk live.) As usual, for more information about the TCS+ online seminar series and the upcoming talks, or to <a href="https://sites.google.com/site/plustcs/suggest">suggest</a> a possible topic or speaker, please see <a href="https://sites.google.com/site/plustcs/">the website</a>.</p>
<blockquote><p>Abstract: Given a set <img alt="S" class="latex" src="https://s0.wp.com/latex.php?latex=S&amp;bg=fff&amp;fg=444444&amp;s=0" title="S"/> of <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=fff&amp;fg=444444&amp;s=0" title="n"/> (distinct) keys from key space <img alt="[U]" class="latex" src="https://s0.wp.com/latex.php?latex=%5BU%5D&amp;bg=fff&amp;fg=444444&amp;s=0" title="[U]"/>, each associated with a value from <img alt="\Sigma" class="latex" src="https://s0.wp.com/latex.php?latex=%5CSigma&amp;bg=fff&amp;fg=444444&amp;s=0" title="\Sigma"/>, the <em>static dictionary problem</em> asks to preprocess these (key, value) pairs into a data structure, supporting value-retrieval queries: for any given <img alt="x \in [U]" class="latex" src="https://s0.wp.com/latex.php?latex=x+%5Cin+%5BU%5D&amp;bg=fff&amp;fg=444444&amp;s=0" title="x \in [U]"/>, valRet<img alt="(x)" class="latex" src="https://s0.wp.com/latex.php?latex=%28x%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="(x)"/> must return the value associated with <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=fff&amp;fg=444444&amp;s=0" title="x"/> if <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=fff&amp;fg=444444&amp;s=0" title="x"/> is in <img alt="S" class="latex" src="https://s0.wp.com/latex.php?latex=S&amp;bg=fff&amp;fg=444444&amp;s=0" title="S"/>, or return “N/A” if <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=fff&amp;fg=444444&amp;s=0" title="x"/> is not in <img alt="S" class="latex" src="https://s0.wp.com/latex.php?latex=S&amp;bg=fff&amp;fg=444444&amp;s=0" title="S"/>. The special case where <img alt="|\Sigma|=1" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5CSigma%7C%3D1&amp;bg=fff&amp;fg=444444&amp;s=0" title="|\Sigma|=1"/> is called the membership problem. The “textbook” solution is to use a hash table, which occupies linear space and answers each query in constant time. On the other hand, the minimum possible space to encode all (key, value) pairs is only <img alt="\textrm{OPT} := \lg \binom{U}{n} + n \lg |\Sigma|" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextrm%7BOPT%7D+%3A%3D+%5Clg+%5Cbinom%7BU%7D%7Bn%7D+%2B+n+%5Clg+%7C%5CSigma%7C&amp;bg=fff&amp;fg=444444&amp;s=0" title="\textrm{OPT} := \lg \binom{U}{n} + n \lg |\Sigma|"/> bits, which could be much less.</p>
<p>In this talk, we will talk about a randomized dictionary data structure using <img alt="\textrm{OPT}+\textrm{poly}\lg n+O(\lg\lg\cdots\lg U)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextrm%7BOPT%7D%2B%5Ctextrm%7Bpoly%7D%5Clg+n%2BO%28%5Clg%5Clg%5Ccdots%5Clg+U%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="\textrm{OPT}+\textrm{poly}\lg n+O(\lg\lg\cdots\lg U)"/> bits of space and expected constant query time, assuming the query algorithm have access to an external data-independent lookup table of size <img alt="n^{0.001}" class="latex" src="https://s0.wp.com/latex.php?latex=n%5E%7B0.001%7D&amp;bg=fff&amp;fg=444444&amp;s=0" title="n^{0.001}"/>. Previously, even for membership queries and when <img alt="U\leq n^{O(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=U%5Cleq+n%5E%7BO%281%29%7D&amp;bg=fff&amp;fg=444444&amp;s=0" title="U\leq n^{O(1)}"/>, the best known data structure with constant query time requires <img alt="\textrm{OPT}+n/\textrm{poly} \lg n" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextrm%7BOPT%7D%2Bn%2F%5Ctextrm%7Bpoly%7D+%5Clg+n&amp;bg=fff&amp;fg=444444&amp;s=0" title="\textrm{OPT}+n/\textrm{poly} \lg n"/> bits of space (due to Pagh [Pagh’01] and Pătraşcu [Pat’08]). It has <img alt="O(\lg n)" class="latex" src="https://s0.wp.com/latex.php?latex=O%28%5Clg+n%29&amp;bg=fff&amp;fg=444444&amp;s=0" title="O(\lg n)"/> query time when the space is at most <img alt="\textrm{OPT}+n^{0.999}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctextrm%7BOPT%7D%2Bn%5E%7B0.999%7D&amp;bg=fff&amp;fg=444444&amp;s=0" title="\textrm{OPT}+n^{0.999}"/>.</p></blockquote></div>
    </content>
    <updated>2020-04-19T18:01:40Z</updated>
    <published>2020-04-19T18:01:40Z</published>
    <category term="Announcements"/>
    <author>
      <name>plustcs</name>
    </author>
    <source>
      <id>https://tcsplus.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://tcsplus.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://tcsplus.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://tcsplus.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://tcsplus.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A carbon-free dissemination of ideas across the globe.</subtitle>
      <title>TCS+</title>
      <updated>2020-04-20T02:21:26Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://gilkalai.wordpress.com/?p=19738</id>
    <link href="https://gilkalai.wordpress.com/2020/04/19/to-cheer-you-up-in-difficult-times-ii-mysterious-matching-news-by-gal-beniamini-naom-nisan-vijay-vazirani-and-thorben-trobst/" rel="alternate" type="text/html"/>
    <title>To cheer you up in difficult times II: Mysterious matching news by Gal Beniamini, Naom Nisan, Vijay Vazirani and Thorben Tröbst!</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Matching is one of the richest gold mines for ideas and results in mathematics, computer science and other areas.  Today I want to briefly tell you about a curious, surprising, mysterious, and cheerful recent result by Gal Beniamini and Noam … <a href="https://gilkalai.wordpress.com/2020/04/19/to-cheer-you-up-in-difficult-times-ii-mysterious-matching-news-by-gal-beniamini-naom-nisan-vijay-vazirani-and-thorben-trobst/">Continue reading <span class="meta-nav">→</span></a></div>
    </summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Matching is one of the richest gold mines for ideas and results in mathematics, computer science and other areas.  Today I want to briefly tell you about a curious, surprising, mysterious, and <a href="https://arxiv.org/abs/2001.07642">cheerful recent result</a> by Gal Beniamini and Noam Nisan and a subsequent work of Vijay Vazirani. It is a result that will cheer up combinatorialists on both sides of the isle: graph theorists and researchers in extremal and probabilistic combinatorics as well as algebraic and enumerative combinatorialists.  (And it is related to query complexity, Eulerian lattices, Birkhoff’s polytope, a theorem of Lou Billera and Aravamuthan Sarangarajan, evasiveness, analysis of Boolean functions, and various other things.) At the end of the post I will remind you of a central problem in matching theory: to extend Lovasz’ randomized algorithm for matching to general graphs. (Perhaps methods from algebraic combinatorics can help.)</p>
<p>I will start with sad news. <a href="https://en.wikipedia.org/wiki/John_Horton_Conway">John Horton Conway</a>, an amazing mathematical hero,  passed away a few days ago. There are very nice posts on Conway’s work <a href="https://www.scottaaronson.com/blog/?p=4732">by Scott Aaronson</a> (with many nice memories in the comment section), <a href="https://terrytao.wordpress.com/2020/04/12/john-conway/">by Terry Tao</a>, and by <a href="https://rjlipton.wordpress.com/2020/04/14/john-horton-conway-1937-2020/">Dick Lipton and Ken Regan</a>. And<a href="https://xkcd.com/2293/"> a moving obituary on xkcd</a> with a touch of ingenuity of Conway’s style. (Here is also a question on MO on <a href="https://mathoverflow.net/questions/357197/conways-lesser-known-results">Conway’s less known results</a>, and two questions on the game of life (<a href="https://mathoverflow.net/questions/132402/conways-game-of-life-for-random-initial-position">I</a>, <a href="https://cstheory.stackexchange.com/questions/17914/does-a-noisy-version-of-conways-game-of-life-support-universal-computation">II</a>).)</p>
<p>Another reading material to cheer you up is my paper: <a href="https://gilkalai.files.wordpress.com/2020/04/laws-blog.pdf">The argument against quantum computers, the quantum laws of nature, and Google’s supremacy claims.</a> It is for <em>Laws, Rigidity and Dynamics,</em> Proceedings of the <a href="https://gilkalai.wordpress.com/2018/06/10/conference-in-singapore-vietnam-appeasement-restorative-justice-laws-of-history-and-neutrinos/">ICA workshops</a> 2018 &amp; 2019 Singapore and Birmingham. <span style="color: #993366;">Remarks are most welcome.</span></p>
<p> </p>
<p><a href="https://gilkalai.files.wordpress.com/2020/04/mt.jpg"><img alt="" class="alignnone size-full wp-image-19748" src="https://gilkalai.files.wordpress.com/2020/04/mt.jpg?w=640"/></a></p>
<p><span style="color: #ff0000;">Matching theory by Lovasz and Plummer is probably one of the best mathematics books ever written. </span></p>
<h2>Bipartite Perfect Matching as a Real Polynomial</h2>
<p><a href="https://arxiv.org/abs/2001.07642">Bipartite Perfect Matching as a Real Polynomial,</a> by Gal Beniamini and Noam Nisan</p>
<p><strong>Abstract:</strong> We obtain a description of the Bipartite Perfect Matching decision problem as a multilinear polynomial over the Reals. We show that it has full degree and <img alt="(1-o_n(1))\cdot 2^{n^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%281-o_n%281%29%29%5Ccdot+2%5E%7Bn%5E2%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(1-o_n(1))\cdot 2^{n^2}"/>  monomials with non-zero coefficients. In contrast, we show that in the dual representation (switching the roles of 0 and 1) the number of monomials is only exponential in <img alt="\Theta(n \log n)" class="latex" src="https://s0.wp.com/latex.php?latex=%5CTheta%28n+%5Clog+n%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\Theta(n \log n)"/>  Our proof relies heavily on the fact that the lattice of graphs which are “matching-covered” is Eulerian.</p>
<p>And here is how the paper starts</p>
<p>Every Boolean function <img alt="f:\{0,1\}^n\to\{0,1\}" class="latex" src="https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5En%5Cto%5C%7B0%2C1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f:\{0,1\}^n\to\{0,1\}"/> can be represented in a unique way as a Real multilinear polynomial. This representation and related ones (e.g. using the {1,−1} basis rather than {0,1}– the “Fourier transform” over the hypercube, or approximation variants) have many applications for various complexity and algorithmic purposes. See, e.g., [O’D14] for a recent textbook. In this paper we derive the representation of the bipartite-perfect-matching decision problem as a Real polynomial.</p>
<p><strong>Deﬁnition.</strong> The Boolean function <img alt="BPM_n(x_{1,1},\dots,x_{n,n})" class="latex" src="https://s0.wp.com/latex.php?latex=BPM_n%28x_%7B1%2C1%7D%2C%5Cdots%2Cx_%7Bn%2Cn%7D%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="BPM_n(x_{1,1},\dots,x_{n,n})"/> is deﬁned to be 1 if and only if the bipartite graph whose edges are<img alt="\{(i,j):x_{i,j}=1\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%28i%2Cj%29%3Ax_%7Bi%2Cj%7D%3D1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{(i,j):x_{i,j}=1\}"/> has a perfect matching, and 0 otherwise.</p>
<p>And here are the two main theorems regarding this polynomial and the polynomial for the dual representation:</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/04/bn2.png"><img alt="" class="alignnone size-full wp-image-19769" height="138" src="https://gilkalai.files.wordpress.com/2020/04/bn2.png?w=640&amp;h=138" width="640"/></a></p>
<p>(For the second theorem you need the notion of totally ordered bipartite graphs.)</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/04/bn3.png"><img alt="" class="alignnone size-full wp-image-19770" height="143" src="https://gilkalai.files.wordpress.com/2020/04/bn3.png?w=640&amp;h=143" width="640"/></a></p>
<p>And here is a nice picture!</p>
<p><a href="https://gilkalai.files.wordpress.com/2020/04/bn4.png"><img alt="" class="alignnone size-full wp-image-19771" height="421" src="https://gilkalai.files.wordpress.com/2020/04/bn4.png?w=640&amp;h=421" width="640"/></a></p>
<p>A very interesting open problem is:</p>
<p><strong>Problem:</strong> Can the Beniamini-Nisan results be extended to general (non bipartite) graphs</p>
<p>This reminds me of an old great problem:</p>
<p><strong>Problem:</strong> Does Lovasz’ randomized algorithm for matching extend to the non-bipartite case?</p>
<p>For both problems maybe methods of algebraic combinatorics can be helpful.</p>
<h2>An Extension by Vijay Vazirani and Thorben Tröbst</h2>
<p class="title mathjax"><a href="https://arxiv.org/abs/2003.08917">A Real Polynomial for Bipartite Graph Minimum Weight Perfect Matchings,</a> Thorben Tröbst, Vijay V. Vazirani</p>
<p><strong>Abstract:</strong></p>
<p>In a recent paper, Beniamini and Nisan gave a closed-form formula for the unique multilinear polynomial for the Boolean function determining whether a given bipartite graph <img alt="G \subset K_{n,n}" class="latex" src="https://s0.wp.com/latex.php?latex=G+%5Csubset+K_%7Bn%2Cn%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G \subset K_{n,n}"/> has a perfect matching, together with an efficient algorithm for computing the coefficients of the monomials of this polynomial. We give the following generalization: Given an arbitrary non-negative weight function <span class="MathJax" id="MathJax-Element-2-Frame"><span class="math" id="MathJax-Span-12"><span class="mrow" id="MathJax-Span-13"><span class="mi" id="MathJax-Span-14">w</span></span></span></span> on the edges of <img alt="K_{n,n}" class="latex" src="https://s0.wp.com/latex.php?latex=K_%7Bn%2Cn%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="K_{n,n}"/>, consider its set of minimum weight perfect matchings. We give the real multilinear polynomial for the Boolean function which determines if a graph <img alt="G \subset K_{n,n}" class="latex" src="https://s0.wp.com/latex.php?latex=G+%5Csubset+K_%7Bn%2Cn%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G \subset K_{n,n}"/> contains one of these minimum weight perfect matchings.</p>
<h3>Three more remarks about VVV</h3>
<p>Three more VVV remarks: In the Tel Aviv theory fast three month ago (it seems like ages ago)  Vijay Vazirani gave a lecture about matching; Here is the link to <a href="https://youtu.be/DFGsIOVGOIs">VJ’s lecture</a>, and to <a href="https://www.youtube.com/playlist?list=PLGRBwz8taWHgpFOqbKQLvm-eAaZz33zM7">all plenary lectures</a>.  At the end, I asked him how he explains that matching theory is such a never exhausting gold mine and Vijay mentioned the fact that a polynomial time algorithm for the assignment problem (which is closely related to matching) was <a href="http://www.lix.polytechnique.fr/~ollivier/JACOBI/presentationlEngl.htm">already found by Jacobi in 1890</a>. (unfortunately VJ’s inspiring answer was not recorder). Few years ago Vijay<a href="https://arxiv.org/abs/1210.4594"> published a simplified proof</a> of a fantastic famous results he first proved with Silvio Micaly 34 years earlier; And here is a most amazing story: A few years ago I went to the beach in Tel Aviv and I discovered Vijay swimming just next to me.  We were quite happy to see each other and Vijay told me a few things about matching, economics and biology.  This sounds now like truly a surrealistic story, and perhaps we even shook hands.</p>
<h3/>
<p> </p>
<p> </p>
<p> </p></div>
    </content>
    <updated>2020-04-19T08:47:01Z</updated>
    <published>2020-04-19T08:47:01Z</published>
    <category term="Combinatorics"/>
    <category term="Computer Science and Optimization"/>
    <category term="Gal Beniamini"/>
    <category term="Naom Nisan"/>
    <category term="Thorben Tr&#xF6;bst"/>
    <category term="Vijay Vazirani"/>
    <author>
      <name>Gil Kalai</name>
    </author>
    <source>
      <id>https://gilkalai.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://gilkalai.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://gilkalai.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://gilkalai.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://gilkalai.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>Gil Kalai's blog</subtitle>
      <title>Combinatorics and more</title>
      <updated>2020-04-20T02:20:46Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07798</id>
    <link href="http://arxiv.org/abs/2004.07798" rel="alternate" type="text/html"/>
    <title>The Dimensions of Hyperspaces</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lutz:Jack_H=.html">Jack H. Lutz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lutz:Neil.html">Neil Lutz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mayordomo:Elvira.html">Elvira Mayordomo</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07798">PDF</a><br/><b>Abstract: </b>We use the theory of computing to prove general hyperspace dimension theorems
for three important fractal dimensions. Let $X$ be a separable metric space,
and let $\mathcal{K}(X)$ be the \emph{hyperspace} of $X$, i.e., the set of all
nonempty compact subsets of $X$, endowed with the Hausdorff metric. For the
lower and upper Minkowski (i.e., box-counting) dimensions, we give precise
formulas for the dimension of $\mathcal{K}(E)$, where $E$ is any subset of $X$.
For packing dimension, we give a tight bound on the dimension of
$\mathcal{K}(E)$ in terms of the dimension of $E$, where $E$ is any analytic
(i.e., $\mathbf{\Sigma}^1_1$) subset of $X$. These results also hold for a
large class of gauge families (Hausdorff families of gauge functions).
</p>
<p>The logical structures of our proofs are of particular interest. We first
extend two algorithmic fractal dimensions--computability-theoretic versions of
classical Hausdorff and packing dimensions that assign dimensions $\dim(x)$ and
$\textrm{Dim}(x)$ to individual points $x \in X$--to arbitrary separable metric
spaces and to arbitrary gauge families. We then extend the point-to-set
principle of J. Lutz and N. Lutz (2018) to arbitrary separable metric spaces
and to a large class of gauge families. Finally, we use this principle to prove
our hyperspace packing dimension theorem. This is one of a handful of
cases--all very recent and all using the point-to-set principle--in which the
theory of computing has been used to prove new theorems in classical geometric
measure theory, theorems whose statements do not involve computation or logic.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Complexity"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CC" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Complexity (cs.CC) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CC updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07718</id>
    <link href="http://arxiv.org/abs/2004.07718" rel="alternate" type="text/html"/>
    <title>Coresets for Clustering in Excluded-minor Graphs and Beyond</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Braverman:Vladimir.html">Vladimir Braverman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jiang:Shaofeng_H==C=.html">Shaofeng H.-C. Jiang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Krauthgamer:Robert.html">Robert Krauthgamer</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wu:Xuan.html">Xuan Wu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07718">PDF</a><br/><b>Abstract: </b>Coresets are modern data-reduction tools that are widely used in data
analysis to improve efficiency in terms of running time, space and
communication complexity. Our main result is a fast algorithm to construct a
small coreset for k-Median in (the shortest-path metric of) an excluded-minor
graph. Specifically, we give the first coreset of size that depends only on
$k$, $\epsilon$ and the excluded-minor size, and our running time is
quasi-linear (in the size of the input graph).
</p>
<p>The main innovation in our new algorithm is that is iterative; it first
reduces the $n$ input points to roughly $O(\log n)$ reweighted points, then to
$O(\log\log n)$, and so forth until the size is independent of $n$. Each step
in this iterative size reduction is based on the importance sampling framework
of Feldman and Langberg (STOC 2011), with a crucial adaptation that reduces the
number of \emph{distinct points}, by employing a terminal embedding (where low
distortion is guaranteed only for the distance from every terminal to all other
points). Our terminal embedding is technically involved and relies on
shortest-path separators, a standard tool in planar and excluded-minor graphs.
</p>
<p>Furthermore, our new algorithm is applicable also in Euclidean metrics, by
simply using a recent terminal embedding result of Narayanan and Nelson, (STOC
2019), which extends the Johnson-Lindenstrauss Lemma. We thus obtain an
efficient coreset construction in high-dimensional Euclidean spaces, thereby
matching and simplifying state-of-the-art results (Sohler and Woodruff, FOCS
2018; Huang and Vishnoi, STOC 2020).
</p>
<p>In addition, we also employ terminal embedding with additive distortion to
obtain small coresets in graphs with bounded highway dimension, and use
applications of our coresets to obtain improved approximation schemes, e.g., an
improved PTAS for planar k-Median via a new centroid set.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07671</id>
    <link href="http://arxiv.org/abs/2004.07671" rel="alternate" type="text/html"/>
    <title>Isomorphism Testing for Graphs Excluding Small Minors</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Grohe:Martin.html">Martin Grohe</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neuen:Daniel.html">Daniel Neuen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wiebking:Daniel.html">Daniel Wiebking</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07671">PDF</a><br/><b>Abstract: </b>We prove that there is a graph isomorphism test running in time
$n^{\operatorname{polylog}(h)}$ on $n$-vertex graphs excluding some $h$-vertex
graph as a minor. Previously known bounds were $n^{\operatorname{poly}(h)}$
(Ponomarenko, 1988) and $n^{\operatorname{polylog}(n)}$ (Babai, STOC 2016). For
the algorithm we combine recent advances in the group-theoretic graph
isomorphism machinery with new graph-theoretic arguments.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07659</id>
    <link href="http://arxiv.org/abs/2004.07659" rel="alternate" type="text/html"/>
    <title>Algorithmic Foundations for the Diffraction Limit</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Sitan.html">Sitan Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Moitra:Ankur.html">Ankur Moitra</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07659">PDF</a><br/><b>Abstract: </b>For more than a century and a half it has been widely-believed (but was never
rigorously shown) that the physics of diffraction imposes certain fundamental
limits on the resolution of an optical system. However our understanding of
what exactly can and cannot be resolved has never risen above heuristic
arguments which, even worse, appear contradictory. In this work we remedy this
gap by studying the diffraction limit as a statistical inverse problem and,
based on connections to provable algorithms for learning mixture models, we
rigorously prove upper and lower bounds on how many photons we need (and how
precisely we need to record their locations) to resolve closely-spaced point
sources.
</p>
<p>We give the first provable algorithms that work regardless of the separation,
but only for a constant number of point sources. Surprisingly, we show that
when the number of point sources becomes large, there is a phase transition
where the sample complexity goes from polynomial to exponential, and we pin
down its location to within a universal constant that is independent of the
number of point sources. Thus it is rigorously possible both to break the
diffraction limit and yet to prove strong impossibility results depending on
the setup. This is the first non-asymptotic statistical foundation for
resolution in a model arising from first principles in physics, and helps
clarify many omnipresent debates in the optics literature.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07650</id>
    <link href="http://arxiv.org/abs/2004.07650" rel="alternate" type="text/html"/>
    <title>Fully Dynamic $c$-Edge Connectivity in Subpolynomial Time</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jin:Wenyu.html">Wenyu Jin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sun:Xiaorui.html">Xiaorui Sun</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07650">PDF</a><br/><b>Abstract: </b>We present a deterministic fully dynamic algorithm for $c$-edge connectivity
problem with $n^{o(1)}$ worst case update and query time for any positive
integer $c = (\log n)^{o(1)}$ for a graph with $n$ vertices. Previously, only
polylogarithmic, $O(\sqrt{n})$, and $O(n^{2/3})$ worst case update time
algorithms were known for fully dynamic $1$, $2$ and $3$-edge connectivity
problems respectively.
</p>
<p>Our techniques include a multi-level $c$-edge connectivity sparsifier, an
online-batch update algorithm for the sparsifier, and a general approach to
turn an online-batch dynamic algorithm with small amortized update time into a
fully dynamic algorithm with worst case update time.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07630</id>
    <link href="http://arxiv.org/abs/2004.07630" rel="alternate" type="text/html"/>
    <title>Four Pages Are Indeed Necessary for Planar Graphs</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bekos:Michael_A=.html">Michael A. Bekos</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kaufmann:Michael.html">Michael Kaufmann</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Klute:Fabian.html">Fabian Klute</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pupyrev:Sergey.html">Sergey Pupyrev</a>, Chrysanthi Raftopoulou, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/u/Ueckerdt:Torsten.html">Torsten Ueckerdt</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07630">PDF</a><br/><b>Abstract: </b>An embedding of a graph in a book consists of a linear order of its vertices
along the spine of the book and of an assignment of its edges to the pages of
the book, so that no two edges on the same page cross. The book thickness of a
graph is the minimum number of pages over all its book embeddings. Accordingly,
the book thickness of a class of graphs is the maximum book thickness over all
its members. In this paper, we address a long-standing open problem regarding
the exact book thickness of the class of planar graphs, which previously was
known to be either three or four. We settle this problem by demonstrating
planar graphs that require four pages in any of their book embeddings, thus
establishing that the book thickness of the class of planar graphs is four.
</p></div>
    </summary>
    <updated>2020-04-19T23:29:28Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07574</id>
    <link href="http://arxiv.org/abs/2004.07574" rel="alternate" type="text/html"/>
    <title>A polynomial time algorithm for solving the closest vector problem in zonotopal lattices</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/McCormick:S=_Thomas.html">S. Thomas McCormick</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Peis:Britta.html">Britta Peis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Scheidweiler:Robert.html">Robert Scheidweiler</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vallentin:Frank.html">Frank Vallentin</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07574">PDF</a><br/><b>Abstract: </b>In this note we give a polynomial time algorithm for solving the closest
vector problem in the class of zonotopal lattices. Zonotopal lattices are
characterized by the fact that their Voronoi cell is a zonotope, i.e. a
projection of a regular cube. Examples of zonotopal lattices include lattices
of Voronoi's first kind and tensor products of root lattices of type A. The
combinatorial structure of zonotopal lattices can be described by regular
matroids/totally unimodular matrices. We observe that a linear algebra version
of the minimum mean cycling canceling method can be applied for efficiently
solving the closest vector problem in zonotopal lattices.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07572</id>
    <link href="http://arxiv.org/abs/2004.07572" rel="alternate" type="text/html"/>
    <title>Centralized and Parallel Multi-Source Shortest Paths via Hopsets and Fast Matrix Multiplication</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Elkin:Michael.html">Michael Elkin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Neiman:Ofer.html">Ofer Neiman</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07572">PDF</a><br/><b>Abstract: </b>Consider an undirected weighted graph $G = (V,E,w)$. We study the problem of
computing $(1+\epsilon)$-approximate shortest paths for $S \times V$, for a
subset $S \subseteq V$ of $|S| = n^r$ sources, for some $0 &lt; r \le 1$. We
devise a significantly improved algorithm for this problem in the entire range
of parameter $r$, in both the classical centralized and in the parallel (PRAM)
models of computation. Specifically, our centralized algorithm for this problem
requires time $\tilde{O}(|E| \cdot n^{o(1)} + n^{\omega(r)})$, where
$n^{\omega(r)}$ is the time required to multiply an $n^r \times n$ matrix by an
$n \times n$ one. Our PRAM algorithm has polylogarithmic time $(\log
n)^{O(1/\rho)}$, and its work complexity is $\tilde{O}(|E| \cdot n^\rho +
n^{\omega(r)})$, for any arbitrarily small constant $\rho &gt;0$.
</p>
<p>In particular, for $r \le 0.313\ldots$, our centralized algorithm computes $S
\times V$ $(1+\epsilon)$-approximate shortest paths in $n^{2 + o(1)}$ time. Our
PRAM polylogarithmic-time algorithm has work complexity $O(|E| \cdot n^\rho +
n^{2+o(1)})$, for any arbitrarily small constant $\rho &gt;0$. Previously existing
solutions either require centralized time/parallel work of $O(|E| \cdot |S|)$
or provide much weaker approximation guarantees.
</p>
<p>We also devise efficient algorithms for computing $(1+\epsilon)$-approximate
shortest paths from each vertex to its $k$ nearest neighbors in {\em directed}
graphs. Here too the running time is only $O(n^{2+o(1)})$ even for polynomially
large $k\le n^{0.168}$.
</p>
<p>Our algorithm combines fast matrix multiplication with hopsets. Related ideas
were formerly used in the context of the Congested Clique model by
Censor-Hillel et al. \cite{CDKL19}. That model, however, suppresses heavy local
computations. We show that these computations can be replaced by fast matrix
multiplication.
</p></div>
    </summary>
    <updated>2020-04-19T23:42:46Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07492</id>
    <link href="http://arxiv.org/abs/2004.07492" rel="alternate" type="text/html"/>
    <title>Steiner Trees for Hereditary Graph Classes: a Treewidth Perspective</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Hans Bodlaender, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Brettell:Nick.html">Nick Brettell</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Johnson:Matthew.html">Matthew Johnson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Paesani:Giacomo.html">Giacomo Paesani</a>, Daniel Paulusma, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Leeuwen:Erik_Jan_van.html">Erik Jan van Leeuwen</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07492">PDF</a><br/><b>Abstract: </b>We consider the classical problems (Edge) Steiner Tree and Vertex Steiner
Tree after restricting the input to some class of graphs characterized by a
small set of forbidden induced subgraphs. We show a dichotomy for the former
problem restricted to $(H_1,H_2)$-free graphs and a dichotomy for the latter
problem restricted to $H$-free graphs. We find that there exists an infinite
family of graphs $H$ such that Vertex Steiner Tree is polynomial-time solvable
for $H$-free graphs, whereas there exist only two graphs $H$ for which this
holds for Edge Steiner Tree. We also find that Edge Steiner Tree is
polynomial-time solvable for $(H_1,H_2)$-free graphs if and only if the
treewidth of the class of $(H_1,H_2)$-free graphs is bounded (subject to P
$\neq$ NP). To obtain the latter result, we determine all pairs $(H_1,H_2)$ for
which the class of $(H_1,H_2)$-free graphs has bounded treewidth.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07470</id>
    <link href="http://arxiv.org/abs/2004.07470" rel="alternate" type="text/html"/>
    <title>Faster Dynamic Matrix Inverse for Faster LPs</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jiang:Shunhua.html">Shunhua Jiang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Song:Zhao.html">Zhao Song</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Weinstein:Omri.html">Omri Weinstein</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Hengjie.html">Hengjie Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07470">PDF</a><br/><b>Abstract: </b>Motivated by recent Linear Programming solvers, we design dynamic data
structures for maintaining the inverse of an $n\times n$ real matrix under
$\textit{low-rank}$ updates, with polynomially faster amortized running time.
Our data structure is based on a recursive application of the Woodbury-Morrison
identity for implementing $\textit{cascading}$ low-rank updates, combined with
recent sketching technology. Our techniques and amortized analysis of
multi-level partial updates, may be of broader interest to dynamic matrix
problems.
</p>
<p>This data structure leads to the fastest known LP solver for general (dense)
linear programs, improving the running time of the recent algorithms of (Cohen
et al.'19, Lee et al.'19, Brand'20) from $O^*(n^{2+ \max\{\frac{1}{6},
\omega-2, \frac{1-\alpha}{2}\}})$ to $O^*(n^{2+\max\{\frac{1}{18}, \omega-2,
\frac{1-\alpha}{2}\}})$, where $\omega$ and $\alpha$ are the fast matrix
multiplication exponent and its dual. Hence, under the common belief that
$\omega \approx 2$ and $\alpha \approx 1$, our LP solver runs in
$O^*(n^{2.055})$ time instead of $O^*(n^{2.16})$.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07447</id>
    <link href="http://arxiv.org/abs/2004.07447" rel="alternate" type="text/html"/>
    <title>Resolving the Optimal Metric Distortion Conjecture</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gkatzelis:Vasilis.html">Vasilis Gkatzelis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/h/Halpern:Daniel.html">Daniel Halpern</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Shah:Nisarg.html">Nisarg Shah</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07447">PDF</a><br/><b>Abstract: </b>We study the following metric distortion problem: there are two finite sets
of points, V and C, that lie in the same metric space, and our goal is to
choose a point in C whose total distance from the points in V is as small as
possible. However, rather than having access to the underlying distance metric,
we only know, for each point in V , a ranking of its distances to the points in
C. We propose algorithms that choose a point in C using only these rankings as
input and we provide bounds on their distortion (worst-case approximation
ratio). A prominent motivation for this problem comes from voting theory, where
V represents a set of voters, C represents a set of candidates, and the
rankings correspond to ordinal preferences of the voters. A major conjecture in
this framework is that the optimal deterministic algorithm has distortion 3. We
resolve this conjecture by providing a polynomial-time algorithm that achieves
distortion 3, matching a known lower bound. We do so by proving a novel lemma
about matching rankings of candidates to candidates, which we refer to as the
ranking-matching lemma. This lemma induces a family of novel algorithms, which
may be of independent interest, and we show that a special algorithm in this
family achieves distortion 3. We also provide more refined, parameterized,
bounds using the notion of {\alpha}-decisiveness, which quantifies the extent
to which a voter may prefer her top choice relative to all others. Finally, we
introduce a new randomized algorithm with improved distortion compared to known
results, and also provide improved lower bounds on the distortion of all
deterministic and randomized algorithms.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2004.07444</id>
    <link href="http://arxiv.org/abs/2004.07444" rel="alternate" type="text/html"/>
    <title>Fast exact computation of the $k$ most abundant isotope peaks with layer-ordered heaps</title>
    <feedworld_mtime>1587254400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kreitzberg:Patrick.html">Patrick Kreitzberg</a>, Jake Pennington, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lucke:Kyle.html">Kyle Lucke</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Serang:Oliver.html">Oliver Serang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2004.07444">PDF</a><br/><b>Abstract: </b>The theoretical computation of isotopic distribution of compounds is crucial
in many important applications of mass spectrometry, especially as machine
precision grows. A considerable amount of good tools have been created in the
last decade for doing so. In this paper we present a novel algorithm for
calculating the top $k$ peaks of a given compound. The algorithm takes
advantage of layer-ordered heaps used in an optimal method of selection on
$X+Y$ and is able to efficiently calculate the top $k$ peaks on very large
molecules. Among its peers, this algorithm shows a significant speedup on
molecules whose elements have many isotopes. The algorithm obtains a speedup of
more than 31x when compared to $\textsc{IsoSpec}$ on \ch{Au2Ca10Ga10Pd76} when
computing 47409787 peaks, which covers 0.999 of the total abundance.
</p></div>
    </summary>
    <updated>2020-04-19T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-04-17T01:30:00Z</updated>
    </source>
  </entry>
</feed>
