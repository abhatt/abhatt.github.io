<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/" xmlns:indexing="urn:atom-extension:indexing" indexing:index="no"><access:restriction xmlns:access="http://www.bloglines.com/about/specs/fac-1.0" relationship="deny"/>
  <title>Theory of Computing Blog Aggregator</title>
  <updated>2020-07-18T18:21:39Z</updated>
  <generator uri="http://intertwingly.net/code/venus/">Venus</generator>
  <author>
    <name>Arnab Bhattacharyya, Suresh Venkatasubramanian</name>
    <email>arbhat+cstheoryfeed@gmail.com</email>
  </author>
  <id>http://www.cstheory-feed.org/atom.xml</id>
  <link href="http://www.cstheory-feed.org/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.cstheory-feed.org/" rel="alternate"/>

  <entry xml:lang="en">
    <id>http://rjlipton.wordpress.com/?p=17307</id>
    <link href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/" rel="alternate" type="text/html"/>
    <title>Mathematical Search</title>
    <summary>A flying start from nearby Rochester Anurag Agarwal and Richard Zanibbi are tenured faculty in Mathematics and Computer Science, respectively, at RIT. They partner with Clyde Lee Giles of Penn State and Douglas Oard of U.Md. on the MathSeer project. If the name reminds you of CiteSeer, no surprise: Giles co-originated that and still directs […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>
<font color="#0044cc"><br/>
<em>A flying start from nearby Rochester</em><br/>
<font color="#000000"/></font></p><font color="#0044cc"><font color="#000000">
<p><a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/agarwalzanibbi/" rel="attachment wp-att-17309"><img alt="" class="alignright size-thumbnail wp-image-17309" height="142" src="https://rjlipton.files.wordpress.com/2020/07/agarwalzanibbi.png?w=150&amp;h=142" width="150"/></a></p>
<p>
Anurag Agarwal and Richard Zanibbi are tenured faculty in Mathematics and Computer Science, respectively, at RIT. They partner with Clyde Lee Giles of Penn State and Douglas Oard of U.Md. on the <a href="https://www.cs.rit.edu/~dprl/mathseer/">MathSeer</a> project. If the name reminds you of <a href="http://citeseerx.ist.psu.edu/">CiteSeer<img alt="{{\,}^x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%7B%5C%2C%7D%5Ex%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{{\,}^x}"/></a>, no surprise: Giles co-originated that and still directs it.</p>
<p>
Today we note last month’s release of a major piece of MathSeer called <a href="https://mathdeck.cs.rit.edu/">MathDeck</a> and show how to have fun with it.</p>
<p>
Agarwal is a PhD graduate from Buffalo. He did his thesis in the Mathematics Department under Thomas Cusick on cryptography, but often visited Computer Science. He took part in seminars on lattice-based cryptography led by Jin-Yi Cai when he was in Buffalo and in one of mine on related topics. I also knew him socially as a housemate of Pavan Aduri, whose joint work we’ve mentioned <a href="https://rjlipton.wordpress.com/2012/07/14/it-dont-come-easy/">here</a>. </p>
<p>
A long time ago, Dick wrote a <a href="https://rjlipton.wordpress.com/2010/12/20/some-mathematical-gifts/">post</a> on <a href="http://detexify.kirelabs.org/classify.html">Detexify</a>, which does optical character recognition (OCR) for mathematical symbols and finds corresponding (La)TeX commands. <em>MathDeck</em> does OCR as well, but what it is really trying to recognize is the <em>formula</em> you are trying to write. If it is a famous formula—or one you have already saved in your “deck”—it will find and complete it for you. It also takes input from LaTeX. <em>MathDeck</em> was created by Gavin Nishizawa, Jennifer Liu, Yancarlos Diaz, Abishai Dmello, and Wei Zhong along with Zanibbi. They are credited on a brief <a href="https://www.cs.rit.edu/~rlaz/files/ECIR2020_MathDeck_Demo.pdf">paper</a> and <a href="https://www.cs.rit.edu/~dprl/mathseer/demos.html">video</a>.</p>
<p>
</p><p/><h2> Trying MathDeck </h2><p/>
<p/><p>
On first visit, the site shows a very brief tutorial which can be dismissed via a sometimes-invisible X in the upper-right corner. The first formula I thought to write was Leonhard Euler’s “mystic equation” <img alt="{e^{i\pi} + 1 = 0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%5E%7Bi%5Cpi%7D+%2B+1+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e^{i\pi} + 1 = 0}"/>. Its OCR sprang into action as I drew and converted my attempt to draw a curly <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> and then <img alt="{\pi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\pi}"/> as <img alt="{7n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B7n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{7n}"/> with an extra crossbar.  (The website graphics are much sharper than our screenshots here.)</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/eulerformulamathdeck/" rel="attachment wp-att-17310"><img alt="" class="aligncenter wp-image-17310" height="400" src="https://rjlipton.files.wordpress.com/2020/07/eulerformulamathdeck.jpg?w=540&amp;h=400" width="540"/></a></p>
<p/><p><br/>
Nevertheless, its default deck of “WikiCards” recognizes the attempt and includes “Euler’s Identity” as an option. Selecting the card changes the display to an immaculately typeset version. I then decided to change it to the form <img alt="{e^{i\pi} = -1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Be%5E%7Bi%5Cpi%7D+%3D+-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{e^{i\pi} = -1}"/>. <em>MathDeck</em> does not have a pixel eraser like Microsoft Paint does but allows you to delete a region after selecting it:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/eulerformulatypeset/" rel="attachment wp-att-17312"><img alt="" class="aligncenter wp-image-17312" height="190" src="https://rjlipton.files.wordpress.com/2020/07/eulerformulatypeset.jpg?w=360&amp;h=190" width="360"/></a></p>
<p/><p><br/>
Selecting “trash” did not close up the space to the equals sign. I drew a minus bar at far right, but my attempts to follow with <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> kept being interpreted as “<img alt="{y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{y}"/>” or something worse, and the alternate form of Euler’s identity did not come up below. Finally, I restored the LaTeX-input box on the right and edited the source to read, <font size="+1"><tt>e^{i\pi} = -1</tt></font>:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/eulerformulatypeset2/" rel="attachment wp-att-17314"><img alt="" class="aligncenter wp-image-17314" height="175" src="https://rjlipton.files.wordpress.com/2020/07/eulerformulatypeset2.jpg?w=540&amp;h=175" width="540"/></a></p>
<p/><p><br/>
The artifact of my hand-drawn minus sign was still at far right. I could not select and trash it even after refreshing the page. What fixed the issue was drawing something else over the squiggle and having the OCR interpret the tandem into something else, which I could then select and delete. </p>
<p>
</p><p/><h2> Superposing Forms and Associations </h2><p/>
<p/><p>
I next wondered how the system would react to my trying to write Schrödinger’s equation. One challenge is that it has many forms. I chose the form given uppermost in Wikipedia’s <a href="https://en.wikipedia.org/wiki/Schrodinger_equation#Equation">article</a>: </p>
<p align="center"><img alt="\displaystyle  i\hbar \frac{d |\Psi(t)\rangle}{d t} = \hat{H}|\Psi(t)\rangle " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++i%5Chbar+%5Cfrac%7Bd+%7C%5CPsi%28t%29%5Crangle%7D%7Bd+t%7D+%3D+%5Chat%7BH%7D%7C%5CPsi%28t%29%5Crangle+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  i\hbar \frac{d |\Psi(t)\rangle}{d t} = \hat{H}|\Psi(t)\rangle "/></p>
<p>To arrive at the challenge gradually, I first omitted the quantum <em>ket</em> notation, the hat on <img alt="{H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{H}"/>, and the dependence on <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/>. I wrote partial derivatives and lowercase <img alt="{\psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cpsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\psi}"/>. Thus what I first tried to handwrite was: </p>
<p align="center"><img alt="\displaystyle  i\hbar \frac{\partial \psi}{\partial t} = H\psi " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++i%5Chbar+%5Cfrac%7B%5Cpartial+%5Cpsi%7D%7B%5Cpartial+t%7D+%3D+H%5Cpsi+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  i\hbar \frac{\partial \psi}{\partial t} = H\psi "/></p>
<p>The system jumped on my handwriting right away and I won’t report the results except to say it looked like Dada art with math symbols. One can, however, do a drawing in Paint or similar app and upload it. So I drew</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodingerdrawing/" rel="attachment wp-att-17315"><img alt="" class="aligncenter size-full wp-image-17315" src="https://rjlipton.files.wordpress.com/2020/07/schrodingerdrawing.png?w=600"/></a></p>
<p/><p><br/>
and obtained</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodingerrendered/" rel="attachment wp-att-17316"><img alt="" class="aligncenter wp-image-17316" height="260" src="https://rjlipton.files.wordpress.com/2020/07/schrodingerrendered.jpg?w=360&amp;h=260" width="360"/></a></p>
<p/><p><br/>
The ten cards returned (one is below the snip) have some wild but inspired associations. Handwriting Wikipedia’s form as given did not produce better results. However, I realized I could snip what appears on Wikipedia and upload that:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodingersnip/" rel="attachment wp-att-17317"><img alt="" class="aligncenter size-full wp-image-17317" src="https://rjlipton.files.wordpress.com/2020/07/schrodingersnip.jpg?w=600"/></a></p>
<p/><p><br/>
The result was a ghostly evocation of the equation, with LaTeX to boot:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodingerdada/" rel="attachment wp-att-17318"><img alt="" class="aligncenter wp-image-17318" height="78" src="https://rjlipton.files.wordpress.com/2020/07/schrodingerdada.jpg?w=540&amp;h=78" width="540"/></a></p>
<p/><p><br/>
The LaTeX output reminded me that I could enter Schrödinger’s equation in LaTeX and remove all doubt. I did the short form first. Would the system recognize it?</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodinger1/" rel="attachment wp-att-17319"><img alt="" class="aligncenter wp-image-17319" height="328" src="https://rjlipton.files.wordpress.com/2020/07/schrodinger1.jpg?w=540&amp;h=328" width="540"/></a></p>
<p/><p><br/>
The name <em>Schrödinger</em> popped up in the eighth card at bottom center, but not the form I had typed. It has an integral and no equals sign. Of greater note, the center card called up another giant of quantum mechanics and began with exactly the left-hand side I had typed. To its left came Wolfgang Pauli with another occurrence of <img alt="{i\hbar}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%5Chbar%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i\hbar}"/>. None of the output had the time variable <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/>, however, so I put it in:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodinger2/" rel="attachment wp-att-17320"><img alt="" class="aligncenter wp-image-17320" height="349" src="https://rjlipton.files.wordpress.com/2020/07/schrodinger2.jpg?w=540&amp;h=349" width="540"/></a></p>
<p/><p><br/>
Bingo—the card labeled simply <em>Schrödinger Equation</em> appears at upper center. Unlike Wikipedia’s version, it includes <b>r</b> standing for other coordinates and—hence—properly uses partial derivatives. Otherwise it is exactly what my search intended to summon.</p>
<p>
I felt the real reward came in the other cards. I did not know that Hubble’s law had such a simple statement. I knew quantum mechanics takes glory in symmetries, of course, but did not know what equation would bear the definitive moniker, “Symmetry in Quantum Mechanics.” I remember as a child the fun of unstructured time in libraries where the physical card catalog was sorted by theme and one could browse adjacent ideas, as also on the shelves. </p>
<p>
Now I put in the ket notation, the hat to make <img alt="{\hat{H}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Chat%7BH%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\hat{H}}"/>, and the uppercase <img alt="{\Psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5CPsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\Psi}"/>. The latter two changes evidently moved the <em>Schrödinger Equation</em> card to the top of the deck, with <em>Pauli Equation</em> moving up behind it, but other cards completely changed:</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/schrodinger3/" rel="attachment wp-att-17321"><img alt="" class="aligncenter wp-image-17321" height="349" src="https://rjlipton.files.wordpress.com/2020/07/schrodinger3.jpg?w=540&amp;h=349" width="540"/></a></p>
<p/><p><br/>
I had not known the term <em>Einselection</em>. Finally, I decided to wipe the canvas and simply enter <img alt="{H\Psi = E\Psi}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BH%5CPsi+%3D+E%5CPsi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{H\Psi = E\Psi}"/> as the minimalist form of Schrödinger’s equation. I’ll leave you to see what the system comes up with on your own fresh canvas.</p>
<p>
</p><p/><h2> Search and Research </h2><p/>
<p/><p>
The goal is to augment search that includes equations as well as text. For instance, right now I’d like to find sources that use a formula like </p>
<p align="center"><img alt="\displaystyle  \sum_{r=0}^{\infty}\frac{r^2}{e^{ar}} " class="latex" src="https://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Csum_%7Br%3D0%7D%5E%7B%5Cinfty%7D%5Cfrac%7Br%5E2%7D%7Be%5E%7Bar%7D%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="\displaystyle  \sum_{r=0}^{\infty}\frac{r^2}{e^{ar}} "/></p>
<p>in the context of statistical tests for distinguishing between distributions. I’ve had success with Google on smaller pieces of TeX but this chunk yields nothing sensible. Changing the variable “<img alt="{r}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r}"/>” to “<img alt="{x}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{x}"/>” changes some of the results but comes no closer; nor does changing to <img alt="{i}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{i}"/> or editing the sum to begin with <img alt="{1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1}"/> not <img alt="{0}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{0}"/>. The search should somehow recognize that <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/> is a constant but is also the main parameter.</p>
<p>
The fact that I’ve typed a particular LaTeX form might be an impediment. I could have written <img alt="{r^2 e^{-ar}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Br%5E2+e%5E%7B-ar%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{r^2 e^{-ar}}"/> in the body of the sum without using a fraction. The <em>MathDeck</em> documentation focuses on enabling mathematical search for non-LaTeX users, but independence from syntax for all users is a commensurate goal. The idea is to make formulas “chunks” in their own right, chunks governed by semantics more than syntax, and promote saving and recombining them. For instance, I could save the body and replace the sum by an integral. </p>
<p>
The visual unit for this in <em>MathDeck</em> is the blue oval enclosing a formula. They can be created and edited at the top, imported to make a new <em>card</em>, and combined onto the canvas to build up larger formulas. The paper calls them “chips” but for me they evoke hieroglyphic <a href="https://en.wikipedia.org/wiki/Cartouche">cartouches</a> enclosing royal names. Cards can be marked as favorites and the collection added to. </p>
<p>
Here is an example where I made a cartouche and card out of the abstract form of the main equation in my chess model, as I expounded in a <a href="https://rjlipton.wordpress.com/2018/10/18/london-calling/">post</a> to mark the 2018 world chess championship match in London.</p>
<p/><p><br/>
<a href="https://rjlipton.wordpress.com/2020/07/18/mathematical-search/chessequation/" rel="attachment wp-att-17324"><img alt="" class="aligncenter wp-image-17324" height="368" src="https://rjlipton.files.wordpress.com/2020/07/chessequation.jpg?w=600&amp;h=368" width="600"/></a></p>
<p/><p><br/>
Once again the system pitches in with interesting associations. Some were expected but others are surprises. Logit and logarithmic loss are naturally associated but I had not heard of “Perplexity,” and what is Benford’s Law doing here? (Dick and I have been trying to find natural <em>exceptions</em> to Benford’s Law in Covid-19 statistics—we’ve not had time yet to tell whether we’ll succeed.)</p>
<p>
The searches at top are still “vanilla” Google search, and the search below the canvas is only within a deck or decks. We look forward to when a truly smart integration of mathematics into major search engines will be engendered by this project.</p>
<p>
</p><p/><h2> Open Problems </h2><p/>
<p/><p>
How do you see <em>MathDeck</em> and the larger <em>MathSeer</em> project growing in the near future? We hope <em>MathDeck</em> stokes some immediate enjoyment and curiosity.</p>
<p/></font></font></div>
    </content>
    <updated>2020-07-18T16:11:54Z</updated>
    <published>2020-07-18T16:11:54Z</published>
    <category term="All Posts"/>
    <category term="News"/>
    <category term="Teaching"/>
    <category term="Anurag Agarwal"/>
    <category term="CiteSeer"/>
    <category term="Clyde Giles"/>
    <category term="Douglas Oard"/>
    <category term="MathDeck"/>
    <category term="mathematical writing"/>
    <category term="MathSeer"/>
    <category term="Richard Zanibbi"/>
    <category term="web search"/>
    <author>
      <name>KWRegan</name>
    </author>
    <source>
      <id>https://rjlipton.wordpress.com</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://rjlipton.wordpress.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://rjlipton.wordpress.com" rel="alternate" type="text/html"/>
      <link href="https://rjlipton.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://rjlipton.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>a personal view of the theory of computation</subtitle>
      <title>Gödel’s Lost Letter and P=NP</title>
      <updated>2020-07-18T18:20:36Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08368</id>
    <link href="http://arxiv.org/abs/2007.08368" rel="alternate" type="text/html"/>
    <title>Shortest Watchman Tours in Simple Polygons under Rotated Monotone Visibility</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nilsson:Bengt_J=.html">Bengt J. Nilsson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Orden:David.html">David Orden</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Palios:Leonidas.html">Leonidas Palios</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Seara:Carlos.html">Carlos Seara</a>, Paweł Żyliński <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08368">PDF</a><br/><b>Abstract: </b>We present an $O(nrG)$ time algorithm for computing and maintaining a minimum
length shortest watchman tour that sees a simple polygon under monotone
visibility in direction $\theta$, while $\theta$ varies in $[0,180^{\circ})$,
obtaining the directions for the tour to be the shortest one over all tours,
where $n$ is the number of vertices, $r$ is the number of reflex vertices, and
$G\leq r$ is the maximum number of gates of the polygon used at any time in the
algorithm.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08204</id>
    <link href="http://arxiv.org/abs/2007.08204" rel="alternate" type="text/html"/>
    <title>A Faster Exponential Time Algorithm for Bin Packing With a Constant Number of Bins via Additive Combinatorics</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/Nederlof:Jesper.html">Jesper Nederlof</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pawlewicz:Jakub.html">Jakub Pawlewicz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Swennenhuis:C=eacute=line_M=_F=.html">Céline M. F. Swennenhuis</a>, Karol Węgrzycki <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08204">PDF</a><br/><b>Abstract: </b>In the Bin Packing problem one is given $n$ items with weights
$w_1,\ldots,w_n$ and $m$ bins with capacities $c_1,\ldots,c_m$. The goal is to
find a partition of the items into sets $S_1,\ldots,S_m$ such that $w(S_j) \leq
c_j$ for every bin $j$, where $w(X)$ denotes $\sum_{i \in X}w_i$.
</p>
<p>Bj{\"{o}}rklund, Husfeldt and Koivisto (SICOMP 2009) presented an
$\mathcal{O}^\star(2^n)$ time algorithm for Bin Packing. In this paper, we show
that for every $m \in \mathbb{N}$ there exists a constant $\sigma_m &gt;0$ such
that an instance of Bin Packing with $m$ bins can be solved in
$\mathcal{O}(2^{(1-\sigma_m)n})$ randomized time. Before our work, such
improved algorithms were not known even for $m$ equals $4$
</p>
<p>A key step in our approach is the following new result in Littlewood-Offord
theory on the additive combinatorics of subset sums: For every $\delta &gt;0$
there exists an $\varepsilon &gt;0$ such that if $|\{ X\subseteq \{1,\ldots,n \} :
w(X)=v \}| \leq 2^{(1-\varepsilon)n}$ for every $v$ then $|\{ w(X): X \subseteq
\{1,\ldots,n\} \}|\leq 2^{\delta n}$.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08123</id>
    <link href="http://arxiv.org/abs/2007.08123" rel="alternate" type="text/html"/>
    <title>Dynamic Products of Ranks</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eppstein:David.html">David Eppstein</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08123">PDF</a><br/><b>Abstract: </b>We describe a data structure that can maintain a dynamic set of points given
by their Cartesian coordinates, and maintain the point whose product of ranks
within the two coordinate orderings is minimum or maximum, in time
$O(\sqrt{n\log n})$ per update.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08110</id>
    <link href="http://arxiv.org/abs/2007.08110" rel="alternate" type="text/html"/>
    <title>Private Approximations of a Convex Hull in Low Dimensions</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Yuo Gao, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sheffet:Or.html">Or Sheffet</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08110">PDF</a><br/><b>Abstract: </b>We give the first differentially private algorithms that estimate a variety
of geometric features of points in the Euclidean space, such as diameter,
width, volume of convex hull, min-bounding box, min-enclosing ball etc. Our
work relies heavily on the notion of \emph{Tukey-depth}. Instead of
(non-privately) approximating the convex-hull of the given set of points $P$,
our algorithms approximate the geometric features of the $\kappa$-Tukey region
induced by $P$ (all points of Tukey-depth $\kappa$ or greater). Moreover, our
approximations are all bi-criteria: for any geometric feature $\mu$ our
$(\alpha,\Delta)$-approximation is a value "sandwiched" between
$(1-\alpha)\mu(D_P(\kappa))$ and $(1+\alpha)\mu(D_P(\kappa-\Delta))$.
</p>
<p>Our work is aimed at producing a \emph{$(\alpha,\Delta)$-kernel of
$D_P(\kappa)$}, namely a set $\calS$ such that (after a shift) it holds that
$(1-\alpha)D_P(\kappa)\subset \CH(\calS) \subset (1+\alpha)D_P(\kappa-\Delta)$.
We show that an analogous notion of a bi-critera approximation of a directional
kernel, as originally proposed by Agarwal et al~[2004], \emph{fails} to give a
kernel, and so we result to subtler notions of approximations of projections
that do yield a kernel. First, we give differentially private algorithms that
find $(\alpha,\Delta)$-kernels for a "fat" Tukey-region. Then, based on a
private approximation of the min-bounding box, we find a transformation that
does turn $D_P(\kappa)$ into a "fat" region \emph{but only if} its volume is
proportional to the volume of $D_P(\kappa-\Delta)$. Lastly, we give a novel
private algorithm that finds a depth parameter $\kappa$ for which the volume of
$D_P(\kappa)$ is comparable to $D_P(\kappa-\Delta)$. We hope this work leads to
the further study of the intersection of differential privacy and computational
geometry.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08069</id>
    <link href="http://arxiv.org/abs/2007.08069" rel="alternate" type="text/html"/>
    <title>Maximizing coverage while ensuring fairness: a tale of conflicting objective</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Asudeh:Abolfazl.html">Abolfazl Asudeh</a>, Tanya Berger-Wolf, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/DasGupta:Bhaskar.html">Bhaskar DasGupta</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sidiropoulos:Anastasios.html">Anastasios Sidiropoulos</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08069">PDF</a><br/><b>Abstract: </b>Ensuring fairness in computational problems has emerged as a $key$ topic
during recent years, buoyed by considerations for equitable resource
distributions and social justice. It $is$ possible to incorporate fairness in
computational problems from several perspectives, such as using optimization,
game-theoretic or machine learning frameworks. In this paper we address the
problem of incorporation of fairness from a $combinatorial$ $optimization$
perspective. We formulate a combinatorial optimization framework, suitable for
analysis by researchers in approximation algorithms and related areas, that
incorporates fairness in maximum coverage problems as an interplay between
$two$ conflicting objectives. Fairness is imposed in coverage by using coloring
constraints that $minimizes$ the discrepancies between number of elements of
different colors covered by selected sets; this is in contrast to the usual
discrepancy minimization problems studied extensively in the literature where
(usually two) colors are $not$ given $a$ $priori$ but need to be selected to
minimize the maximum color discrepancy of $each$ individual set. Our main
results are a set of randomized and deterministic approximation algorithms that
attempts to $simultaneously$ approximate both fairness and coverage in this
framework.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08068</id>
    <link href="http://arxiv.org/abs/2007.08068" rel="alternate" type="text/html"/>
    <title>The Swendsen-Wang Dynamics on Trees</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Blanca:Antonio.html">Antonio Blanca</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Zongchen.html">Zongchen Chen</a>, Daniel Štefankovič, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vigoda:Eric.html">Eric Vigoda</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08068">PDF</a><br/><b>Abstract: </b>The Swendsen-Wang algorithm is a sophisticated, widely-used Markov chain for
sampling from the Gibbs distribution for the ferromagnetic Ising and Potts
models with inverse temperature $\beta&gt;0$. Due to the global nature of the
updates of the Swendsen-Wang algorithm, the underlying Markov chain often mixes
rapidly in the low temperature region (large $\beta$) where long-range
correlations impair the convergence rate of local chains such as the Glauber
dynamics. With few exceptions, tight bounds on the convergence rate of the
Swendsen-Wang algorithm only hold for high temperature regions (small $\beta$)
corresponding to the uniqueness or the decay of correlations region.
</p>
<p>We present tight bounds on the convergence rate of the Swendsen-Wang
algorithm for the complete $d$-ary tree that extend to the non-uniqueness
region. Specifically, we show that a spatial mixing property known as the
Variance Mixing condition introduced by Martinelli et al. (2004) implies
constant spectral gap of the Swendsen-Wang dynamics. This implies that the
relaxation time (i.e., the inverse of the spectral gap) is $O(1)$ for all
boundary conditions in the uniqueness region or when $\beta&lt;\beta_1$ where
$\beta_1$ exceeds the uniqueness threshold for the Ising model and for the
$q$-state Potts model when $q$ is small with respect to $d$. In addition, we
prove $O(1)$ relaxation time for all $\beta$ for the monochromatic boundary
condition. Our proof introduces a novel spectral view of the Variance Mixing
condition inspired by several recent rapid mixing results on high-dimensional
expanders.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08031</id>
    <link href="http://arxiv.org/abs/2007.08031" rel="alternate" type="text/html"/>
    <title>New Nearly-Optimal Coreset for Kernel Density Estimation</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tai:Wai_Ming.html">Wai Ming Tai</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08031">PDF</a><br/><b>Abstract: </b>Given a point set $P\subset \mathbb{R}^d$, kernel density estimation for
Gaussian kernel is defined as $\overline{\mathcal{G}}_P(x) =
\frac{1}{\left|P\right|}\sum_{p\in P}e^{-\left\lVert x-p \right\rVert^2}$ for
any $x\in\mathbb{R}^d$. We study how to construct a small subset $Q$ of $P$
such that the kernel density estimation of $P$ can be approximated by the
kernel density estimation of $Q$. This subset $Q$ is called \emph{coreset}. The
primary technique in this work is to construct $\pm 1$ coloring on the point
set $P$ by the discrepancy theory and apply this coloring algorithm
recursively. Our result leverages Banaszczyk's Theorem. When $d&gt;1$ is constant,
our construction gives a coreset of size
$O\left(\frac{1}{\varepsilon}\sqrt{\log\log\frac{1}{\varepsilon}}\right)$ as
opposed to the best-known result of
$O\left(\frac{1}{\varepsilon}\sqrt{\log\frac{1}{\varepsilon}}\right)$. It is
the first to give a breakthrough on the barrier of $\sqrt{\log}$ factor even
when $d=2$.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07994</id>
    <link href="http://arxiv.org/abs/2007.07994" rel="alternate" type="text/html"/>
    <title>Approximating the (continuous) Fr\'echet distance</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b>Connor Colombe, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fox:Kyle.html">Kyle Fox</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07994">PDF</a><br/><b>Abstract: </b>We describe the first strongly subquadratic time algorithm with
subexponential approximation ratio for approximately computing the Fr\'echet
distance between two polygonal chains. Specifically, let $P$ and $Q$ be two
polygonal chains with $n$ vertices in $d$-dimensional Euclidean space, and let
$\alpha \in [\sqrt{n}, n]$. Our algorithm deterministically finds an
$O(\alpha)$-approximate Fr\'echet correspondence in time $O((n^3 / \alpha^2)
\log n)$. In particular, we get an $O(n)$-approximation in near-linear $O(n
\log n)$ time, a vast improvement over the previously best know result, a
linear time $2^{O(n)}$-approximation. As part of our algorithm, we also
describe how to turn any approximate decision procedure for the Fr\'echet
distance into an approximate optimization algorithm whose approximation ratio
is the same up to arbitrarily small constant factors. The transformation into
an approximate optimization algorithm increases the running time of the
decision procedure by only an $O(\log n)$ factor.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07983</id>
    <link href="http://arxiv.org/abs/2007.07983" rel="alternate" type="text/html"/>
    <title>Optimal angle bounds for quadrilateral meshes</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bishop:Christopher_J=.html">Christopher J. Bishop</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07983">PDF</a><br/><b>Abstract: </b>We show that any simple planar n-gon can be meshed in linear time by $O(n)$
quadrilaterals with all new angles bounded between $60$ and $120$ degrees.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07927</id>
    <link href="http://arxiv.org/abs/2007.07927" rel="alternate" type="text/html"/>
    <title>How to Morph Graphs on the Torus</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chambers:Erin_Wolf.html">Erin Wolf Chambers</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Erickson:Jeff.html">Jeff Erickson</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lin:Patrick.html">Patrick Lin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Parsa:Salman.html">Salman Parsa</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07927">PDF</a><br/><b>Abstract: </b>We present the first algorithm to morph graphs on the torus. Given two
isotopic essentially 3-connected embeddings of the same graph on the Euclidean
flat torus, where the edges in both drawings are geodesics, our algorithm
computes a continuous deformation from one drawing to the other, such that all
edges are geodesics at all times. Previously even the existence of such a morph
was not known. Our algorithm runs in $O(n^{1+\omega/2})$ time, where $\omega$
is the matrix multiplication exponent, and the computed morph consists of
$O(n)$ parallel linear morphing steps. Existing techniques for morphing planar
straight-line graphs do not immediately generalize to graphs on the torus; in
particular, Cairns' original 1944 proof and its more recent improvements rely
on the fact that every planar graph contains a vertex of degree at most 5. Our
proof relies on a subtle geometric analysis of 6-regular triangulations of the
torus. We also make heavy use of a natural extension of Tutte's spring
embedding theorem to torus graphs.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07720</id>
    <link href="http://arxiv.org/abs/2007.07720" rel="alternate" type="text/html"/>
    <title>An $\tilde{O}(n^{5/4})$ Time $\varepsilon$-Approximation Algorithm for RMS Matching in a Plane</title>
    <feedworld_mtime>1595030400</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lahn:Nathaniel.html">Nathaniel Lahn</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Raghvendra:Sharath.html">Sharath Raghvendra</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07720">PDF</a><br/><b>Abstract: </b>The 2-Wasserstein distance (or RMS distance) is a useful measure of
similarity between probability distributions that has exciting applications in
machine learning. For discrete distributions, the problem of computing this
distance can be expressed in terms of finding a minimum-cost perfect matching
on a complete bipartite graph given by two multisets of points $A,B \subset
\mathbb{R}^2$, with $|A|=|B|=n$, where the ground distance between any two
points is the squared Euclidean distance between them. Although there is a
near-linear time relative $\varepsilon$-approximation algorithm for the case
where the ground distance is Euclidean (Sharathkumar and Agarwal, JACM 2020),
all existing relative $\varepsilon$-approximation algorithms for the RMS
distance take $\Omega(n^{3/2})$ time. This is primarily because, unlike
Euclidean distance, squared Euclidean distance is not a metric. In this paper,
for the RMS distance, we present a new $\varepsilon$-approximation algorithm
that runs in $O(n^{5/4}\mathrm{poly}\{\log n,1/\varepsilon\})$ time.
</p>
<p>Our algorithm is inspired by a recent approach for finding a minimum-cost
perfect matching in bipartite planar graphs (Asathulla et al., TALG 2020).
Their algorithm depends heavily on the existence of sub-linear sized vertex
separators as well as shortest path data structures that require planarity.
Surprisingly, we are able to design a similar algorithm for a complete
geometric graph that is far from planar and does not have any vertex
separators. Central components of our algorithm include a quadtree-based
distance that approximates the squared Euclidean distance and a data structure
that supports both Hungarian search and augmentation in sub-linear time.
</p></div>
    </summary>
    <updated>2020-07-18T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Computational Geometry"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.CG" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Computational Geometry (cs.CG) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.CG updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-07-17-polynomial-secret-sharing-and-the-lagrange-basis/</id>
    <link href="https://decentralizedthoughts.github.io/2020-07-17-polynomial-secret-sharing-and-the-lagrange-basis/" rel="alternate" type="text/html"/>
    <title>Polynomial Secret Sharing and the Lagrange Basis</title>
    <summary>In this post, we highlight an amazing result: Shamir’s secret sharing scheme. This is one of the most powerful uses of polynomials over a finite field in distributed computing. Intuitively, this scheme allows a $Dealer$ to commit to a secret $s$ by splitting it into shares distributed to $n$ parties....</summary>
    <updated>2020-07-17T18:23:00Z</updated>
    <published>2020-07-17T18:23:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-07-18T00:21:14Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-07-17-the-marvels-of-polynomials-over-a-field/</id>
    <link href="https://decentralizedthoughts.github.io/2020-07-17-the-marvels-of-polynomials-over-a-field/" rel="alternate" type="text/html"/>
    <title>The Marvels of Polynomials over a Field</title>
    <summary>In this series of posts, we explore the mathematical foundations of polynomials over a field. These objects are at the heart of several results in computer science: secret sharing, Multi Party Computation, Complexity, and Zero Knowledge protocols. All this wonder and more can be traced back to a very useful...</summary>
    <updated>2020-07-17T17:55:00Z</updated>
    <published>2020-07-17T17:55:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-07-18T00:21:14Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://windowsontheory.org/?p=7775</id>
    <link href="https://windowsontheory.org/2020/07/17/cfp-symposium-on-simplicity-in-algorithms-sosa/" rel="alternate" type="text/html"/>
    <title>CFP: Symposium on Simplicity in Algorithms (SOSA)</title>
    <summary>[Guest post by Valerie King. TL;DR SOSA 21 will take place jointly with SODA 21. To submit register by August 12, paper deadline August 19.] Call for Papers: Registration deadline August 12, 2020 3rd SIAM Symposium on Simplicity in Algorithms  (SOSA)January 11-12, 2021Alexandria, Virginia, U.S.(Held jointly with SODA 2021) Symposium on Simplicity in Algorithms (SOSA) […]</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>[Guest post by Valerie King. TL;DR <a href="https://www.siam.org/conferences/cm/conference/sosa21">SOSA 21</a> will take place jointly with SODA 21. To submit register by August 12, paper deadline August 19.] </em></p>



<p><strong>Call for Papers:</strong> Registration deadline August 12, 2020</p>



<p>3rd SIAM <a href="https://www.siam.org/conferences/cm/conference/sosa21">Symposium on Simplicity in Algorithms </a> (SOSA)<br/>January 11-12, 2021<br/>Alexandria, Virginia, U.S.<br/>(Held jointly with SODA 2021)<br/><br/>Symposium on Simplicity in Algorithms (SOSA) is a conference in theoretical computer science dedicated to advancing algorithms research by promoting simplicity and elegance in the design and analysis of algorithms. The benefits of simplicity are manifold: simpler algorithms manifest a better understanding of the problem at hand; they are more likely to be implemented and trusted by practitioners; they can serve as benchmarks, as an initialization step, or as the basis for a “state of the art” algorithm;  they are more easily taught and are more likely to be included in algorithms textbooks; and they attract a broader set of researchers to difficult algorithmic problems.<br/><br/>Papers in all areas of algorithms research are sought.  An ideal submission will advance our understanding of an algorithmic problem by, for example, introducing a simpler algorithm, presenting a simpler analysis of an existing algorithm, or offering insights that generally simplify our understanding of important algorithms or computational problems.<br/><br/>We are especially interested in papers that make material more accessible to a wider audience, such as undergraduates, or for more specialized topics, general algorithms researchers.<br/><br/>Submissions should contain novel ideas or attractive insights, but they are not expected to prove novel theorems. That is, the results themselves can be known, but their presentation must be new. Conference website is <a href="https://www.siam.org/conferences/cm/conference/sosa21" rel="noreferrer noopener" target="_blank">https://www.siam.org/conferences/cm/conference/sosa21</a><br/><br/>Program Committee<br/>Aaron Bernstein, Rutgers University, U.S.<br/>Allan Borodin, University of Toronto, Canada<br/>Timothy Chan, University of Illinois at Urbana-Champaign, U.S.<br/>Edith Cohen, Google Research, U.S. and Tel Aviv University, Israel<br/>Vincent Cohen-Addad, Google Research, Zürich, Switzerland<br/>Sanjoy Dasgupta, University of California, San Diego, U.S.<br/>Michael Elkin, Ben-Gurion University of the Negev, Israel<br/>Funda Ergun, NSF and University of Indiana, Bloomington, U.S.<br/>Mike Fellows, University of Bergen, Norway<br/>Arnold Filtser, Columbia University, U.S.<br/>Kasper Green Larsen,  Aarhus University, Denmark<br/>Andrew Goldberg, Amazon, U.S.<br/>John Iacono, Université libre de Bruxelles, Belgium<br/>Russell Impagliazzo, University of California, San Diego, U.S.<br/>Giuseppe Italiano,   LUISS Guido Carli, Rome, Italy<br/>Michael Kapralov,  École Polytechnique Fédérale de Lausanne (EPFL), Switzerland<br/>Anna Karlin, University of Washington, Seattle, U.S.<br/>Valerie King, University of Victoria, Canada (Co-chair)<br/>Hung Le, University of Victoria, Canada and  University of Massachusetts at Amherst, U.S. (Co-chair)<br/>Daniel Lokshtanov, University of California, Santa Barbara, U.S.<br/>S. Cenk Sahinalp, NIH and University of Indiana, Bloomington, U.S.<br/>Jared Saia, University of New Mexico, U.S.<br/>Shay Solomon, Tel Aviv University, Israel<br/>Mario Szegedy, Alibaba and Rutgers University, U.S.<br/>Robert Tarjan, Princeton University, U.S.<br/>Seeun William Umboh, University of Sydney, Australia<br/>Qin Zhang, University of Indiana, Bloomington, U.S.<br/>Uri Zwick, Tel Aviv University, Israel<br/><br/>Steering Committee<br/>Michael A. Bender, Stony Brook University, U.S.<br/>David Karger,  Massachusetts Institute of Technology, U.S.<br/>Tsvi Kopelowitz, Bar-Ilan University, Israel<br/>Seth Pettie,  University of Michigan, U.S.<br/>Robert Tarjan, Princeton University, U.S.<br/>Mikkel Thorup, University of Copenhagen, Denmark<br/><br/>Submissions and Deadlines:<br/>A link to the submission site is available <a href="https://easychair.org/my/conference?conf=sosa21" rel="noreferrer noopener" target="_blank">https://easychair.org/my/conference?conf=sosa21</a>.<br/>Short Abstract Submission and Paper Registration Deadline: August 12, 2020, 4:59 PM Eastern Time<br/>Full Paper Submission Deadline: August 19, 2020, 4:59 PM Eastern Time<br/>Acceptance Notification: early October 2020<br/>Proceedings (posted online):  early January 2021<br/><br/><br/>How to Participate<br/>Authors must submit their papers electronically, in PDF format.<br/>Submissions should begin with a title page containing the paper title, each author’s name, affiliation, and email address, and an abstract summarizing the contributions of the paper. There is no page limit. The paper should begin with a clear description of the algorithmic problem to be solved, a survey of prior work on the problem—including a candid assessment of prior work in terms of simplicity and elegance—and a discussion of the contributions of the paper. The body of the paper should be written for a general theoretical computer science audience, and substantiate the main claims of the paper with full proofs. The submission should be typeset using 11 point font, in a single-column format with ample spacing throughout and ample margins all around.  The submissions ought to be visually easy to read.<br/>Brevity is a hallmark of simplicity. Authors are specifically encouraged to submit short and simple papers. Final papers may not exceed fifteen (15) pages in double column format.<br/><br/>The program committee may designate one or more papers as SOSA Best Papers. All submissions will be considered.</p></div>
    </content>
    <updated>2020-07-17T17:20:56Z</updated>
    <published>2020-07-17T17:20:56Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>Boaz Barak</name>
    </author>
    <source>
      <id>https://windowsontheory.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://windowsontheory.org" rel="alternate" type="text/html"/>
      <link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/>
      <subtitle>A Research Blog</subtitle>
      <title>Windows On Theory</title>
      <updated>2020-07-18T18:20:52Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/trustmodels/</id>
    <link href="https://differentialprivacy.org/trustmodels/" rel="alternate" type="text/html"/>
    <title>Trust models, and notions of privacy</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>There exist various notions of differential privacy which, while sharing a common core, differ in some key specific aspects. Broadly speaking, vary among a few main axes, such as the type of guarantee they provide, the specific similarity between data they consider, and the trust model they aim to address. This last point will be the focus of this post: <em>which notion of privacy is best suited to the specific scenario at hand?</em></p>

<p>We will cover 4 of these notions.</p>
<ul>
  <li>(central) differential privacy (DP)</li>
  <li>local differential privacy (LDP)</li>
  <li>pan-privacy</li>
  <li>shuffle privacy</li>
</ul>

<p>Typically, the world can be divided in a few categories: (i) the users, who hold the data; (ii) the “server,” who runs the algorithm; and (iii) the rest of the world, which does what the rest of the world does. As the name indicates, the <em>trust model</em> boils down to the following simple question: as a user, <strong>who do you trust</strong> with your sensitive data?</p>

<p>In the <em>DP model</em> <strong>[DMNS06]</strong>, the answer is essentially “the server, and nobody else.” Users are happy to provide their data to the server, which runs the algorithm on the resulting dataset; however, the <em>output</em> of that algorithm, which is released to the (untrusted) world, needs to be private, and not reveal sensitive information about any single user.</p>

<p>In the <em>LDP model</em> <strong>[EGS03,KLNRS08]</strong>, the server itself is untrusted, and the answer is “nobody.” Any data communicated by the users must already be private, and even a prying server cannot learn much about any single user. Of course, this is a strictly more stringent privacy model than the central DP one, and this comes at a price: the utility one can obtain from the same amount of data is typically smaller than in the DP model.</p>

<p>The <em>pan-privacy model</em> <strong>[DNPRY10]</strong> introduces the notion of time. Each user contributes their data to the server sequentially, one after the other; once the server is done receiving and processing this data, the output is revealed to the world. The answer to the question then is that users trust the server <em>at the time they send it their data</em>, but maybe not in the future (and they <em>definitely</em> don’t trust the outside world). Put differently, this captures settings where a server can be compromised: at the time a  user sends their data, they trust the server; if the server is compromised at any point in the future, then the data already in the server <em>stays</em> private (but, of course, sending any more data after the server has already been attacked is a bad idea).</p>

<p>Finally, the recent <em>shuffle model</em> of privacy <strong>[CSUZZ19,EFMRTT19]</strong> is in some sense intermediate between the central and local models of DP: users do not trust the server (and, god forbid, they still don’t trust the outside world!); however, they do trust some small blackbox in the middle, whose role is to randomly, well, <em>shuffle</em> the data. That is, when all users send their data to the untrusted server, this box-in-the-middle randomly permutes all the data points, so that the server had no idea who sent which part of the data. This simple-yet-helpful trusted backbox, in turn, can be implemented using e.g., cryptographic primitives; and the goal is to try and provide stronger privacy than in the DP model, while suffering a smaller utility loss than in the stringent LDP model.</p>

<p>It is important to note that <em>there is no right or wrong model</em> of privacy here, and one cannot say that any of the above notion is “better” than the others with regard to both privacy and accuracy. They all aim at modeling different scenarios, and provide incomparable guarantees: depending on your situation, pick the one that fits best.</p>

<hr/>

<p><strong>[<a href="https://arxiv.org/abs/1808.01394">CSUZZ19</a>]</strong> Albert Cheu, Adam D. Smith, Jonathan Ullman, David Zeber, Maxim Zhilyaev:
<em>Distributed Differential Privacy via Shuffling.</em> EUROCRYPT (1) 2019: 375-403</p>

<p><strong>[<a href="https://journalprivacyconfidentiality.org/index.php/jpc/article/view/405">DMNS06</a>]</strong> Cynthia Dwork, Frank McSherry, Kobbi Nissim, Adam D. Smith:
<em>Calibrating Noise to Sensitivity in Private Data Analysis.</em> TCC 2006: 265-284</p>

<p><strong>[<a href="https://conference.iiis.tsinghua.edu.cn/ICS2010/content/papers/6.html">DNPRY10</a>]</strong> Cynthia Dwork, Moni Naor, Toniann Pitassi, Guy N. Rothblum, Sergey Yekhanin:
<em>Pan-Private Streaming Algorithms.</em> ICS 2010: 66-80</p>

<p><strong>[<a href="https://arxiv.org/abs/1811.12469">EFMRTT19</a>]</strong> Úlfar Erlingsson, Vitaly Feldman, Ilya Mironov, Ananth Raghunathan, Kunal Talwar, Abhradeep Thakurta:
<em>Amplification by Shuffling: From Local to Central Differential Privacy via Anonymity.</em> SODA 2019: 2468-2479</p>

<p><strong>[<a href="https://dl.acm.org/doi/10.1145/773153.773174">EGS03</a>]</strong> Alexandre V. Evfimievski, Johannes Gehrke, Ramakrishnan Srikant:
<em>Limiting privacy breaches in privacy preserving data mining.</em> PODS 2003: 211-222</p>

<p><strong>[<a href="https://arxiv.org/abs/0803.0924">KLNRS08</a>]</strong> Shiva Prasad Kasiviswanathan, Homin K. Lee, Kobbi Nissim, Sofya Raskhodnikova, Adam D. Smith:
<em>What Can We Learn Privately?</em> FOCS 2008: 531-540</p></div>
    </summary>
    <updated>2020-07-17T15:45:00Z</updated>
    <published>2020-07-17T15:45:00Z</published>
    <author>
      <name>Clément Canonne</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-07-18T18:21:39Z</updated>
    </source>
  </entry>

  <entry xml:lang="en">
    <id>http://cstheory-jobs.org/2020/07/17/postdoc-at-harvard-apply-by-august-3-2020/</id>
    <link href="https://cstheory-jobs.org/2020/07/17/postdoc-at-harvard-apply-by-august-3-2020/" rel="alternate" type="text/html"/>
    <title>Postdoc at Harvard (apply by August 3, 2020)</title>
    <summary>Funding for a research project on the use of AI techniques, specifically imitation learning and deep multi-agent reinforcement learning, for economic design. The ideal researcher will have a technical background in an area related to computer science and economics, especially machine learning; experience with economic theory is desirable but not required. Website: http://www.eecs.harvard.edu/~parkes/7-20EconAI-postdocad2.pdf Email: PARKES@EECS.HARVARD.EDU</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Funding for a research project on the use of AI techniques, specifically imitation learning and deep multi-agent reinforcement learning, for economic design. The ideal researcher will have a technical background in an area related to computer science and economics, especially machine learning; experience with economic theory is desirable but not required.</p>
<p>Website: <a href="http://www.eecs.harvard.edu/~parkes/7-20EconAI-postdocad2.pdf">http://www.eecs.harvard.edu/~parkes/7-20EconAI-postdocad2.pdf</a><br/>
Email: PARKES@EECS.HARVARD.EDU</p></div>
    </content>
    <updated>2020-07-17T12:08:27Z</updated>
    <published>2020-07-17T12:08:27Z</published>
    <category term="Uncategorized"/>
    <author>
      <name>shacharlovett</name>
    </author>
    <source>
      <id>https://cstheory-jobs.org</id>
      <logo>https://s0.wp.com/i/buttonw-com.png</logo>
      <link href="https://cstheory-jobs.org/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://cstheory-jobs.org" rel="alternate" type="text/html"/>
      <link href="https://cstheory-jobs.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/>
      <link href="https://cstheory-jobs.org/?pushpress=hub" rel="hub" type="text/html"/>
      <title>Theoretical Computer Science Jobs</title>
      <updated>2020-07-18T18:20:40Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://differentialprivacy.org/welcome/</id>
    <link href="https://differentialprivacy.org/welcome/" rel="alternate" type="text/html"/>
    <title>Welcome to DifferentialPrivacy.org!</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Hello, welcome to this new website! Our goal is to serve as a hub for the differential privacy research community and to promote the work in this area. Please read on to learn more!</p>

<p>We anticipate posting a variety of content, from announcements to mini-surveys of topics in the differential privacy literature. These are archived on our <a href="https://differentialprivacy.org/categories/">Posts</a> page. 
We have also assembled a collection of <a href="https://differentialprivacy.org/resources/">Resources</a>, which we hope will help newcomers learn and enter the field.</p>

<p>We have created a <a href="https://groups.google.com/forum/#!forum/differential-privacy-org">mailing list</a> for the differential privacy community. 
The goal is to create a channel which could reach the entire differential privacy community at once.
We envision this list being used only to send out announcements of the most broad interest, and as such, it is anticipated to be very low-traffic (≈ 1 post per month). 
Click <a href="https://groups.google.com/forum/#!forum/differential-privacy-org/join">here</a> to join.</p>

<p>To follow the latest updates on DifferentialPrivacy.org, you can:</p>
<ol>
  <li>Follow us on <a href="https://twitter.com/DiffPriv">Twitter</a></li>
  <li>Subscribe to our <a href="https://differentialprivacy.org/feed.xml">RSS feed</a></li>
  <li>Sign up for <a href="https://feedburner.google.com/fb/a/mailverify?uri=DifferentialPrivacy">email updates</a> (note: distinct from the Google Groups mailing list)</li>
  <li>Set this website to be your homepage ;)</li>
</ol>

<p>This is a community-driven effort and we welcome participation. 
If you are interested in contributing, please reach out to us (by email or in the comments below). 
Further details are on <a href="https://differentialprivacy.org/about/">About</a> and <a href="https://github.com/differentialprivacy/differentialprivacy">Github</a>.</p>

<p>To get things started, here is a definition:</p>

<blockquote>
  <p><strong>Definition 1.</strong> [<a href="https://journalprivacyconfidentiality.org/index.php/jpc/article/view/405">DMNS06</a>, <a href="https://www.iacr.org/archive/eurocrypt2006/40040493/40040493.pdf">DKMMN06</a>]</p>

  <p>A randomized algorithm \(M : \mathcal{X}^n \to \mathcal{Y}\) is \((\varepsilon,\delta)\)-differentially private if, for all \(x,x’ \in \mathcal{X}^n\) differing on a single entry and all measurable \(E \subseteq \mathcal{Y}\), we have \[\mathbb{P}[M(x) \in E] \le e^\varepsilon \cdot \mathbb{P}[M(x’) \in E]  + \delta.\]</p>
</blockquote></div>
    </summary>
    <updated>2020-07-17T01:00:00Z</updated>
    <published>2020-07-17T01:00:00Z</published>
    <author>
      <name>Zhiwei Steven Wu</name>
    </author>
    <source>
      <id>https://differentialprivacy.org</id>
      <link href="https://differentialprivacy.org" rel="alternate" type="text/html"/>
      <link href="https://differentialprivacy.org/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Website for the differential privacy research community</subtitle>
      <title>Differential Privacy</title>
      <updated>2020-07-18T18:21:39Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08415</id>
    <link href="http://arxiv.org/abs/2007.08415" rel="alternate" type="text/html"/>
    <title>Fully Dynamic Algorithms for Knapsack Problems with Polylogarithmic Update Time</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/B=ouml=hm:Martin.html">Martin Böhm</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/e/Eberle:Franziska.html">Franziska Eberle</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Megow:Nicole.html">Nicole Megow</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Simon:Bertrand.html">Bertrand Simon</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/n/N=ouml=lke:Lukas.html">Lukas Nölke</a>, Jens Schlöter, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wiese:Andreas.html">Andreas Wiese</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08415">PDF</a><br/><b>Abstract: </b>Knapsack problems are among the most fundamental problems in optimization. In
the Multiple Knapsack problem, we are given multiple knapsacks with different
capacities and items with values and sizes. The task is to find a subset of
items of maximum total value that can be packed into the knapsacks without
exceeding the capacities. We investigate this problem and special cases thereof
in the context of dynamic algorithms and design data structures that
efficiently maintain near-optimal knapsack solutions for dynamically changing
input. More precisely, we handle the arrival and departure of individual items
or knapsacks during the execution of the algorithm with worst-case update time
polylogarithmic in the number of items. As the optimal and any approximate
solution may change drastically, we only maintain implicit solutions and
support certain queries in polylogarithmic time, such as the packing of an item
and the solution value.
</p>
<p>While dynamic algorithms are well-studied in the context of graph problems,
there is hardly any work on packing problems and generally much less on
non-graph problems. Given the theoretical interest in knapsack problems and
their practical relevance, it is somewhat surprising that Knapsack has not been
addressed before in the context of dynamic algorithms and our work bridges this
gap.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08401</id>
    <link href="http://arxiv.org/abs/2007.08401" rel="alternate" type="text/html"/>
    <title>Optimal Vertex Fault-Tolerant Spanners in Polynomial Time</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bodwin:Greg.html">Greg Bodwin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Dinitz:Michael.html">Michael Dinitz</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Robelle:Caleb.html">Caleb Robelle</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08401">PDF</a><br/><b>Abstract: </b>Recent work has pinned down the existentially optimal size bounds for vertex
fault-tolerant spanners: for any positive integer $k$, every $n$-node graph has
a $(2k-1)$-spanner on $O(f^{1-1/k} n^{1+1/k})$ edges resilient to $f$ vertex
faults, and there are examples of input graphs on which this bound cannot be
improved. However, these proofs work by analyzing the output spanner of a
certain exponential-time greedy algorithm. In this work, we give the first
algorithm that produces vertex fault tolerant spanners of optimal size and
which runs in polynomial time. Specifically, we give a randomized algorithm
which takes $\widetilde{O}\left( f^{1-1/k} n^{2+1/k} + mf^2\right)$ time. We
also derandomize our algorithm to give a deterministic algorithm with similar
bounds. This reflects an exponential improvement in runtime over [Bodwin-Patel
PODC '19], the only previously known algorithm for constructing optimal vertex
fault-tolerant spanners.
</p></div>
    </summary>
    <updated>2020-07-17T23:39:09Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08357</id>
    <link href="http://arxiv.org/abs/2007.08357" rel="alternate" type="text/html"/>
    <title>Substring Complexity in Sublinear Space</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bernardini:Giulia.html">Giulia Bernardini</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Fici:Gabriele.html">Gabriele Fici</a>, Paweł Gawrychowski, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pissis:Solon_P=.html">Solon P. Pissis</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08357">PDF</a><br/><b>Abstract: </b>Shannon's entropy is a definitive lower bound for statistical compression.
Unfortunately, no such clear measure exists for the compressibility of
repetitive strings. Thus, ad-hoc measures are employed to estimate the
repetitiveness of strings, e.g., the size $z$ of the Lempel-Ziv parse or the
number $r$ of equal-letter runs of the Burrows-Wheeler transform. A more recent
one is the size $\gamma$ of a smallest string attractor. Unfortunately, Kempa
and Prezza [STOC 2018] showed that computing $\gamma$ is NP-hard. Kociumaka et
al. [LATIN 2020] considered a new measure that is based on the function $S_T$
counting the cardinalities of the sets of substrings of each length of $T$,
also known as the substring complexity. This new measure is defined as $\delta=
\sup\{S_T(k)/k, k\geq 1\}$ and lower bounds all the measures previously
considered. In particular, $\delta\leq \gamma$ always holds and $\delta$ can be
computed in $\mathcal{O}(n)$ time using $\Omega(n)$ working space. Kociumaka et
al. showed that if $\delta$ is given, one can construct an $\mathcal{O}(\delta
\log \frac{n}{\delta})$-sized representation of $T$ supporting efficient direct
access and efficient pattern matching queries on $T$. Given that for highly
compressible strings, $\delta$ is significantly smaller than $n$, it is natural
to pose the following question: Can we compute $\delta$ efficiently using
sublinear working space?
</p>
<p>It is straightforward to show that any algorithm computing $\delta$ using
$\mathcal{O}(b)$ space requires $\Omega(n^{2-o(1)}/b)$ time through a reduction
from the element distinctness problem [Yao, SIAM J. Comput. 1994]. We present
the following results: an $\mathcal{O}(n^3/b^2)$-time and
$\mathcal{O}(b)$-space algorithm to compute $\delta$, for any $b\in[1,n]$; and
an $\tilde{\mathcal{O}}(n^2/b)$-time and $\mathcal{O}(b)$-space algorithm to
compute $\delta$, for any $b\in[n^{2/3},n]$.
</p></div>
    </summary>
    <updated>2020-07-17T23:41:49Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08285</id>
    <link href="http://arxiv.org/abs/2007.08285" rel="alternate" type="text/html"/>
    <title>Quantum algorithms for graph problems with cut queries</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lee:Troy.html">Troy Lee</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Santha:Miklos.html">Miklos Santha</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Shengyu.html">Shengyu Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08285">PDF</a><br/><b>Abstract: </b>Let $G$ be an $n$-vertex graph with $m$ edges. When asked a subset $S$ of
vertices, a cut query on $G$ returns the number of edges of $G$ that have
exactly one endpoint in $S$. We show that there is a bounded-error quantum
algorithm that determines all connected components of $G$ after making
$O(\log(n)^5)$ many cut queries. In contrast, it follows from results in
communication complexity that any randomized algorithm even just to decide
whether the graph is connected or not must make at least $\Omega(n/\log(n))$
many cut queries. We further show that with $O(\log(n)^7)$ many cut queries a
quantum algorithm can with high probability output a spanning forest for $G$.
</p>
<p>En route to proving these results, we design quantum algorithms for learning
a graph using cut queries. We show that a quantum algorithm can learn a graph
with maximum degree $d$ after $O(d \log(n)^2)$ many cut queries, and can learn
a general graph with $O(\sqrt{m} \log(n)^{3/2})$ many cut queries. These two
upper bounds are tight up to the poly-logarithmic factors, and compare to
$\Omega(dn)$ and $\Omega(m/\log(n))$ lower bounds on the number of cut queries
needed by a randomized algorithm for the same problems, respectively.
</p>
<p>The key ingredients in our results are the Bernstein-Vazirani algorithm,
approximate counting with "OR queries", and learning sparse vectors from inner
products as in compressed sensing.
</p></div>
    </summary>
    <updated>2020-07-17T23:24:36Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08253</id>
    <link href="http://arxiv.org/abs/2007.08253" rel="alternate" type="text/html"/>
    <title>Improved Deterministic Network Decomposition</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Ghaffari:Mohsen.html">Mohsen Ghaffari</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Grunau:Christoph.html">Christoph Grunau</a>, Václav Rozhoň <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08253">PDF</a><br/><b>Abstract: </b>Network decomposition is a central tool in distributed graph algorithms. We
present two improvements on the state of the art for network decomposition,
which thus lead to improvements in the (deterministic and randomized)
complexity of several well-studied graph problems.
</p>
<p>- We provide a deterministic distributed network decomposition algorithm with
$O(\log^5 n)$ round complexity, using $O(\log n)$-bit messages. This improves
on the $O(\log^7 n)$-round algorithm of Rozho\v{n} and Ghaffari [STOC'20],
which used large messages, and their $O(\log^8 n)$-round algorithm with $O(\log
n)$-bit messages. This directly leads to similar improvements for a wide range
of deterministic and randomized distributed algorithms, whose solution relies
on network decomposition, including the general distributed derandomization of
Ghaffari, Kuhn, and Harris [FOCS'18].
</p>
<p>- One drawback of the algorithm of Rozho\v{n} and Ghaffari, in the
$\mathsf{CONGEST}$ model, was its dependence on the length of the identifiers.
Because of this, for instance, the algorithm could not be used in the
shattering framework in the $\mathsf{CONGEST}$ model. Thus, the state of the
art randomized complexity of several problems in this model remained with an
additive $2^{O(\sqrt{\log\log n})}$ term, which was a clear leftover of the
older network decomposition complexity [Panconesi and Srinivasan STOC'92]. We
present a modified version that remedies this, constructing a decomposition
whose quality does not depend on the identifiers, and thus improves the
randomized round complexity for various problems.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08179</id>
    <link href="http://arxiv.org/abs/2007.08179" rel="alternate" type="text/html"/>
    <title>String Sanitization Under Edit Distance: Improved and Generalized</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/m/Mieno:Takuya.html">Takuya Mieno</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pissis:Solon_P=.html">Solon P. Pissis</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Stougie:Leen.html">Leen Stougie</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Sweering:Michelle.html">Michelle Sweering</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08179">PDF</a><br/><b>Abstract: </b>Let $W$ be a string of length $n$ over an alphabet $\Sigma$, $k$ be a
positive integer, and $\mathcal{S}$ be a set of length-$k$ substrings of $W$.
The ETFS problem asks us to construct a string $X_{\mathrm{ED}}$ such that: (i)
no string of $\mathcal{S}$ occurs in $X_{\mathrm{ED}}$; (ii) the order of all
other length-$k$ substrings over $\Sigma$ is the same in $W$ and in
$X_{\mathrm{ED}}$; and (iii) $X_{\mathrm{ED}}$ has minimal edit distance to
$W$. When $W$ represents an individual's data and $\mathcal{S}$ represents a
set of confidential patterns, the ETFS problem asks for transforming $W$ to
preserve its privacy and its utility [Bernardini et al., ECML PKDD 2019].
</p>
<p>ETFS can be solved in $\mathcal{O}(n^2k)$ time [Bernardini et al., CPM 2020].
The same paper shows that ETFS cannot be solved in $\mathcal{O}(n^{2-\delta})$
time, for any $\delta&gt;0$, unless the Strong Exponential Time Hypothesis (SETH)
is false. Our main results can be summarized as follows: (i) an
$\mathcal{O}(n^2\log^2k)$-time algorithm to solve ETFS; and (ii) an
$\mathcal{O}(n^2\log^2n)$-time algorithm to solve AETFS, a generalization of
ETFS in which the elements of $\mathcal{S}$ can have arbitrary lengths. Our
algorithms are thus optimal up to polylogarithmic factors, unless SETH fails.
Let us also stress that our algorithms work under edit distance with arbitrary
weights at no extra cost. As a bonus, we show how to modify some known
techniques, which speed up the standard edit distance computation, to be
applied to our problems. Beyond string sanitization, our techniques may inspire
solutions to other problems related to regular expressions or context-free
grammars.
</p></div>
    </summary>
    <updated>2020-07-17T23:47:15Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08137</id>
    <link href="http://arxiv.org/abs/2007.08137" rel="alternate" type="text/html"/>
    <title>Optimal Robust Linear Regression in Nearly Linear Time</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Cherapanamjeri:Yeshwanth.html">Yeshwanth Cherapanamjeri</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/a/Aras:Efe.html">Efe Aras</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/t/Tripuraneni:Nilesh.html">Nilesh Tripuraneni</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/j/Jordan:Michael_I=.html">Michael I. Jordan</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Flammarion:Nicolas.html">Nicolas Flammarion</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bartlett:Peter_L=.html">Peter L. Bartlett</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08137">PDF</a><br/><b>Abstract: </b>We study the problem of high-dimensional robust linear regression where a
learner is given access to $n$ samples from the generative model $Y = \langle
X,w^* \rangle + \epsilon$ (with $X \in \mathbb{R}^d$ and $\epsilon$
independent), in which an $\eta$ fraction of the samples have been
adversarially corrupted. We propose estimators for this problem under two
settings: (i) $X$ is L4-L2 hypercontractive, $\mathbb{E} [XX^\top]$ has bounded
condition number and $\epsilon$ has bounded variance and (ii) $X$ is
sub-Gaussian with identity second moment and $\epsilon$ is sub-Gaussian. In
both settings, our estimators: (a) Achieve optimal sample complexities and
recovery guarantees up to log factors and (b) Run in near linear time
($\tilde{O}(nd / \eta^6)$). Prior to our work, polynomial time algorithms
achieving near optimal sample complexities were only known in the setting where
$X$ is Gaussian with identity covariance and $\epsilon$ is Gaussian, and no
linear time estimators were known for robust linear regression in any setting.
Our estimators and their analysis leverage recent developments in the
construction of faster algorithms for robust mean estimation to improve
runtimes, and refined concentration of measure arguments alongside Gaussian
rounding techniques to improve statistical sample complexities.
</p></div>
    </summary>
    <updated>2020-07-17T23:26:53Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08101</id>
    <link href="http://arxiv.org/abs/2007.08101" rel="alternate" type="text/html"/>
    <title>The Sparse Hausdorff Moment Problem, with Application to Topic Models</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Gordon:Spencer.html">Spencer Gordon</a>, Bijan Mazaheri, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/s/Schulman:Leonard_J=.html">Leonard J. Schulman</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/r/Rabani:Yuval.html">Yuval Rabani</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08101">PDF</a><br/><b>Abstract: </b>We consider the problem of identifying, from its first $m$ noisy moments, a
probability distribution on $[0,1]$ of support $k&lt;\infty$. This is equivalent
to the problem of learning a distribution on $m$ observable binary random
variables $X_1,X_2,\dots,X_m$ that are iid conditional on a hidden random
variable $U$ taking values in $\{1,2,\dots,k\}$. Our focus is on accomplishing
this with $m=2k$, which is the minimum $m$ for which verifying that the source
is a $k$-mixture is possible (even with exact statistics). This problem, so
simply stated, is quite useful: e.g., by a known reduction, any algorithm for
it lifts to an algorithm for learning pure topic models.
</p>
<p>In past work on this and also the more general mixture-of-products problem
($X_i$ independent conditional on $U$, but not necessarily iid), a barrier at
$m^{O(k^2)}$ on the sample complexity and/or runtime of the algorithm was
reached. We improve this substantially. We show it suffices to use a sample of
size $\exp(k\log k)$ (with $m=2k$). It is known that the sample complexity of
any solution to the identification problem must be $\exp(\Omega(k))$. Stated in
terms of the moment problem, it suffices to know the moments to additive
accuracy $\exp(-k\log k)$. Our run-time for the moment problem is only
$O(k^{2+o(1)})$ arithmetic operations.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08091</id>
    <link href="http://arxiv.org/abs/2007.08091" rel="alternate" type="text/html"/>
    <title>Rapid mixing from spectral independence beyond the Boolean domain</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/f/Feng:Weiming.html">Weiming Feng</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Guo:Heng.html">Heng Guo</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yin:Yitong.html">Yitong Yin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/z/Zhang:Chihao.html">Chihao Zhang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08091">PDF</a><br/><b>Abstract: </b>We extend the notion of spectral independence (introduced by Anari, Liu, and
Oveis Gharan [ALO20]) from the Boolean domain to general discrete domains. This
property characterises distributions with limited correlations, and implies
that the corresponding Glauber dynamics is rapidly mixing.
</p>
<p>As a concrete application, we show that Glauber dynamics for sampling proper
$q$-colourings mixes in polynomial-time for the family of triangle-free graphs
with maximum degree $\Delta$ provided $q\ge (\alpha^*+\delta)\Delta$ where
$\alpha^*\approx 1.763$ is the unique solution to $\alpha^*=\exp(1/\alpha^*)$
and $\delta&gt;0$ is any constant. This is the first efficient algorithm for
sampling proper $q$-colourings in this regime with possibly unbounded $\Delta$.
Our main tool of establishing spectral independence is the recursive coupling
by Goldberg, Martin, and Paterson [GMP05].
</p></div>
    </summary>
    <updated>2020-07-17T23:39:46Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08075</id>
    <link href="http://arxiv.org/abs/2007.08075" rel="alternate" type="text/html"/>
    <title>Augmented Sparsifiers for Generalized Hypergraph Cuts</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Benson:Austin_R=.html">Austin R. Benson</a>, Jon Kleinberg, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Veldt:Nate.html">Nate Veldt</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08075">PDF</a><br/><b>Abstract: </b>In recent years, hypergraph generalizations of many graph cut problems have
been introduced and analyzed as a way to better explore and understand complex
systems and datasets characterized by multiway relationships. Recent work has
made use of a generalized hypergraph cut function which for a hypergraph
$\mathcal{H} = (V,E)$ can be defined by associating each hyperedge $e \in E$
with a splitting function ${\bf w}_e$, which assigns a penalty to each way of
separating the nodes of $e$. When each ${\bf w}_e$ is a submodular
cardinality-based splitting function, meaning that ${\bf w}_e(S) = g(|S|)$ for
some concave function $g$, previous work has shown that a generalized
hypergraph cut problem can be reduced to a directed graph cut problem on an
augmented node set. However, existing reduction procedures often result in a
dense graph, even when the hypergraph is sparse, which leads to slow runtimes
for algorithms that run on the reduced graph.
</p>
<p>We introduce a new framework of sparsifying hypergraph-to-graph reductions,
where a hypergraph cut defined by submodular cardinality-based splitting
functions is $(1+\varepsilon)$-approximated by a cut on a directed graph. Our
techniques are based on approximating concave functions using piecewise linear
curves. For $\varepsilon &gt; 0$ we need at most $O(\varepsilon^{-1}|e| \log |e|)$
edges to reduce any hyperedge $e$, which leads to faster runtimes for
approximating generalized hypergraph $s$-$t$ cut problems. For the machine
learning heuristic of a clique splitting function, our approach requires only
$O(|e| \varepsilon^{-1/2} \log \log \frac{1}{\varepsilon})$ edges. This
sparsification leads to faster approximate min $s$-$t$ graph cut algorithms for
certain classes of co-occurrence graphs. Finally, we apply our sparsification
techniques to develop approximation algorithms for minimizing sums of
cardinality-based submodular functions.
</p></div>
    </summary>
    <updated>2020-07-17T23:46:50Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08058</id>
    <link href="http://arxiv.org/abs/2007.08058" rel="alternate" type="text/html"/>
    <title>Rapid Mixing for Colorings via Spectral Independence</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chen:Zongchen.html">Zongchen Chen</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Galanis:Andreas.html">Andreas Galanis</a>, Daniel Štefankovič, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/Vigoda:Eric.html">Eric Vigoda</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08058">PDF</a><br/><b>Abstract: </b>The spectral independence approach of Anari et al. (2020) utilized recent
results on high-dimensional expanders of Alev and Lau (2020) and established
rapid mixing of the Glauber dynamics for the hard-core model defined on
weighted independent sets. We develop the spectral independence approach for
colorings, and obtain new algorithmic results for the corresponding
counting/sampling problems.
</p>
<p>Let $\alpha^*\approx 1.763$ denote the solution to $\exp(1/x)=x$ and let
$\alpha&gt;\alpha^*$. We prove that, for any triangle-free graph $G=(V,E)$ with
maximum degree $\Delta$, for all $q\geq\alpha\Delta+1$, the mixing time of the
Glauber dynamics for $q$-colorings is polynomial in $n=|V|$, with the exponent
of the polynomial independent of $\Delta$ and $q$. In comparison, previous
approximate counting results for colorings held for a similar range of $q$
(asymptotically in $\Delta$) but with larger girth requirement or with a
running time where the polynomial exponent depended on $\Delta$ and $q$
(exponentially). One further feature of using the spectral independence
approach to study colorings is that it avoids many of the technical
complications in previous approaches caused by coupling arguments or by passing
to the complex plane; the key improvement on the running time is based on
relatively simple combinatorial arguments which are then translated into
spectral bounds.
</p></div>
    </summary>
    <updated>2020-07-17T23:45:11Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.08051</id>
    <link href="http://arxiv.org/abs/2007.08051" rel="alternate" type="text/html"/>
    <title>Information Theoretic Limits of Cardinality Estimation: Fisher Meets Shannon</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/p/Pettie:Seth.html">Seth Pettie</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/w/Wang:Dingyu.html">Dingyu Wang</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.08051">PDF</a><br/><b>Abstract: </b>In this paper we study the intrinsic tradeoff between the space complexity of
the sketch and its estimation error in the Random Oracle model. We define a new
measure of efficiency for cardinality estimators called the Fisher-Shannon
($\mathsf{Fish}$) number $\mathcal{H}/\mathcal{I}$. It captures the tension
between the limiting Shannon entropy ($\mathcal{H}$) of the sketch and its
normalized Fisher information ($\mathcal{I}$), which characterizes
(asymptotically) the variance of a statistically efficient estimator. We prove
that many variants of the $\mathsf{PCSA}$ sketch of Flajolet and Martin have
$\mathsf{Fish}$ number $H_0/I_0$, where $H_0,I_0$ are two precisely-defined
constants, and that all base-$q$ generalizations of
($\textsf{Hyper}$)$\textsf{LogLog}$ are strictly worse than $H_0/I_0$, but tend
to $H_0/I_0$ in the limit as $q\to\infty$. All other known sketches have even
worse $\mathsf{Fish}$-numbers. We introduce a new sketch called
$\mathsf{Fishmonger}$ that is based on a smoothed, compressed version of
$\mathsf{PCSA}$ with a different estimation function. $\mathsf{Fishmonger}$ has
$\mathsf{Fish}$ number $H_0/I_0 \approx 1.98$. It stores $O(\log^2\log U) +
(H_0/I_0)b \approx 1.98b$ bits, and estimates cardinalities of multisets of
$[U]$ with a standard error of $(1+o(1))/\sqrt{b}$. $\mathsf{Fishmonger}$'s
space-error tradeoff improves on state-of-the-art sketches like
$\textsf{HyperLogLog}$, or even compressed representations of it.
$\mathsf{Fishmonger}$ can be used in a distributed environment (where
substreams are sketched separately and composed later). We conjecture that the
$\mathsf{Fish}$-number $H_0/I_0$ is a universal lower bound for any such
composable sketch.
</p></div>
    </summary>
    <updated>2020-07-17T23:46:02Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07990</id>
    <link href="http://arxiv.org/abs/2007.07990" rel="alternate" type="text/html"/>
    <title>Static pricing for multi-unit prophet inequalities</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/c/Chawla:Shuchi.html">Shuchi Chawla</a>, Nikhil Devanur, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Lykouris:Thodoris.html">Thodoris Lykouris</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07990">PDF</a><br/><b>Abstract: </b>We study a pricing problem where a seller has $k$ identical copies of a
product, buyers arrive sequentially, and the seller prices the items aiming to
maximize social welfare. When $k=1$, this is the so called \emph{prophet
inequality} problem for which there is a simple pricing scheme achieving a
competitive ratio of $1/2$. On the other end of the spectrum, as $k$ goes to
infinity, the asymptotic performance of both static and adaptive pricing is
well understood.
</p>
<p>We provide a static pricing scheme for the small-supply regime: where $k$ is
small but larger than $1$. Prior to our work, the best competitive ratio known
for this setting was the $1/2$ that follows from the single-unit prophet
inequality. Our pricing scheme is easy to describe as well as practical -- it
is anonymous, non-adaptive, and order-oblivious. We pick a single price that
equalizes the expected fraction of items sold and the probability that the
supply does not sell out before all customers are served; this price is then
offered to each customer while supply lasts. This pricing scheme achieves a
competitive ratio that increases gradually with the supply and approaches to
$1$ at the optimal rate. Astonishingly, for $k&lt;20$, it even outperforms the
state-of-the-art adaptive pricing for the small-$k$ regime.
</p></div>
    </summary>
    <updated>2020-07-17T00:00:00Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07975</id>
    <link href="http://arxiv.org/abs/2007.07975" rel="alternate" type="text/html"/>
    <title>Directed Shortest Paths via Approximate Cost Balancing</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/o/Orlin:James_B=.html">James B. Orlin</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/v/V=eacute=gh:L=aacute=szl=oacute=_A=.html">László A. Végh</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07975">PDF</a><br/><b>Abstract: </b>We present an $O(nm)$ algorithm for all-pairs shortest paths computations in
a directed graph with $n$ nodes, $m$ arcs, and nonnegative integer arc costs.
This matches the complexity bound attained by Thorup (1999) for the all-pairs
problems in undirected graphs. Our main insight is that shortest paths problems
with approximately balanced directed cost functions can be solved similarly to
the undirected case. Our algorithm starts with an $O(m\sqrt{n}\log n)$
preprocessing step that finds a 3-min-balanced reduced cost function. Using
these reduced costs, every shortest path query can be solved in $O(m)$ time
using an adaptation of Thorup's component hierarchy method. The balancing
result is of independent interest, and gives the best currently known
approximate balancing algorithm for the problem.
</p></div>
    </summary>
    <updated>2020-07-17T23:43:48Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>http://arxiv.org/abs/2007.07921</id>
    <link href="http://arxiv.org/abs/2007.07921" rel="alternate" type="text/html"/>
    <title>Performance analysis of a distributed algorithm for admission control in wireless networks under the $2$-hop interference model</title>
    <feedworld_mtime>1594944000</feedworld_mtime>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/g/Ganesan:Ashwin.html">Ashwin Ganesan</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/2007.07921">PDF</a><br/><b>Abstract: </b>A general open problem in networking is: what are the fundamental limits to
the performance that is achievable with some given amount of resources? More
specifically, if each node in the network has information about only its
$1$-hop neighborhood, then what are the limits to performance? This problem is
considered for wireless networks where each communication link has a minimum
bandwidth quality-of-service (QoS) requirement. Links in the same vicinity
contend for the shared wireless medium. The conflict graph captures which pairs
of links interfere with each other and depends on the MAC protocol. In IEEE
802.11 MAC protocol-based networks, when communication between nodes $i$ and
$j$ takes place, the neighbors of both $i$ and $j$ remain silent. This model of
interference is called the $2$-hop interference model because the distance in
the network graph between any two links that can be simultaneously active is at
least $2$. In the admission control problem, the objective is to determine,
using only localized information, whether a given set of flow rates is
feasible.
</p>
<p>In the present work, a distributed algorithm is proposed for this problem,
where each node has information only about its $1$-hop neighborhood. The
worst-case performance of the distributed algorithm, i.e. the largest factor by
which the performance of this distributed algorithm is away from that of an
optimal, centralized algorithm, is analyzed. Lower and upper bounds on the
suboptimality of the distributed algorithm are obtained, and both bounds are
shown to be tight. The exact worst-case performance is obtained for some ring
topologies. While distance-$d$ distributed algorithms have been analyzed for
the $1$-hop interference model, an open problem in the literature is to extend
these results to the $K$-hop interference model, and the present work initiates
the generalization to the $K$-hop interference model.
</p></div>
    </summary>
    <updated>2020-07-17T23:43:41Z</updated>
    <author>
      <name/>
    </author>
    <source>
      <id>http://arxiv.org/</id>
      <category term="Computer Science -- Data Structures and Algorithms"/>
      <link href="http://arxiv.org/" rel="alternate" type="text/html"/>
      <link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/>
      <subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle>
      <title>cs.DS updates on arXiv.org</title>
      <updated>2020-07-17T01:30:00Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/07/16/comparing-multi-sport</id>
    <link href="https://11011110.github.io/blog/2020/07/16/comparing-multi-sport.html" rel="alternate" type="text/html"/>
    <title>Comparing multi-sport athletes using bounding-box area</title>
    <summary>Where you have a triangle center defined by the intersection point of three lines or curves, you often also have a Voronoi diagram or minimization diagram whose cells have those lines as boundaries. For the circumcenter, equidistant from the three vertices of a triangle, the diagram is the classical Voronoi diagram of those three points. For the incenter, equidistant from the three sides, the diagram is the medial axis of the triangle. The Fermat point (when it doesn’t degenerate to a vertex) comes from a diagram that tells you which of the three sides of the triangle spans the widest field of view.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Where you have a <a href="https://en.wikipedia.org/wiki/Triangle_center">triangle center</a> defined by the intersection point of three lines or curves, you often also have a <a href="https://en.wikipedia.org/wiki/Voronoi_diagram">Voronoi diagram</a> or minimization diagram whose cells have those lines as boundaries. For the <a href="https://en.wikipedia.org/wiki/Circumscribed_circle">circumcenter</a>, equidistant from the three vertices of a triangle, the diagram is the classical Voronoi diagram of those three points. For the <a href="https://en.wikipedia.org/wiki/Incenter">incenter</a>, equidistant from the three sides, the diagram is the <a href="https://en.wikipedia.org/wiki/Medial_axis">medial axis</a> of the triangle. The <a href="https://en.wikipedia.org/wiki/Fermat_point">Fermat point</a> (when it doesn’t degenerate to a vertex) comes from a diagram that tells you which of the three sides of the triangle spans the widest field of view.</p>

<p>So when I posted recently about <a href="https://11011110.github.io/blog/2020/04/28/cartesian-triangle-centers.html">Cartesian triangle centers</a> defined by an equality of areas of three bounding boxes, I had in mind a minimization diagram for bounding box area, or actually the signed area  of the bounding box of the moving point  and a fixed site . Here’s one of these diagrams for six points:</p>

<p style="text-align: center;"><img alt="Minimization diagram for signed bounding box area" src="https://11011110.github.io/blog/assets/2020/bounding-box-diagram.svg"/></p>

<p>If you subtract  from the signed areas, you don’t change the minimization diagram (because you’re subtracting the same thing from all the signed areas) but it makes the functions you’re minimizing become linear in  and , explaining the polygonal shape and linear boundaries of the cells in the minimization diagram. As the previous post already described, the bisector between any two cells is the diagonal line of the bounding box of two sites.</p>

<p>I use these diagrams in a paper to appear in the Canadian Conference on Computational Geometry, now online as a preprint: “Dynamic products of ranks” (<a href="https://arxiv.org/abs/2007.08123">arXiv:2007.08123</a>). The goal of the paper is to combine two different and unrelated numerical scores of the same items such as the skiing speed and shooting accuracy of a group of <a href="https://en.wikipedia.org/wiki/Biathlon">biathletes</a>. Biathlons do this by using an arbitrary conversion factor to penalize skiing time based on shooting misses (essentially, adding the converted scores from the two parts of the sport) but instead some other sports multiply the ranks of the athletes within each discipline. So if you got, say, fifth in shooting but second in skiing, your overall score would be ten. My paper studies how quickly you can find the new winner after changing the score of a single competitor or by adding or removing a competitor in a sport using this system.</p>

<p>We can represent a set of items or group of athletes as points in the plane, whose coordinates are their ranks (not their raw scores). Then an update to the data that lies outside both the horizontal and vertical range of these points doesn’t change their relative positions: it might change their ranks, but all in the same way. So for these updates, the signed bounding box area minimization diagram stays unchanged. Because the bounding box area is just the product of ranks, we can use this diagram to quickly look up the winner among these shifted points. The overall strategy of the data structure in my paper is to divide the input data into smaller subsets and maintain their diagrams in such a way that most diagrams stay unchanged, and only a few need rebuilding, after each update. Dividing into more subsets reduces the rebuilding time, because fewer input items will belong to rebuilt diagrams, but increases the query time, because you have to query more diagrams. The  update time for the data structure in the paper comes from choosing the optimal tradeoff between these two terms of the total time.</p>

<p>There are other applications for this sort of rank aggregation beyond athletics; see the paper for details.</p>

<p>Because CCCG is online this year, I also have a video talk prepared, but it’s not yet online; I’ll post a link later. In the meantime, <a href="http://vga.usask.ca/cccg2020/">registration for CCCG is free this year, with a deadline of July 25</a>, and enables both early access to the videos and access to the Q&amp;A sessions with each speaker at the conference itself.</p></div>
    </content>
    <updated>2020-07-16T18:12:00Z</updated>
    <published>2020-07-16T18:12:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-07-17T01:13:58Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://11011110.github.io/blog/2020/07/15/linkage</id>
    <link href="https://11011110.github.io/blog/2020/07/15/linkage.html" rel="alternate" type="text/html"/>
    <title>Linkage</title>
    <summary>A stained glass window of a Latin square () will be removed from Cambridge University because it honors prominent eugenicist R. A. Fisher. The window visualizes a nice piece of mathematics, with a long history that surprisingly originates in Korea (predating Euler) but in context among windows celebrating Cambridge luminaries it could not be separated from Fisher’s racist history, so it’s sad but I think it’s the right decision.</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul>
  <li>
    <p>A <a href="https://en.wikipedia.org/wiki/Sir_Ronald_Fisher_window">stained glass window of a Latin square</a> (<a href="https://mathstodon.xyz/@11011110/104440661362867680"/>) will be <a href="https://www.theguardian.com/education/2020/jun/27/cambridge-gonville-caius-college-eugenicist-window-ronald-fisher">removed from Cambridge University</a> because it honors <a href="https://en.wikipedia.org/wiki/Ronald_Fisher">prominent eugenicist R. A. Fisher</a>. The window visualizes a nice piece of mathematics, with a long history that surprisingly originates in Korea (predating Euler) but in context among windows celebrating Cambridge luminaries it could not be separated from Fisher’s racist history, so it’s sad but I think it’s the right decision.</p>
  </li>
  <li>
    <p>What is it about <em>Quanta</em>’s oversimplifications (<a href="https://mathstodon.xyz/@11011110/104448448945740867"/>)?  A <a href="https://www.quantamagazine.org/new-geometric-perspective-cracks-old-problem-about-rectangles-20200625/">recent article</a> is on a variation of the problem of <a href="https://en.wikipedia.org/wiki/Inscribed_square_problem">squares in Jordan curves</a>, known to exist in smooth curves but unknown for some nastier ones. The new result described by <em>Quanta</em> concerns <a href="https://arxiv.org/abs/2005.09193">rectangles of given aspect ratio in smooth Jordan curves</a>. Wikipedia editors have had to fend off repeated edits by Quanta readers who came away thinking the new paper solved the original problem. It doesn’t.</p>
  </li>
  <li>
    <p><a href="http://www.mseymour.ca/hex_puzzle/hexpuzzle.html">Hex puzzles by Matthew Seymour</a> (<a href="https://mathstodon.xyz/@jsiehler/104412077950183358"/>). 500 of them, designed to guide you to greater Hex mastery, in an online applet. In the Mastodon post, Jacob Siehler explains that he can justify playing with these as work, because it relates to an upcoming course he’s teaching.</p>
  </li>
  <li>
    <p><a href="http://www.dam.brown.edu/people/mumford/blog/2020/Ridiculous.html">David Mumford on the long history of ridiculous word problems in mathematics</a> (<a href="https://mathstodon.xyz/@11011110/104462285880982461"/>, <a href="https://news.ycombinator.com/item?id=23739243">via</a>).</p>
  </li>
  <li>
    <p>A tiny improvement sometimes makes for a big result (<a href="https://mathstodon.xyz/@11011110/104465689831962167"/>): In a new preprint “<a href="https://arxiv.org/abs/2007.01409">A (Slightly) Improved Approximation Algorithm for Metric TSP</a>”, Anna Karlin, Nathan Klein, and Shayan Oveis Gharan claim a reduction in the approximation ratio for traveling salesperson in arbitrary metric spaces from  to . But it’s the first such improvement since Christofides and Serdyukov in 1976, on a central problem in approximation algorithms.</p>
  </li>
  <li>
    <p><a href="https://www.ice.gov/news/releases/sevp-modifies-temporary-exemptions-nonimmigrant-students-taking-online-courses-during">US Department of Homeland Security tried to require foreign students in the US to either attend in-person classes or leave the country</a> (<a href="https://mathstodon.xyz/@11011110/104468994612372729"/>, <a href="https://news.ycombinator.com/item?id=23751931">via</a>, <a href="https://www.nbcnews.com/politics/immigration/ice-tells-foreign-students-leave-u-s-if-their-school-n1233026">see also</a>). After facing pushback in the courts, they gave up. But while it was happening, it had the appearance of pressuring US universities into opening up in-person classes despite the ongoing pandemic, using the threat of taking away all of their foreign students.</p>
  </li>
  <li>
    <p><a href="https://www.ams.org/news?news_id=6244">Sad news from the AMS: Ron Graham has died</a> (<a href="https://mathstodon.xyz/@11011110/104477077422403456"/>). See also the blog posts about him by <a href="https://www.solipsys.co.uk/new/MeetingRonGraham.html?tg08mn">Lipton and Regan</a>, <a href="https://blog.computationalcomplexity.org/2020/07/ronald-graham-summary-of-blog-posts-we.html">Gasarch</a>, <a href="https://blog.plover.com/math/graham.html">Dominus</a>, <a href="https://www.bradyharanblog.com/blog/the-day-i-met-ron-graham">Haran</a>, and (mostly from earlier) <a href="https://www.solipsys.co.uk/new/MeetingRonGraham.html?tg08mn">Wright</a>.</p>
  </li>
  <li>
    <p><a href="http://paulbourke.net/miscellaneous/reverseperspective/">Experiments on reverse perspective</a> (<a href="https://mathstodon.xyz/@11011110/104486648345638828"/>), recent post by Paul Bourke with a link to a recent video, “<a href="https://www.youtube.com/watch?v=iJ4yL6kaV1A">Hypercentric optics</a>” by Ben Krasnow, showing how to achieve reverse perspective physically using a giant Fresnel lens.</p>
  </li>
  <li>
    <p><a href="https://eccc.weizmann.ac.il/report/2020/096/">On the asymptotic complexity of sorting</a> (<a href="https://mathstodon.xyz/@11011110/104493642072558461"/>), Igor Sergeev. We still study the number of comparisons for sorting in introductory CS, although other factors like locality of reference may be more important in practice. Common topics are the  comparison-tree lower bound and the nearly-matching  merge sort upper bound. Better sorts were known but still with an  error term. Now Sergeev has reduced the error term <span style="white-space: nowrap;">to .</span></p>
  </li>
  <li>
    <p>A messy story of unethical doings at ISCA, a major computer architecture conference (<a href="https://mathstodon.xyz/@11011110/104496752991792669"/>, <a href="https://retractionwatch.com/2020/07/11/weekend-reads-a-paper-mill-science-needs-to-clean-its-own-house-is-the-covid-19-retraction-rate-exceptionally-high/">via</a>):</p>

    <ul>
      <li>
        <p>Junk research accepted to ISCA <a href="https://medium.com/@huixiangvoice/the-hidden-story-behind-the-suicide-phd-candidate-huixiang-chen-236cd39f79d3">causes its student coauthor to kill himself</a>.</p>
      </li>
      <li>
        <p>The ensuing investigation brings to light apparent serious breaches of ISCA’s double-blind reviewing process, but <a href="https://medium.com/@huixiangvoice/evidence-put-doubts-on-the-ieee-acms-investigation-991a6d50802a">ACM and IEEE find no wrongdoing</a>.</p>
      </li>
      <li>
        <p>A <a href="https://www.natureindex.com/news-blog/probe-into-leaked-papers-submitted-to-leading-engineering-conference">somewhat-confused description of the affair hits <em>Nature</em></a>.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><a href="https://www.latimes.com/world-nation/story/2020-06-27/in-chinas-universities-targeted-attacks-on-intellectuals-raise-memories-of-the-cultural-revolution">“Spied on. Fired. Publicly shamed. China’s crackdown on professors reminds many of Mao era.”</a> (<a href="https://mathstodon.xyz/@11011110/104513232965232968"/>). (If the paywalled <em>LA Times</em> link is a problem, <a href="https://beta.trimread.com/">trimread</a> might help.)</p>
  </li>
  <li>
    <p><a href="https://www.flyingcoloursmaths.co.uk/ask-uncle-colin-a-fraction-of-a-square/">A cute dissection proof of an area calculation of a tilted square within a square</a> (<a href="https://mathstodon.xyz/@11011110/104516441062427682"/>). But to generalize from there to: tick marks that split the sides in the ratio  (in this example, 1:2) give a ratio of areas of the inner tilted square to the outer square that is  (in this case 4:10, simplifying to 2:5) it seems easier to apply similar triangles and then use Pythagoras in the tilted grid.</p>
  </li>
  <li>
    <p><a href="https://www.efavdb.com/quinoa%20packing">Quinoa packing 2 + 1 = 4</a> (<a href="https://mathstodon.xyz/@11011110/104520918846919905"/>, <a href="https://news.ycombinator.com/item?id=23727749">via</a>). This blog post theorizes that the combination of 2 cups of water and 1 cup of quinoa to form 4 cups of cooked quinoa might happen because the water fills the spaces between the grains before cooking, but merges into the grains causing them to pack like spheres with air pockets between them afterwards. On the other hand, maybe they just expand into a less-dense combination of materials that takes more room.</p>
  </li>
</ul></div>
    </content>
    <updated>2020-07-15T22:20:00Z</updated>
    <published>2020-07-15T22:20:00Z</published>
    <author>
      <name>David Eppstein</name>
    </author>
    <source>
      <id>https://11011110.github.io/blog/feed.xml</id>
      <author>
        <name>David Eppstein</name>
      </author>
      <link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
      <link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/>
      <subtitle>Geometry, graphs, algorithms, and more</subtitle>
      <title>11011110</title>
      <updated>2020-07-17T01:13:58Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/106</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/106" rel="alternate" type="text/html"/>
    <title>TR20-106 |  Explicit Extremal Designs and Applications to Extractors | 

	Eshan Chattopadhyay, 

	Jesse Goodman</title>
    <summary>An $(n,r,s)$-design, or $(n,r,s)$-partial Steiner system, is an $r$-uniform hypergraph over $n$ vertices with pairwise hyperedge intersections of size $0$, we extract from $(N,K,n,k)$-adversarial sources of locality $0$, where $K\geq N^\delta$ and $k\geq\text{polylog }n$. The previous best result (Chattopadhyay et al., STOC 2020) required $K\geq N^{1/2+o(1)}$. As a result, we get extractors for small-space sources over $n$ bits with entropy requirement $k\geq n^{1/2+\delta}$, whereas the previous best result (Chattopadhyay et al., STOC 2020) required $k\geq n^{2/3+\delta}$.</summary>
    <updated>2020-07-15T16:25:04Z</updated>
    <published>2020-07-15T16:25:04Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-07-18T18:20:25Z</updated>
    </source>
  </entry>

  <entry>
    <id>https://decentralizedthoughts.github.io/2020-07-15-asynchronous-fault-tolerant-computation-with-optimal-resilience/</id>
    <link href="https://decentralizedthoughts.github.io/2020-07-15-asynchronous-fault-tolerant-computation-with-optimal-resilience/" rel="alternate" type="text/html"/>
    <title>Asynchronous Fault Tolerant Computation with Optimal Resilience</title>
    <summary>A basic question of distributed computing: Is there a fundamental limit to fault tolerant computation in the Asynchronous model? The celebrated FLP theorem says that any protocol that solves Agreement in the asynchronous model that is resilient to at least one crash failure must have a non-terminating execution. This means...</summary>
    <updated>2020-07-15T08:39:00Z</updated>
    <published>2020-07-15T08:39:00Z</published>
    <source>
      <id>https://decentralizedthoughts.github.io</id>
      <author>
        <name>Decentralized Thoughts</name>
      </author>
      <link href="https://decentralizedthoughts.github.io" rel="alternate" type="text/html"/>
      <link href="https://decentralizedthoughts.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Decentralized thoughts about decentralization</subtitle>
      <title>Decentralized Thoughts</title>
      <updated>2020-07-18T00:21:14Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-us">
    <id>https://eccc.weizmann.ac.il/report/2020/105</id>
    <link href="https://eccc.weizmann.ac.il/report/2020/105" rel="alternate" type="text/html"/>
    <title>TR20-105 |  Automating Regular or Ordered Resolution is NP-Hard | 

	Zoë Bell</title>
    <summary>We show that is hard to find regular or even ordered (also known as Davis-Putnam) Resolution proofs, extending the breakthrough result for general Resolution from Atserias and Müller to these restricted forms. Namely, regular and ordered Resolution are automatable if and only if P = NP. Specifically, for a CNF formula $F$ the problem of distinguishing between the existence of a polynomial-size ordered Resolution refutation of $F$ and an at least exponential-size general Resolution proof being required to refute $F$ is NP-complete.</summary>
    <updated>2020-07-14T13:43:02Z</updated>
    <published>2020-07-14T13:43:02Z</published>
    <source>
      <id>https://eccc.weizmann.ac.il/</id>
      <author>
        <name>ECCC papers</name>
      </author>
      <link href="https://eccc.weizmann.ac.il/" rel="alternate" type="text/html"/>
      <link href="https://example.com/feeds/reports/" rel="self" type="application/atom+xml"/>
      <subtitle>Latest Reports published at https://eccc.weizmann.ac.il</subtitle>
      <title>ECCC - Reports</title>
      <updated>2020-07-18T18:20:25Z</updated>
    </source>
  </entry>

  <entry>
    <id>http://benjamin-recht.github.io/2020/07/14/there-are-none/</id>
    <link href="http://benjamin-recht.github.io/2020/07/14/there-are-none/" rel="alternate" type="text/html"/>
    <title>There are none</title>
    <summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>In the <a href="http://www.argmin.net/2020/07/08/gain-margin/">last post</a>, we showed that continuous-time LQR has “natural robustness” insofar as the optimal solution is robust to a variety of model-mismatch conditions. LQR makes the assumption that the state of the system is fully, perfectly observed. In many situations, we don’t have access to such perfect state information. What changes?</p>

<p>The generalization of LQR to the case with imperfect state observation is called “Linear Quadratic Gaussian” control (LQG). This is the simplest, special case of a Partially Observed Markov Decision Process (POMDP). We again assume linear dynamics:</p>



<p>where the state is now corrupted by zero-mean Gaussian noise, $w_t$. Instead of measuring the state $x_t$ directly, we instead  measure a signal $y_t$ of the form</p>



<p>Here, $v_t$ is also zero-mean Gaussian noise. Suppose we’d still like to minimize a quadratic cost function</p>



<p>This problem is very similar to our LQR problem except for the fact that we get an indirect measurement of the state and need to apply some sort of <em>filtering</em> of the $y_t$ signal to estimate $x_t$.</p>

<p>The optimal solution for LQG is strikingly elegant. Since the observation of $x_t$ is through a Gaussian process, the maximum likelihood estimation algorithm has a clean, closed form solution, even in continuous time. Our best estimate for $x_t$, denoted $\hat{x}_t$, given all of the data observed up to time $t$ obeys a differential equation</p>



<p>The matrix $L$ that can be found by solving an algebraic Riccati equation that depends on the variance of $v_t$ and $w_t$ and on the matrices $A$ and $C$. In particular, it’s the CARE with data $(A^\top,C^\top,\Sigma_w,\Sigma_v)$. This solution is called a <em>Kalman Filter</em> and is a continuous limit of the discrete time Kalman Filter one might see in a course on graphical models.</p>

<p>The optimal LQG solution takes the estimate of the Kalman Filter, $\hat{x}_t$, and sets the control signal to be</p>



<p>Here, $K$ is gain matrix that would be used to solve the LQR problem with data $(A,B,Q,R)$. That is, LQG performs optimal filtering to compute the best state estimate, and then computes a feedback policy as if this estimate was a noiseless measurement of the state. That this turns out to be optimal is one of the more amazing results in control theory. It decouples the process of designing an optimal filter from designing an optimal controller, enabling simplicity and modularity in control design. This decoupling where we treat the output of our state estimator as the true state is an example of <em>certainty equivalence</em>, the umbrella term for using point estimates of stochastic quantities as if they were the correct value. Though certainty equivalent control may be suboptimal in general, it remains ubiquitous for all of the benefits it brings as a design paradigm. Unfortunately, not only is this decoupled design of filters and controllers often suboptimal, it has many hidden fragilities. LQG highlights a particular scenario where certainty equivalent control leads to misplaced optimism about robustness.</p>

<p>We saw in the previous post that LQR had this amazing robustness property: even if you optimize with the wrong model, you’ll still probably be OK. Is the same true about LQG? What are the guaranteed stability margins for LQG regulators? The answer was succinctly summed up in the <a href="https://ieeexplore.ieee.org/document/1101812">abstract of a 1978 paper by John Doyle</a>: “There are none.”</p>

<p class="center"><img alt="There Are None" src="http://www.argmin.net/assets/there_are_none.png" width="400px"/></p>

<p>What goes wrong? Doyle came up with a simple counterexample, that I’m going to simplify even further for the purpose of contextualizing in our modern discussion. Before presenting the example, let’s first dive into <em>why</em> LQG is likely less robust than LQR. Let’s assume that the true dynamics obeys the ODE:</p>



<p>though we computed the optimal controller with the matrix $B$. Define an error signal, $e_t = x_t - \hat{x}_t$, that measures the current deviation between the actual state and the estimate. Then, using the fact that $u_t = -K \hat{x}_t$, we get the closed loop dynamics</p>



<p>When $B=B_\star$, the bottom left block is equal to zero. The system is then stable provided $A-BK$ and $A-LC$ are both stable matrices (i.e., have eigenvalues in the left half plane). However, small perturbations in the off-diagonal block can make the matrix unstable. For intuition, consider the matrix</p>



<p>The eigenvalues of this matrix are $-1$ and $-2$, so the matrix is clearly stable. But the matrix</p>



<p>has an eigenvalue greater than zero if $t&gt;0.01$. So a tiny perturbation significantly shifts the eigenvalues and makes the matrix unstable.</p>

<p>Similar things happen in LQG. In Doyle’s example he uses the problem instance:</p>







<p>The open loop system here is unstable, having two eigenvalues at $1$. We can stabilize the system only by modifying the second state. The state disturbance is aligned along the $[1;1]$ direction, and the state cost only penalizes states aligned with this disturbance. So the goal is simply to remove as much signal as possible in the $[1;1]$ direction without using too much control authority. We only are able to measure the first component of the state, and this measurement is corrupted by Gaussian noise.</p>

<p>What does the optimal policy look like? Perhaps unsurprisingly, it focuses all of its energy on ensuring that there is little state signal along the disturbance direction. The optimal $K$ and $L$ matrices are</p>



<p>Now what happens when we have model mismatch? If we set $B_\star=tB$ and use the formula for the closed loop above, we see that closed loop state transition matrix is</p>



<p>It’s straight forward to check that when $t=1$ (i.e., no model mismatch), the eigenvalues of  $A-BK$ and $A-LC$ all have negative real parts. For the full closed loop matrix, analytically computing the eigenvalues themselves is a pain, but we can prove instability by looking at the characteristic polynomial. For a matrix to have all of its eigenvalues in the left half plane, its characteristic polynomial necessarily must have all positive coefficients. If we look at the linear term in the polynomial, we see that we must have</p>



<p>if we’d like any hope of having a stable system. Hence, we can guarantee that this closed loop system is unstable if $t\geq 1+\sigma$. This is a very conservative condition, and we could get a tighter bound if we’d like, but it’s good enough to reveal some paradoxical properties of LQG. The most striking is that if we build a sensor that gives us a better and better measurement, our system becomes more and more fragile to perturbation and model mismatch. For machine learning scientists, this seems to go against all of our training. How can a system become <em>less</em> robust if we improve our sensing and estimation?</p>

<p>Let’s look at the example in more detail to get some intuition for what’s happening. When the sensor noise gets small, the optimal Kalman Filter is more aggressive. If the model is true, then the disturbance has equal value in both states, so, when $\sigma$ is small, the filter can effectively just set the value of the second state to be equal to whatever is in the first state. The filter is effectively deciding that the first state should equal the observation $y_t$, and the second state should be equal to the first state. In other words, it rapidly damps any errors in the disturbance direction $[1;1]$ and, as $d$ increases, it damps the $[0;1]$ direction less. When $t \neq 1$, we are effectively introducing a disturbance that makes the two states unequal. That is, $B-B_\star$ is aligned in the $[0;1]$ and can be treated as a disturbance signal. This undamped component of the error is fed errors from the state estimate $\hat{x}$, and these errors compound each other. Since we spend so much time focusing on our control along the direction of the injected state noise, we become highly susceptible to errors in a different direction and these are the exact errors that occur when there is a gain mismatch between the model and reality.</p>

<p>The fragility of LQG has many takeaways. It highlights that noiseless state measurement can be a dangerous modeling assumption, because it is then optimal to trust our model too much. Though we apparently got a freebie with LQR, for LQG, model mismatch must be explicitly accounted for when designing the controller.</p>

<p>This should be a cautionary tale for modern AI systems. Most of the papers I read in reinforcement learning consider MDPs where we get perfect state measurement. Building an entire field around optimal actions with perfect state observation builds too much optimism. Any realistic scenario is going to have partial state observation, and such problems are much thornier.</p>

<p>A second lesson is that it is not enough to just improve the prediction components in feedback systems that are powered by machine learning. I have spoken with many applied machine learning engineers who have told me that they have seen performance degrade in production systems when they improve their prediction model. They might spend months building some state of the art LSTM mumbo jumbo that is orders of magnitude more accurate in prediction, but in production yields worse performance than the legacy system with a boring ARMA model. It is quite possible that these performance drops are due to the Doyle effect: the improved prediction system is increasing sensitivity to a modeling flaw in some other part of the engineering pipeline.</p>

<p>The story turns out to be even worse than what I have described thus far. The supposed robustness guarantees we derived for LQR assume not just full noiseless state measurement, but that the sensors and actuators have infinite bandwidth. That is, they assume you can build controllers $K$ with arbitrarily large entries and that react instantaneously, without delay, to changes in the state. In the next post, I’ll show how realistic sampled data controllers for LQR, even with noiseless state measurement, also have no guarantees.</p></div>
    </summary>
    <updated>2020-07-14T00:00:00Z</updated>
    <published>2020-07-14T00:00:00Z</published>
    <source>
      <id>http://benjamin-recht.github.io/</id>
      <author>
        <name>Ben Recht</name>
      </author>
      <link href="http://benjamin-recht.github.io/" rel="alternate" type="text/html"/>
      <link href="http://benjamin-recht.github.io/feed.xml" rel="self" type="application/atom+xml"/>
      <subtitle>Musings on systems, information, learning, and optimization.</subtitle>
      <title>arg min blog</title>
      <updated>2020-07-18T00:20:41Z</updated>
    </source>
  </entry>

  <entry xml:lang="en-US">
    <id>https://francisbach.com/?p=3843</id>
    <link href="https://francisbach.com/gradient-descent-for-wide-two-layer-neural-networks-implicit-bias/" rel="alternate" type="text/html"/>
    <title>Gradient descent for wide two-layer neural networks – II: Generalization and implicit bias</title>
    <summary>In this blog post, we continue our investigation of gradient flows for wide two-layer “relu” neural networks. In the previous post, Francis explained that under suitable assumptions these dynamics converge to global minimizers of the training objective. Today, we build on this to understand qualitative aspects of the predictor learnt by such neural networks. The...</summary>
    <content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p class="justify-text">In this blog post, we continue our investigation of gradient flows for wide two-layer “relu” neural networks. In the <a href="https://francisbach.com/gradient-descent-neural-networks-global-convergence/">previous post</a>, Francis explained that under suitable assumptions these dynamics converge to global minimizers of the training objective. Today, we build on this to understand qualitative aspects of the predictor learnt by such neural networks. The content is mostly based on our recent joint work [<a href="https://arxiv.org/pdf/2002.04486.pdf">1</a>].</p>



<h2>1. Generalization with weight decay regularization</h2>



<p class="justify-text">Let us start our journey with the comfortable case where the training objective includes an explicit <em>weight decay</em> regularization (i.e. \(\ell_2\)-regularization on the parameters). Using the notations of the previous post, this consists in the following objective function on the space of probability measures on \(\mathbb{R}^{d+1}\):  $$ \underbrace{R\Big(\int_{\mathbb{R}^{d+1}} \Phi(w)d\mu(w)\Big)}_{\text{Data fitting term}} + \underbrace{\frac{\lambda}{2} \int_{\mathbb{R}^{d+1}} \Vert w \Vert^2_2d\mu(w)}_{\text{Regularization}} \tag{1}$$ where \(R\) is the loss and \(\lambda&gt;0\) is the regularization strength. Remember that a  neural network of finite width with \(m\) neurons is recovered with an empirical measure \(\mu = \frac1m \sum_{j=1}^m\delta_{w_j}\), in which case this regularization is proportional to the sum of the squares of all the parameters \(\frac{\lambda}{2m}\sum_{j=1}^m \Vert w_j\Vert^2_2\).</p>



<p class="justify-text"><strong>Variation norm.</strong> In the previous post, we have seen that the Wasserstein gradient flow of this objective function — an idealization of the gradient descent training dynamics in the large width limit — converges to a global minimizer \(\mu^*\) when initialized properly. An example of an admissible initialization is the hidden weights \(b_j\) distributed according to the uniform distribution \(\tau\) on the unit sphere \(\mathbb{S}^{d-1}\subset \mathbb{R}^d\) and the output weights \(a_j\) uniform in \(\{-1,1\}\). What does this minimizer look like in predictor space when the objective function is as in Eq. (1) ? </p>



<p class="justify-text">To answer this question, we define for a predictor \(h:\mathbb{R}^d\to \mathbb{R}\), the quantity $$ \Vert h \Vert_{\mathcal{F}_1} := \min_{\mu \in \mathcal{P}(\mathbb{R}^{d+1})} \frac{1}{2} \int_{\mathbb{R}^{d+1}} \Vert w\Vert^2_2 d\mu(w) \quad \text{s.t.}\quad h = \int_{\mathbb{R}^{d+1}} \Phi(w)d\mu(w).\tag{2} $$ As the notation suggests, \(\Vert \cdot \Vert_{\mathcal{F}_1}\) is a norm in the space of predictors. It is known as the <em>variation norm</em> [<a href="http://jmlr.org/papers/volume18/14-546/14-546.pdf">2</a>, <a href="https://www.cs.cas.cz/~vera/publications/journals/I3Edin.pdf">3</a>]. We call \(\mathcal{F}_1\) the space of functions with finite norm, which is a Banach space. By construction, the learnt predictor \(h^* = \int \Phi(w)d\mu^*(w)\) is a minimizer of the \(\mathcal{F}_1\)-regularized regression: $$ \min_{h:\mathbb{R}^d\to \mathbb{R}} R(h) + \lambda \Vert h \Vert_{\mathcal{F}_1} \tag{3}.$$ This \(\mathcal{F}_1\)-norm regularization shares similarity with \(\ell_1\) regularization [<a href="https://arxiv.org/pdf/1412.6614.pdf">4</a>]. To see this, observe that the “magnitude” \(\vert a\vert \Vert b\Vert_2\) of a relu function \(x\mapsto a(b^\top x)_+\) with parameter \(w=(a,b)\) equals \(\Vert w\Vert^2_2/2\) if \(\vert a\vert = \Vert b\Vert_2\) and is smaller otherwise. Thus parameterizing the relus by their direction \(\theta = b/\Vert b\Vert_2\) and optimizing over their signed magnitude \(r(\theta) = a\Vert b\Vert_2\)  we have $$ \Vert h \Vert_{\mathcal{F}_1} = \inf_{r:\mathbb{S}^{d-1}\to \mathbb{R}} \int_{\mathbb{S}^{d-1}} \vert r(\theta)\vert d\tau(\theta) \quad \text{s.t.}\quad h(x) = \int _{\mathbb{S}^{d-1}} r(\theta) (\theta^\top x)_+ d\tau(\theta).\tag{4}$$</p>



<p class="justify-text"><strong>Conjugate RKHS norm.</strong> The regression in the space \(\mathcal{F}_1\) is best understood when compared with the regression obtained by only training the output weights. We consider the same training dynamics with weight decay except that we fix the hidden weights to their initial value, where they are distributed according to the uniform distribution \(\tau\) on the sphere. In that case, the Wasserstein gradient flow also converges to the solution of a regularized regression as in Eq. (3) — this is in fact a convex problem —  but the regularizing norm is different and now defined as $$ \Vert h \Vert_{\mathcal{F}_2}^2 := \min_{r:\mathbb{S}^{d-1}\to \mathbb{R}} \int_{\mathbb{S}^{d-1}} \vert r(\theta)\vert^2 d\tau(\theta) \quad \text{s.t.}\quad h(x) = \int _{\mathbb{S}^{d-1}} r(\theta) (\theta^\top x)_+ d\tau(\theta).$$ We call \(\mathcal{F}_2\) the set of functions with finite norm. It can be shown to be a <a href="https://en.wikipedia.org/wiki/Reproducing_kernel_Hilbert_space">Reproducing Kernel Hilbert Space</a> (RKHS), with kernel  $$ K(x,x’) = \int_{\mathbb{S}^{d-1}} (\theta^\top x)_+ (\theta^\top x’)_+ d\tau(\theta),$$ which has a closed form expression [<a href="https://papers.nips.cc/paper/3628-kernel-methods-for-deep-learning.pdf">5</a>]. In this context, taking a finite width neural network corresponds to a random feature approximation of the kernel [<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.446.9306&amp;rep=rep1&amp;type=pdf">6</a>, <a href="https://papers.nips.cc/paper/3182-random-features-for-large-scale-kernel-machines">7</a>].</p>



<p class="justify-text">Let us informally compare the properties of these spaces \(\mathcal{F}_1\) and \(\mathcal{F}_2\) (see [<a href="https://arxiv.org/abs/1412.8690">2</a>] for details):</p>



<ul class="justify-text"><li><strong>Approximation power.</strong> In high dimension, only very smooth functions have small \(\mathcal{F}_2\)-norm (in rough terms, the \(\lceil (d+3)/2\rceil\) first derivatives should be small). In contrast, there exists non-smooth functions with small \(\mathcal{F}_1\)-norm, an example being the relu function \(x\mapsto (\theta^\top x)_+\). Remarkably, if we define \(f(x)=g(Ux)\) where \(U\) is an orthogonal projection then \(\Vert f\Vert_{\mathcal{F}_1} \leq  \Vert g\Vert_{\mathcal{F}_2}\). This shows in particular that \(\mathcal{F}_1\) contains \(\mathcal{F}_2\) and that \(\mathcal{F}_1\) is <em>adaptive</em> to lower dimensional structures.</li><li><strong>Statistical complexity.</strong> It could be feared that the good approximation properties of \(\mathcal{F}_1\) come at the price of being “too large” as a hypothesis space, making it difficult to estimate a predictor in \(\mathcal{F}_1\) from few samples. But, as measured by their Rademacher complexities, the unit ball of \(\mathcal{F}_1\) is only \(O(\sqrt{d})\) larger than that of \(\mathcal{F}_2\). By going from \(\mathcal{F}_2\) to \(\mathcal{F}_1\), we thus add some nicely structured predictors to our hypothesis space, but not too much garbage that could fit unstructured noise.</li><li><strong>Generalization guarantees.</strong> By combining the two previous points, it is possible to prove that supervised learning in \(\mathcal{F}_1\) breaks the curse of dimensionality when the output depends on a lower dimensional projection of the input: the required number of training samples only depends mildly on the dimension \(d\).</li><li><strong>Optimization guarantees.</strong> However \(\mathcal{F}_1\) has a strong drawback : there is no known algorithm that solves the problem of Eq. (3) in polynomial time. On practical problems, gradient descent seems to behave well, but in general only qualitative results such as presented in the previous post are known. In contrast, various provably efficient algorithms can solve regression in \(\mathcal{F}_2\), which is a classical kernel ridge regression problem [Chap. 14.4.3, <a href="https://doc.lagout.org/science/Artificial%20Intelligence/Machine%20learning/Machine%20Learning_%20A%20Probabilistic%20Perspective%20%5BMurphy%202012-08-24%5D.pdf">8</a>].</li></ul>



<p class="justify-text">In the plot below, we compare the predictor learnt by gradient descent for a 2-D regression with the square loss and weight decay, after training (a) both layers — which is regression in \(\mathcal{F}_1\) — or (b) just the output layer — which is regression in \(\mathcal{F}_2\). This already illustrates some distinctive features of both spaces, although the differences become more stringent in higher dimensions. In particular, observe that in (a) the predictor is the combination of few relu functions, which illustrates  the sparsifying effect of the \(L^1\)-norm in Eq. (4). To simplify notations, we do not include a bias/intercept in the formulas but our numerical experiments include it, so in this plot the input is of the form \(x=(x_1,x_2,1)\) and \(d=3\).</p>



<div class="wp-block-image justify-text"><figure class="aligncenter size-large is-resized"><img alt="" class="wp-image-4231" height="293" src="https://francisbach.com/wp-content/uploads/2020/07/regularized-2.png" width="564"/>Predictor learnt by the gradient flow on the square loss with weight decay, when training (a) both layers (b) only the output layer. The markers indicate the location of the training samples  \((x_i)_{i=1}^n\). <a href="https://github.com/lchizat/2020_implicitbias_blog/blob/master/exp_weightdecay.jl">[code]</a></figure></div>



<p class="justify-text">The qualitative picture is quite clear so far, but something is a bit unsettling: weight decay is often not needed to obtain a good performance in practice. Our line of reasoning however completely falls apart without such a regularization: if the objective function depends on the predictor only via its values on the training set, being a minimizer does not guarantee anything about generalization outside of the training set (remember that wide relu neural networks are <a href="https://en.wikipedia.org/wiki/Universal_approximation_theorem">universal approximators</a>). Why does it still work in the unregularized case? There must be something in the algorithm…</p>



<h2>2. Implicit bias: linear classification</h2>



<p class="justify-text">This something is called the <em>implicit bias</em> : when there are several minimizers, the optimization algorithm makes a specific choice. In the unregularized case, the “quality” of this choice is a crucial property of an algorithm; much more crucial than, say, its convergence speed on the training objective. To gradually build our intuition of the implicit bias of gradient flows, let us put neural networks aside for a moment and consider, following Soudry, Hoffer, Nacson, Gunasekar and Srebro [<a href="http://www.jmlr.org/papers/volume19/18-188/18-188.pdf">9</a>], a linear classification task.</p>



<p class="justify-text"><strong>Gradient flow of the smooth-margin.</strong> Let \((x_i,y_i)_{i=1}^n\) be a training set of \(n\) pairs of inputs \(x_i\in \mathbb{R}^d\) and outputs \(y_i\in \{-1,1\}\) and let us choose the exponential loss. The analysis that follows also apply to the logistic loss (which is the same as the cross-entropy loss after a sigmoid non-linearity) because only the “tail” of the loss matters, but it is more straightforward with the exponential loss. In order to give a natural “scale” to the problem, we  renormalize the empirical risk by taking minus its logarithm and consider the concave objective $$ F_\beta(a) = -\frac{1}{\beta}\log\Big( \frac1n \sum_{i=1}^n \exp(-\beta y_i \ x_i^\top a) \Big).\tag{5}$$ </p>



<p class="justify-text">Here \(\beta&gt;0\) is a parameter that will be useful in a moment. For now, we take \(\beta=1\) and we note \(F(a)=F_1(a)\).  In this context, the <em>margin</em> of a vector \(a\in \mathbb{R}^d\) is the quantity \(\min_{i} y_i\ x_i^\top a\) which quantifies how far this linear predictor is from making a wrong prediction on the training set.  </p>



<div class="wp-block-image justify-text"><figure class="aligncenter size-large is-resized"><img alt="" class="wp-image-4274" height="386" src="https://francisbach.com/wp-content/uploads/2020/07/max_margin-4.png" width="453"/>The margin of the linear predictor \(x \mapsto a^\top x\) with parameters \(a \in \mathbb{S}^{d-1}\) is the smallest distance of a training point to the decision boundary. We show here the max-margin predictor.</figure></div>



<p class="justify-text">Obtained via simple manipulations, the inequalities  $$ \min_i y_i\ x_i^\top a \leq F_\beta(a) \leq \min_i y_i\ x_i^\top a +\frac{\log(n)}{\beta}, \tag{6}$$ suggest to call \(F_\beta\) the <em>smooth-margin</em> because, well, it is smooth and converges to the margin \(F_\infty(a) := \min_i y_i x_i^\top a\) as \(\beta\to \infty\). Let us look at the gradient flow in the ascent direction that maximizes the smooth-margin: $$ a'(t) = \nabla F(a(t))$$ initialized with \(a(0)=0\) (here the initialization does not matter so much). The path followed by this gradient flow is exactly the same as the gradient flow on the empirical risk: taking the logarithm only changes the time parameterization or, in practice, the step-size.</p>



<p class="justify-text"><strong>Convergence to the max-margin.</strong> Assume that the data set is linearly separable, which means that the \(\ell_2\)-max-margin $$ \gamma := \max_{\Vert a\Vert_2 \leq 1} \min_i y_i x_i^\top a$$ is positive. In this case \(F\) is unbounded (indeed \(\lim_{\alpha \to \infty} F(\alpha a) =\infty\) whenever \(a\)  has a positive margin) and thus \(a(t)\) diverges. This is not an issue as such, since for classification, only the sign of the prediction matters.  This just means that the relevant question is not “where does \(a(t)\) converge?” but rather “towards which direction does it diverge?”. In other words, we are interested in the limit of \(\bar a(t):= a(t)/\Vert a(t)\Vert_2\) (in convex analysis, this is called the <em>cosmic limit</em> of \(a(t)\) [Chap. 3, <a href="https://www.springer.com/gp/book/9783540627722">10</a>], isn’t it beautiful ?).</p>



<p class="justify-text">The argument that follows is adapted from [<a href="https://arxiv.org/pdf/1802.08246.pdf">11</a>, <a href="https://arxiv.org/pdf/1803.07300.pdf">12</a>] and can be traced back to [<a href="http://proceedings.mlr.press/v28/telgarsky13-supp.pdf">13</a>] for coordinate ascent. It can be shown by looking at the structure of the gradient (see the end of the blog post) that \(\Vert \nabla F(a)\Vert_2\geq \gamma\) for all \(a\in \mathbb{R}^d\). By the inequality of Eq. (6) and the gradient flow property \(\frac{d}{dt}F(a(t))=\Vert \nabla F(a(t))\Vert_2^2\), it follows $$\begin{aligned}\min_i y_i x_i^\top a(t) \geq F(a(t)) \  – \log(n) \geq \gamma \int_0^t \Vert \nabla F(a(s))\Vert_2ds -\log (n).\end{aligned}$$  For \(t&gt; \log(n)/\gamma^2\), this lower bound is positive. We can then divide the left-hand side by \(\Vert a(t)\Vert_2\) and the right-hand side by the larger quantity \(\int_0^t \Vert\nabla F(a(s))\Vert_2ds\), and we get $$\min_i y_i x_i^\top \bar a(t) \geq \gamma -\frac{\log(n)}{\int_0^t \Vert\nabla F(a(s))\Vert_2ds} \geq \gamma -\frac{\log(n)}{\gamma t}.$$ This shows that the margin of \(\bar a(t) := a(t)/\Vert a(t)\Vert_2\) converges to the \(\ell_2\)-max-margin at a rate \(\log(n)/\gamma t\). That’s it, the implicit bias of this gradient flow is exposed!</p>



<p class="justify-text"><strong>Stability to step-size choice.</strong> To translate this argument to discrete time, we need decreasing step-sizes of order \(1/\sqrt{t}\) which deteriorates the convergence rate to \(\tilde O(1/\sqrt{t})\), see [<a href="https://arxiv.org/pdf/1802.08246.pdf">11</a>, <a href="https://arxiv.org/pdf/1803.07300.pdf">12</a>]. In [<a href="https://arxiv.org/pdf/2002.04486.pdf">1</a>], we proposed a different proof strategy (based on an online optimization interpretation of \(\bar a(t)\), as below) which recovers the same convergence rate \(O(1/\sqrt{t})\) with <em>exponentially larger</em> step-sizes. This suggests that these diverging trajectories are extremely robust to the choice of step-size.</p>



<p class="justify-text"><strong>Illustration. </strong>In the figure below, we plot on the left the evolution of the parameter \(a(t)\) and on the right the predictor \(x\mapsto (x,1)^\top a(t)\) with \(x\in \mathbb{R}^2\). In parameter space, we apply the hyperbolic tangent to the radial component which allows to easily visualize diverging trajectories. This way, the unit sphere represents the <em>horizon</em> of \(\mathbb{R}^d\), i.e., the set of directions at infinity [Chap. 3 in <a href="https://www.springer.com/gp/book/9783540627722">9</a>]. We will use the same convention in the other plots below.</p>



<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><img alt="" class="wp-image-4106" height="288" src="https://francisbach.com/wp-content/uploads/2020/07/linear.gif" width="586"/>Implicit bias of gradient descent for a linear classification task with the exponential loss: (left) parameter space, (right) predictor space.</figure></div>



<h2>3. Implicit bias:  training only the output layer</h2>



<p class="justify-text">Despite its apparently restrictive setting, the previous result already tells us something about wide neural networks. Consider the situation touched upon earlier where we only train the output weights \(a_j\) and the hidden weights \(b_j\) are picked uniformly at random on the sphere. This corresponds to learning a linear classifier on top of the random feature \([(b_j^\top x)_+]_{j=1}^m\). </p>



<p class="justify-text">As we have just shown, if the training set is separable, the normalized gradient flow of the unregularized exponential loss (or logistic loss) converges to a solution to  $$ \max_{\Vert a\Vert_2 \leq 1}\min_i y_i \sum_{j=1}^m  a_j (b_j^\top x_i)_+.$$ </p>



<p class="justify-text">This is a random feature approximation for the unregularized kernel support vector machine problem in the RKHS \(\mathcal{F}_2\), which is recovered in the large width limit \(m\to \infty\):  $$\max_{\Vert h\Vert_{\mathcal{F}_2}\leq 1} \min_i y_i h(x_i).$$ Notice that if \(m\) is large enough, the linear separability assumption is not even needed anymore, because any training set is separable in \(\mathcal{F}_2\) (at least if all \(x_i\)s are distinct and if we do not forget to include the bias/intercept).</p>



<p class="justify-text"><strong>Illustration.</strong> In the animation below, we plot on the left the evolution of the parameters and on the right the predictor for a 2-D classification task. In parameter space, each particle represents a neuron: their direction is fixed, their distance to \(0\) is their absolute weight and the color is red (+) or blue (-) depending on the sign of the weight. As above, the unit sphere is at infinity and the particles diverge. In predictor space, the markers represent the training samples of both classes, the color shows the predictor and the black line is the decision boundary. The fact that the predictor has a smooth decision boundary is in accordance with the properties of \(\mathcal{F}_2\) given above. </p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img alt="" class="wp-image-4275" src="https://francisbach.com/wp-content/uploads/2020/07/film_output_comp-1.gif"/>Gradient descent on the output layer of a two-layer relu neural network with the exponential loss: (left) parameter space, (right) predictor space. <a href="https://github.com/lchizat/2020_implicitbias_blog/blob/master/exp_output.jl">[code]</a></figure></div>



<h2>4. Implicit bias: 2-homogeneous linear classifiers</h2>



<p class="justify-text">Although the analyses where neural networks behave like kernel methods are pleasant for us theoreticians because we are in conquered territory, they miss essential aspects of neural networks such as their adaptivity and their ability to learn a representation. Let us see if we can characterize the implicit bias of the gradient flow of the unregularized exponential loss when training <em>both</em> layers of the neural network.</p>



<p class="justify-text"><strong>A 2-homogeneous linear model.</strong> From an optimization point of view, an important property of two layer relu neural networks is that \(\Phi(\alpha w)= \alpha^2 \Phi(w)\) for all \(\alpha&gt;0\), i.e., they are positively 2-homogeneous in the training parameters. In contrast, a linear model is 1-homogeneous in the parameters. This seemingly little difference leads to drastic changes in the gradient flow dynamics. </p>



<p class="justify-text">Let us again build our intuition with a simplified model that captures key aspects of the dynamics, namely the linear classification setting of above. This time, we take any initialization \(r(0)\in \mathbb{R}^d\) with positive entries and the gradient flow in the ascent direction of the function \( F(r\odot r)\) where \(\odot\) is the pointwise product between two vectors and \(F\) is defined in Eq. (5). This is just a trick to obtain a 2-homogeneous parameterization of a linear model. This gradient flow satisfies $$ r'(t) = 2 r(t)\odot \nabla F(r(t)\odot r(t)).$$ </p>



<p class="justify-text"><strong>Normalized dynamics.</strong> Let us define \(\bar a(t):=(r(t)\odot r(t))/\Vert r(t)\Vert_2^2\) the normalized predictor associated to our dynamics which, by definition, belongs to the simplex \(\Delta_d\), i.e., the set of nonnegative vectors in \(\mathbb{R}^d\) that sum to one. Using the fact that \(\nabla F(\beta a) = \nabla F_\beta (a)\) for all \(\beta&gt;0\), we obtain $$\begin{aligned} \bar a'(t) &amp;= 2\frac{r(t)\odot r'(t)}{\Vert r(t)\Vert_2^2} -2 (r(t)^\top r'(t))\frac{r(t)\odot r(t)}{\Vert r(t)\Vert_2^4}\\ &amp;=4\bar a(t) \odot \nabla F_{\Vert r(t)\Vert_2^2}(\bar a(t))\ – \alpha(t) \bar a(t)\end{aligned}$$ where \(\alpha(t)\) is the scalar such that \(\sum_{i=1}^d a’_i(t) =0\). Online optimization experts might have recognized that this is (continuous time) <em>online mirror ascent in the simplex</em> for the sequence of smooth-margin functions \(F_{\Vert r(t)\Vert_2^2}\). Notice in particular the multiplicative updates: they correspond to the entropy mirror function, and they are particularly well suited for optimization in the high dimensional simplex [Chap.4, <a href="https://arxiv.org/pdf/1405.4980.pdf">14</a>].</p>



<p>What do we learn from this reformulation? </p>



<ul class="justify-text"><li>We can prove (by similar means) that if the data set is linearly separable then \(\Vert r(t)\Vert_2^2\) diverges. So the sequence of functions \(F_{\Vert r\Vert_2^2}\) converges to the margin \(F_\infty\) which means that \(\bar a(t)\) just ends up optimizing the function \(F_\infty\). As a consequence, we have $$\lim_{t\to \infty} y_i x_i^\top \bar a(t) = \max_{a\in \Delta_d} \min_{i} y_i x_i^\top a.$$ This exposes another implicit bias of gradient flow. Notice the key difference with the implicit bias obtained with a linear parameterization: we obtain here the \(\ell_1\)-max-margin (over classifiers with non-negative entries) instead of the \(\ell_2\)-max-margin.  </li><li>Beyond exposing the implicit bias, this reformulation shows that \(\bar a(t)\) implicitly optimizes a sequence of smooth objectives which converge to the margin \(F_\infty\). Unknowingly, we have recovered the well-principled optimization method that consists in approximating a non-smooth objective with smooth functions [<a href="https://www.math.ucdavis.edu/~sqma/MAT258A_Files/Nesterov-2005.pdf">15</a>].</li><li>While the conclusion above was only formal, this point of view leads to rigorous proofs of convergence and convergence rates in discrete time in \(\tilde O(1/\sqrt{t})\) with a step-size in \(O(1/\sqrt{t})\), by  exploiting tools from online optimization, see [<a href="https://arxiv.org/pdf/2002.04486.pdf">1</a>].</li></ul>



<h2>5. Implicit bias: fully trained 2-layer neural networks</h2>



<p class="justify-text">Once again this argument about linear predictors applies to neural networks: if we train both layers but only the magnitude of the hidden weights and not their direction, then this is equivalent to learning a 2-homogeneous linear model on top of the random feature \([  a_j(0) (x_i^\top b_j(0))_+]_{j=1}^m\). If each feature appears twice with opposite signs — which is essentially the case in the large width limit — then the simplex constraint can be equivalently replaced by an \(\ell_1\)-norm constraint on the weights. Recalling the definition of the \(\mathcal{F}_1\)-norm from Eq. (4), we thus obtain that, in the infinite-width limit, the normalized predictor converges to a solution to $$ \max_{\Vert h\Vert_{\mathcal{F}_1} \leq 1} \min_i y_i h(x_i).$$</p>



<p class="justify-text">This result is correct, but it is not relevant. In contrast to functions in \(\mathcal{F}_2\), functions in \(\mathcal{F}_1\) <em>can not</em> in general be approximated with few <em>random</em> features in high dimension. In fact, lower bounds that are exponential in the dimension exist in certain settings [Sec. X, <a href="http://www.stat.yale.edu/~arb4/publications_files/UniversalApproximationBoundsForSuperpositionsOfASigmoidalFunction.pdf">16</a>]. They can be approximated with a small number of features but those need to be data-dependent: in that sense, it is necessary to learn a representation – here,  a distribution over the hidden weights — in order to learn in \(\mathcal{F}_1\). </p>



<p class="justify-text">This raises the following question: do we obtain the same implicit bias when training both layers of the neural network, without fixing the direction of the input weights? In the following result, which is the main theorem of our paper [<a href="https://arxiv.org/abs/2002.04486">1</a>], we answer by the affirmative.</p>



<p class="justify-text"><strong>Theorem</strong> (C. and Bach [<a href="https://arxiv.org/abs/2002.04486">1</a>], informal). Assume that for some \(\sigma&gt;0\), the hidden weights \(b_j\) are initialized uniformly on the sphere of radius \(\sigma\) and the output weights \(a_j\) are uniform in \(\{-\sigma,\sigma\}\). Let \(\mu_t\) be the Wasserstein gradient flow for the unregularized exponential loss and \(h_t = \int \Phi(w)d\mu_t(w)\) be the corresponding dynamics in predictor space. Under some technical assumptions, the normalized predictor \(h_t/\Vert h_t\Vert_{\mathcal{F}_1}\) converges to a solution to the \(\mathcal{F}_1\)-max-margin problem: $$\max_{\Vert h\Vert_{\mathcal{F}_1} \leq 1} \min_i y_i h(x_i).$$</p>



<p class="justify-text">Giving an idea of proof would be a bit too technical for this blog post, but let us make some remarks:</p>



<ul class="justify-text"><li>The strength of this result is that although this dynamics could get trapped towards limit directions which are not optimal, this choice of initialization allows to avoid them all and to only converge to <em>global</em> minimizers of this max-margin problem. The principle behind this is similar to the global convergence result in the previous blog post. </li><li>The fact that optimizing on the direction of the hidden weights is compatible with the global optimality conditions of the \(\mathcal{F}_1\)-max-margin problem is very specific to the structure of positively 2-homogeneous problems, and should not be taken for granted for other architectures of neural networks.</li><li>Although at a formal level this result works for any initialization that is diverse enough (such as the standard Gaussian initialization), the initialization proposed here yields dynamics with a better behavior for relu networks: by initializing the hidden and output weights with equal norms – a property preserved by the dynamics – we avoid some instabilities in the gradient. Also notice that this result applies to any scale \(\sigma&gt;0\) of the initialization (we’ll see an intriguing consequence of this in the next section).</li></ul>



<p class="justify-text"><strong>Illustration.</strong> In the figure below, we plot the training dynamics when both layers are trained. In parameter space (left), each particle represents a neuron: its position is \(\vert a_j\vert b_j\) and its color depends on the sign of \(a_j\).  Here again the unit sphere is at infinity. The inactive neurons at the bottom correspond to those with a bias that is “too negative” at initialization. We observe that all the other neurons gather into few clusters: this is the sparsifying effect of the \(L^1\)-norm in Eq. (4). In predictor space, we obtain a polygonal classifier, as expected for a \(\mathcal{F}_1\)-max-margin classifier. See the paper [<a href="https://arxiv.org/pdf/2002.04486.pdf">1</a>] for experiments that illustrate the strengths of this classifier in terms of generalization.</p>



<div class="wp-block-image"><figure class="aligncenter size-large"><img alt="" class="wp-image-4194" src="https://francisbach.com/wp-content/uploads/2020/07/film_both_comp.gif"/>Training both layers of a wide relu neural network with the exponential loss: (left) space of parameters, (right) space of predictors. <a href="https://github.com/lchizat/2020_implicitbias_blog/blob/master/exp_bothlayers.jl">[code]</a></figure></div>



<h2>6. Lazy regime and the neural tangent kernel</h2>



<p class="justify-text">This blog post would not be complete without mentioning the <em>lazy regime</em>. This is yet another kind of implicit bias which, in our context, takes place when at initialization the weights have a large magnitude and the step-size is small. It was first exhibited in [<a href="https://papers.nips.cc/paper/8076-neural-tangent-kernel-convergence-and-generalization-in-neural-networks.pdf">17</a>] for deep neural networks.</p>



<p class="justify-text"><strong>Lazy training via scaling.</strong> This phenomenon is in fact very general so let us present it with a generic parametric predictor \(h(W)\) with differential \(Dh(W)\). We introduce a scaling factor \(\alpha&gt;0\) and look at the gradient flow of \(F(W) := R(\alpha h(W))\) with a step-size \(1/\alpha^2\), that is $$ W'(t) = \ – \frac{1}{\alpha}Dh(W(t))^\top \nabla R(\alpha h(W(t))),$$ with initialization \(W(0)\). In terms of the predictor \(\alpha h(W)\), this yields the dynamics $$\frac{d}{dt} \alpha h(W(t)) = \ – Dh(W(t))Dh(W(t))^\top \nabla R(\alpha h(W(t)).$$ </p>



<p class="justify-text">Lazy training [<a href="https://arxiv.org/pdf/1812.07956.pdf">18</a>] happens when we take \(\alpha\) large while making sure that \(\alpha h(W(0))\) stays bounded. In this case, we see that the parameters change at a rate \(O(1/\alpha)\), while the predictor changes at a rate independent of \(\alpha\). On any bounded time interval, in the limit of  a large \(\alpha\), the parameters only move infinitesimally, while the predictor still makes significant progress, hence the name <em>lazy training</em>.</p>



<p class="justify-text"><strong>Equivalent linear model.</strong> Since the parameters hardly move, if we assume that \(Dh(W(0))\neq 0\) then we can replace the map \(h\) by its linearization \(W \mapsto h(W(0))+Dh(W(0))(W-W(0))\). This means that the training dynamics essentially follows the gradient flow of the  objective $$ R\big ( \alpha h(W(0)) + \alpha Dh(W(0))(W-W(0)) \big)$$ which is a convex function of \(W\) as soon as \(R\) is convex.</p>



<p class="justify-text">If this objective admits a minimizer that is not too far away from \(W(0)\), then \(W(t)\) converges to this minimizer. If in contrast all  the minimizers are too far away (think of the exponential loss where they are at infinity), then the parameters will eventually move significantly and the lazy regime is just a transient regime in the early phase of training.  Of course, all these behaviors can be quantified and made more precise, because this phenomenon brings us back to the realm of linear models. </p>



<p class="justify-text">What all of this has to do with two-layer neural networks? As it happens, this scale factor appears implicit in various situations for these models; let us detail two of them. </p>



<p class="justify-text"><strong>Neural networks with \(1/\sqrt{m}\) scaling.</strong> For two-layer neural networks, lazy training occurs if we define \(h = \frac{1}{\sqrt{m}} \sum_{j=1}^m \Phi(w_j)\) instead of \(h=\frac{1}{m} \sum_{j=1}^m \Phi(w_j)\) before taking the infinite width limit. Indeed:</p>



<ul class="justify-text"><li>This induces a scaling factor \(\alpha = \sqrt{m} \to \infty\) compared to \(1/m\) which, as we have already seen, is the “correct” scaling that leads to a non-degenerate dynamics in parameter space as \(m\) increases. </li><li>Moreover, by the central limit theorem,  \(\frac{1}{\sqrt{m}} \sum_{j=1}^m \Phi(w_j(0)) = O(1)\) for typical random initializations of the parameters. So the initial predictor stays bounded.</li></ul>



<p class="justify-text">To take the Wasserstein gradient flow limit, the step-size has to be of order \(m\) (see previous blog post). So here we should take a step-size of order \(m/\alpha^2 = 1\). With such a step-size, all the conditions for lazy training are gathered when \(m\) is large. Intuitively, each neuron only moves infinitesimally, but they collectively produce a significant movement in predictor space.</p>



<p class="justify-text"><strong>Neural networks with large initialization.</strong> Coming back to our scaling in \(1/m\) and our Wasserstein gradient flow that is obtained in the large width limit, there is another way to enter the lazy regime: by increasing the variance of the initialization. </p>



<p class="justify-text">To see this, assume that \(h\) is a positively \(p\)-homogeneous parametric predictor, which means that \(h(\sigma W)=\sigma^p h(W)\) for all \(\sigma&gt;0\) and some \(p&gt;1\) (remember that this is true with \(p=2\) for our two-layer relu neural network). Take an initialization of the form \(W(0) = \sigma \bar W_0\) where \(\sigma&gt;0\) and \(h(\bar W_0)=0\) (which is also satisfied for our infinite width neural networks with the initialization considered previously). Consider the gradient flow of \(R(h(W))\) with step-size \(\sigma^{2-2p}\).   By defining \(\bar W(t) = W(t)/\sigma\) and using the fact that the differential of a p-homogeneous function <a href="https://en.wikipedia.org/wiki/Homogeneous_function#Positive_homogeneity">is (p-1)-homogeneous</a>, we have, on the one hand $$ \bar W'(t) = -\sigma^{-p} Dh(\bar W(t))^\top \nabla R(\sigma^p h(\bar W(t))), $$ and on the other hand $$\frac{d}{dt} \sigma^p h(\bar W(t)) =\  – Dh(\bar W(t))Dh(\bar W(t))^\top \nabla R(\sigma^p h(\bar W(t))).$$ So in terms of the dynamics \(\bar W(t)\), the situation is exactly equivalent to having a scaling factor \(\alpha=\sigma^p\). This implies that as the magnitude \(\sigma\) of the initialization increases, we enter the lazy regime, provided the step-size is of order \(\sigma^{2-2p}\).</p>



<p class="justify-text"><strong>Neural tangent kernel. </strong>What does the lazy regime tell us about the learnt predictor for two-layer neural networks? Assuming for simplicity that the predictor at initialization is \(0\), this regime amounts to learning a linear model on top of the feature \([(b_j^\top x)_+]_{j=1}^m\) — the derivative with respect to the output weights — concatenated with the feature \([x a_j 1_{b_j^\top x &gt; 0} ]_{j=1}^m\)  — the derivative with respect to the input weights. Compared to training only the output layer, this thus simply adds some features. </p>



<p class="justify-text">Assume for concreteness, that at initialization the hidden weights \(b_j\) are uniform on a sphere of large radius \(\sigma&gt;0\) and the output weights are uniform on \(\{-\kappa\sigma, \kappa\sigma\}\) where \(\kappa\geq 0\). For a large width and a large \(\sigma\), we enter the lazy regime which amounts to learning in a RKHS — let us call it \(\mathcal{F}_{2,\kappa}\) — that is slightly different from \(\mathcal{F}_2 = \mathcal{F}_{2,0}\), since its kernel \(K_\kappa\) contains another term: $$ K_\kappa(x,x’) = \int_{\mathbb{S}^{d-1}} (\theta^\top x)_+ (\theta^\top x’)_+d\tau(\theta) + \kappa^2 \int_{\mathbb{S}^{d-1}} (x^\top x’) 1_{\theta^\top x &gt; 0}1_{\theta^\top x’ &gt; 0}d\tau(\theta). $$</p>



<p class="justify-text">This kernel is called the Neural Tangent Kernel [<a href="https://papers.nips.cc/paper/8076-neural-tangent-kernel-convergence-and-generalization-in-neural-networks.pdf">17</a>] and the properties of the associated RKHS have been studied in [<a href="https://arxiv.org/pdf/1904.12191.pdf">19</a>, <a href="http://papers.nips.cc/paper/9449-on-the-inductive-bias-of-neural-tangent-kernels.pdf">20</a>], where it is shown to include functions that are slightly less smooth than those of \(\mathcal{F}_2\) when \(\kappa\) increases. This is illustrated in the plot below, obtained by training a wide neural network with \(\sigma\) large (to reach the lazy regime) on the square loss, and various values of \(\kappa\).</p>



<div class="wp-block-image justify-text"><figure class="aligncenter size-large is-resized"><img alt="" class="wp-image-4213" height="287" src="https://francisbach.com/wp-content/uploads/2020/07/interp-4.png" width="574"/>1-D regression with a wide two-layer relu neural network (gradient descent on square loss, in the lazy regime) with 4 training samples (black dots). At initialization, output weights have \(\kappa\) times the (large) magnitude of the hidden weights. This implicitly solves kernel ridgeless regression for a kernel that depends on \(\kappa\). <a href="https://github.com/lchizat/2020_implicitbias_blog/blob/master/exp_NTK.jl">[code]</a></figure></div>



<p class="justify-text"><strong>Two implicit biases in one shot.</strong> The attentive reader might have noticed that for large initialization scale \(\sigma\gg 1\), when training both layers on the unregularized exponential loss, two of our analyses apply:  lazy training — that leads to a max-margin predictor in \(\mathcal{F}_{2,\kappa}\) — and the asymptotic implicit bias — that leads to a max-margin predictor in \(\mathcal{F}_{1}\).  So, where is the catch? </p>



<p class="justify-text">There is none! Since the minimizers of this loss are at infinity, the lazy regime is just a transient phase and we will observe both implicit biases along the training dynamics! Take a look at the video below: we observe that in early phases of training, the neurons do not move while learning a smooth classifier — this is the lazy regime and the classifier approaches the \(\mathcal{F}_{2,\kappa}\)-max-margin classifier. In later stages of training, the neurons start moving and the predictor converges to a \(\mathcal{F}_1\)-max-margin classifier as stated by the main theorem. The predictor jitters a little bit during training because I have chosen rather aggressive step-sizes.</p>



<div class="wp-block-image justify-text"><figure class="aligncenter size-large"><img alt="" class="wp-image-4219" src="https://francisbach.com/wp-content/uploads/2020/07/film_lazy2sparse_ns_comp-1.gif"/>Training both layers with gradient descent for the unregularized exponential loss. The only difference with the previous video is that at initialization the variance \(\sigma^2\) is larger and the step-size smaller \(\approx \sigma^{-2}\). First the network learns a classifier in the lazy regime (a kernel max-margin classifier) and eventually converges to the \(\mathcal{F}_1\)-max-margin classifier.</figure></div>



<h2>Discussion</h2>



<p class="justify-text">In this blog post, I described how analyses of the training dynamics can help us understand the properties of the predictor learnt by neural networks even in the absence of an explicit regularization. Already for the simplest algorithm one can think of — gradient descent — we have found a variety of behaviors depending on the loss, the initialization or the step-size. </p>



<p class="justify-text">To achieve this description, the infinite width limit is of great help. It allows to obtain synthetic and precise characterizations of the learnt predictor, that can be used to derive generalization bounds. Yet, there are many interesting non-asymptotic effects caused by having a finite width.  In that sense, we were only concerned with the end of the curve of double descent [<a href="https://www.pnas.org/content/pnas/116/32/15849.full.pdf">21</a>].</p>



<h2>References</h2>



<p class="justify-text">[1] Lénaïc Chizat, Francis Bach. <a href="https://arxiv.org/pdf/2002.04486.pdf">Implicit Bias of Gradient Descent for Wide Two-layer Neural Networks Trained with the Logistic Loss.</a> <em>To appear in Conference On Learning Theory</em>, 2020.<br/>[2] Francis Bach. <a href="http://jmlr.org/papers/volume18/14-546/14-546.pdf">Breaking the curse of dimensionality with convex neural networks.</a> <em>The Journal of Machine Learning Research</em>, <em>18</em>(1), 629-681, 2017.<br/>[3]  Vera Kurková, Marcello Sanguineti. <a href="https://www.cs.cas.cz/~vera/publications/journals/I3Edin.pdf">Bounds on rates of variable-basis and neural-network approximation.</a> <em>IEEE Transactions on Information Theory</em>, 47(6):2659-2665, 2001.  <br/>[4] Behnam Neyshabur, Ryota Tomioka, Nathan Srebro. <a href="https://arxiv.org/pdf/1412.6614.pdf">In Search of the Real Inductive Bias: On the Role of Implicit Regularization in Deep Learning.</a> <em>ICLR (Workshop)</em>. 2015.<br/>[5] Youngmin Cho, Lawrence K. SAUL.  <a href="https://papers.nips.cc/paper/3628-kernel-methods-for-deep-learning.pdf">Kernel methods for deep learning.</a> <em>Advances in neural information processing systems</em>. 342-350, 2009.<br/>[6] Radford M. Neal. <a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.446.9306&amp;rep=rep1&amp;type=pdf"><em>Bayesian learning for neural networks</em>.</a> Springer Science &amp; Business Media, 2012.<br/>[7] Ali Rahimi, Benjamin Recht. <a href="https://papers.nips.cc/paper/3182-random-features-for-large-scale-kernel-machines.pdf">Random features for large-scale kernel machines.</a> <em>Advances in neural information processing systems</em>. 1177-1184, 2008.<br/>[8] Kevin P. Murphy. Machine Learning: A Probabilistic Perspective. <em>The MIT Press</em>, 2012<br/>[9] Daniel Soudry, Elad Hoffer, Mor Shpigel Nacson, Suriya Gunasekar, Nathan Srebro. <a href="http://www.jmlr.org/papers/volume19/18-188/18-188.pdf">The Implicit Bias of Gradient Descent on Separable Data.</a><em> The Journal of Machine Learning Research</em>, <em>19</em>(1), 2822-2878, 2018.<br/>[10] R. Tyrrell Rockafellar, Roger J-B. Wets. <a href="https://www.springer.com/gp/book/9783540627722"><em>Variational analysis</em>.</a> Springer Science &amp; Business Media, 2009.<br/>[11] Suriya Gunasekar,  Jason D. Lee, Daniel Soudry, Nathan Srebro.  <a href="https://par.nsf.gov/servlets/purl/10107856">Characterizing implicit bias in terms of optimization geometry.</a> <em>International Conference on Machine Learning</em>, 2018.<br/>[12] Ziwei Ji, Matus Telgarsky. <a href="https://arxiv.org/pdf/1803.07300.pdf">Risk and parameter convergence of logistic regression.</a> 2018.<br/>[13] Matus Telgarsky. <a href="https://arxiv.org/abs/1303.4172">Margins, Shrinkage, and Boosting.</a> <em>International Conference on Machine Learning</em>, 307-315, 2013.<br/>[14] Sébastien Bubeck. <a href="https://arxiv.org/pdf/1405.4980.pdf">Convex Optimization: Algorithms and Complexity.</a> Foundations and Trends in Machine Learning, 8(3-4):231-357, 2015.<br/>[15] Yuri Nesterov. <a href="https://www.math.ucdavis.edu/~sqma/MAT258A_Files/Nesterov-2005.pdf">Smooth minimization of non-smooth functions.</a> <em>Mathematical programming</em>, 103(1):127-152, 2005.<br/>[16] Anrew R. Barron. <a href="http://www.stat.yale.edu/~arb4/publications_files/UniversalApproximationBoundsForSuperpositionsOfASigmoidalFunction.pdf">Universal approximation bounds for superpositions of a sigmoidal function.</a> <em>IEEE Transactions on Information theory. </em>39(3), 930-945, 1993.<br/>[17] Jacot, Arthur, Franck Gabriel, Clément Hongler. <a href="https://papers.nips.cc/paper/8076-neural-tangent-kernel-convergence-and-generalization-in-neural-networks.pdf">Neural tangent kernel: Convergence and generalization in neural networks.</a> <em>Advances in neural information processing systems.</em> 8571-8580, 2018.<br/>[18] Lénaïc Chizat, Édouard Oyallon, Francis Bach. <a href="https://papers.nips.cc/paper/8559-on-lazy-training-in-differentiable-programming.pdf">On lazy training in differentiable programming.</a> <em>Advances in Neural Information Processing Systems.</em> 2937-2947, 2019.<br/>[19] Behrooz Ghorbani, Song Mei, Theodor Misiakiewicz, Andrea Montanari. <a href="https://arxiv.org/pdf/1904.12191.pdf">Linearized two-layers neural networks in high dimension.</a> To appear in <em>Annals of Statistics</em>. 2019.<br/>[20] Alberto Bietti, Julien Mairal. <a href="http://papers.nips.cc/paper/9449-on-the-inductive-bias-of-neural-tangent-kernels">On the Inductive Bias of Neural Tangent Kernels</a>. <em>Advances in Neural Information Processing Systems.</em> p. 12893-12904, 2019.<br/>[21] Mikhail Belkin, Daniel Hsu, Siyuan Ma, Soumik Mandal. <a href="https://www.pnas.org/content/pnas/116/32/15849.full.pdf">Reconciling modern machine-learning practice and the classical bias–variance trade-off.</a> <em>Proceedings of the National Academy of Sciences.</em> <em>116</em>(32), 15849-15854, 2019.</p>



<h3>Lower bound on the gradient norm for linear classification with the exponential loss</h3>



<p class="justify-text">In the context of Section 2, we want to prove that \(\Vert \nabla F(a)\Vert_2\geq \gamma\). For this, let \(Z\in \mathbb{R}^{n\times d}\) be the matrix with rows \(y_i x_i\) and let \(\Delta_n\) be the simplex in \(\mathbb{R}^n\). We have by duality $$ \gamma = \max_{\Vert a\Vert_2\leq 1}\min_{p\in \Delta_n} p^\top Z a =   \min_{p\in \Delta_n} \max_{\Vert a\Vert_2\leq 1} a^\top Z^\top p = \min_{p\in \Delta_n} \Vert Z^\top p\Vert_2 .$$  Also, notice that \(\nabla F(a) = Z^\top p\) with \(p_i = \frac{e^{-y_ix_i^\top a}}{\sum_{j=1}^n e^{-y_{j}x_{j}^\top a}}\). Since \(p \in \Delta_n\), we conclude that \(\Vert \nabla F(a)\Vert_2\geq \min_{p\in \Delta_n} \Vert Z^\top p\Vert_2 = \gamma\).</p></div>
    </content>
    <updated>2020-07-13T19:39:11Z</updated>
    <published>2020-07-13T19:39:11Z</published>
    <category term="Machine learning"/>
    <author>
      <name>Lénaïc Chizat</name>
    </author>
    <source>
      <id>https://francisbach.com</id>
      <link href="https://francisbach.com/feed/" rel="self" type="application/atom+xml"/>
      <link href="https://francisbach.com" rel="alternate" type="text/html"/>
      <subtitle>Francis Bach</subtitle>
      <title>Machine Learning Research Blog</title>
      <updated>2020-07-18T18:21:38Z</updated>
    </source>
  </entry>
</feed>
